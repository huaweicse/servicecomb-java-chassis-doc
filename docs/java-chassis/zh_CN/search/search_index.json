{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u6982\u8ff0 Apache ServiceComb Java Chassis \u7ed9\u5f00\u53d1\u8005\u63d0\u4f9b\u4e00\u4e2a\u5feb\u901f\u6784\u5efa\u5fae\u670d\u52a1\u7684 JAVA SDK \u3002\u5b83\u5305\u542b\u5982\u4e0b\u7279\u6027\uff1a \u591a\u79cd\u5f00\u53d1\u98ce\u683c\uff0cREST(JAX-RS\u3001Spring MVC\uff09\u548c RPC \u591a\u79cd\u901a\u4fe1\u534f\u8bae, HTTP over Vert.x\u3001Http Over Servlet\u3001Highway \u7b49 \u7edf\u4e00\u4e00\u81f4\u7684\u670d\u52a1\u63d0\u4f9b\u8005\u3001\u670d\u52a1\u6d88\u8d39\u8005\u5904\u7406\u94fe\uff0c\u4ee5\u53ca\u57fa\u4e8e\u5951\u7ea6\u7684\u5f00\u7bb1\u5373\u7528\u7684\u670d\u52a1\u6cbb\u7406\u80fd\u529b \u5f00\u53d1\u8005\u53ef\u4ee5\u901a\u8fc7 \u8bbe\u8ba1\u9009\u578b\u53c2\u8003 \u4e86\u89e3 Java Chassis \u7684\u8bbe\u8ba1\u601d\u8def\u3002 \u5f00\u53d1\u8005\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u94fe\u63a5\u83b7\u53d6\u5176\u4ed6\u7248\u672c\u7684\u5e2e\u52a9\u6587\u6863\u3002 \u7248\u672c \u94fe\u63a5 \u8bf4\u660e \u6700\u65b0(2.0.0) \u4e2d\u6587 , English \u7531 github pages \u6258\u7ba1 \u6700\u65b0(2.0.0) \u4e2d\u6587 , English \u7531 gitee pages \u6258\u7ba1\uff0c\u9002\u5408\u4e2d\u56fd\u7528\u6237 \u6700\u65b0(2.0.0) \u4e2d\u6587 , English \u7531 coding pages \u6258\u7ba1\uff0c\u9002\u5408\u4e2d\u56fd\u7528\u6237 1.3.0 \u4e2d\u6587 , English 1.2.1 \u4e2d\u6587 , English","title":"\u6982\u8ff0"},{"location":"#_1","text":"Apache ServiceComb Java Chassis \u7ed9\u5f00\u53d1\u8005\u63d0\u4f9b\u4e00\u4e2a\u5feb\u901f\u6784\u5efa\u5fae\u670d\u52a1\u7684 JAVA SDK \u3002\u5b83\u5305\u542b\u5982\u4e0b\u7279\u6027\uff1a \u591a\u79cd\u5f00\u53d1\u98ce\u683c\uff0cREST(JAX-RS\u3001Spring MVC\uff09\u548c RPC \u591a\u79cd\u901a\u4fe1\u534f\u8bae, HTTP over Vert.x\u3001Http Over Servlet\u3001Highway \u7b49 \u7edf\u4e00\u4e00\u81f4\u7684\u670d\u52a1\u63d0\u4f9b\u8005\u3001\u670d\u52a1\u6d88\u8d39\u8005\u5904\u7406\u94fe\uff0c\u4ee5\u53ca\u57fa\u4e8e\u5951\u7ea6\u7684\u5f00\u7bb1\u5373\u7528\u7684\u670d\u52a1\u6cbb\u7406\u80fd\u529b \u5f00\u53d1\u8005\u53ef\u4ee5\u901a\u8fc7 \u8bbe\u8ba1\u9009\u578b\u53c2\u8003 \u4e86\u89e3 Java Chassis \u7684\u8bbe\u8ba1\u601d\u8def\u3002 \u5f00\u53d1\u8005\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u94fe\u63a5\u83b7\u53d6\u5176\u4ed6\u7248\u672c\u7684\u5e2e\u52a9\u6587\u6863\u3002 \u7248\u672c \u94fe\u63a5 \u8bf4\u660e \u6700\u65b0(2.0.0) \u4e2d\u6587 , English \u7531 github pages \u6258\u7ba1 \u6700\u65b0(2.0.0) \u4e2d\u6587 , English \u7531 gitee pages \u6258\u7ba1\uff0c\u9002\u5408\u4e2d\u56fd\u7528\u6237 \u6700\u65b0(2.0.0) \u4e2d\u6587 , English \u7531 coding pages \u6258\u7ba1\uff0c\u9002\u5408\u4e2d\u56fd\u7528\u6237 1.3.0 \u4e2d\u6587 , English 1.2.1 \u4e2d\u6587 , English","title":"\u6982\u8ff0"},{"location":"toc/","text":"\u76ee\u5f55 \u6982\u8ff0 \u5feb\u901f\u5165\u95e8 \u672f\u8bed\u8868 \u5fae\u670d\u52a1\u7cfb\u7edf\u67b6\u6784 \u5b89\u88c5\u672c\u5730\u5f00\u53d1\u73af\u5883 \u5f00\u53d1\u7b2c\u4e00\u4e2a\u5fae\u670d\u52a1 \u5b8c\u6574\u4f8b\u5b50-bmi\u5e94\u7528 \u5b8c\u6574\u4f8b\u5b50-porter\u5e94\u7528 \u8bbe\u8ba1\u9009\u578b\u53c2\u8003 Java Chassis \u7684\u8f6f\u4ef6\u5de5\u7a0b\u5b9e\u8df5 Java Chassis \u7684\u8fd0\u884c\u65f6\u67b6\u6784 Java Chassis \u5fae\u670d\u52a1\u5e94\u7528\u67b6\u6784 Java Chassis \u5fae\u670d\u52a1\u6280\u672f\u9009\u578b Java Chassis \u4e0e Spring Cloud \u5f00\u53d1\u670d\u52a1\u63d0\u4f9b\u8005 \u670d\u52a1\u5b9a\u4e49 \u5b9a\u4e49\u670d\u52a1\u5951\u7ea6 \u4f7f\u7528\u9690\u5f0f\u5951\u7ea6 \u4f7f\u7528Swagger\u6ce8\u89e3 \u7528SpringMVC\u5f00\u53d1\u5fae\u670d\u52a1 \u7528JAX-RS\u5f00\u53d1\u5fae\u670d\u52a1 \u7528\u900f\u660eRPC\u5f00\u53d1\u5fae\u670d\u52a1 \u63a5\u53e3\u5b9a\u4e49\u548c\u6570\u636e\u7c7b\u578b \u670d\u52a1\u76d1\u542c\u5730\u5740\u548c\u53d1\u5e03\u5730\u5740 \u7ebf\u7a0b\u6c60 \u670d\u52a1\u542f\u52a8\u4e8b\u4ef6 \u670d\u52a1\u914d\u7f6e \u9650\u6d41\u7b56\u7565 \u53c2\u6570\u6548\u9a8c \u7a0b\u5e8f\u542f\u52a8\u903b\u8f91 Access Log\u914d\u7f6e \u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005 \u6d88\u8d39\u8005\u901a\u7528\u914d\u7f6e\u9879 \u4f7f\u7528RestTemplate\u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005 \u4f7f\u7528AsynRestTemplate\u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005 \u4f7f\u7528RPC\u65b9\u5f0f\u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005 \u4f7f\u7528\u670d\u52a1\u5951\u7ea6 \u8c03\u7528\u63a7\u5236 \u9650\u6d41\u7b56\u7565 \u6545\u969c\u6ce8\u5165 \u8c03\u7528\u7b2c\u4e09\u65b9REST\u670d\u52a1 \u901a\u7528\u529f\u80fd\u5f00\u53d1 \u8bbf\u95ee\u670d\u52a1\u4e2d\u5fc3 \u5e94\u7528\u6027\u80fd\u76d1\u63a7 \u5fae\u670d\u52a1\u8c03\u7528\u94fe \u81ea\u5b9a\u4e49\u8c03\u7528\u94fe\u6253\u70b9 \u672c\u5730\u5f00\u53d1\u548c\u6d4b\u8bd5 Http Filter \u6587\u4ef6\u4e0a\u4f20\u4e0b\u8f7d Reactive DNS\u81ea\u5b9a\u4e49\u914d\u7f6e \u4ee3\u7406\u8bbe\u7f6e \u6846\u67b6\u4e0a\u62a5\u7248\u672c\u53f7 \u8de8\u5e94\u7528\u8c03\u7528 \u5b9a\u5236\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u65b9\u6cd5 \u4f7f\u7528Context\u4f20\u9012\u63a7\u5236\u6d88\u606f \u8fd4\u56de\u503c\u5e8f\u5217\u5316\u6269\u5c55 CORS\u673a\u5236 \u83b7\u53d6\u7194\u65ad\u4e0e\u5b9e\u4f8b\u9694\u79bb\u544a\u8b66\u4e8b\u4ef6\u4fe1\u606f \u4f18\u96c5\u505c\u673a \u5f02\u5e38\u5904\u7406 \u5fae\u670d\u52a1\u5b9e\u4f8b\u95f4\u591a\u73af\u5883\u9694\u79bb \u7ebf\u7a0b\u6a21\u578b Transports: REST over Servlet REST over Vertx Highway HTTP2 \u7ba1\u7406\u670d\u52a1\u914d\u7f6e: \u901a\u7528\u914d\u7f6e\u8bf4\u660e \u914d\u7f6e\u6ce8\u5165\u673a\u5236 \u670d\u52a1\u80fd\u529b\u5f00\u653e: \u4ecb\u7ecd \u4f7f\u7528Edge Service\u505a\u8fb9\u7f18\u670d\u52a1 \u4f7f\u7528confd\u548cNginx\u505a\u8fb9\u7f18\u670d\u52a1 \u4f7f\u7528zuul\u505a\u8fb9\u7f18\u670d\u52a1 \u670d\u52a1\u6253\u5305\u548c\u8fd0\u884c: \u4ee5standalone\u6a21\u5f0f\u6253\u5305 \u4ee5WEB\u5bb9\u5668\u6a21\u5f0f\u6253\u5305 \u5fae\u670d\u52a1\u5b89\u5168: \u4f7f\u7528TLS\u901a\u4fe1 \u4f7f\u7528RSA\u8ba4\u8bc1 \u4e13\u9898\u6587\u7ae0: \u5728Spring Boot\u4e2d\u4f7f\u7528java chassis \u4f7f\u7528 inspector \u6a21\u5757\u67e5\u770b\u5951\u7ea6 \u65b0\u529f\u80fd\u4ecb\u7ecd\u7cfb\u5217\u6587\u7ae0 \u5347\u7ea7\u6307\u5bfc\u7cfb\u5217\u6587\u7ae0 \u5904\u7406\u94fe\u53c2\u8003: \u5904\u7406\u94fe\u4ecb\u7ecd \u8d1f\u8f7d\u5747\u8861 \u8def\u7531\u7ba1\u7406 \u9694\u79bb\u7194\u65ad\u5bb9\u9519 \u516c\u94a5\u8ba4\u8bc1 \u5e38\u7528\u914d\u7f6e\u9879\u53c2\u8003: REST Transport Client \u914d\u7f6e\u9879 Config Center Client \u914d\u7f6e\u9879 Service Center Client \u914d\u7f6e\u9879 ServiceComb Kie Client \u914d\u7f6e\u9879 \u5e38\u89c1\u95ee\u9898: Q A FAQ \u5fae\u670d\u52a1\u63a5\u53e3\u517c\u5bb9\u5e38\u89c1\u95ee\u9898","title":"\u76ee\u5f55"},{"location":"toc/#_1","text":"\u6982\u8ff0 \u5feb\u901f\u5165\u95e8 \u672f\u8bed\u8868 \u5fae\u670d\u52a1\u7cfb\u7edf\u67b6\u6784 \u5b89\u88c5\u672c\u5730\u5f00\u53d1\u73af\u5883 \u5f00\u53d1\u7b2c\u4e00\u4e2a\u5fae\u670d\u52a1 \u5b8c\u6574\u4f8b\u5b50-bmi\u5e94\u7528 \u5b8c\u6574\u4f8b\u5b50-porter\u5e94\u7528 \u8bbe\u8ba1\u9009\u578b\u53c2\u8003 Java Chassis \u7684\u8f6f\u4ef6\u5de5\u7a0b\u5b9e\u8df5 Java Chassis \u7684\u8fd0\u884c\u65f6\u67b6\u6784 Java Chassis \u5fae\u670d\u52a1\u5e94\u7528\u67b6\u6784 Java Chassis \u5fae\u670d\u52a1\u6280\u672f\u9009\u578b Java Chassis \u4e0e Spring Cloud \u5f00\u53d1\u670d\u52a1\u63d0\u4f9b\u8005 \u670d\u52a1\u5b9a\u4e49 \u5b9a\u4e49\u670d\u52a1\u5951\u7ea6 \u4f7f\u7528\u9690\u5f0f\u5951\u7ea6 \u4f7f\u7528Swagger\u6ce8\u89e3 \u7528SpringMVC\u5f00\u53d1\u5fae\u670d\u52a1 \u7528JAX-RS\u5f00\u53d1\u5fae\u670d\u52a1 \u7528\u900f\u660eRPC\u5f00\u53d1\u5fae\u670d\u52a1 \u63a5\u53e3\u5b9a\u4e49\u548c\u6570\u636e\u7c7b\u578b \u670d\u52a1\u76d1\u542c\u5730\u5740\u548c\u53d1\u5e03\u5730\u5740 \u7ebf\u7a0b\u6c60 \u670d\u52a1\u542f\u52a8\u4e8b\u4ef6 \u670d\u52a1\u914d\u7f6e \u9650\u6d41\u7b56\u7565 \u53c2\u6570\u6548\u9a8c \u7a0b\u5e8f\u542f\u52a8\u903b\u8f91 Access Log\u914d\u7f6e \u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005 \u6d88\u8d39\u8005\u901a\u7528\u914d\u7f6e\u9879 \u4f7f\u7528RestTemplate\u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005 \u4f7f\u7528AsynRestTemplate\u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005 \u4f7f\u7528RPC\u65b9\u5f0f\u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005 \u4f7f\u7528\u670d\u52a1\u5951\u7ea6 \u8c03\u7528\u63a7\u5236 \u9650\u6d41\u7b56\u7565 \u6545\u969c\u6ce8\u5165 \u8c03\u7528\u7b2c\u4e09\u65b9REST\u670d\u52a1 \u901a\u7528\u529f\u80fd\u5f00\u53d1 \u8bbf\u95ee\u670d\u52a1\u4e2d\u5fc3 \u5e94\u7528\u6027\u80fd\u76d1\u63a7 \u5fae\u670d\u52a1\u8c03\u7528\u94fe \u81ea\u5b9a\u4e49\u8c03\u7528\u94fe\u6253\u70b9 \u672c\u5730\u5f00\u53d1\u548c\u6d4b\u8bd5 Http Filter \u6587\u4ef6\u4e0a\u4f20\u4e0b\u8f7d Reactive DNS\u81ea\u5b9a\u4e49\u914d\u7f6e \u4ee3\u7406\u8bbe\u7f6e \u6846\u67b6\u4e0a\u62a5\u7248\u672c\u53f7 \u8de8\u5e94\u7528\u8c03\u7528 \u5b9a\u5236\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u65b9\u6cd5 \u4f7f\u7528Context\u4f20\u9012\u63a7\u5236\u6d88\u606f \u8fd4\u56de\u503c\u5e8f\u5217\u5316\u6269\u5c55 CORS\u673a\u5236 \u83b7\u53d6\u7194\u65ad\u4e0e\u5b9e\u4f8b\u9694\u79bb\u544a\u8b66\u4e8b\u4ef6\u4fe1\u606f \u4f18\u96c5\u505c\u673a \u5f02\u5e38\u5904\u7406 \u5fae\u670d\u52a1\u5b9e\u4f8b\u95f4\u591a\u73af\u5883\u9694\u79bb \u7ebf\u7a0b\u6a21\u578b Transports: REST over Servlet REST over Vertx Highway HTTP2 \u7ba1\u7406\u670d\u52a1\u914d\u7f6e: \u901a\u7528\u914d\u7f6e\u8bf4\u660e \u914d\u7f6e\u6ce8\u5165\u673a\u5236 \u670d\u52a1\u80fd\u529b\u5f00\u653e: \u4ecb\u7ecd \u4f7f\u7528Edge Service\u505a\u8fb9\u7f18\u670d\u52a1 \u4f7f\u7528confd\u548cNginx\u505a\u8fb9\u7f18\u670d\u52a1 \u4f7f\u7528zuul\u505a\u8fb9\u7f18\u670d\u52a1 \u670d\u52a1\u6253\u5305\u548c\u8fd0\u884c: \u4ee5standalone\u6a21\u5f0f\u6253\u5305 \u4ee5WEB\u5bb9\u5668\u6a21\u5f0f\u6253\u5305 \u5fae\u670d\u52a1\u5b89\u5168: \u4f7f\u7528TLS\u901a\u4fe1 \u4f7f\u7528RSA\u8ba4\u8bc1 \u4e13\u9898\u6587\u7ae0: \u5728Spring Boot\u4e2d\u4f7f\u7528java chassis \u4f7f\u7528 inspector \u6a21\u5757\u67e5\u770b\u5951\u7ea6 \u65b0\u529f\u80fd\u4ecb\u7ecd\u7cfb\u5217\u6587\u7ae0 \u5347\u7ea7\u6307\u5bfc\u7cfb\u5217\u6587\u7ae0 \u5904\u7406\u94fe\u53c2\u8003: \u5904\u7406\u94fe\u4ecb\u7ecd \u8d1f\u8f7d\u5747\u8861 \u8def\u7531\u7ba1\u7406 \u9694\u79bb\u7194\u65ad\u5bb9\u9519 \u516c\u94a5\u8ba4\u8bc1 \u5e38\u7528\u914d\u7f6e\u9879\u53c2\u8003: REST Transport Client \u914d\u7f6e\u9879 Config Center Client \u914d\u7f6e\u9879 Service Center Client \u914d\u7f6e\u9879 ServiceComb Kie Client \u914d\u7f6e\u9879 \u5e38\u89c1\u95ee\u9898: Q A FAQ \u5fae\u670d\u52a1\u63a5\u53e3\u517c\u5bb9\u5e38\u89c1\u95ee\u9898","title":"\u76ee\u5f55"},{"location":"build-consumer/3rd-party-service-invoke/","text":"\u8c03\u7528\u7b2c\u4e09\u65b9\u670d\u52a1 \u6982\u5ff5\u9610\u8ff0 ServiceComb\u5141\u8bb8\u7528\u6237\u6ce8\u518c\u7b2c\u4e09\u65b9REST\u670d\u52a1\u7684endpoint\u3001\u63a5\u53e3\u5951\u7ea6\u7b49\u4fe1\u606f\uff0c\u4f7f\u7528\u6237\u53ef\u4ee5\u4ee5\u8c03\u7528ServiceComb provider\u670d\u52a1\u76f8\u540c\u7684\u65b9\u5f0f\u7f16\u5199\u8c03\u7528\u7b2c\u4e09\u65b9\u670d\u52a1\u7684\u4ee3\u7801\u3002 \u4f7f\u7528\u8be5\u529f\u80fd\u8c03\u7528\u7b2c\u4e09\u65b9\u670d\u52a1\u65f6\uff0c\u53d1\u5f80\u7b2c\u4e09\u65b9\u670d\u52a1\u7684\u8bf7\u6c42\u4f1a\u7ecf\u8fc7consumer\u7aefhandler\u94fe\u3001HttpClientFilter\u7684\u5904\u7406\uff0c \u5373\u8be5\u529f\u80fd\u652f\u6301\u5bf9\u7b2c\u4e09\u65b9\u670d\u52a1\u8c03\u7528\u7684\u6cbb\u7406\u529f\u80fd\uff0c\u5e76\u4e14\u4e5f\u652f\u6301ServiceComb\u65e2\u6709\u7684\u7528\u6237\u81ea\u5b9a\u4e49\u6269\u5c55\u5904\u7406\u673a\u5236\u3002 \u793a\u4f8b\u4ee3\u7801 \u5047\u8bbe\u7528\u6237\u5728\u672c\u5730\u5f00\u53d1\u4e86\u4e00\u4e2aREST\u670d\u52a1\u4f5c\u4e3a\u7b2c\u4e09\u65b9REST\u670d\u52a1\uff0c\u76d1\u542c\u7aef\u53e3\u53f7\u4e3a8080\uff0c\u5176REST\u63a5\u53e3\u5982\u5951\u7ea6\u6240\u793a\uff1a ```yaml --- swagger: \"2.0\" info: version: \"0.0.1\" title: \"3rd party REST service for example\" basePath: \"/rest\" consumes: - \"application/json\" produces: - \"text/plain\" paths: /{pathVar}: get: operationId: \"testPathVar\" parameters: - name: \"pathVar\" in: \"path\" required: true type: \"string\" responses: 200: description: \"response of 200, return \\\"Received, OK. [${pathVar}]\\\"\" schema: type: \"string\" ``` \u4e3a\u8c03\u7528\u6b64\u670d\u52a1\uff0c\u9700\u8981\u5148\u6839\u636e\u5176REST\u63a5\u53e3\u7f16\u5199\u4e00\u4e2aJava\u63a5\u53e3\u7c7b\uff0c\u5e76\u6253\u4e0a\u53c2\u6570\u6ce8\u89e3\u3002 Java\u63a5\u53e3\u7c7b\u7684\u7f16\u5199\u65b9\u5f0f\u53c2\u7167\u4f7f\u7528\u9690\u5f0f\u5951\u7ea6\u5f00\u53d1SpringMVC\u548cJAX-RS\u98ce\u683c\u7684provider\u65b9\u5f0f\u3002 \u63a5\u53e3\u4ee3\u7801\u793a\u4f8b\u5982\u4e0b\uff1a ```java @Path(\"/rest\") @Api(produces = MediaType.TEXT_PLAIN) public interface VertxServerIntf { @Path(\"/{pathVar}\") @GET String testPathVar(@PathParam(\"pathVar\") String pathVar); } ``` \u5728consumer\u670d\u52a1\u4e2d\u8c03\u7528ServiceComb\u63d0\u4f9b\u7684\u65b9\u6cd5\u5c06\u5176\u8fdb\u884c\u6ce8\u518c\uff1a ```java String endpoint = \"rest://127.0.0.1:8080\"; RegistryUtils.getServiceRegistry().registerMicroserviceMappingByEndpoints( // 3rd party rest service name, you can specify the name on your need as long as you obey the microservice naming rule \"thirdPartyService\", // service version \"0.0.1\", // list of endpoints Collections.singletonList(endpoint), // java interface class to generate swagger schema ThirdPartyRestServiceInterface.class ); ``` \u8c03\u7528\u7b2c\u4e09\u65b9\u670d\u52a1\uff0c\u58f0\u660e\u548c\u8c03\u7528\u65b9\u5f0f\u4e0e\u8c03\u7528ServiceComb provider\u670d\u52a1\u76f8\u540c\uff0c\u6b64\u5904\u4ee5RPC\u8c03\u7528\u65b9\u5f0f\u4e3a\u4f8b\u3002 ```java // declare rpc reference to 3rd party rest service, schemaId is the same as microservice name @RpcReference(microserviceName = \"thirdPartyService\", schemaId = \"thirdPartyService\") ThirdPartyRestServiceInterface thirdPartyRestService; @RequestMapping(path = \"/{pathVar}\", method = RequestMethod.GET) public String testInvoke(@PathVariable(name = \"pathVar\") String pathVar) { LOGGER.info(\"testInvoke() is called, pathVar = [{}]\", pathVar); // invoke 3rd party rest service String response = thirdPartyRestService.testPathVar(pathVar); LOGGER.info(\"testInvoke() response = [{}]\", response); return response; } ``` \u4f7f\u7528\u6cbb\u7406\u529f\u80fd\u3002\u4f7f\u7528\u6cbb\u7406\u529f\u80fd\u7684\u65b9\u6cd5\u4e0e\u666e\u901a\u7684consumer\u8c03\u7528provider\u573a\u666f\u7c7b\u4f3c\u3002\u4ee5\u9650\u6d41\u7b56\u7565\u4e3a\u4f8b\uff0c\u5728consumer\u670d\u52a1\u7684microservice.yaml\u6587\u4ef6\u4e2d\u8fdb\u884c\u5982\u4e0b\u914d\u7f6e: ```yaml servicecomb: flowcontrol: Consumer: qps: enabled: true limit: thirdPartyService: 1 ``` \u6b64\u65f6\u5373\u5c06consumer\u8c03\u7528\u540d\u4e3a thirdPartyService \u7684\u7b2c\u4e09\u65b9REST\u670d\u52a1\u7684QPS\u8bbe\u7f6e\u4e3a1\u3002\u5f53consumer\u8c03\u7528 thirdPartyService \u7684\u6d41\u91cf\u9ad8\u4e8e1QPS\u65f6\uff0c \u5c06\u4f1a\u5f97\u5230 429 Too Many Requests \u7684 InvocationException \u5f02\u5e38\u3002 \u6ce8\u610f\uff1a - endpoint\u4fe1\u606f\u662f\u4ee5 rest \u5f00\u5934\u7684\uff0c\u800c\u975e http \uff0c\u53ef\u4ee5\u53c2\u7167ServiceComb\u5fae\u670d\u52a1\u6ce8\u518c\u5230\u670d\u52a1\u4e2d\u5fc3\u7684endpoint\u6837\u5f0f\u8fdb\u884c\u7f16\u5199\u3002 - \u5f53\u7b2c\u4e09\u65b9\u670d\u52a1\u6709\u591a\u4e2a\u5b9e\u4f8b\uff08\u5730\u5740\uff09\u65f6\uff0c\u53ef\u4ee5\u5728endpoint list\u4e2d\u6307\u5b9a\u591a\u4e2a\u5730\u5740\uff0cServiceComb\u652f\u6301\u5bf9\u591a\u4e2a\u5730\u5740\u8fdb\u884c\u8d1f\u8f7d\u5747\u8861\u5904\u7406\uff0c\u5904\u7406\u65b9\u5f0f\u548c\u5bf9\u5f85ServiceComb provider\u670d\u52a1\u76f8\u540c\u3002 - \u5f53\u524d\u4ec5\u652f\u6301\u4e00\u6b21\u6027\u6ce8\u518c\u7b2c\u4e09\u65b9\u670d\u52a1\u53ca\u5176\u5b9e\u4f8b\u4fe1\u606f\uff0c\u4e0d\u652f\u6301\u589e\u52a0\u3001\u5220\u9664\u548c\u4fee\u6539\u64cd\u4f5c\u3002","title":"\u8c03\u7528\u7b2c\u4e09\u65b9\u670d\u52a1"},{"location":"build-consumer/3rd-party-service-invoke/#_1","text":"","title":"\u8c03\u7528\u7b2c\u4e09\u65b9\u670d\u52a1"},{"location":"build-consumer/3rd-party-service-invoke/#_2","text":"ServiceComb\u5141\u8bb8\u7528\u6237\u6ce8\u518c\u7b2c\u4e09\u65b9REST\u670d\u52a1\u7684endpoint\u3001\u63a5\u53e3\u5951\u7ea6\u7b49\u4fe1\u606f\uff0c\u4f7f\u7528\u6237\u53ef\u4ee5\u4ee5\u8c03\u7528ServiceComb provider\u670d\u52a1\u76f8\u540c\u7684\u65b9\u5f0f\u7f16\u5199\u8c03\u7528\u7b2c\u4e09\u65b9\u670d\u52a1\u7684\u4ee3\u7801\u3002 \u4f7f\u7528\u8be5\u529f\u80fd\u8c03\u7528\u7b2c\u4e09\u65b9\u670d\u52a1\u65f6\uff0c\u53d1\u5f80\u7b2c\u4e09\u65b9\u670d\u52a1\u7684\u8bf7\u6c42\u4f1a\u7ecf\u8fc7consumer\u7aefhandler\u94fe\u3001HttpClientFilter\u7684\u5904\u7406\uff0c \u5373\u8be5\u529f\u80fd\u652f\u6301\u5bf9\u7b2c\u4e09\u65b9\u670d\u52a1\u8c03\u7528\u7684\u6cbb\u7406\u529f\u80fd\uff0c\u5e76\u4e14\u4e5f\u652f\u6301ServiceComb\u65e2\u6709\u7684\u7528\u6237\u81ea\u5b9a\u4e49\u6269\u5c55\u5904\u7406\u673a\u5236\u3002","title":"\u6982\u5ff5\u9610\u8ff0"},{"location":"build-consumer/3rd-party-service-invoke/#_3","text":"\u5047\u8bbe\u7528\u6237\u5728\u672c\u5730\u5f00\u53d1\u4e86\u4e00\u4e2aREST\u670d\u52a1\u4f5c\u4e3a\u7b2c\u4e09\u65b9REST\u670d\u52a1\uff0c\u76d1\u542c\u7aef\u53e3\u53f7\u4e3a8080\uff0c\u5176REST\u63a5\u53e3\u5982\u5951\u7ea6\u6240\u793a\uff1a ```yaml --- swagger: \"2.0\" info: version: \"0.0.1\" title: \"3rd party REST service for example\" basePath: \"/rest\" consumes: - \"application/json\" produces: - \"text/plain\" paths: /{pathVar}: get: operationId: \"testPathVar\" parameters: - name: \"pathVar\" in: \"path\" required: true type: \"string\" responses: 200: description: \"response of 200, return \\\"Received, OK. [${pathVar}]\\\"\" schema: type: \"string\" ``` \u4e3a\u8c03\u7528\u6b64\u670d\u52a1\uff0c\u9700\u8981\u5148\u6839\u636e\u5176REST\u63a5\u53e3\u7f16\u5199\u4e00\u4e2aJava\u63a5\u53e3\u7c7b\uff0c\u5e76\u6253\u4e0a\u53c2\u6570\u6ce8\u89e3\u3002 Java\u63a5\u53e3\u7c7b\u7684\u7f16\u5199\u65b9\u5f0f\u53c2\u7167\u4f7f\u7528\u9690\u5f0f\u5951\u7ea6\u5f00\u53d1SpringMVC\u548cJAX-RS\u98ce\u683c\u7684provider\u65b9\u5f0f\u3002 \u63a5\u53e3\u4ee3\u7801\u793a\u4f8b\u5982\u4e0b\uff1a ```java @Path(\"/rest\") @Api(produces = MediaType.TEXT_PLAIN) public interface VertxServerIntf { @Path(\"/{pathVar}\") @GET String testPathVar(@PathParam(\"pathVar\") String pathVar); } ``` \u5728consumer\u670d\u52a1\u4e2d\u8c03\u7528ServiceComb\u63d0\u4f9b\u7684\u65b9\u6cd5\u5c06\u5176\u8fdb\u884c\u6ce8\u518c\uff1a ```java String endpoint = \"rest://127.0.0.1:8080\"; RegistryUtils.getServiceRegistry().registerMicroserviceMappingByEndpoints( // 3rd party rest service name, you can specify the name on your need as long as you obey the microservice naming rule \"thirdPartyService\", // service version \"0.0.1\", // list of endpoints Collections.singletonList(endpoint), // java interface class to generate swagger schema ThirdPartyRestServiceInterface.class ); ``` \u8c03\u7528\u7b2c\u4e09\u65b9\u670d\u52a1\uff0c\u58f0\u660e\u548c\u8c03\u7528\u65b9\u5f0f\u4e0e\u8c03\u7528ServiceComb provider\u670d\u52a1\u76f8\u540c\uff0c\u6b64\u5904\u4ee5RPC\u8c03\u7528\u65b9\u5f0f\u4e3a\u4f8b\u3002 ```java // declare rpc reference to 3rd party rest service, schemaId is the same as microservice name @RpcReference(microserviceName = \"thirdPartyService\", schemaId = \"thirdPartyService\") ThirdPartyRestServiceInterface thirdPartyRestService; @RequestMapping(path = \"/{pathVar}\", method = RequestMethod.GET) public String testInvoke(@PathVariable(name = \"pathVar\") String pathVar) { LOGGER.info(\"testInvoke() is called, pathVar = [{}]\", pathVar); // invoke 3rd party rest service String response = thirdPartyRestService.testPathVar(pathVar); LOGGER.info(\"testInvoke() response = [{}]\", response); return response; } ``` \u4f7f\u7528\u6cbb\u7406\u529f\u80fd\u3002\u4f7f\u7528\u6cbb\u7406\u529f\u80fd\u7684\u65b9\u6cd5\u4e0e\u666e\u901a\u7684consumer\u8c03\u7528provider\u573a\u666f\u7c7b\u4f3c\u3002\u4ee5\u9650\u6d41\u7b56\u7565\u4e3a\u4f8b\uff0c\u5728consumer\u670d\u52a1\u7684microservice.yaml\u6587\u4ef6\u4e2d\u8fdb\u884c\u5982\u4e0b\u914d\u7f6e: ```yaml servicecomb: flowcontrol: Consumer: qps: enabled: true limit: thirdPartyService: 1 ``` \u6b64\u65f6\u5373\u5c06consumer\u8c03\u7528\u540d\u4e3a thirdPartyService \u7684\u7b2c\u4e09\u65b9REST\u670d\u52a1\u7684QPS\u8bbe\u7f6e\u4e3a1\u3002\u5f53consumer\u8c03\u7528 thirdPartyService \u7684\u6d41\u91cf\u9ad8\u4e8e1QPS\u65f6\uff0c \u5c06\u4f1a\u5f97\u5230 429 Too Many Requests \u7684 InvocationException \u5f02\u5e38\u3002 \u6ce8\u610f\uff1a - endpoint\u4fe1\u606f\u662f\u4ee5 rest \u5f00\u5934\u7684\uff0c\u800c\u975e http \uff0c\u53ef\u4ee5\u53c2\u7167ServiceComb\u5fae\u670d\u52a1\u6ce8\u518c\u5230\u670d\u52a1\u4e2d\u5fc3\u7684endpoint\u6837\u5f0f\u8fdb\u884c\u7f16\u5199\u3002 - \u5f53\u7b2c\u4e09\u65b9\u670d\u52a1\u6709\u591a\u4e2a\u5b9e\u4f8b\uff08\u5730\u5740\uff09\u65f6\uff0c\u53ef\u4ee5\u5728endpoint list\u4e2d\u6307\u5b9a\u591a\u4e2a\u5730\u5740\uff0cServiceComb\u652f\u6301\u5bf9\u591a\u4e2a\u5730\u5740\u8fdb\u884c\u8d1f\u8f7d\u5747\u8861\u5904\u7406\uff0c\u5904\u7406\u65b9\u5f0f\u548c\u5bf9\u5f85ServiceComb provider\u670d\u52a1\u76f8\u540c\u3002 - \u5f53\u524d\u4ec5\u652f\u6301\u4e00\u6b21\u6027\u6ce8\u518c\u7b2c\u4e09\u65b9\u670d\u52a1\u53ca\u5176\u5b9e\u4f8b\u4fe1\u606f\uff0c\u4e0d\u652f\u6301\u589e\u52a0\u3001\u5220\u9664\u548c\u4fee\u6539\u64cd\u4f5c\u3002","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"build-consumer/catalog/","text":"\u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005 \u6d88\u8d39\u8005\u901a\u7528\u914d\u7f6e\u9879 \u4f7f\u7528RestTemplate\u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005 \u4f7f\u7528AsynRestTemplate\u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005 \u4f7f\u7528RPC\u65b9\u5f0f\u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005 \u4f7f\u7528\u670d\u52a1\u5951\u7ea6 \u8c03\u7528\u63a7\u5236 \u9650\u6d41\u7b56\u7565 \u6545\u969c\u6ce8\u5165 \u8c03\u7528\u7b2c\u4e09\u65b9REST\u670d\u52a1","title":"\u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005"},{"location":"build-consumer/catalog/#_1","text":"\u6d88\u8d39\u8005\u901a\u7528\u914d\u7f6e\u9879 \u4f7f\u7528RestTemplate\u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005 \u4f7f\u7528AsynRestTemplate\u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005 \u4f7f\u7528RPC\u65b9\u5f0f\u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005 \u4f7f\u7528\u670d\u52a1\u5951\u7ea6 \u8c03\u7528\u63a7\u5236 \u9650\u6d41\u7b56\u7565 \u6545\u969c\u6ce8\u5165 \u8c03\u7528\u7b2c\u4e09\u65b9REST\u670d\u52a1","title":"\u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005"},{"location":"build-consumer/code-first/","text":"\u573a\u666f\u63cf\u8ff0 \u670d\u52a1\u6d88\u8d39\u8005\u53ef\u4ee5\u4e0d\u7528\u663e\u5f0f\u5730\u5c06\u5951\u7ea6\u5b58\u653e\u5728\u9879\u76ee\u76ee\u5f55\u4e2d\uff0c\u5f53\u7a0b\u5e8f\u542f\u52a8\u65f6\uff0cServiceComb\u6846\u67b6\u4f1a\u81ea\u52a8\u6839\u636emicroservice.yaml\u6587\u4ef6\u4e2d\u914d\u7f6e\u7684\u670d\u52a1\u63d0\u4f9b\u8005\u7684\u5fae\u670d\u52a1\u540d\u79f0\u548c\u7248\u672c\u53f7\uff0c\u4ece\u670d\u52a1\u4e2d\u5fc3\u62c9\u53d6\u5951\u7ea6\u4fe1\u606f\u3002 \u6d89\u53caAPI \u4f7f\u7528\u9690\u5f0f\u5951\u7ea6\u53ef\u7528\u4e8eRestTemplate\u3001\u900f\u660eRPC\u4e24\u79cd\u670d\u52a1\u6d88\u8d39\u8005\u5f00\u53d1\u6a21\u5f0f\uff0c\u4f7f\u7528RestTemplate\u7684\u5f00\u53d1\u65b9\u5f0f\u53c2\u89c14.3 \u4f7f\u7528RestTemplate\u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005\u3002 \u793a\u4f8b\u4ee3\u7801 \u672c\u5c0f\u8282\u4ee5\u900f\u660eRPC\u5f00\u53d1\u6a21\u5f0f\u4e3a\u4f8b\u5c55\u793a\u5982\u4f55\u4f7f\u7528\u9690\u5f0f\u5951\u7ea6\u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005\u3002 \u670d\u52a1\u6d88\u8d39\u8005\u7684\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a import org.springframework.stereotype.Component; import org.apache.servicecomb.foundation.common.utils.BeanUtils; import org.apache.servicecomb.foundation.common.utils.Log4jUtils; import org.apache.servicecomb.provider.pojo.RpcReference; import org.apache.servicecomb.samples.common.schema.Hello; import org.apache.servicecomb.samples.common.schema.models.Person; @Component public class CodeFirstConsumerMain { @RpcReference(microserviceName = codefirst , schemaId = codeFirstHello ) private static Hello hello; public static void main(String[] args) throws Exception { init(); System.out.println(hello.sayHi( Java Chassis )); Person person = new Person(); person.setName( ServiceComb/Java Chassis ); System.out.println(hello.sayHello(person)); } public static void init() throws Exception { Log4jUtils.init(); BeanUtils.init(); } } \u5728\u4ee5\u4e0a\u4ee3\u7801\u4e2d\uff0c\u670d\u52a1\u6d88\u8d39\u8005\u5df2\u7ecf\u53d6\u5f97\u4e86\u670d\u52a1\u63d0\u4f9b\u8005\u7684\u670d\u52a1\u63a5\u53e3Hello\uff0c\u5e76\u5728\u4ee3\u7801\u4e2d\u58f0\u660e\u4e00\u4e2aHello\u7c7b\u578b\u7684\u6210\u5458\u3002\u901a\u8fc7\u5728hello\u4e0a\u4f7f\u7528RPCReference\u6ce8\u89e3\u6307\u660e\u5fae\u670d\u52a1\u540d\u79f0\u548cschemaId\uff0cServiceComb\u6846\u67b6\u53ef\u4ee5\u5728\u7a0b\u5e8f\u542f\u52a8\u65f6\u4ece\u670d\u52a1\u4e2d\u5fc3\u83b7\u53d6\u5230\u5bf9\u5e94\u7684\u670d\u52a1\u63d0\u4f9b\u8005\u5b9e\u4f8b\u4fe1\u606f\uff0c\u5e76\u4e14\u751f\u6210\u4e00\u4e2a\u4ee3\u7406\u6ce8\u5165\u5230hello\u4e2d\uff0c\u7528\u6237\u53ef\u4ee5\u50cf\u8c03\u7528\u672c\u5730\u7c7b\u4e00\u6837\u8c03\u7528\u8fdc\u7a0b\u670d\u52a1\u3002","title":"Code first"},{"location":"build-consumer/code-first/#_1","text":"\u670d\u52a1\u6d88\u8d39\u8005\u53ef\u4ee5\u4e0d\u7528\u663e\u5f0f\u5730\u5c06\u5951\u7ea6\u5b58\u653e\u5728\u9879\u76ee\u76ee\u5f55\u4e2d\uff0c\u5f53\u7a0b\u5e8f\u542f\u52a8\u65f6\uff0cServiceComb\u6846\u67b6\u4f1a\u81ea\u52a8\u6839\u636emicroservice.yaml\u6587\u4ef6\u4e2d\u914d\u7f6e\u7684\u670d\u52a1\u63d0\u4f9b\u8005\u7684\u5fae\u670d\u52a1\u540d\u79f0\u548c\u7248\u672c\u53f7\uff0c\u4ece\u670d\u52a1\u4e2d\u5fc3\u62c9\u53d6\u5951\u7ea6\u4fe1\u606f\u3002","title":"\u573a\u666f\u63cf\u8ff0"},{"location":"build-consumer/code-first/#api","text":"\u4f7f\u7528\u9690\u5f0f\u5951\u7ea6\u53ef\u7528\u4e8eRestTemplate\u3001\u900f\u660eRPC\u4e24\u79cd\u670d\u52a1\u6d88\u8d39\u8005\u5f00\u53d1\u6a21\u5f0f\uff0c\u4f7f\u7528RestTemplate\u7684\u5f00\u53d1\u65b9\u5f0f\u53c2\u89c14.3 \u4f7f\u7528RestTemplate\u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005\u3002","title":"\u6d89\u53caAPI"},{"location":"build-consumer/code-first/#_2","text":"\u672c\u5c0f\u8282\u4ee5\u900f\u660eRPC\u5f00\u53d1\u6a21\u5f0f\u4e3a\u4f8b\u5c55\u793a\u5982\u4f55\u4f7f\u7528\u9690\u5f0f\u5951\u7ea6\u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005\u3002 \u670d\u52a1\u6d88\u8d39\u8005\u7684\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a import org.springframework.stereotype.Component; import org.apache.servicecomb.foundation.common.utils.BeanUtils; import org.apache.servicecomb.foundation.common.utils.Log4jUtils; import org.apache.servicecomb.provider.pojo.RpcReference; import org.apache.servicecomb.samples.common.schema.Hello; import org.apache.servicecomb.samples.common.schema.models.Person; @Component public class CodeFirstConsumerMain { @RpcReference(microserviceName = codefirst , schemaId = codeFirstHello ) private static Hello hello; public static void main(String[] args) throws Exception { init(); System.out.println(hello.sayHi( Java Chassis )); Person person = new Person(); person.setName( ServiceComb/Java Chassis ); System.out.println(hello.sayHello(person)); } public static void init() throws Exception { Log4jUtils.init(); BeanUtils.init(); } } \u5728\u4ee5\u4e0a\u4ee3\u7801\u4e2d\uff0c\u670d\u52a1\u6d88\u8d39\u8005\u5df2\u7ecf\u53d6\u5f97\u4e86\u670d\u52a1\u63d0\u4f9b\u8005\u7684\u670d\u52a1\u63a5\u53e3Hello\uff0c\u5e76\u5728\u4ee3\u7801\u4e2d\u58f0\u660e\u4e00\u4e2aHello\u7c7b\u578b\u7684\u6210\u5458\u3002\u901a\u8fc7\u5728hello\u4e0a\u4f7f\u7528RPCReference\u6ce8\u89e3\u6307\u660e\u5fae\u670d\u52a1\u540d\u79f0\u548cschemaId\uff0cServiceComb\u6846\u67b6\u53ef\u4ee5\u5728\u7a0b\u5e8f\u542f\u52a8\u65f6\u4ece\u670d\u52a1\u4e2d\u5fc3\u83b7\u53d6\u5230\u5bf9\u5e94\u7684\u670d\u52a1\u63d0\u4f9b\u8005\u5b9e\u4f8b\u4fe1\u606f\uff0c\u5e76\u4e14\u751f\u6210\u4e00\u4e2a\u4ee3\u7406\u6ce8\u5165\u5230hello\u4e2d\uff0c\u7528\u6237\u53ef\u4ee5\u50cf\u8c03\u7528\u672c\u5730\u7c7b\u4e00\u6837\u8c03\u7528\u8fdc\u7a0b\u670d\u52a1\u3002","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"build-consumer/common-configuration/","text":"Consumer\u7684\u901a\u7528\u914d\u7f6e\u9879 \u8bf7\u6c42\u8d85\u65f6 \u914d\u7f6e\u9879 servicecomb.request.timeout \u9ed8\u8ba4\u503c 30000\uff0c\u5355\u4f4d\u4e3a\u6beb\u79d2 \u542b\u4e49 Consumer\u4f20\u8f93\u5c42\u5f00\u59cb\u53d1\u9001\u65f6\uff0c\u5f00\u59cb\u8ba1\u65f6\uff0c\u6307\u5b9a\u65f6\u95f4\u5185\u672a\u6536\u5230\u5e94\u7b54\uff0c\u5219\u5904\u7406\u4e3a\u8bf7\u6c42\u8d85\u65f6 \u6307\u5b9a\u4f20\u8f93\u901a\u9053 \u914d\u7f6e\u9879 servicecomb.references.${\u76ee\u6807\u5fae\u670d\u52a1\u540d}.transport servicecomb.references.transport \u540c\u65f6\u652f\u6301\u5168\u5c40\u548c\u5fae\u670d\u52a1\u7ea7\u7684\u4e24\u7ea7\u63a7\u5236 \u9ed8\u8ba4\u503c \u65e0 \u542b\u4e49 \u5982\u679c\u76ee\u6807\u5fae\u670d\u52a1\u540c\u65f6\u5f00\u653e\u591a\u79cdtransport\u7684\u8bbf\u95ee\u80fd\u529b\u65f6\uff0c\u800cConsumer\u4e5f\u540c\u65f6\u90e8\u7f72\u4e86\u76f8\u5e94\u7684\u591a\u4e2atransport\uff0c\u4f46\u662f\u4f5c\u4e3aConsumer\u8c03\u7528\u8be5\u5fae\u670d\u52a1\u65f6\uff0c\u53ea\u60f3\u4f7f\u7528\u5176\u4e2d\u4e00\u79cdtransport\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7\u672c\u914d\u7f6e\u9879\u6307\u5b9atransport \u5982\u679c\u4e0d\u914d\u7f6e\uff0c\u5219\u8f6e\u6d41\u4f7f\u7528\u591a\u4e2atransport \u6307\u5b9a\u76ee\u6807\u5b9e\u4f8b\u7684\u7248\u672c\u89c4\u5219 \u914d\u7f6e\u9879 servicecomb.references.${\u76ee\u6807\u670d\u52a1\u540d}.version-rule servicecomb.references.version-rule \u540c\u65f6\u652f\u6301\u5168\u5c40\u548c\u5fae\u670d\u52a1\u7ea7\u7684\u4e24\u7ea7\u63a7\u5236 \u9ed8\u8ba4\u503c latest \u542b\u4e49 \u76ee\u6807\u5b9e\u4f8b\u7684\u7248\u672c\u89c4\u5219\uff0c\u652f\u6301\u4ee5\u4e0b\u89c4\u5219\uff1a \u6700\u65b0\u7248\u672c\uff1a latest \u5927\u4e8e\u6307\u5b9a\u7248\u672c\uff0c\u6bd4\u5982\uff1a1.0.0+ \u6307\u5b9a\u7248\u672c\u8303\u56f4\uff0c\u6bd4\u5982\uff1a1.0.0-2.0.0\uff0c\u8868\u793a\u5927\u4e8e\u7b49\u4e8e\u7248\u672c1.0.0\uff0c\u5e76\u4e14\u5c0f\u4e8e\u7248\u672c2.0.0 \u7cbe\u786e\u7248\u672c\uff0c\u6bd4\u5982\uff1a1.0.0","title":"Consumer\u7684\u901a\u7528\u914d\u7f6e\u9879"},{"location":"build-consumer/common-configuration/#consumer","text":"\u8bf7\u6c42\u8d85\u65f6 \u914d\u7f6e\u9879 servicecomb.request.timeout \u9ed8\u8ba4\u503c 30000\uff0c\u5355\u4f4d\u4e3a\u6beb\u79d2 \u542b\u4e49 Consumer\u4f20\u8f93\u5c42\u5f00\u59cb\u53d1\u9001\u65f6\uff0c\u5f00\u59cb\u8ba1\u65f6\uff0c\u6307\u5b9a\u65f6\u95f4\u5185\u672a\u6536\u5230\u5e94\u7b54\uff0c\u5219\u5904\u7406\u4e3a\u8bf7\u6c42\u8d85\u65f6 \u6307\u5b9a\u4f20\u8f93\u901a\u9053 \u914d\u7f6e\u9879 servicecomb.references.${\u76ee\u6807\u5fae\u670d\u52a1\u540d}.transport servicecomb.references.transport \u540c\u65f6\u652f\u6301\u5168\u5c40\u548c\u5fae\u670d\u52a1\u7ea7\u7684\u4e24\u7ea7\u63a7\u5236 \u9ed8\u8ba4\u503c \u65e0 \u542b\u4e49 \u5982\u679c\u76ee\u6807\u5fae\u670d\u52a1\u540c\u65f6\u5f00\u653e\u591a\u79cdtransport\u7684\u8bbf\u95ee\u80fd\u529b\u65f6\uff0c\u800cConsumer\u4e5f\u540c\u65f6\u90e8\u7f72\u4e86\u76f8\u5e94\u7684\u591a\u4e2atransport\uff0c\u4f46\u662f\u4f5c\u4e3aConsumer\u8c03\u7528\u8be5\u5fae\u670d\u52a1\u65f6\uff0c\u53ea\u60f3\u4f7f\u7528\u5176\u4e2d\u4e00\u79cdtransport\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7\u672c\u914d\u7f6e\u9879\u6307\u5b9atransport \u5982\u679c\u4e0d\u914d\u7f6e\uff0c\u5219\u8f6e\u6d41\u4f7f\u7528\u591a\u4e2atransport \u6307\u5b9a\u76ee\u6807\u5b9e\u4f8b\u7684\u7248\u672c\u89c4\u5219 \u914d\u7f6e\u9879 servicecomb.references.${\u76ee\u6807\u670d\u52a1\u540d}.version-rule servicecomb.references.version-rule \u540c\u65f6\u652f\u6301\u5168\u5c40\u548c\u5fae\u670d\u52a1\u7ea7\u7684\u4e24\u7ea7\u63a7\u5236 \u9ed8\u8ba4\u503c latest \u542b\u4e49 \u76ee\u6807\u5b9e\u4f8b\u7684\u7248\u672c\u89c4\u5219\uff0c\u652f\u6301\u4ee5\u4e0b\u89c4\u5219\uff1a \u6700\u65b0\u7248\u672c\uff1a latest \u5927\u4e8e\u6307\u5b9a\u7248\u672c\uff0c\u6bd4\u5982\uff1a1.0.0+ \u6307\u5b9a\u7248\u672c\u8303\u56f4\uff0c\u6bd4\u5982\uff1a1.0.0-2.0.0\uff0c\u8868\u793a\u5927\u4e8e\u7b49\u4e8e\u7248\u672c1.0.0\uff0c\u5e76\u4e14\u5c0f\u4e8e\u7248\u672c2.0.0 \u7cbe\u786e\u7248\u672c\uff0c\u6bd4\u5982\uff1a1.0.0","title":"Consumer\u7684\u901a\u7528\u914d\u7f6e\u9879"},{"location":"build-consumer/develop-consumer-using-rpc/","text":"\u4f7f\u7528\u900f\u660eRPC\u65b9\u5f0f\u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005 \u6982\u5ff5\u9610\u8ff0 \u900f\u660eRPC\u5f00\u53d1\u6a21\u5f0f\u5141\u8bb8\u7528\u6237\u901a\u8fc7\u7b80\u5355\u7684java interface\u50cf\u672c\u5730\u8c03\u7528\u4e00\u6837\u8fdb\u884c\u670d\u52a1\u8c03\u7528\u3002 \u900f\u660eRPC\u4ec5\u4ec5\u662f\u4e00\u79cd\u5f00\u53d1\u6a21\u5f0f\uff1a * \u4e0e\u4f7f\u7528highway\u8fd8\u662fRESTful\u4f20\u8f93\u6ca1\u6709\u5173\u8054 * \u4e0eproducer\u4f7f\u7528\u900f\u660eRPC/Jax-RS\u8fd8\u662fSpringMVC\u6a21\u5f0f\u5f00\u53d1\u6ca1\u6709\u5173\u8054 * \u4e5f\u4e0eproducer\u4ee3\u7801\u662f\u5426\u5b9e\u73b0\u8fd9\u4e2ainterface\u6ca1\u6709\u5173\u8054\u3002 \u900f\u660eRPC\u5f00\u53d1\u6a21\u5f0f\u4e0espring cloud\u7684feign\u7c7b\u4f3c\uff0c\u4e0d\u8fc7\u66f4\u7b80\u5355\uff0c\u56e0\u4e3a\u4e0d\u5fc5\u5728\u8fd9\u4e2ainterface\u4e2d\u589e\u52a0\u4efb\u4f55RESTful annotation\u3002 \u5728spring bean\u4e2d\u901a\u8fc7@RpcReference\u58f0\u660e @Component public class SomeBean { ...... @RpcReference(microserviceName = helloService , schemaId = helloSchema ) private Hello hello; ...... } \u8131\u79bbspring bean\uff0c\u76f4\u63a5\u901a\u8fc7api\u58f0\u660e Hello hello = Invoker.createProxy( helloService , helloSchema , Hello.class); reactive \u53ea\u9700\u8981\u4f7f\u7528jdk\u7684CompletableFuture\u5bf9\u8fd4\u56de\u503c\u8fdb\u884c\u5305\u88c5\u5373\u53ef interface Hello { CompletableFuture String sayHi(String name); } \u540c\u4e00\u4e2ainterface\u4e2d\uff0c\u53ef\u4ee5\u540c\u65f6\u58f0\u660e\u540c\u4e00\u4e2a\u65b9\u6cd5\u7684reactive\u548c\u540c\u6b65\u539f\u578b \u56e0\u4e3a\u8981\u6c42\u65b9\u6cd5\u540d\u4e0e\u5951\u7ea6\u4e2d\u7684operationId\u4e00\u4e00\u5bf9\u5e94\uff0c\u800c\u4ec5\u6709\u8fd4\u56de\u503c\u7c7b\u578b\u4e0d\u540c\uff0c\u5728java\u4e2d\u662f\u975e\u6cd5\u7684\uff0c\u6240\u4ee5\u9700\u8981\u4fee\u6539\u65b9\u6cd5\u540d\uff0c\u5e76\u901a\u8fc7swagger annotation\u6765\u58f0\u660e\u771f\u6b63\u7684operationId interface Hello { String sayHi(String name); @ApiOperation(nickname = sayHi , value = reactive method for sayHi ) CompletableFuture String asyncSayHi(String name); }","title":"\u4f7f\u7528\u900f\u660eRPC\u65b9\u5f0f\u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005"},{"location":"build-consumer/develop-consumer-using-rpc/#rpc","text":"","title":"\u4f7f\u7528\u900f\u660eRPC\u65b9\u5f0f\u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005"},{"location":"build-consumer/develop-consumer-using-rpc/#_1","text":"\u900f\u660eRPC\u5f00\u53d1\u6a21\u5f0f\u5141\u8bb8\u7528\u6237\u901a\u8fc7\u7b80\u5355\u7684java interface\u50cf\u672c\u5730\u8c03\u7528\u4e00\u6837\u8fdb\u884c\u670d\u52a1\u8c03\u7528\u3002 \u900f\u660eRPC\u4ec5\u4ec5\u662f\u4e00\u79cd\u5f00\u53d1\u6a21\u5f0f\uff1a * \u4e0e\u4f7f\u7528highway\u8fd8\u662fRESTful\u4f20\u8f93\u6ca1\u6709\u5173\u8054 * \u4e0eproducer\u4f7f\u7528\u900f\u660eRPC/Jax-RS\u8fd8\u662fSpringMVC\u6a21\u5f0f\u5f00\u53d1\u6ca1\u6709\u5173\u8054 * \u4e5f\u4e0eproducer\u4ee3\u7801\u662f\u5426\u5b9e\u73b0\u8fd9\u4e2ainterface\u6ca1\u6709\u5173\u8054\u3002 \u900f\u660eRPC\u5f00\u53d1\u6a21\u5f0f\u4e0espring cloud\u7684feign\u7c7b\u4f3c\uff0c\u4e0d\u8fc7\u66f4\u7b80\u5355\uff0c\u56e0\u4e3a\u4e0d\u5fc5\u5728\u8fd9\u4e2ainterface\u4e2d\u589e\u52a0\u4efb\u4f55RESTful annotation\u3002","title":"\u6982\u5ff5\u9610\u8ff0"},{"location":"build-consumer/develop-consumer-using-rpc/#spring-beanrpcreference","text":"@Component public class SomeBean { ...... @RpcReference(microserviceName = helloService , schemaId = helloSchema ) private Hello hello; ...... }","title":"\u5728spring bean\u4e2d\u901a\u8fc7@RpcReference\u58f0\u660e"},{"location":"build-consumer/develop-consumer-using-rpc/#spring-beanapi","text":"Hello hello = Invoker.createProxy( helloService , helloSchema , Hello.class);","title":"\u8131\u79bbspring bean\uff0c\u76f4\u63a5\u901a\u8fc7api\u58f0\u660e"},{"location":"build-consumer/develop-consumer-using-rpc/#reactive","text":"\u53ea\u9700\u8981\u4f7f\u7528jdk\u7684CompletableFuture\u5bf9\u8fd4\u56de\u503c\u8fdb\u884c\u5305\u88c5\u5373\u53ef interface Hello { CompletableFuture String sayHi(String name); } \u540c\u4e00\u4e2ainterface\u4e2d\uff0c\u53ef\u4ee5\u540c\u65f6\u58f0\u660e\u540c\u4e00\u4e2a\u65b9\u6cd5\u7684reactive\u548c\u540c\u6b65\u539f\u578b \u56e0\u4e3a\u8981\u6c42\u65b9\u6cd5\u540d\u4e0e\u5951\u7ea6\u4e2d\u7684operationId\u4e00\u4e00\u5bf9\u5e94\uff0c\u800c\u4ec5\u6709\u8fd4\u56de\u503c\u7c7b\u578b\u4e0d\u540c\uff0c\u5728java\u4e2d\u662f\u975e\u6cd5\u7684\uff0c\u6240\u4ee5\u9700\u8981\u4fee\u6539\u65b9\u6cd5\u540d\uff0c\u5e76\u901a\u8fc7swagger annotation\u6765\u58f0\u660e\u771f\u6b63\u7684operationId interface Hello { String sayHi(String name); @ApiOperation(nickname = sayHi , value = reactive method for sayHi ) CompletableFuture String asyncSayHi(String name); }","title":"reactive"},{"location":"build-consumer/diao-yong-kong-zhi/","text":"","title":"Diao yong kong zhi"},{"location":"build-consumer/fault-injection/","text":"\u573a\u666f\u63cf\u8ff0 \u7528\u6237\u5728consumer\u7aef\u4f7f\u7528\u6545\u969c\u6ce8\u5165\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u53d1\u5f80\u6307\u5b9a\u5fae\u670d\u52a1\u7684\u8bf7\u6c42\u7684\u65f6\u5ef6\u548c\u9519\u8bef\u53ca\u5176\u89e6\u53d1\u6982\u7387\u3002 \u6ce8\u610f\u4e8b\u9879 \u5ef6\u8fdf\u6ce8\u5165\u8bf7\u6c42\u7684\u5ef6\u8fdf\u65f6\u95f4\u7edf\u4e00\u4e3a\u6beb\u79d2\u7ea7\u522b \u914d\u7f6e\u8bf4\u660e \u6545\u969c\u6ce8\u5165\u914d\u7f6e\u5728microservice.yaml\u6587\u4ef6\u4e2d\uff0c\u76f8\u5173\u914d\u7f6e\u9879\u89c1\u4e0b\u8868\u3002\u8981\u5f00\u542f\u670d\u52a1\u6d88\u8d39\u8005\u7aef\u7684\u6545\u969c\u6ce8\u5165\uff0c\u8fd8\u9700\u8981\u5728\u5904\u7406\u94fe\u4e2d\u914d\u7f6e\u6d88\u8d39\u7aef\u6545\u969c\u6ce8\u5165handler\uff0c\u914d\u7f6e\u793a\u4f8b\u5982\u4e0b\uff1a servicecomb: handler: chain: Consumer: default: loadbalance,fault-injection-consumer \u6545\u969c\u6ce8\u5165\u914d\u7f6e\u9879\u8bf4\u660e [scope]\u4ee3\u8868\u6545\u969c\u6ce8\u5165\u7684\u751f\u6548\u8303\u56f4\uff0c\u53ef\u914d\u7f6e\u503c\u5305\u62ec\u5168\u5c40\u914d\u7f6e_global\uff0c\u6216\u6307\u5b9a\u5fae\u670d\u52a1\u7684\u670d\u52a1\u540d[ServiceName]\u3002 [protocol]\u4ee3\u8868\u4f7f\u7528\u7684\u901a\u4fe1\u534f\u8bae\uff0c\u53ef\u914d\u7f6e\u503c\u5305\u62ecrest\u6216highway\u3002 \u914d\u7f6e\u9879 \u9ed8\u8ba4\u503c \u53d6\u503c\u8303\u56f4 \u662f\u5426\u5fc5\u9009 \u542b\u4e49 \u6ce8\u610f servicecomb.governance.Consumer.[scope].policy.fault.protocols.[protocol].delay.fixedDelay \u65e0 (0,9223372036854775807]\uff0c\u957f\u6574\u5f62 \u5426 Consumer\u7aef\u53d1\u9001\u5ef6\u8fdf\u6ce8\u5165\u8bf7\u6c42\u7684\u5ef6\u8fdf\u65f6\u95f4 \u76ee\u524d\u65f6\u95f4\u5355\u4f4d\u662f\u6beb\u79d2 servicecomb.governance.Consumer.[scope].policy.fault.protocols.[protocol].delay.percent 100 (0,100]\uff0c\u6574\u5f62 \u5426 Consumer\u7aef\u53d1\u9001\u5ef6\u8fdf\u6ce8\u5165\u8bf7\u6c42\u7684\u89e6\u53d1\u6982\u7387 servicecomb.governance.Consumer.[ServiceName].schemas.[schema].policy.fault.protocols.[protocol].delay.fixedDelay \u65e0 (0,9223372036854775807]\uff0c\u957f\u6574\u5f62 \u5426 Consumer\u7aef\u53d1\u9001\u5230\u5bf9\u5e94schema\u7684\u5ef6\u8fdf\u6ce8\u5165\u8bf7\u6c42\u7684\u5ef6\u8fdf\u65f6\u95f4 \u652f\u6301schema\u7ea7\u522b\u7684\u914d\u7f6e servicecomb.governance.Consumer.[ServiceName].schemas.[schema].policy.fault.protocols.[protocol].delay.percent 100 (0,100]\uff0c\u6574\u5f62 \u5426 Consumer\u7aef\u53d1\u9001\u5230\u5bf9\u5e94schema\u7684\u5ef6\u8fdf\u6ce8\u5165\u8bf7\u6c42\u7684\u89e6\u53d1\u6982\u7387 \u652f\u6301schema\u7ea7\u522b\u7684\u914d\u7f6e servicecomb.governance.Consumer.[ServiceName].schemas.[schema].operations.[operation].policy.fault.protocols.[protocol].delay.fixedDelay \u65e0 (0,9223372036854775807]\uff0c\u957f\u6574\u5f62 \u5426 Consumer\u7aef\u53d1\u9001\u5230\u5bf9\u5e94operation\u7684\u5ef6\u8fdf\u6ce8\u5165\u8bf7\u6c42\u7684\u5ef6\u8fdf\u65f6\u95f4 \u652f\u6301operation\u7ea7\u522b\u7684\u914d\u7f6e servicecomb.governance.Consumer.[ServiceName].schemas.[schema].operations.[operation].policy.fault.protocols.[protocol].delay.percent 100 (0,100]\uff0c\u6574\u5f62 \u5426 Consumer\u7aef\u53d1\u9001\u5230\u5bf9\u5e94operation\u7684\u5ef6\u8fdf\u6ce8\u5165\u8bf7\u6c42\u7684\u89e6\u53d1\u6982\u7387 \u652f\u6301operation\u7ea7\u522b\u7684\u914d\u7f6e servicecomb.governance.Consumer.[scope].policy.fault.protocols.[protocol].abort.httpStatus \u65e0 (100,999]\uff0c\u6574\u5f62 \u5426 Consumer\u7aef\u53d1\u9001\u9519\u8bef\u6ce8\u5165\u8bf7\u6c42\u7684http\u9519\u8bef\u7801 servicecomb.governance.Consumer.[scope].policy.fault.protocols.[protocol].abort.percent 100 (0,100]\uff0c\u6574\u5f62 \u5426 Consumer\u7aef\u53d1\u9001\u9519\u8bef\u6ce8\u5165\u8bf7\u6c42\u7684\u89e6\u53d1\u6982\u7387 servicecomb.governance.Consumer.[ServiceName].schemas.[schema].policy.fault.protocols.[protocol].abort.httpStatus \u65e0 (100,999]\uff0c\u6574\u5f62 \u5426 Consumer\u7aef\u53d1\u9001\u5230\u5bf9\u5e94schema\u7684\u9519\u8bef\u6ce8\u5165\u8bf7\u6c42\u7684http\u9519\u8bef\u7801 \u652f\u6301schema\u7ea7\u522b\u7684\u914d\u7f6e servicecomb.governance.Consumer.[ServiceName].schemas.[schema].policy.fault.protocols.[protocol].abort.percent 100 (0,100]\uff0c\u6574\u5f62 \u5426 Consumer\u7aef\u53d1\u9001\u5230\u5bf9\u5e94schema\u7684\u9519\u8bef\u6ce8\u5165\u8bf7\u6c42\u7684\u89e6\u53d1\u6982\u7387 \u652f\u6301schema\u7ea7\u522b\u7684\u914d\u7f6e servicecomb.governance.Consumer.[ServiceName].schemas.[schema].operations.[operation].policy.fault.protocols.[protocol].abort.httpStatus \u65e0 (100,999]\uff0c\u6574\u5f62 \u5426 Consumer\u7aef\u53d1\u9001\u5230\u5bf9\u5e94operation\u7684\u9519\u8bef\u6ce8\u5165\u8bf7\u6c42\u7684http\u9519\u8bef\u7801 \u652f\u6301operation\u7ea7\u522b\u7684\u914d\u7f6e servicecomb.governance.Consumer.[ServiceName].schemas.[schema].operations.[operation].policy.fault.protocols.[protocol].abort.percent 100 (0,100]\uff0c\u6574\u5f62 \u5426 Consumer\u7aef\u53d1\u9001\u5230\u5bf9\u5e94operation\u7684\u9519\u8bef\u6ce8\u5165\u8bf7\u6c42\u7684\u89e6\u53d1\u6982\u7387 \u652f\u6301operation\u7ea7\u522b\u7684\u914d\u7f6e \u793a\u4f8b\u4ee3\u7801 servicecomb: governance: Consumer: _global: policy: fault: protocols: rest: delay: fixedDelay: 5000 percent: 10 servicecomb: governance: Consumer: ServerFaultTest: schemas: schema: operations: operation: policy: fault: protocols: rest: abort: httpStatus: 421 percent: 100","title":"Fault injection"},{"location":"build-consumer/fault-injection/#_1","text":"\u7528\u6237\u5728consumer\u7aef\u4f7f\u7528\u6545\u969c\u6ce8\u5165\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u53d1\u5f80\u6307\u5b9a\u5fae\u670d\u52a1\u7684\u8bf7\u6c42\u7684\u65f6\u5ef6\u548c\u9519\u8bef\u53ca\u5176\u89e6\u53d1\u6982\u7387\u3002","title":"\u573a\u666f\u63cf\u8ff0"},{"location":"build-consumer/fault-injection/#_2","text":"\u5ef6\u8fdf\u6ce8\u5165\u8bf7\u6c42\u7684\u5ef6\u8fdf\u65f6\u95f4\u7edf\u4e00\u4e3a\u6beb\u79d2\u7ea7\u522b","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"build-consumer/fault-injection/#_3","text":"\u6545\u969c\u6ce8\u5165\u914d\u7f6e\u5728microservice.yaml\u6587\u4ef6\u4e2d\uff0c\u76f8\u5173\u914d\u7f6e\u9879\u89c1\u4e0b\u8868\u3002\u8981\u5f00\u542f\u670d\u52a1\u6d88\u8d39\u8005\u7aef\u7684\u6545\u969c\u6ce8\u5165\uff0c\u8fd8\u9700\u8981\u5728\u5904\u7406\u94fe\u4e2d\u914d\u7f6e\u6d88\u8d39\u7aef\u6545\u969c\u6ce8\u5165handler\uff0c\u914d\u7f6e\u793a\u4f8b\u5982\u4e0b\uff1a servicecomb: handler: chain: Consumer: default: loadbalance,fault-injection-consumer \u6545\u969c\u6ce8\u5165\u914d\u7f6e\u9879\u8bf4\u660e [scope]\u4ee3\u8868\u6545\u969c\u6ce8\u5165\u7684\u751f\u6548\u8303\u56f4\uff0c\u53ef\u914d\u7f6e\u503c\u5305\u62ec\u5168\u5c40\u914d\u7f6e_global\uff0c\u6216\u6307\u5b9a\u5fae\u670d\u52a1\u7684\u670d\u52a1\u540d[ServiceName]\u3002 [protocol]\u4ee3\u8868\u4f7f\u7528\u7684\u901a\u4fe1\u534f\u8bae\uff0c\u53ef\u914d\u7f6e\u503c\u5305\u62ecrest\u6216highway\u3002 \u914d\u7f6e\u9879 \u9ed8\u8ba4\u503c \u53d6\u503c\u8303\u56f4 \u662f\u5426\u5fc5\u9009 \u542b\u4e49 \u6ce8\u610f servicecomb.governance.Consumer.[scope].policy.fault.protocols.[protocol].delay.fixedDelay \u65e0 (0,9223372036854775807]\uff0c\u957f\u6574\u5f62 \u5426 Consumer\u7aef\u53d1\u9001\u5ef6\u8fdf\u6ce8\u5165\u8bf7\u6c42\u7684\u5ef6\u8fdf\u65f6\u95f4 \u76ee\u524d\u65f6\u95f4\u5355\u4f4d\u662f\u6beb\u79d2 servicecomb.governance.Consumer.[scope].policy.fault.protocols.[protocol].delay.percent 100 (0,100]\uff0c\u6574\u5f62 \u5426 Consumer\u7aef\u53d1\u9001\u5ef6\u8fdf\u6ce8\u5165\u8bf7\u6c42\u7684\u89e6\u53d1\u6982\u7387 servicecomb.governance.Consumer.[ServiceName].schemas.[schema].policy.fault.protocols.[protocol].delay.fixedDelay \u65e0 (0,9223372036854775807]\uff0c\u957f\u6574\u5f62 \u5426 Consumer\u7aef\u53d1\u9001\u5230\u5bf9\u5e94schema\u7684\u5ef6\u8fdf\u6ce8\u5165\u8bf7\u6c42\u7684\u5ef6\u8fdf\u65f6\u95f4 \u652f\u6301schema\u7ea7\u522b\u7684\u914d\u7f6e servicecomb.governance.Consumer.[ServiceName].schemas.[schema].policy.fault.protocols.[protocol].delay.percent 100 (0,100]\uff0c\u6574\u5f62 \u5426 Consumer\u7aef\u53d1\u9001\u5230\u5bf9\u5e94schema\u7684\u5ef6\u8fdf\u6ce8\u5165\u8bf7\u6c42\u7684\u89e6\u53d1\u6982\u7387 \u652f\u6301schema\u7ea7\u522b\u7684\u914d\u7f6e servicecomb.governance.Consumer.[ServiceName].schemas.[schema].operations.[operation].policy.fault.protocols.[protocol].delay.fixedDelay \u65e0 (0,9223372036854775807]\uff0c\u957f\u6574\u5f62 \u5426 Consumer\u7aef\u53d1\u9001\u5230\u5bf9\u5e94operation\u7684\u5ef6\u8fdf\u6ce8\u5165\u8bf7\u6c42\u7684\u5ef6\u8fdf\u65f6\u95f4 \u652f\u6301operation\u7ea7\u522b\u7684\u914d\u7f6e servicecomb.governance.Consumer.[ServiceName].schemas.[schema].operations.[operation].policy.fault.protocols.[protocol].delay.percent 100 (0,100]\uff0c\u6574\u5f62 \u5426 Consumer\u7aef\u53d1\u9001\u5230\u5bf9\u5e94operation\u7684\u5ef6\u8fdf\u6ce8\u5165\u8bf7\u6c42\u7684\u89e6\u53d1\u6982\u7387 \u652f\u6301operation\u7ea7\u522b\u7684\u914d\u7f6e servicecomb.governance.Consumer.[scope].policy.fault.protocols.[protocol].abort.httpStatus \u65e0 (100,999]\uff0c\u6574\u5f62 \u5426 Consumer\u7aef\u53d1\u9001\u9519\u8bef\u6ce8\u5165\u8bf7\u6c42\u7684http\u9519\u8bef\u7801 servicecomb.governance.Consumer.[scope].policy.fault.protocols.[protocol].abort.percent 100 (0,100]\uff0c\u6574\u5f62 \u5426 Consumer\u7aef\u53d1\u9001\u9519\u8bef\u6ce8\u5165\u8bf7\u6c42\u7684\u89e6\u53d1\u6982\u7387 servicecomb.governance.Consumer.[ServiceName].schemas.[schema].policy.fault.protocols.[protocol].abort.httpStatus \u65e0 (100,999]\uff0c\u6574\u5f62 \u5426 Consumer\u7aef\u53d1\u9001\u5230\u5bf9\u5e94schema\u7684\u9519\u8bef\u6ce8\u5165\u8bf7\u6c42\u7684http\u9519\u8bef\u7801 \u652f\u6301schema\u7ea7\u522b\u7684\u914d\u7f6e servicecomb.governance.Consumer.[ServiceName].schemas.[schema].policy.fault.protocols.[protocol].abort.percent 100 (0,100]\uff0c\u6574\u5f62 \u5426 Consumer\u7aef\u53d1\u9001\u5230\u5bf9\u5e94schema\u7684\u9519\u8bef\u6ce8\u5165\u8bf7\u6c42\u7684\u89e6\u53d1\u6982\u7387 \u652f\u6301schema\u7ea7\u522b\u7684\u914d\u7f6e servicecomb.governance.Consumer.[ServiceName].schemas.[schema].operations.[operation].policy.fault.protocols.[protocol].abort.httpStatus \u65e0 (100,999]\uff0c\u6574\u5f62 \u5426 Consumer\u7aef\u53d1\u9001\u5230\u5bf9\u5e94operation\u7684\u9519\u8bef\u6ce8\u5165\u8bf7\u6c42\u7684http\u9519\u8bef\u7801 \u652f\u6301operation\u7ea7\u522b\u7684\u914d\u7f6e servicecomb.governance.Consumer.[ServiceName].schemas.[schema].operations.[operation].policy.fault.protocols.[protocol].abort.percent 100 (0,100]\uff0c\u6574\u5f62 \u5426 Consumer\u7aef\u53d1\u9001\u5230\u5bf9\u5e94operation\u7684\u9519\u8bef\u6ce8\u5165\u8bf7\u6c42\u7684\u89e6\u53d1\u6982\u7387 \u652f\u6301operation\u7ea7\u522b\u7684\u914d\u7f6e","title":"\u914d\u7f6e\u8bf4\u660e"},{"location":"build-consumer/fault-injection/#_4","text":"servicecomb: governance: Consumer: _global: policy: fault: protocols: rest: delay: fixedDelay: 5000 percent: 10 servicecomb: governance: Consumer: ServerFaultTest: schemas: schema: operations: operation: policy: fault: protocols: rest: abort: httpStatus: 421 percent: 100","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"build-consumer/flow-control/","text":"\u573a\u666f\u63cf\u8ff0 \u7528\u6237\u5728consumer\u7aef\u4f7f\u7528\u9650\u6d41\u7b56\u7565\uff0c\u53ef\u4ee5\u9650\u5236\u53d1\u5f80\u6307\u5b9a\u5fae\u670d\u52a1\u7684\u8bf7\u6c42\u7684\u9891\u7387\u3002 \u6ce8\u610f\u4e8b\u9879 \u53c2\u80033.7.2-\u9650\u6d41\u7b56\u7565\u3002 \u914d\u7f6e\u8bf4\u660e \u9650\u6d41\u7b56\u7565\u914d\u7f6e\u5728microservice.yaml\u6587\u4ef6\u4e2d\uff0c\u76f8\u5173\u914d\u7f6e\u9879\u89c1\u4e0b\u8868\u3002\u8981\u5f00\u542f\u670d\u52a1\u6d88\u8d39\u8005\u7aef\u7684\u9650\u6d41\u7b56\u7565\uff0c\u8fd8\u9700\u8981\u5728\u5904\u7406\u94fe\u4e2d\u914d\u7f6e\u6d88\u8d39\u7aef\u9650\u6d41handler\uff0c\u914d\u7f6e\u793a\u4f8b\u5982\u4e0b\uff1a servicecomb: handler: chain: Consumer: default: qps-flowcontrol-consumer QPS\u6d41\u63a7\u914d\u7f6e\u9879\u8bf4\u660e \u914d\u7f6e\u9879 \u9ed8\u8ba4\u503c \u53d6\u503c\u8303\u56f4 \u662f\u5426\u5fc5\u9009 \u542b\u4e49 \u6ce8\u610f servicecomb.flowcontrol.Consumer.qps.enabled true Boolean \u5426 \u662f\u5426\u542f\u7528Consumer\u6d41\u63a7 - servicecomb.flowcontrol.Consumer.qps.limit.[ServiceName].[Schema].[operation] 2147483647 (max int) (0,2147483647]\uff0c\u6574\u5f62 \u5426 \u6bcf\u79d2\u949f\u5141\u8bb8\u7684\u8bf7\u6c42\u6570 \u652f\u6301microservice\u3001schema\u3001operation\u4e09\u4e2a\u7ea7\u522b\u7684\u914d\u7f6e","title":"Flow control"},{"location":"build-consumer/flow-control/#_1","text":"\u7528\u6237\u5728consumer\u7aef\u4f7f\u7528\u9650\u6d41\u7b56\u7565\uff0c\u53ef\u4ee5\u9650\u5236\u53d1\u5f80\u6307\u5b9a\u5fae\u670d\u52a1\u7684\u8bf7\u6c42\u7684\u9891\u7387\u3002","title":"\u573a\u666f\u63cf\u8ff0"},{"location":"build-consumer/flow-control/#_2","text":"\u53c2\u80033.7.2-\u9650\u6d41\u7b56\u7565\u3002","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"build-consumer/flow-control/#_3","text":"\u9650\u6d41\u7b56\u7565\u914d\u7f6e\u5728microservice.yaml\u6587\u4ef6\u4e2d\uff0c\u76f8\u5173\u914d\u7f6e\u9879\u89c1\u4e0b\u8868\u3002\u8981\u5f00\u542f\u670d\u52a1\u6d88\u8d39\u8005\u7aef\u7684\u9650\u6d41\u7b56\u7565\uff0c\u8fd8\u9700\u8981\u5728\u5904\u7406\u94fe\u4e2d\u914d\u7f6e\u6d88\u8d39\u7aef\u9650\u6d41handler\uff0c\u914d\u7f6e\u793a\u4f8b\u5982\u4e0b\uff1a servicecomb: handler: chain: Consumer: default: qps-flowcontrol-consumer QPS\u6d41\u63a7\u914d\u7f6e\u9879\u8bf4\u660e \u914d\u7f6e\u9879 \u9ed8\u8ba4\u503c \u53d6\u503c\u8303\u56f4 \u662f\u5426\u5fc5\u9009 \u542b\u4e49 \u6ce8\u610f servicecomb.flowcontrol.Consumer.qps.enabled true Boolean \u5426 \u662f\u5426\u542f\u7528Consumer\u6d41\u63a7 - servicecomb.flowcontrol.Consumer.qps.limit.[ServiceName].[Schema].[operation] 2147483647 (max int) (0,2147483647]\uff0c\u6574\u5f62 \u5426 \u6bcf\u79d2\u949f\u5141\u8bb8\u7684\u8bf7\u6c42\u6570 \u652f\u6301microservice\u3001schema\u3001operation\u4e09\u4e2a\u7ea7\u522b\u7684\u914d\u7f6e","title":"\u914d\u7f6e\u8bf4\u660e"},{"location":"build-consumer/invoke-control/","text":"","title":"Invoke control"},{"location":"build-consumer/using-AsyncRestTemplate/","text":"\u4f7f\u7528AsynRestTemplate\u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005 \u6982\u5ff5\u9610\u8ff0 AsyncRestTemplate \u5f00\u53d1\u65b9\u5f0f\u5141\u8bb8\u7528\u6237\u5f02\u6b65\u7684\u8fdb\u884c\u670d\u52a1\u8c03\u7528\u3002\u5177\u4f53\u7684\u4e1a\u52a1\u6d41\u7a0b\u548c RestTemplate \u7c7b\u4f3c\uff0c\u53ea\u662f\u8fd9\u91cc\u4ee5\u5f02\u6b65\u7684\u5f62\u5f0f\u8fdb\u884c\u670d\u52a1\u7684\u8c03\u7528\u3002 \u793a\u4f8b\u4ee3\u7801 AsyncRestTemplate \u5b9e\u4f8b\u901a\u8fc7 new CseAsyncRestTemplate\uff08\uff09\u6765\u521b\u5efa\u548c\u83b7\u53d6\uff0c\u518d\u4f7f\u7528\u8be5\u5b9e\u4f8b\u901a\u8fc7\u81ea\u5b9a\u4e49\u7684 URL \u8fdb\u884c\u670d\u52a1\u8c03\u7528\u3002 Spring MVC \u5ba2\u6237\u7aef\u4ee3\u7801\u793a\u4f8b @Component public class SpringmvcConsumerMain { private static final Logger LOG = LoggerFactory.getLogger(SpringmvcConsumerMain.class); public static void main(String[] args) throws Exception { init(); Person person = new Person(); person.setName( ServiceComb/Java Chassis ); //AsyncRestTemplate Consumer CseAsyncRestTemplate cseAsyncRestTemplate = new CseAsyncRestTemplate(); ListenableFuture ResponseEntity String responseEntityListenableFuture = cseAsyncRestTemplate .postForEntity( cse://springmvc/springmvchello/sayhi?name=Java Chassis , null, String.class); ResponseEntity String responseEntity = responseEntityListenableFuture.get(); System.out.println( AsyncRestTemplate Consumer sayHi services: + responseEntity.getBody()); HttpEntity Person entity = new HttpEntity (person); ListenableFuture ResponseEntity String listenableFuture = cseAsyncRestTemplate .exchange( cse://springmvc/springmvchello/sayhello , HttpMethod.POST, entity, String.class); // ResponseEntity String responseEntity1 = listenableFuture.get(); // System.out.println( AsyncRestTemplate Consumer sayHello services: + responseEntity1.getBody()); //\u8bbe\u7f6e\u56de\u8c03\u51fd\u6570 listenableFuture.addCallback( new ListenableFutureCallback ResponseEntity String () { @Override public void onFailure(Throwable ex) { LOG.error( AsyncResTemplate Consumer catched exception when sayHello, , ex); } @Override public void onSuccess(ResponseEntity String result) { System.out.println( AsyncRestTemplate Consumer sayHello services: + result.getBody()); } }); } public static void init() throws Exception { Log4jUtils.init(); BeanUtils.init(); } } \u8bf4\u660e \uff1a URL \u7684\u683c\u5f0f\u548c RestTemplate \u4e00\u6837\uff0c\u5177\u4f53\u53ef\u4ee5\u53c2\u8003 restTemplate \u8fd9\u91cc\u7528\u81ea\u5b9a\u4e49\u7684 ListenableFuture \u7c7b\u6765\u4f5c\u4e3a\u5360\u4f4d\u7b26\uff0c\u83b7\u53d6\u8fdc\u7a0b\u8c03\u7528\u7ed3\u675f\u540e\u53ef\u80fd\u83b7\u53d6\u7684\u7ed3\u679c\u3002\u540c\u65f6\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u56de\u8c03\u51fd\u6570\uff0c\u5bf9\u53ef\u80fd\u8fd4\u56de\u7684\u7ed3\u679c\u8fdb\u884c\u5206\u6279\u5904\u7406\u3002","title":"\u4f7f\u7528AsynRestTemplate\u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005"},{"location":"build-consumer/using-AsyncRestTemplate/#asynresttemplate","text":"","title":"\u4f7f\u7528AsynRestTemplate\u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005"},{"location":"build-consumer/using-AsyncRestTemplate/#_1","text":"AsyncRestTemplate \u5f00\u53d1\u65b9\u5f0f\u5141\u8bb8\u7528\u6237\u5f02\u6b65\u7684\u8fdb\u884c\u670d\u52a1\u8c03\u7528\u3002\u5177\u4f53\u7684\u4e1a\u52a1\u6d41\u7a0b\u548c RestTemplate \u7c7b\u4f3c\uff0c\u53ea\u662f\u8fd9\u91cc\u4ee5\u5f02\u6b65\u7684\u5f62\u5f0f\u8fdb\u884c\u670d\u52a1\u7684\u8c03\u7528\u3002","title":"\u6982\u5ff5\u9610\u8ff0"},{"location":"build-consumer/using-AsyncRestTemplate/#_2","text":"AsyncRestTemplate \u5b9e\u4f8b\u901a\u8fc7 new CseAsyncRestTemplate\uff08\uff09\u6765\u521b\u5efa\u548c\u83b7\u53d6\uff0c\u518d\u4f7f\u7528\u8be5\u5b9e\u4f8b\u901a\u8fc7\u81ea\u5b9a\u4e49\u7684 URL \u8fdb\u884c\u670d\u52a1\u8c03\u7528\u3002 Spring MVC \u5ba2\u6237\u7aef\u4ee3\u7801\u793a\u4f8b @Component public class SpringmvcConsumerMain { private static final Logger LOG = LoggerFactory.getLogger(SpringmvcConsumerMain.class); public static void main(String[] args) throws Exception { init(); Person person = new Person(); person.setName( ServiceComb/Java Chassis ); //AsyncRestTemplate Consumer CseAsyncRestTemplate cseAsyncRestTemplate = new CseAsyncRestTemplate(); ListenableFuture ResponseEntity String responseEntityListenableFuture = cseAsyncRestTemplate .postForEntity( cse://springmvc/springmvchello/sayhi?name=Java Chassis , null, String.class); ResponseEntity String responseEntity = responseEntityListenableFuture.get(); System.out.println( AsyncRestTemplate Consumer sayHi services: + responseEntity.getBody()); HttpEntity Person entity = new HttpEntity (person); ListenableFuture ResponseEntity String listenableFuture = cseAsyncRestTemplate .exchange( cse://springmvc/springmvchello/sayhello , HttpMethod.POST, entity, String.class); // ResponseEntity String responseEntity1 = listenableFuture.get(); // System.out.println( AsyncRestTemplate Consumer sayHello services: + responseEntity1.getBody()); //\u8bbe\u7f6e\u56de\u8c03\u51fd\u6570 listenableFuture.addCallback( new ListenableFutureCallback ResponseEntity String () { @Override public void onFailure(Throwable ex) { LOG.error( AsyncResTemplate Consumer catched exception when sayHello, , ex); } @Override public void onSuccess(ResponseEntity String result) { System.out.println( AsyncRestTemplate Consumer sayHello services: + result.getBody()); } }); } public static void init() throws Exception { Log4jUtils.init(); BeanUtils.init(); } } \u8bf4\u660e \uff1a URL \u7684\u683c\u5f0f\u548c RestTemplate \u4e00\u6837\uff0c\u5177\u4f53\u53ef\u4ee5\u53c2\u8003 restTemplate \u8fd9\u91cc\u7528\u81ea\u5b9a\u4e49\u7684 ListenableFuture \u7c7b\u6765\u4f5c\u4e3a\u5360\u4f4d\u7b26\uff0c\u83b7\u53d6\u8fdc\u7a0b\u8c03\u7528\u7ed3\u675f\u540e\u53ef\u80fd\u83b7\u53d6\u7684\u7ed3\u679c\u3002\u540c\u65f6\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u56de\u8c03\u51fd\u6570\uff0c\u5bf9\u53ef\u80fd\u8fd4\u56de\u7684\u7ed3\u679c\u8fdb\u884c\u5206\u6279\u5904\u7406\u3002","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"build-consumer/using-resttemplate/","text":"\u4f7f\u7528RestTemplate\u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005 \u6982\u5ff5\u9610\u8ff0 RestTemplate\u662fSpring\u63d0\u4f9b\u7684RESTful\u8bbf\u95ee\u63a5\u53e3\uff0cServiceComb\u63d0\u4f9b\u8be5\u63a5\u53e3\u7684\u5b9e\u73b0\u7c7b\u7528\u4e8e\u670d\u52a1\u7684\u8c03\u7528\u3002 \u573a\u666f\u63cf\u8ff0 \u7528\u6237\u4f7f\u7528ServiceComb\u63d0\u4f9b\u7684RestTemplate\u5b9e\u4f8b\uff0c\u53ef\u4ee5\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684URL\u8fdb\u884c\u670d\u52a1\u8c03\u7528\uff0c\u800c\u4e0d\u7528\u5173\u5fc3\u670d\u52a1\u7684\u5177\u4f53\u5730\u5740\u3002 \u793a\u4f8b\u4ee3\u7801 RestTemplate\u5b9e\u4f8b\u901a\u8fc7\u8c03\u7528 RestTemplateBuilder.create() \u65b9\u6cd5\u83b7\u53d6\uff0c\u518d\u4f7f\u7528\u8be5\u5b9e\u4f8b\u901a\u8fc7\u81ea\u5b9a\u4e49\u7684URL\u8fdb\u884c\u670d\u52a1\u8c03\u7528\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a Spring MVC \u5ba2\u6237\u7aef\u793a\u4f8b\u4ee3\u7801\uff1a @Component public class SpringmvcConsumerMain { private static RestTemplate restTemplate = RestTemplateBuilder.create(); public static void main(String[] args) throws Exception { init(); Person person = new Person(); person.setName( ServiceComb/Java Chassis ); String sayHiResult = restTemplate .postForObject( cse://springmvc/springmvchello/sayhi?name=Java Chassis , null, String.class); String sayHelloResult = restTemplate .postForObject( cse://springmvc/springmvchello/sayhello , person, String.class); System.out.println( RestTemplate consumer sayhi services: + sayHiResult); System.out.println( RestTemplate consumer sayhello services: + sayHelloResult); } public static void init() throws Exception { Log4jUtils.init(); BeanUtils.init(); } } JAX RS \u5ba2\u6237\u7aef\u793a\u4f8b\u4ee3\u7801\uff1a @Component public class JaxrsConsumerMain { public static void main(String[] args) throws Exception { init(); //\u5176\u4ed6\u90fd\u7c7b\u4f3cspring MVC\u793a\u4f8b\u7684\u5ba2\u6237\u7aef\u4ee3\u7801\uff0c\u6ce8\u610f\u5982\u679c\u670d\u52a1\u7aef\u53ea\u63a5\u6536 GET \u8bf7\u6c42\uff0c\u8981\u4f7f\u7528\u65b9\u6cd5 getForObject() RestTemplate restTemplate = RestTemplateBuilder.create(); String result = restTemplate.getForObject( cse://jaxrs/jaxrshello/saybye , String.class); } public static void init() throws Exception { Log4jUtils.init(); BeanUtils.init(); } } \u8bf4\u660e\uff1a URL\u683c\u5f0f\u4e3a\uff1a cse://microserviceName/path?querystring \u3002\u4ee5 \u7528SpringMVC\u5f00\u53d1\u5fae\u670d\u52a1 \u4e2d\u5b9a\u4e49\u7684\u670d\u52a1\u63d0\u4f9b\u8005\u4e3a\u4f8b\uff0c\u5176\u5fae\u670d\u52a1\u540d\u79f0\u662f springmvc \uff0cbasePath\u662f /springmvchello \uff0c\u90a3\u4e48URL\u4e2d\u7684microserviceName= springmvc \uff0c\u8bf7\u6c42sayhi\u65f6\u7684path= springmvchello/sayhi \uff0c\u6240\u4ee5\u793a\u4f8b\u4ee3\u7801\u4e2d\u8bf7\u6c42sayhi\u7684URL\u662f cse://springmvc/springmvchello/sayhi?name=Java Chassis \u3002\u5177\u4f53\u4ee3\u7801\u793a\u4f8b\u5982\u4e0b \uff1a @RestSchema(schemaId = springmvcHello ) @RequestMapping(path = /springmvchello , produces = MediaType.APPLICATION_JSON) //\u8fd9\u91cc path = \u201c/springmvchello\u201d \u4e2d\u7684 springmvchello \u5c31\u662f \u4e0a\u8ff0\u7684basePath public class SpringmvcHelloImpl implements Hello { @Override @RequestMapping(path = /sayhi , method = RequestMethod.POST) public String sayHi(@RequestParam(name = name ) String name) { return Hello + name; } @Override @RequestMapping(path = /sayhello , method = RequestMethod.POST) public String sayHello(@RequestBody Person person) { return Hello person + person.getName(); } } \u4e0b\u8ff0\u4ee3\u7801\u662f\u793a\u4f8b\u9879\u76ee SpringMVC \u7684 springmvc-provider \u6a21\u5757 \u4e2d resources \u76ee\u5f55\u4e0b microservice.yaml APPLICATION_ID: springmvc-sample service_description: name: springmvc # \u8fd9\u91cc\u5c31\u662f\u5b9a\u4e49\u7684\u5fae\u670d\u52a1\u540d\u79f0 version: 0.0.2 servicecomb: service: registry: address: http://127.0.0.1:30100 rest: address: 0.0.0.0:8080 highway: address: 0.0.0.0:7070 handler: chain: Provider: default: bizkeeper-provider cse: service: registry: address: http://127.0.0.1:30100 #service center address \u4f7f\u7528\u4e0a\u8ff0\u8fd9\u79cdURL\u683c\u5f0f\uff0cServiceComb\u6846\u67b6\u4f1a\u5728\u5185\u90e8\u8fdb\u884c\u670d\u52a1\u53d1\u73b0\u3001\u7194\u65ad\u5bb9\u9519\u7b49\u5904\u7406\u5e76\u6700\u7ec8\u5c06\u8bf7\u6c42\u53d1\u9001\u5230\u670d\u52a1\u63d0\u4f9b\u8005\u3002","title":"\u4f7f\u7528RestTemplate\u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005"},{"location":"build-consumer/using-resttemplate/#resttemplate","text":"","title":"\u4f7f\u7528RestTemplate\u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005"},{"location":"build-consumer/using-resttemplate/#_1","text":"RestTemplate\u662fSpring\u63d0\u4f9b\u7684RESTful\u8bbf\u95ee\u63a5\u53e3\uff0cServiceComb\u63d0\u4f9b\u8be5\u63a5\u53e3\u7684\u5b9e\u73b0\u7c7b\u7528\u4e8e\u670d\u52a1\u7684\u8c03\u7528\u3002","title":"\u6982\u5ff5\u9610\u8ff0"},{"location":"build-consumer/using-resttemplate/#_2","text":"\u7528\u6237\u4f7f\u7528ServiceComb\u63d0\u4f9b\u7684RestTemplate\u5b9e\u4f8b\uff0c\u53ef\u4ee5\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684URL\u8fdb\u884c\u670d\u52a1\u8c03\u7528\uff0c\u800c\u4e0d\u7528\u5173\u5fc3\u670d\u52a1\u7684\u5177\u4f53\u5730\u5740\u3002","title":"\u573a\u666f\u63cf\u8ff0"},{"location":"build-consumer/using-resttemplate/#_3","text":"RestTemplate\u5b9e\u4f8b\u901a\u8fc7\u8c03\u7528 RestTemplateBuilder.create() \u65b9\u6cd5\u83b7\u53d6\uff0c\u518d\u4f7f\u7528\u8be5\u5b9e\u4f8b\u901a\u8fc7\u81ea\u5b9a\u4e49\u7684URL\u8fdb\u884c\u670d\u52a1\u8c03\u7528\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a Spring MVC \u5ba2\u6237\u7aef\u793a\u4f8b\u4ee3\u7801\uff1a @Component public class SpringmvcConsumerMain { private static RestTemplate restTemplate = RestTemplateBuilder.create(); public static void main(String[] args) throws Exception { init(); Person person = new Person(); person.setName( ServiceComb/Java Chassis ); String sayHiResult = restTemplate .postForObject( cse://springmvc/springmvchello/sayhi?name=Java Chassis , null, String.class); String sayHelloResult = restTemplate .postForObject( cse://springmvc/springmvchello/sayhello , person, String.class); System.out.println( RestTemplate consumer sayhi services: + sayHiResult); System.out.println( RestTemplate consumer sayhello services: + sayHelloResult); } public static void init() throws Exception { Log4jUtils.init(); BeanUtils.init(); } } JAX RS \u5ba2\u6237\u7aef\u793a\u4f8b\u4ee3\u7801\uff1a @Component public class JaxrsConsumerMain { public static void main(String[] args) throws Exception { init(); //\u5176\u4ed6\u90fd\u7c7b\u4f3cspring MVC\u793a\u4f8b\u7684\u5ba2\u6237\u7aef\u4ee3\u7801\uff0c\u6ce8\u610f\u5982\u679c\u670d\u52a1\u7aef\u53ea\u63a5\u6536 GET \u8bf7\u6c42\uff0c\u8981\u4f7f\u7528\u65b9\u6cd5 getForObject() RestTemplate restTemplate = RestTemplateBuilder.create(); String result = restTemplate.getForObject( cse://jaxrs/jaxrshello/saybye , String.class); } public static void init() throws Exception { Log4jUtils.init(); BeanUtils.init(); } } \u8bf4\u660e\uff1a URL\u683c\u5f0f\u4e3a\uff1a cse://microserviceName/path?querystring \u3002\u4ee5 \u7528SpringMVC\u5f00\u53d1\u5fae\u670d\u52a1 \u4e2d\u5b9a\u4e49\u7684\u670d\u52a1\u63d0\u4f9b\u8005\u4e3a\u4f8b\uff0c\u5176\u5fae\u670d\u52a1\u540d\u79f0\u662f springmvc \uff0cbasePath\u662f /springmvchello \uff0c\u90a3\u4e48URL\u4e2d\u7684microserviceName= springmvc \uff0c\u8bf7\u6c42sayhi\u65f6\u7684path= springmvchello/sayhi \uff0c\u6240\u4ee5\u793a\u4f8b\u4ee3\u7801\u4e2d\u8bf7\u6c42sayhi\u7684URL\u662f cse://springmvc/springmvchello/sayhi?name=Java Chassis \u3002\u5177\u4f53\u4ee3\u7801\u793a\u4f8b\u5982\u4e0b \uff1a @RestSchema(schemaId = springmvcHello ) @RequestMapping(path = /springmvchello , produces = MediaType.APPLICATION_JSON) //\u8fd9\u91cc path = \u201c/springmvchello\u201d \u4e2d\u7684 springmvchello \u5c31\u662f \u4e0a\u8ff0\u7684basePath public class SpringmvcHelloImpl implements Hello { @Override @RequestMapping(path = /sayhi , method = RequestMethod.POST) public String sayHi(@RequestParam(name = name ) String name) { return Hello + name; } @Override @RequestMapping(path = /sayhello , method = RequestMethod.POST) public String sayHello(@RequestBody Person person) { return Hello person + person.getName(); } } \u4e0b\u8ff0\u4ee3\u7801\u662f\u793a\u4f8b\u9879\u76ee SpringMVC \u7684 springmvc-provider \u6a21\u5757 \u4e2d resources \u76ee\u5f55\u4e0b microservice.yaml APPLICATION_ID: springmvc-sample service_description: name: springmvc # \u8fd9\u91cc\u5c31\u662f\u5b9a\u4e49\u7684\u5fae\u670d\u52a1\u540d\u79f0 version: 0.0.2 servicecomb: service: registry: address: http://127.0.0.1:30100 rest: address: 0.0.0.0:8080 highway: address: 0.0.0.0:7070 handler: chain: Provider: default: bizkeeper-provider cse: service: registry: address: http://127.0.0.1:30100 #service center address \u4f7f\u7528\u4e0a\u8ff0\u8fd9\u79cdURL\u683c\u5f0f\uff0cServiceComb\u6846\u67b6\u4f1a\u5728\u5185\u90e8\u8fdb\u884c\u670d\u52a1\u53d1\u73b0\u3001\u7194\u65ad\u5bb9\u9519\u7b49\u5904\u7406\u5e76\u6700\u7ec8\u5c06\u8bf7\u6c42\u53d1\u9001\u5230\u670d\u52a1\u63d0\u4f9b\u8005\u3002","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"build-consumer/with-contract/","text":"\u4f7f\u7528\u670d\u52a1\u5951\u7ea6 \u573a\u666f\u63cf\u8ff0 \u5f53\u670d\u52a1\u6d88\u8d39\u8005\u8c03\u7528\u670d\u52a1\u63d0\u4f9b\u8005\u7684\u670d\u52a1\u65f6\uff0c\u9700\u8981\u83b7\u53d6\u670d\u52a1\u5951\u7ea6\u3002\u6d88\u8d39\u8005\u6709\u4e24\u79cd\u65b9\u5f0f\u83b7\u53d6\u63d0\u4f9b\u8005\u7684\u670d\u52a1\u5951\u7ea6\uff0c\u4e00\u79cd\u662f\u4ece\u670d\u52a1\u7684\u63d0\u4f9b\u65b9\u79bb\u7ebf\u83b7\u53d6\u5951\u7ea6\u6587\u4ef6\uff0c\u624b\u5de5\u914d\u7f6e\u5230\u9879\u76ee\u4e2d\uff1b\u53e6\u4e00\u79cd\u662f\u4ece\u670d\u52a1\u4e2d\u5fc3\u81ea\u52a8\u4e0b\u8f7d\u5951\u7ea6\u3002 \u914d\u7f6e\u8bf4\u660e \u8bf4\u660e\uff1a\u670d\u52a1\u5951\u7ea6\u7684\u83b7\u53d6\u65b9\u5f0f\u4e0e\u670d\u52a1\u6d88\u8d39\u8005\u7684\u5f00\u53d1\u65b9\u5f0f\u662f\u65e0\u5173\u7684\uff0c\u7528\u6237\u53ef\u4ee5\u4efb\u610f\u7ec4\u5408\u4f7f\u7528\u3002 \u914d\u7f6e\u4f9d\u8d56\u670d\u52a1 \u670d\u52a1\u6d88\u8d39\u8005\u9700\u8981\u5728microservice.yaml\u6587\u4ef6\u4e2d\u914d\u7f6e\u4f9d\u8d56\u7684provider\uff0c\u793a\u4f8b\u914d\u7f6e\u5982\u4e0b\uff1a servicecomb: # other configurations omitted references: springmvc: version-rule: 0.0.1 version-rule\u662f\u7248\u672c\u5339\u914d\u89c4\u5219\uff0c\u6709\u56db\u79cd\u683c\u5f0f\uff1a \u7cbe\u786e\u7248\u672c\u5339\u914d\uff1a\u4f8b\u5982 version-rule: 0.0.1 \uff0c\u8868\u793a\u53ea\u5339\u914d\u7248\u672c\u53f7\u4e3a0.0.1\u7684\u670d\u52a1\u63d0\u4f9b\u8005 \u540e\u7eed\u7248\u672c\u5339\u914d\uff1a\u4f8b\u5982 version-rule: 1.0.0+ \uff0c\u8868\u793a\u5339\u914d\u7248\u672c\u53f7\u5927\u4e8e\u6216\u7b49\u4e8e1.0.0\u7684\u670d\u52a1\u63d0\u4f9b\u8005 \u6700\u65b0\u7248\u672c\uff1a version-rule: latest \uff0c\u8868\u793a\u5339\u914d\u6700\u65b0\u7248\u672c\u7684\u670d\u52a1\u63d0\u4f9b\u8005 \u7248\u672c\u8303\u56f4\uff1a\u4f8b\u5982 1.0.0-2.0.2 \uff0c\u8868\u793a\u5339\u914d\u7248\u672c\u53f7\u57281.0.0\u81f32.0.2\u4e4b\u95f4\u7684\u670d\u52a1\u63d0\u4f9b\u8005\uff0c\u5305\u542b1.0.0\u548c2.0.2 \u6b64\u914d\u7f6e\u9879\u9ed8\u8ba4\u4e3a latest \u624b\u5de5\u914d\u7f6e\u670d\u52a1\u5951\u7ea6 \u670d\u52a1\u6d88\u8d39\u8005\u7684\u5f00\u53d1\u8005\u5728\u7ebf\u4e0b\u62ff\u5230\u670d\u52a1\u63d0\u4f9b\u8005\u7684\u5951\u7ea6\uff0c\u914d\u7f6e\u5230\u6d88\u8d39\u8005\u5de5\u7a0b\u7684\u7279\u5b9a\u76ee\u5f55\u4e0b\u3002\u670d\u52a1\u5951\u7ea6\u5728\u9879\u76ee\u4e2d\u7684\u5b58\u653e\u76ee\u5f55\u4e0e \u5b9a\u4e49\u670d\u52a1\u5951\u7ea6 \u7684\u914d\u7f6e\u8bf4\u660e\u90e8\u5206\u76f8\u540c\u3002 microservice\u76ee\u5f55\u4e0b\u7684\u6bcf\u4e00\u4e2a\u76ee\u5f55\u4ee3\u8868\u4e00\u4e2a\u5fae\u670d\u52a1\uff0c\u5fae\u670d\u52a1\u76ee\u5f55\u4e0b\u7684\u6bcf\u4e00\u4e2ayaml\u6587\u4ef6\u4ee3\u8868\u4e00\u4e2aschema\u5951\u7ea6\uff0c\u6587\u4ef6\u540d\u5c31\u662fschemaId\u3002applications\u76ee\u5f55\u4e0b\u5b58\u653e\u9700\u8981\u6307\u660eappId\u7684\u670d\u52a1\u5951\u7ea6\uff0c\u7528\u4e8e\u8de8app\u8c03\u7528\u7b49\u573a\u666f\u3002\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\u6240\u793a\uff1a resources - microservices - serviceName # \u5fae\u670d\u52a1\u540d - schemaId.yaml # schema\u63a5\u53e3\u7684\u5951\u7ea6 - applications - appId # \u5e94\u7528ID - serviceName # \u5fae\u670d\u52a1\u540d - schemaId.yaml # schema\u63a5\u53e3\u7684\u5951\u7ea6 \u4ece\u670d\u52a1\u4e2d\u5fc3\u81ea\u52a8\u4e0b\u8f7d\u5951\u7ea6 \u670d\u52a1\u6d88\u8d39\u8005\u4e5f\u53ef\u4ee5\u4e0d\u7528\u663e\u5f0f\u5730\u5c06\u5951\u7ea6\u5b58\u653e\u5728\u9879\u76ee\u76ee\u5f55\u4e2d\uff0c\u5f53\u7a0b\u5e8f\u542f\u52a8\u65f6\uff0cServiceComb\u6846\u67b6\u4f1a\u81ea\u52a8\u6839\u636emicroservice.yaml\u6587\u4ef6\u4e2d\u914d\u7f6e\u7684\u670d\u52a1\u63d0\u4f9b\u8005\u7684\u5fae\u670d\u52a1\u540d\u79f0\u548c\u7248\u672c\u53f7\uff0c\u4ece\u670d\u52a1\u4e2d\u5fc3\u81ea\u52a8\u4e0b\u8f7d\u5951\u7ea6\u4fe1\u606f\u3002","title":"\u4f7f\u7528\u670d\u52a1\u5951\u7ea6"},{"location":"build-consumer/with-contract/#_1","text":"","title":"\u4f7f\u7528\u670d\u52a1\u5951\u7ea6"},{"location":"build-consumer/with-contract/#_2","text":"\u5f53\u670d\u52a1\u6d88\u8d39\u8005\u8c03\u7528\u670d\u52a1\u63d0\u4f9b\u8005\u7684\u670d\u52a1\u65f6\uff0c\u9700\u8981\u83b7\u53d6\u670d\u52a1\u5951\u7ea6\u3002\u6d88\u8d39\u8005\u6709\u4e24\u79cd\u65b9\u5f0f\u83b7\u53d6\u63d0\u4f9b\u8005\u7684\u670d\u52a1\u5951\u7ea6\uff0c\u4e00\u79cd\u662f\u4ece\u670d\u52a1\u7684\u63d0\u4f9b\u65b9\u79bb\u7ebf\u83b7\u53d6\u5951\u7ea6\u6587\u4ef6\uff0c\u624b\u5de5\u914d\u7f6e\u5230\u9879\u76ee\u4e2d\uff1b\u53e6\u4e00\u79cd\u662f\u4ece\u670d\u52a1\u4e2d\u5fc3\u81ea\u52a8\u4e0b\u8f7d\u5951\u7ea6\u3002","title":"\u573a\u666f\u63cf\u8ff0"},{"location":"build-consumer/with-contract/#_3","text":"\u8bf4\u660e\uff1a\u670d\u52a1\u5951\u7ea6\u7684\u83b7\u53d6\u65b9\u5f0f\u4e0e\u670d\u52a1\u6d88\u8d39\u8005\u7684\u5f00\u53d1\u65b9\u5f0f\u662f\u65e0\u5173\u7684\uff0c\u7528\u6237\u53ef\u4ee5\u4efb\u610f\u7ec4\u5408\u4f7f\u7528\u3002","title":"\u914d\u7f6e\u8bf4\u660e"},{"location":"build-consumer/with-contract/#_4","text":"\u670d\u52a1\u6d88\u8d39\u8005\u9700\u8981\u5728microservice.yaml\u6587\u4ef6\u4e2d\u914d\u7f6e\u4f9d\u8d56\u7684provider\uff0c\u793a\u4f8b\u914d\u7f6e\u5982\u4e0b\uff1a servicecomb: # other configurations omitted references: springmvc: version-rule: 0.0.1 version-rule\u662f\u7248\u672c\u5339\u914d\u89c4\u5219\uff0c\u6709\u56db\u79cd\u683c\u5f0f\uff1a \u7cbe\u786e\u7248\u672c\u5339\u914d\uff1a\u4f8b\u5982 version-rule: 0.0.1 \uff0c\u8868\u793a\u53ea\u5339\u914d\u7248\u672c\u53f7\u4e3a0.0.1\u7684\u670d\u52a1\u63d0\u4f9b\u8005 \u540e\u7eed\u7248\u672c\u5339\u914d\uff1a\u4f8b\u5982 version-rule: 1.0.0+ \uff0c\u8868\u793a\u5339\u914d\u7248\u672c\u53f7\u5927\u4e8e\u6216\u7b49\u4e8e1.0.0\u7684\u670d\u52a1\u63d0\u4f9b\u8005 \u6700\u65b0\u7248\u672c\uff1a version-rule: latest \uff0c\u8868\u793a\u5339\u914d\u6700\u65b0\u7248\u672c\u7684\u670d\u52a1\u63d0\u4f9b\u8005 \u7248\u672c\u8303\u56f4\uff1a\u4f8b\u5982 1.0.0-2.0.2 \uff0c\u8868\u793a\u5339\u914d\u7248\u672c\u53f7\u57281.0.0\u81f32.0.2\u4e4b\u95f4\u7684\u670d\u52a1\u63d0\u4f9b\u8005\uff0c\u5305\u542b1.0.0\u548c2.0.2 \u6b64\u914d\u7f6e\u9879\u9ed8\u8ba4\u4e3a latest","title":"\u914d\u7f6e\u4f9d\u8d56\u670d\u52a1"},{"location":"build-consumer/with-contract/#_5","text":"\u670d\u52a1\u6d88\u8d39\u8005\u7684\u5f00\u53d1\u8005\u5728\u7ebf\u4e0b\u62ff\u5230\u670d\u52a1\u63d0\u4f9b\u8005\u7684\u5951\u7ea6\uff0c\u914d\u7f6e\u5230\u6d88\u8d39\u8005\u5de5\u7a0b\u7684\u7279\u5b9a\u76ee\u5f55\u4e0b\u3002\u670d\u52a1\u5951\u7ea6\u5728\u9879\u76ee\u4e2d\u7684\u5b58\u653e\u76ee\u5f55\u4e0e \u5b9a\u4e49\u670d\u52a1\u5951\u7ea6 \u7684\u914d\u7f6e\u8bf4\u660e\u90e8\u5206\u76f8\u540c\u3002 microservice\u76ee\u5f55\u4e0b\u7684\u6bcf\u4e00\u4e2a\u76ee\u5f55\u4ee3\u8868\u4e00\u4e2a\u5fae\u670d\u52a1\uff0c\u5fae\u670d\u52a1\u76ee\u5f55\u4e0b\u7684\u6bcf\u4e00\u4e2ayaml\u6587\u4ef6\u4ee3\u8868\u4e00\u4e2aschema\u5951\u7ea6\uff0c\u6587\u4ef6\u540d\u5c31\u662fschemaId\u3002applications\u76ee\u5f55\u4e0b\u5b58\u653e\u9700\u8981\u6307\u660eappId\u7684\u670d\u52a1\u5951\u7ea6\uff0c\u7528\u4e8e\u8de8app\u8c03\u7528\u7b49\u573a\u666f\u3002\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\u6240\u793a\uff1a resources - microservices - serviceName # \u5fae\u670d\u52a1\u540d - schemaId.yaml # schema\u63a5\u53e3\u7684\u5951\u7ea6 - applications - appId # \u5e94\u7528ID - serviceName # \u5fae\u670d\u52a1\u540d - schemaId.yaml # schema\u63a5\u53e3\u7684\u5951\u7ea6","title":"\u624b\u5de5\u914d\u7f6e\u670d\u52a1\u5951\u7ea6"},{"location":"build-consumer/with-contract/#_6","text":"\u670d\u52a1\u6d88\u8d39\u8005\u4e5f\u53ef\u4ee5\u4e0d\u7528\u663e\u5f0f\u5730\u5c06\u5951\u7ea6\u5b58\u653e\u5728\u9879\u76ee\u76ee\u5f55\u4e2d\uff0c\u5f53\u7a0b\u5e8f\u542f\u52a8\u65f6\uff0cServiceComb\u6846\u67b6\u4f1a\u81ea\u52a8\u6839\u636emicroservice.yaml\u6587\u4ef6\u4e2d\u914d\u7f6e\u7684\u670d\u52a1\u63d0\u4f9b\u8005\u7684\u5fae\u670d\u52a1\u540d\u79f0\u548c\u7248\u672c\u53f7\uff0c\u4ece\u670d\u52a1\u4e2d\u5fc3\u81ea\u52a8\u4e0b\u8f7d\u5951\u7ea6\u4fe1\u606f\u3002","title":"\u4ece\u670d\u52a1\u4e2d\u5fc3\u81ea\u52a8\u4e0b\u8f7d\u5951\u7ea6"},{"location":"build-provider/access-log-configuration/","text":"\u6982\u5ff5\u9610\u8ff0 ServiceComb \u63d0\u4f9b\u4e86\u57fa\u4e8e Vert.x \u7684 access log \u548c request log \u529f\u80fd\u3002\u5f53\u7528\u6237\u4f7f\u7528 REST over Vertx \u901a\u4fe1\u65b9\u5f0f\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u7684\u914d\u7f6e\u542f\u7528 access log \u6253\u5370\u529f\u80fd\u3002\u5f53\u7528\u6237 client \u7aef\u8fdb\u884c\u8fdc\u7a0b\u8c03\u7528\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u7684\u914d\u7f6e\u542f\u7528 request log \u6253\u5370\u529f\u80fd \u573a\u666f\u63cf\u8ff0 \u7528\u6237\u5728\u8c03\u8bd5\u670d\u52a1\u65f6\u53ef\u80fd\u9700\u8981\u5f00\u542f access log\u3002\u5728\u4f7f\u7528 REST over servlet \u901a\u4fe1\u65b9\u5f0f\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u4f7f\u7528 web\u5bb9\u5668 \u7684 access log \u529f\u80fd\uff1b\u800c\u5728\u4f7f\u7528 REST over Vertx \u901a\u4fe1\u65b9\u5f0f\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u4f7f\u7528 ServiceComb \u63d0\u4f9b\u7684\u4e00\u5957 access log \u529f\u80fd\u3002 \u7528\u6237\u60f3\u8981\u8ddf\u8e2a\uff0c\u8bb0\u5f55\u5ba2\u6237\u7aef\u8fdc\u7a0b\u8c03\u7528\u4fe1\u606f\uff0c \u53ef\u4ee5\u5f00\u542f request log\u3002request log \u540c\u65f6\u652f\u6301\u8bb0\u5f55 rest \u548c highway \u8fdc\u7a0b\u8c03\u7528\u65b9\u5f0f\u3002 \u914d\u7f6e\u8bf4\u660e \u542f\u7528 Access Log Request Log \u7528\u6237\u9700\u8981\u5728 microservice.yaml \u6587\u4ef6\u4e2d\u589e\u52a0\u914d\u7f6e\u4ee5\u542f\u7528 access log \u548c request log\uff0c\u914d\u7f6e\u793a\u4f8b\u5982\u4e0b\uff1a servicecomb: accesslog: enabled: true ## server \u7aef \u542f\u7528access log pattern: %h - - %t %r %s %B %D ## server \u7aef \u81ea\u5b9a\u4e49 access log \u65e5\u5fd7\u683c\u5f0f request: enabled: true ## client \u7aef\u5f00\u542f request log pattern: %h %SCB-transport - - %t %r %s %D ## client \u7aef\u81ea\u5b9a\u4e49 request log \u65e5\u5fd7\u683c\u5f0f Access log Request log \u914d\u7f6e\u9879\u8bf4\u660e \u914d\u7f6e\u9879 \u53d6\u503c\u8303\u56f4 \u9ed8\u8ba4\u503c \u8bf4\u660e servicecomb.accesslog.enabled true/false false \u5982\u679c\u4e3atrue\u5219\u542f\u7528access log\uff0c\u5426\u5219\u4e0d\u542f\u7528 servicecomb.accesslog.pattern \u8868\u793a\u6253\u5370\u683c\u5f0f\u7684\u5b57\u7b26\u4e32 \"%h - - %t %r %s %B %D\" \u914d\u7f6e\u9879\u89c1_ \u65e5\u5fd7\u5143\u7d20\u8bf4\u660e\u8868 _ servicecomb.accesslog.request.enabled true/false false \u5982\u679c\u4e3atrue\u5219\u542f\u7528request log\uff0c\u5426\u5219\u4e0d\u542f\u7528 servicecomb.accesslog.request.pattern \u8868\u793a\u6253\u5370\u683c\u5f0f\u7684\u5b57\u7b26\u4e32 \"%h %SCB-transport - - %t %r %s %D\" \u914d\u7f6e\u9879\u89c1_ \u65e5\u5fd7\u5143\u7d20\u8bf4\u660e\u8868 _ \u8bf4\u660e\uff1a \u4ee5\u4e0a\u56db\u4e2a\u914d\u7f6e\u9879\u5747\u53ef\u7701\u7565\uff0c\u82e5\u7701\u7565\u5219\u4f7f\u7528\u9ed8\u8ba4\u503c\u3002 \u65e5\u5fd7\u683c\u5f0f\u914d\u7f6e \u76ee\u524d\u53ef\u7528\u7684\u65e5\u5fd7\u5143\u7d20\u914d\u7f6e\u9879\u89c1 \u65e5\u5fd7\u5143\u7d20\u8bf4\u660e\u8868(Apache W3C) \u548c \u65e5\u5fd7\u5143\u7d20\u8bf4\u660e\u8868(ServiceComb) \u3002 \u65e5\u5fd7\u5143\u7d20\u8bf4\u660e\u8868 (Apache W3C) \u5143\u7d20\u540d\u79f0 Apache\u65e5\u5fd7\u683c\u5f0f W3C\u65e5\u5fd7\u683c\u5f0f \u8bf4\u660e HTTP method %m cs-method - HTTP status %s sc-status - Duration in second %T - - Duration in millisecond %D - - Remote hostname %h - - Local hostname %v - - Local port %p - - Size of response %B - \u5982\u679c\u6d88\u606f\u4f53\u957f\u5ea6\u4e3a\u96f6\u5219\u6253\u5370\"0\" Size of response %b - \u5982\u679c\u6d88\u606f\u4f53\u957f\u5ea6\u4e3a\u96f6\u5219\u6253\u5370\"-\" First line of request %r - \u5305\u542bHTTP Method\u3001Uri\u3001Http\u7248\u672c\u4e09\u90e8\u5206\u5185\u5bb9 URI path %U cs-uri-stem - Query string %q cs-uri-query - URI path and query string - cs-uri - Request protocol %H - - Datetime the request is received %t - \u6309\u7167\u9ed8\u8ba4\u8bbe\u7f6e\u6253\u5370\u65f6\u95f4\u6233\uff0c\u683c\u5f0f\u4e3a\"EEE, dd MMM yyyy HH:mm:ss zzz\"\uff0c\u8bed\u8a00\u4e3a\u82f1\u6587\uff0c\u65f6\u533a\u4e3aGMT Configurable datetime the request is received %{PATTERN}t - \u6309\u7167\u6307\u5b9a\u7684\u683c\u5f0f\u6253\u5370\u65f6\u95f4\u6233\uff0c\u8bed\u8a00\u4e3a\u82f1\u6587\uff0c\u65f6\u533a\u4e3aGMT Configurable datetime the request is received %{PATTERN TIMEZONE LOCALE}t - \u6309\u7167\u6307\u5b9a\u7684\u683c\u5f0f\u3001\u8bed\u8a00\u3001\u65f6\u533a\u6253\u5370\u65f6\u95f4\u6233\u3002\u5141\u8bb8\u7701\u7565\u5176\u4e2d\u7684\u67d0\u90e8\u5206\u914d\u7f6e\uff08\u4f46\u4e24\u4e2a\u5206\u9694\u7b26\u53f7\" \"\u4e0d\u53ef\u7701\u7565\uff09\u3002 Request header %{VARNAME}i - \u5982\u679c\u6ca1\u6709\u627e\u5230\u6307\u5b9a\u7684header\uff0c\u5219\u6253\u5370\"-\" Response header %{VARNAME}o - \u5982\u679c\u6ca1\u6709\u627e\u5230\u6307\u5b9a\u7684header\uff0c\u5219\u6253\u5370\"-\" Cookie %{VARNAME}C - \u5982\u679c\u6ca1\u6709\u627e\u5230\u6307\u5b9a\u7684cookie\uff0c\u5219\u6253\u5370\"-\" \u65e5\u5fd7\u5143\u7d20\u8bf4\u660e\u8868(ServiceComb) Element Placeholder Comment TraceId %SCB-traceId \u6253\u5370ServiceComb\u751f\u6210\u7684trace id\uff0c\u627e\u4e0d\u5230\u5219\u6253\u5370\"-\" Invocation Context %{VARNAME}SCB-ctx \u6253\u5370key\u4e3a VARNAME \u7684invocation context\u503c\uff0c\u627e\u4e0d\u5230\u5219\u6253\u5370\"-\" Transport Method %SCB-transport \u6253\u5370\u5f53\u524d\u8c03\u7528\u7684 transport method \u3002 rest \u6216\u8005 highway Access log \u4e0e Request log \u7684\u65e5\u5fd7\u5143\u7d20\u5bf9\u6bd4 \u5143\u7d20\u540d\u79f0 Apache W3C\u65e5\u5fd7\u683c\u5f0f access log access log \u8bf4\u660e request log request log\u8bf4\u660e HTTP method %m cs-method support - support - HTTP status %s sc-status support - support - Duration in second %T support - support - Duration in millisecond %D support - support - Remote hostname %h support - support - Local hostname %v support - support - Local port %p support - support - Size of response %B support \u5982\u679c\u6d88\u606f\u4f53\u957f\u5ea6\u4e3a\u96f6\u5219\u6253\u5370\"0\" unsupported - Size of response %b support \u5982\u679c\u6d88\u606f\u4f53\u957f\u5ea6\u4e3a\u96f6\u5219\u6253\u5370\"-\" unsupported - First line of request %r support \u5305\u542bHTTP Method\u3001Uri\u3001Http\u7248\u672c\u4e09\u90e8\u5206\u5185\u5bb9 support \u5305\u542bHTTP Method\u3001Uri\u3001Http\u7248\u672c\u4e09\u90e8\u5206\u5185\u5bb9 URI path %U cs-uri-stem support - support - Query string %q cs-uri-query support - support - URI path and query string cs-uri support - support - Request protocol %H support - support - Datetime of the request %t support \u6536\u5230\u8bf7\u6c42\u7684\u65f6\u95f4\u3002\u9ed8\u8ba4\u683c\u5f0f\u4e3a\"EEE, dd MMM yyyy HH:mm:ss zzz\"\uff0c\u8bed\u8a00\u4e3a\u82f1\u6587\uff0c\u65f6\u533a\u4e3aGMT support \u53d1\u9001\u8bf7\u6c42\u7684\u65f6\u95f4\u3002\u9ed8\u8ba4\u683c\u5f0f\u4e3a\"EEE, dd MMM yyyy HH:mm:ss zzz\"\uff0c\u8bed\u8a00\u4e3a\u82f1\u6587\uff0c\u65f6\u533a\u4e3aGMT Configurable datetime the request of the request %{PATTERN}t support \u6536\u5230\u8bf7\u6c42\u7684\u65f6\u95f4\u3002\u6309\u7167\u6307\u5b9a\u7684\u683c\u5f0f\u6253\u5370\u65f6\u95f4\u6233\uff0c\u8bed\u8a00\u4e3a\u82f1\u6587\uff0c\u65f6\u533a\u4e3aGMT support \u53d1\u9001\u8bf7\u6c42\u7684\u65f6\u95f4\u3002\u6309\u7167\u6307\u5b9a\u7684\u683c\u5f0f\u6253\u5370\u65f6\u95f4\u6233\uff0c\u8bed\u8a00\u4e3a\u82f1\u6587\uff0c\u65f6\u533a\u4e3aGMT Configurable datetime the request of the request %{PATTERN TIMEZONE LOCALE}t support \u6536\u5230\u8bf7\u6c42\u7684\u65f6\u95f4\u3002\u6309\u7167\u6307\u5b9a\u7684\u683c\u5f0f\u3001\u8bed\u8a00\u3001\u65f6\u533a\u6253\u5370\u65f6\u95f4\u6233\u3002\u5141\u8bb8\u7701\u7565\u5176\u4e2d\u7684\u67d0\u90e8\u5206\u914d\u7f6e\uff08\u4f46\u4e24\u4e2a\u5206\u9694\u7b26\u53f7\" \"\u4e0d\u53ef\u7701\u7565\uff09\u3002 support \u53d1\u9001\u8bf7\u6c42\u7684\u65f6\u95f4\u3002\u6309\u7167\u6307\u5b9a\u7684\u683c\u5f0f\u3001\u8bed\u8a00\u3001\u65f6\u533a\u6253\u5370\u65f6\u95f4\u6233\u3002\u5141\u8bb8\u7701\u7565\u5176\u4e2d\u7684\u67d0\u90e8\u5206\u914d\u7f6e\uff08\u4f46\u4e24\u4e2a\u5206\u9694\u7b26\u53f7\" \"\u4e0d\u53ef\u7701\u7565\uff09\u3002 Request header %{VARNAME}i support \u5982\u679c\u6ca1\u6709\u627e\u5230\u6307\u5b9a\u7684header\uff0c\u5219\u6253\u5370\"-\" support \u5982\u679c\u6ca1\u6709\u627e\u5230\u6307\u5b9a\u7684header\uff0c\u5219\u6253\u5370\"-\" Response header %{VARNAME}o support \u5982\u679c\u6ca1\u6709\u627e\u5230\u6307\u5b9a\u7684header\uff0c\u5219\u6253\u5370\"-\" support \u5982\u679c\u6ca1\u6709\u627e\u5230\u6307\u5b9a\u7684header\uff0c\u5219\u6253\u5370\"-\" Cookie %{VARNAME}C support \u5982\u679c\u6ca1\u6709\u627e\u5230\u6307\u5b9a\u7684cookie\uff0c\u5219\u6253\u5370\"-\" support \u5982\u679c\u6ca1\u6709\u627e\u5230\u6307\u5b9a\u7684cookie\uff0c\u5219\u6253\u5370\"-\" TraceId %SCB-traceId support \u6253\u5370ServiceComb\u751f\u6210\u7684trace id\uff0c\u627e\u4e0d\u5230\u5219\u6253\u5370\"-\" support \u6253\u5370ServiceComb\u751f\u6210\u7684trace id\uff0c\u627e\u4e0d\u5230\u5219\u6253\u5370\"-\" Invocation Context %{VARNAME}SCB-ctx support \u6253\u5370key\u4e3a VARNAME \u7684invocation context\u503c\uff0c\u627e\u4e0d\u5230\u5219\u6253\u5370\"-\" support \u6253\u5370key\u4e3a VARNAME \u7684invocation context\u503c\uff0c\u627e\u4e0d\u5230\u5219\u6253\u5370\"-\" transport method %SCB-transport unsupported \u53ea\u652f\u6301 rest \u5f62\u5f0f\u8c03\u7528 support \u8c03\u7528\u4f7f\u7528\u7684transport method \u65e5\u5fd7\u8f93\u51fa\u6587\u4ef6\u914d\u7f6e Access log Request log \u7684\u65e5\u5fd7\u6253\u5370\u5b9e\u73b0\u6846\u67b6\u9ed8\u8ba4\u91c7\u7528 Log4j \uff0c\u5e76\u63d0\u4f9b\u4e86\u4e00\u5957\u9ed8\u8ba4\u7684\u65e5\u5fd7\u6587\u4ef6\u914d\u7f6e\u3002\u7528\u6237\u53ef\u4ee5\u5728\u81ea\u5df1\u5b9a\u4e49\u7684 log4j.properties \u6587\u4ef6\u4e2d\u8986\u5199\u8fd9\u4e9b\u914d\u7f6e\u3002\u7528\u6237\u53ef\u914d\u7f6e\u7684\u65e5\u5fd7\u6587\u4ef6\u914d\u7f6e\u9879\u89c1\u4e0b\u8868\u3002 \u65e5\u5fd7\u6587\u4ef6\u914d\u7f6e\u9879 \u914d\u7f6e\u9879 \u9ed8\u8ba4\u503c \u542b\u4e49 \u8bf4\u660e paas.logs.accesslog.dir ${paas.logs.dir} \u65e5\u5fd7\u6587\u4ef6\u8f93\u51fa\u76ee\u5f55 \u4e0e\u666e\u901a\u65e5\u5fd7\u8f93\u51fa\u5230\u540c\u4e00\u4e2a\u76ee\u5f55\u4e2d paas.logs.accesslog.file access.log \u65e5\u5fd7\u6587\u4ef6\u540d - log4j.appender.access.MaxBackupIndex 10 \u6700\u5927\u4fdd\u5b58\u7684\u65e5\u5fd7\u6eda\u52a8\u6587\u4ef6\u4e2a\u6570 - log4j.appender.access.MaxFileSize 20MB \u65e5\u5fd7\u6587\u4ef6\u6700\u5927\u4f53\u79ef \u6b63\u5728\u8bb0\u5f55\u7684\u6587\u4ef6\u8fbe\u5230\u6b64\u5927\u5c0f\u65f6\u89e6\u53d1\u65e5\u5fd7\u6eda\u52a8\u5b58\u50a8 log4j.appender.access.logPermission rw------- \u65e5\u5fd7\u6587\u4ef6\u6743\u9650 - paas.logs.requestlog.dir ${paas.logs.dir} \u65e5\u5fd7\u6587\u4ef6\u8f93\u51fa\u76ee\u5f55 \u4e0e\u666e\u901a\u65e5\u5fd7\u8f93\u51fa\u5230\u540c\u4e00\u4e2a\u76ee\u5f55\u4e2d paas.logs.requestlog.file request.log \u65e5\u5fd7\u6587\u4ef6\u540d - log4j.appender.request.MaxBackupIndex 10 \u6700\u5927\u4fdd\u5b58\u7684\u65e5\u5fd7\u6eda\u52a8\u6587\u4ef6\u4e2a\u6570 - log4j.appender.request.MaxFileSize 20MB \u65e5\u5fd7\u6587\u4ef6\u6700\u5927\u4f53\u79ef \u6b63\u5728\u8bb0\u5f55\u7684\u6587\u4ef6\u8fbe\u5230\u6b64\u5927\u5c0f\u65f6\u89e6\u53d1\u65e5\u5fd7\u6eda\u52a8\u5b58\u50a8 log4j.appender.request.logPermission rw------- \u65e5\u5fd7\u6587\u4ef6\u6743\u9650 - \u6ce8\u610f\uff1a \u7531\u4e8e ServiceComb \u7684\u65e5\u5fd7\u6253\u5370\u529f\u80fd\u53ea\u4f9d\u8d56 slf4j \u7684\u63a5\u53e3\uff0c\u56e0\u6b64\u7528\u6237\u53ef\u4ee5\u9009\u62e9\u5176\u4ed6\u65e5\u5fd7\u6253\u5370\u6846\u67b6\uff0c\u9009\u62e9\u5176\u4ed6\u65e5\u5fd7\u6253\u5370\u6846\u67b6\u65f6\u9700\u8981\u7528\u6237\u81ea\u884c\u914d\u7f6e\u65e5\u5fd7\u6587\u4ef6\u8f93\u51fa\u9009\u9879\u3002 \u65e5\u5fd7\u5b9e\u73b0\u6846\u67b6\u5207\u6362\u4e3a logback \u9488\u5bf9\u91c7\u7528 logback \u4f5c\u4e3a\u65e5\u5fd7\u6253\u5370\u6846\u67b6\u7684\u9879\u76ee\uff0c\u9700\u8981\u5c06\u65e5\u5fd7\u6253\u5370\u6846\u67b6\u4f9d\u8d56\u4ece Log4j \u6539\u4e3a logback \u5e76\u6dfb\u52a0\u90e8\u5206\u914d\u7f6e\u4ee5\u4f7f log \u529f\u80fd\u6b63\u5e38\u751f\u6548\u3002 1. \u6392\u9664 Log4j \u4f9d\u8d56 \u5728\u5c06\u65e5\u5fd7\u5b9e\u73b0\u6846\u67b6\u5207\u6362\u4e3a logback \u4e4b\u524d\uff0c\u9700\u8981\u68c0\u67e5\u9879\u76ee\u7684\u4f9d\u8d56\uff0c\u4ece\u4e2d\u6392\u9664\u6389 Log4j \u76f8\u5173\u7684\u4f9d\u8d56\u9879\u3002\u5728\u9879\u76ee\u4e2d\u8fd0\u884c maven \u547d\u4ee4 dependency:tree \uff0c\u627e\u51fa\u5176\u4e2d\u4f9d\u8d56\u4e86Log4j\u7684ServiceComb\u7ec4\u4ef6\uff0c\u5728\u5176 dependency \u4f9d\u8d56\u9879\u4e2d\u6dfb\u52a0\u5982\u4e0b\u914d\u7f6e\uff1a exclusion groupId org.slf4j /groupId artifactId slf4j-log4j12 /artifactId /exclusion 2. \u6dfb\u52a0 logback \u4f9d\u8d56 \u5728 pom \u6587\u4ef6\u4e2d\u6dfb\u52a0 logback \u7684\u4f9d\u8d56\u9879\uff1a dependency groupId org.slf4j /groupId artifactId slf4j-api /artifactId /dependency dependency groupId ch.qos.logback /groupId artifactId logback-classic /artifactId /dependency dependency groupId ch.qos.logback /groupId artifactId logback-core /artifactId /dependency 3. \u914d\u7f6e access log request log \u7ec4\u4ef6\u7684 logger ServiceComb \u63d0\u4f9b\u7684\u65e5\u5fd7\u6253\u5370\u7ec4\u4ef6\u662f\u83b7\u53d6\u540d\u4e3a accesslog requestlog \u7684 logger \u6765\u6253\u5370 access log \u548c request log \uff0c\u56e0\u6b64\u5c06\u65e5\u5fd7\u5b9e\u73b0\u6846\u67b6\u4ece Log4j \u5207\u6362\u4e3a logback \u7684\u5173\u952e\u5c31\u662f\u63d0\u4f9b\u4e00\u4e2a\u540d\u4e3a accesslog requestlog \u7684 Logger\uff0c\u5e76\u4e3a\u5176\u914d\u7f6e\u597d\u65e5\u5fd7\u8f93\u51fa\u6587\u4ef6\u3002\u4ee5\u4e0b\u662f access log request log \u5728 logback \u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u914d\u7f6e\u793a\u4f8b\uff08\u672c\u793a\u4f8b\u4ec5\u5c55\u793a access log request log\u76f8\u5173\u7684\u914d\u7f6e\uff0c\u5176\u4ed6\u65e5\u5fd7\u914d\u7f6e\u5747\u7701\u7565\uff09\uff1a ?xml version= 1.0 encoding= UTF-8 ? configuration !-- \u7528\u6237\u53ef\u6839\u636e\u9700\u8981\u81ea\u5b9a\u4e49appender -- appender name= ACCESSLOG class= ch.qos.logback.core.rolling.RollingFileAppender file ./logs/access.log /file rollingPolicy class= ch.qos.logback.core.rolling.TimeBasedRollingPolicy fileNamePattern ./logs/access-%d{yyyy-MM-dd}.log /fileNamePattern /rollingPolicy !-- \u6ce8\u610f\uff1a\u7531\u4e8eaccess log\u7684\u5185\u5bb9\u662f\u5728\u4ee3\u7801\u4e2d\u5b8c\u6210\u683c\u5f0f\u5316\u7684\uff0c\u56e0\u6b64\u8fd9\u91cc\u53ea\u9700\u8f93\u51famessage\u5373\u53ef\uff0c\u65e0\u9700\u6dfb\u52a0\u989d\u5916\u7684\u683c\u5f0f -- encoder pattern %msg%n /pattern /encoder /appender appender name= REQUESTLOG class= ch.qos.logback.core.rolling.RollingFileAppender file ./logs/request.log /file rollingPolicy class= ch.qos.logback.core.rolling.TimeBasedRollingPolicy fileNamePattern ./logs/access-%d{yyyy-MM-dd}.log /fileNamePattern /rollingPolicy !-- \u6ce8\u610f\uff1a\u7531\u4e8erequest log\u7684\u5185\u5bb9\u662f\u5728\u4ee3\u7801\u4e2d\u5b8c\u6210\u683c\u5f0f\u5316\u7684\uff0c\u56e0\u6b64\u8fd9\u91cc\u53ea\u9700\u8f93\u51famessage\u5373\u53ef\uff0c\u65e0\u9700\u6dfb\u52a0\u989d\u5916\u7684\u683c\u5f0f -- encoder pattern %msg%n /pattern /encoder /appender !-- \u63d0\u4f9b\u4e00\u4e2a\u540d\u4e3a accesslog \u7684logger\u4f9baccess log\u6253\u5370\u7ec4\u4ef6\u4f7f\u7528 -- logger name= accesslog level= INFO additivity= false appender-ref ref= ACCESSLOG / /logger !-- \u63d0\u4f9b\u4e00\u4e2a\u540d\u4e3a requestlog \u7684logger\u4f9brequest log\u6253\u5370\u7ec4\u4ef6\u4f7f\u7528 -- logger name= requestlog level= INFO additivity= false appender-ref ref= REQUESTLOG / /logger /configuration \u81ea\u5b9a\u4e49\u6269\u5c55 Access Log Request Log \u7528\u6237\u53ef\u4ee5\u5229\u7528 ServiceComb \u63d0\u4f9b\u7684 AccessLogItem \u6269\u5c55\u673a\u5236\uff0c\u5b9a\u5236\u81ea\u5df1\u7684 AccessLogItem\uff0c \u6211\u4eec\u628a Request Log \u4e5f\u5f53\u505a\u4e00\u79cd Access Log\u3002 \u76f8\u5173\u7c7b\u8bf4\u660e AccessLogItem public interface AccessLogItem T { // \u4eceServer\u7aef\u83b7\u53d6\u4fe1\u606f\uff0c\u6253\u5370 Access Log \u65e5\u5fd7 default void appendServerFormattedItem(ServerAccessLogEvent accessLogEvent, StringBuilder builder) { } // \u4eceClient \u7aef\u83b7\u53d6\u4fe1\u606f\uff0c \u6253\u5370 Request Log default void appendClientFormattedItem(InvocationFinishEvent clientLogEvent, StringBuilder builder) { } } AccessLogItem \u7684\u5b9a\u4e49\u5982\u4e0a\u6240\u793a Server \u7aef \u6bcf\u6536\u5230\u4e00\u4e2a\u8bf7\u6c42\uff0c\u4f1a\u89e6\u53d1\u4e00\u6b21 Access Log \u65e5\u5fd7\u6253\u5370\u3002 Client \u7aef \u6bcf\u6b21\u5bf9\u5916\u8fdc\u7a0b\u8c03\u7528\u7ed3\u675f\uff0c\u4f1a\u89e6\u53d1\u4e00\u6b21 Request Log \u65e5\u5fd7\u6253\u5370\u3002 \u6bcf\u6b21\u65e5\u5fd7\u6253\u5370\uff0cSDK \u90fd\u4f1a\u904d\u5386\u6709\u6548\u7684 AccessLogItem \uff0c\u8c03\u7528\u5bf9\u5e94\u7684\u65b9\u6cd5\u83b7\u53d6\u6b64 Item \u751f\u6210\u7684 Log\u7247 \u6bb5\uff0c\u5e76\u5c06\u5168\u90e8\u7247\u6bb5\u62fc\u63a5\u6210\u4e00\u6761 Log \u6253\u5370\u5230\u65e5\u5fd7\u6587\u4ef6\u4e2d\u3002 VertxRestAccessLogItemMeta // pattern\u5360\u4f4d\u7b26\u524d\u7f00 protected String prefix; // pattern\u5360\u4f4d\u7b26\u540e\u7f00 protected String suffix; // \u4f18\u5148\u7ea7\u5e8f\u53f7 protected int order; // AccessLogItem\u6784\u9020\u5668 protected AccessLogItemCreator RoutingContext accessLogItemCreator; VertxRestAccessLogItemMeta \u5305\u542b\u5982\u4e0a\u5c5e\u6027\uff0c\u5b83\u5b9a\u4e49\u4e86 ServiceComb \u5982\u4f55\u89e3\u6790 pattern \u5b57\u7b26\u4e32\u4ee5\u83b7\u5f97\u7279\u5b9a\u7684 AccessLogItem\u3002 \u5982\u679c\u7528\u6237\u60f3\u8981\u5b9a\u4e49\u4e00\u4e2a\u5360\u4f4d\u7b26\u4e3a %user-defined \u7684 AccessLogItem \uff0c\u5219\u9700\u8981\u58f0\u660e\u4e00\u4e2a VertxRestAccessLogItemMeta \u7684\u5b50\u7c7b\uff0c\u8bbe\u7f6e prefix=\"%user-defined\"\uff0csuffix=null\uff0c\u5f53 AccessLogPatternParser \u89e3\u6790\u5230 \"%user-defined\" \u65f6\uff0c\u4ece\u6b64 meta \u7c7b\u4e2d\u53d6\u5f97 AccessLogItemCreator \u521b\u5efa\u5bf9\u5e94\u7684 AccessLogItem \u3002 \u6ce8\u610f \uff1a\u7531\u4e8e \"%user-defined\" \u5360\u4f4d\u7b26\u4e2d\u6ca1\u6709\u53d8\u91cf\u90e8\u5206\uff0c\u56e0\u6b64\u8c03\u7528 AccessLogItemCreator \u4f20\u5165\u7684\u914d\u7f6e\u53c2\u6570\u4e3anull\u3002 \u5982\u679c\u7528\u6237\u60f3\u8981\u5b9a\u4e49\u4e00\u4e2a\u5360\u4f4d\u7b26\u4e3a %{VARNAME}user-defined \u7684 AccessLogItem \uff0c\u5219\u58f0\u660e\u7684 VertxRestAccessLogItemMeta \u5b50\u7c7b\u4e2d\uff0c\u8bbe\u7f6eprefix=\"%{\"\uff0csuffix=\"}user-defined\"\uff0c\u5f53 AccessLogPatternParser \u89e3\u6790\u5230 \"%{VARNAME}user-defined\"\u65f6\uff0c\u4f1a\u622a\u53d6\u51fa\"VARNAME\"\u4f5c\u4e3a\u914d\u7f6e\u53c2\u6570\u4f20\u5165 AccessLogItemCreator \uff0c\u521b\u5efa\u4e00\u4e2a AccessLogItem \u3002 VertxRestAccessLogItemMeta \u6709\u4e00\u4e2a\u5b50\u7c7b CompositeVertxRestAccessLogItemMeta \uff0c\u5f53\u7528\u6237\u9700\u8981\u5b9a\u4e49\u591a\u4e2a AccessLogItem \u65f6\uff0c\u53ef\u4ee5\u5c06\u591a\u4e2a VertxRestAccessLogItemMeta \u805a\u5408\u5230 CompositeVertxRestAccessLogItemMeta \u4e2d\u3002Parser \u52a0\u8f7d\u5230\u7c7b\u578b\u4e3a CompositeVertxRestAccessLogItemMeta \u7684AccessLogItemMeta\u65f6\uff0c\u4f1a\u8c03\u7528\u5176 getAccessLogItemMetas() \u65b9\u6cd5\u83b7\u5f97\u4e00\u7ec4 AccessLogItemMeta\u3002 VertxRestAccessLogItemMeta \u4f7f\u7528SPI\u673a\u5236\u52a0\u8f7d\uff0c\u800c CompositeVertxRestAccessLogItemMeta \u53ef\u4ee5\u8ba9\u7528\u6237\u53ea\u5728SPI\u914d\u7f6e\u6587\u4ef6\u4e2d\u914d\u7f6e\u4e00\u6761\u8bb0\u5f55\u5c31\u52a0\u8f7d\u591a\u6761meta\u4fe1\u606f\uff0c\u7ed9\u4e86\u7528\u6237\u66f4\u7075\u6d3b\u7684\u9009\u62e9\u3002 AccessLogItemCreator public interface AccessLogItemCreator T { // \u63a5\u6536\u914d\u7f6e\u503c\uff0c\u8fd4\u56de\u4e00\u4e2aAccessLogItem\u3002\u5982\u679cAccessLogItem\u7684\u5360\u4f4d\u7b26\u6ca1\u6709\u53ef\u53d8\u7684\u914d\u7f6e\u503c\u90e8\u5206\uff0c\u5219\u6b64\u65b9\u6cd5\u4f1a\u63a5\u6536\u5230null\u3002 AccessLogItem T createItem(String config); } \u7528\u6237\u901a\u8fc7\u8bbe\u7f6e\u5728\u81ea\u5b9a\u4e49\u7684 VertxRestAccessLogItemMeta \u4e2d\u7684 AccessLogItemCreator \u5b9e\u4f8b\u5316\u81ea\u5df1\u7684 AccessLogItem \u3002\u7531\u4e8e\u8fd9\u662f\u4e00\u4e2a\u51fd\u6570\u5f0f\u63a5\u53e3\uff0c\u5f53 AccessLogItem \u7684\u521d\u59cb\u5316\u65b9\u5f0f\u8f83\u7b80\u5355\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 Lambda\u8868\u8fbe\u5f0f\u5b9a\u4e49Creator\uff0c\u4ee5\u7b80\u5316\u5f00\u53d1\u3002 AccessLogItemMeta \u7684\u5339\u914d\u89c4\u5219 AccessLogItemMeta \u52a0\u8f7d\u8fdb Parser \u540e\uff0c\u4f1a\u8fdb\u884c\u4e00\u6b21\u6392\u5e8f\u3002Parser \u89e3\u6790 pattern \u4e32\u65f6\u4f1a\u4ece\u524d\u5230\u540e\u5339\u914d meta list\uff0c\u603b\u7684\u5339\u914d\u89c4\u5219\u5982\u4e0b\uff1a \u4f18\u5148\u5339\u914d\u9ad8\u4f18\u5148\u7ea7\u7684meta\u3002 \u4f18\u5148\u5339\u914d\u6709\u540e\u7f00\u7684meta\uff0c\u5f53\u5339\u914d\u4e0a\u591a\u4e2a\u6709\u540e\u7f00meta\u65f6\uff0c\u53d6\u524d\u540e\u7f00\u76f8\u8ddd\u6700\u5c0f\u7684\u4e00\u4e2a\u3002 \u4f18\u5148\u5339\u914d\u5360\u4f4d\u7b26\u957f\u7684meta\uff0c\u4f8b\u5982\u6709\u4e24\u4e2a meta\uff0c\"%abc\"\u548c\"%a\"\uff0c\u5982\u679c\u5339\u914d\u4e2d\u4e86\"%abc\"\u5219\u76f4\u63a5\u8fd4\u56de\uff0c\u4e0d\u518d\u5339\u914d\"%a\"\u3002 \u793a\u4f8b\u8bf4\u660e \u6269\u5c55\u81ea\u5b9a\u4e49 AccessLogItem \u9996\u5148\u7528\u6237\u9700\u8981 AccessLogItem \u63a5\u53e3\u5b9e\u73b0\u81ea\u5df1\u7684 item\uff1a public class UserDefinedAccessLogItem implements AccessLogItem RoutingContext { private String config; public UserDefinedAccessLogItem(String config) { this.config = config; } @Override public void appendServerFormattedItem(ServerAccessLogEvent accessLogEvent, StringBuilder builder) { builder.append( user-defined--server- ) .append(accessLogEvent.getRoutingContext().response().getStatusCode()) .append( - ) .append(config); } @Override public void appendClientFormattedItem(InvocationFinishEvent clientLogEvent, StringBuilder builder) { builder.append( user-server-defined- ) .append(clientLogEvent.getResponse().getStatus()) .append( - ) .append(config); } } \u5b9a\u4e49 AccessLogItem \u7684 meta \u7c7b \u7ee7\u627f VertxRestAccessLogItemMeta \u6216 CompositeVertxRestAccessLogItemMeta \u7c7b\uff0c\u5b9a\u4e49AccessLogItem\u7684\u524d\u540e\u7f00\u7b49\u4fe1\u606f\uff1a public class UserDefinedCompositeExtendedAccessLogItemMeta extends CompositeVertxRestAccessLogItemMeta { private static final List VertxRestAccessLogItemMeta META_LIST = new ArrayList (); static { META_LIST.add(new VertxRestAccessLogItemMeta( %{ , }user-defined , UserDefinedAccessLogItem::new)); } @Override public List VertxRestAccessLogItemMeta getAccessLogItemMetas() { return META_LIST; } } \u914d\u7f6eSPI\u52a0\u8f7d\u6587\u4ef6 \u5728 resources/META-INF/services/ \u76ee\u5f55\u4e0b\u5b9a\u4e49\u4e00\u4e2a\u540d\u4e3a \"org.apache.servicecomb.transport.rest.vertx.accesslog.parser.VertxRestAccessLogItemMeta\" \u7684\u6587\u4ef6\uff0c\u5c06\u4e0a\u4e00\u6b65\u4e2d\u5b9a\u4e49\u7684meta\u7c7b\u5b8c\u6574\u7c7b\u540d\u586b\u5199\u5230\u8be5\u6587\u4ef6\u4e2d\uff0c\u4f9bParser\u52a0\u8f7dmeta\u7c7b\u3002 \u914d\u7f6e Access Log \u7684 pattern # \u670d\u52a1\u7aef\u914d\u7f6e servicecomb: accesslog: enabled: true ## \u5e94\u7528\u4f5c\u4e3a\u670d\u52a1\u7aef\uff0c\u5f00\u542f Access log pattern: %{param}user-defined ## Access log \u65e5\u5fd7\u683c\u5f0f request: enabled: true ## \u5e94\u7528\u4f5c\u4e3a\u5ba2\u6237\u7aef\uff0c\u5f00\u542f Request log pattern: %{param}user-defined ## Request log \u65e5\u5fd7\u683c\u5f0f \u4ee5\u670d\u52a1\u7aef\u4e3a\u4f8b\uff0c \u8fd0\u884c\u670d\u52a1\u89e6\u53d1Access Log\u6253\u5370\uff0c\u5047\u8bbe\u8bf7\u6c42\u8fd4\u56de\u72b6\u6001\u7801\u662f 200\uff0c\u5219\u53ef\u4ee5\u770b\u5230Access Log\u6253\u5370\u5185\u5bb9\u4e3a \" user-defined--server-200-param \"\u3002 \u793a\u4f8b\u4ee3\u7801 microservice.yaml\u6587\u4ef6\u4e2d\u7684\u914d\u7f6e ## other configurations omitted servicecomb: accesslog: enabled: true ## \u5e94\u7528\u4f5c\u4e3a\u670d\u52a1\u7aef\uff0c\u5f00\u542f Access log pattern: %h - - %t %r %s %B %D ## Access log \u65e5\u5fd7\u683c\u5f0f request: enabled: true ## \u5e94\u7528\u4f5c\u4e3a\u5ba2\u6237\u7aef\uff0c\u5f00\u542f Request log pattern: %h %SCB-transport - - %t %r %s %D ## Request log \u65e5\u5fd7\u683c\u5f0f log4j.properties\u6587\u4ef6\u4e2d\u7684\u914d\u7f6e # log configuration item paas.logs.dir=../logs/ paas.logs.accesslog.file=access.log paas.logs.requestlog.file=request.log # access log File appender log4j.appender.access.MaxBackupIndex=10 log4j.appender.access.MaxFileSize=20MB log4j.appender.access.logPermission=rw------- # request log File appender log4j.appender.request.MaxBackupIndex=10 log4j.appender.request.MaxFileSize=20MB log4j.appender.request.logPermission=rw-------","title":"Access log configuration"},{"location":"build-provider/access-log-configuration/#_1","text":"ServiceComb \u63d0\u4f9b\u4e86\u57fa\u4e8e Vert.x \u7684 access log \u548c request log \u529f\u80fd\u3002\u5f53\u7528\u6237\u4f7f\u7528 REST over Vertx \u901a\u4fe1\u65b9\u5f0f\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u7684\u914d\u7f6e\u542f\u7528 access log \u6253\u5370\u529f\u80fd\u3002\u5f53\u7528\u6237 client \u7aef\u8fdb\u884c\u8fdc\u7a0b\u8c03\u7528\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u7684\u914d\u7f6e\u542f\u7528 request log \u6253\u5370\u529f\u80fd","title":"\u6982\u5ff5\u9610\u8ff0"},{"location":"build-provider/access-log-configuration/#_2","text":"\u7528\u6237\u5728\u8c03\u8bd5\u670d\u52a1\u65f6\u53ef\u80fd\u9700\u8981\u5f00\u542f access log\u3002\u5728\u4f7f\u7528 REST over servlet \u901a\u4fe1\u65b9\u5f0f\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u4f7f\u7528 web\u5bb9\u5668 \u7684 access log \u529f\u80fd\uff1b\u800c\u5728\u4f7f\u7528 REST over Vertx \u901a\u4fe1\u65b9\u5f0f\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u4f7f\u7528 ServiceComb \u63d0\u4f9b\u7684\u4e00\u5957 access log \u529f\u80fd\u3002 \u7528\u6237\u60f3\u8981\u8ddf\u8e2a\uff0c\u8bb0\u5f55\u5ba2\u6237\u7aef\u8fdc\u7a0b\u8c03\u7528\u4fe1\u606f\uff0c \u53ef\u4ee5\u5f00\u542f request log\u3002request log \u540c\u65f6\u652f\u6301\u8bb0\u5f55 rest \u548c highway \u8fdc\u7a0b\u8c03\u7528\u65b9\u5f0f\u3002","title":"\u573a\u666f\u63cf\u8ff0"},{"location":"build-provider/access-log-configuration/#_3","text":"","title":"\u914d\u7f6e\u8bf4\u660e"},{"location":"build-provider/access-log-configuration/#access-log-request-log","text":"\u7528\u6237\u9700\u8981\u5728 microservice.yaml \u6587\u4ef6\u4e2d\u589e\u52a0\u914d\u7f6e\u4ee5\u542f\u7528 access log \u548c request log\uff0c\u914d\u7f6e\u793a\u4f8b\u5982\u4e0b\uff1a servicecomb: accesslog: enabled: true ## server \u7aef \u542f\u7528access log pattern: %h - - %t %r %s %B %D ## server \u7aef \u81ea\u5b9a\u4e49 access log \u65e5\u5fd7\u683c\u5f0f request: enabled: true ## client \u7aef\u5f00\u542f request log pattern: %h %SCB-transport - - %t %r %s %D ## client \u7aef\u81ea\u5b9a\u4e49 request log \u65e5\u5fd7\u683c\u5f0f Access log Request log \u914d\u7f6e\u9879\u8bf4\u660e \u914d\u7f6e\u9879 \u53d6\u503c\u8303\u56f4 \u9ed8\u8ba4\u503c \u8bf4\u660e servicecomb.accesslog.enabled true/false false \u5982\u679c\u4e3atrue\u5219\u542f\u7528access log\uff0c\u5426\u5219\u4e0d\u542f\u7528 servicecomb.accesslog.pattern \u8868\u793a\u6253\u5370\u683c\u5f0f\u7684\u5b57\u7b26\u4e32 \"%h - - %t %r %s %B %D\" \u914d\u7f6e\u9879\u89c1_ \u65e5\u5fd7\u5143\u7d20\u8bf4\u660e\u8868 _ servicecomb.accesslog.request.enabled true/false false \u5982\u679c\u4e3atrue\u5219\u542f\u7528request log\uff0c\u5426\u5219\u4e0d\u542f\u7528 servicecomb.accesslog.request.pattern \u8868\u793a\u6253\u5370\u683c\u5f0f\u7684\u5b57\u7b26\u4e32 \"%h %SCB-transport - - %t %r %s %D\" \u914d\u7f6e\u9879\u89c1_ \u65e5\u5fd7\u5143\u7d20\u8bf4\u660e\u8868 _ \u8bf4\u660e\uff1a \u4ee5\u4e0a\u56db\u4e2a\u914d\u7f6e\u9879\u5747\u53ef\u7701\u7565\uff0c\u82e5\u7701\u7565\u5219\u4f7f\u7528\u9ed8\u8ba4\u503c\u3002","title":"\u542f\u7528 Access Log &amp; Request Log"},{"location":"build-provider/access-log-configuration/#_4","text":"\u76ee\u524d\u53ef\u7528\u7684\u65e5\u5fd7\u5143\u7d20\u914d\u7f6e\u9879\u89c1 \u65e5\u5fd7\u5143\u7d20\u8bf4\u660e\u8868(Apache W3C) \u548c \u65e5\u5fd7\u5143\u7d20\u8bf4\u660e\u8868(ServiceComb) \u3002 \u65e5\u5fd7\u5143\u7d20\u8bf4\u660e\u8868 (Apache W3C) \u5143\u7d20\u540d\u79f0 Apache\u65e5\u5fd7\u683c\u5f0f W3C\u65e5\u5fd7\u683c\u5f0f \u8bf4\u660e HTTP method %m cs-method - HTTP status %s sc-status - Duration in second %T - - Duration in millisecond %D - - Remote hostname %h - - Local hostname %v - - Local port %p - - Size of response %B - \u5982\u679c\u6d88\u606f\u4f53\u957f\u5ea6\u4e3a\u96f6\u5219\u6253\u5370\"0\" Size of response %b - \u5982\u679c\u6d88\u606f\u4f53\u957f\u5ea6\u4e3a\u96f6\u5219\u6253\u5370\"-\" First line of request %r - \u5305\u542bHTTP Method\u3001Uri\u3001Http\u7248\u672c\u4e09\u90e8\u5206\u5185\u5bb9 URI path %U cs-uri-stem - Query string %q cs-uri-query - URI path and query string - cs-uri - Request protocol %H - - Datetime the request is received %t - \u6309\u7167\u9ed8\u8ba4\u8bbe\u7f6e\u6253\u5370\u65f6\u95f4\u6233\uff0c\u683c\u5f0f\u4e3a\"EEE, dd MMM yyyy HH:mm:ss zzz\"\uff0c\u8bed\u8a00\u4e3a\u82f1\u6587\uff0c\u65f6\u533a\u4e3aGMT Configurable datetime the request is received %{PATTERN}t - \u6309\u7167\u6307\u5b9a\u7684\u683c\u5f0f\u6253\u5370\u65f6\u95f4\u6233\uff0c\u8bed\u8a00\u4e3a\u82f1\u6587\uff0c\u65f6\u533a\u4e3aGMT Configurable datetime the request is received %{PATTERN TIMEZONE LOCALE}t - \u6309\u7167\u6307\u5b9a\u7684\u683c\u5f0f\u3001\u8bed\u8a00\u3001\u65f6\u533a\u6253\u5370\u65f6\u95f4\u6233\u3002\u5141\u8bb8\u7701\u7565\u5176\u4e2d\u7684\u67d0\u90e8\u5206\u914d\u7f6e\uff08\u4f46\u4e24\u4e2a\u5206\u9694\u7b26\u53f7\" \"\u4e0d\u53ef\u7701\u7565\uff09\u3002 Request header %{VARNAME}i - \u5982\u679c\u6ca1\u6709\u627e\u5230\u6307\u5b9a\u7684header\uff0c\u5219\u6253\u5370\"-\" Response header %{VARNAME}o - \u5982\u679c\u6ca1\u6709\u627e\u5230\u6307\u5b9a\u7684header\uff0c\u5219\u6253\u5370\"-\" Cookie %{VARNAME}C - \u5982\u679c\u6ca1\u6709\u627e\u5230\u6307\u5b9a\u7684cookie\uff0c\u5219\u6253\u5370\"-\" \u65e5\u5fd7\u5143\u7d20\u8bf4\u660e\u8868(ServiceComb) Element Placeholder Comment TraceId %SCB-traceId \u6253\u5370ServiceComb\u751f\u6210\u7684trace id\uff0c\u627e\u4e0d\u5230\u5219\u6253\u5370\"-\" Invocation Context %{VARNAME}SCB-ctx \u6253\u5370key\u4e3a VARNAME \u7684invocation context\u503c\uff0c\u627e\u4e0d\u5230\u5219\u6253\u5370\"-\" Transport Method %SCB-transport \u6253\u5370\u5f53\u524d\u8c03\u7528\u7684 transport method \u3002 rest \u6216\u8005 highway Access log \u4e0e Request log \u7684\u65e5\u5fd7\u5143\u7d20\u5bf9\u6bd4 \u5143\u7d20\u540d\u79f0 Apache W3C\u65e5\u5fd7\u683c\u5f0f access log access log \u8bf4\u660e request log request log\u8bf4\u660e HTTP method %m cs-method support - support - HTTP status %s sc-status support - support - Duration in second %T support - support - Duration in millisecond %D support - support - Remote hostname %h support - support - Local hostname %v support - support - Local port %p support - support - Size of response %B support \u5982\u679c\u6d88\u606f\u4f53\u957f\u5ea6\u4e3a\u96f6\u5219\u6253\u5370\"0\" unsupported - Size of response %b support \u5982\u679c\u6d88\u606f\u4f53\u957f\u5ea6\u4e3a\u96f6\u5219\u6253\u5370\"-\" unsupported - First line of request %r support \u5305\u542bHTTP Method\u3001Uri\u3001Http\u7248\u672c\u4e09\u90e8\u5206\u5185\u5bb9 support \u5305\u542bHTTP Method\u3001Uri\u3001Http\u7248\u672c\u4e09\u90e8\u5206\u5185\u5bb9 URI path %U cs-uri-stem support - support - Query string %q cs-uri-query support - support - URI path and query string cs-uri support - support - Request protocol %H support - support - Datetime of the request %t support \u6536\u5230\u8bf7\u6c42\u7684\u65f6\u95f4\u3002\u9ed8\u8ba4\u683c\u5f0f\u4e3a\"EEE, dd MMM yyyy HH:mm:ss zzz\"\uff0c\u8bed\u8a00\u4e3a\u82f1\u6587\uff0c\u65f6\u533a\u4e3aGMT support \u53d1\u9001\u8bf7\u6c42\u7684\u65f6\u95f4\u3002\u9ed8\u8ba4\u683c\u5f0f\u4e3a\"EEE, dd MMM yyyy HH:mm:ss zzz\"\uff0c\u8bed\u8a00\u4e3a\u82f1\u6587\uff0c\u65f6\u533a\u4e3aGMT Configurable datetime the request of the request %{PATTERN}t support \u6536\u5230\u8bf7\u6c42\u7684\u65f6\u95f4\u3002\u6309\u7167\u6307\u5b9a\u7684\u683c\u5f0f\u6253\u5370\u65f6\u95f4\u6233\uff0c\u8bed\u8a00\u4e3a\u82f1\u6587\uff0c\u65f6\u533a\u4e3aGMT support \u53d1\u9001\u8bf7\u6c42\u7684\u65f6\u95f4\u3002\u6309\u7167\u6307\u5b9a\u7684\u683c\u5f0f\u6253\u5370\u65f6\u95f4\u6233\uff0c\u8bed\u8a00\u4e3a\u82f1\u6587\uff0c\u65f6\u533a\u4e3aGMT Configurable datetime the request of the request %{PATTERN TIMEZONE LOCALE}t support \u6536\u5230\u8bf7\u6c42\u7684\u65f6\u95f4\u3002\u6309\u7167\u6307\u5b9a\u7684\u683c\u5f0f\u3001\u8bed\u8a00\u3001\u65f6\u533a\u6253\u5370\u65f6\u95f4\u6233\u3002\u5141\u8bb8\u7701\u7565\u5176\u4e2d\u7684\u67d0\u90e8\u5206\u914d\u7f6e\uff08\u4f46\u4e24\u4e2a\u5206\u9694\u7b26\u53f7\" \"\u4e0d\u53ef\u7701\u7565\uff09\u3002 support \u53d1\u9001\u8bf7\u6c42\u7684\u65f6\u95f4\u3002\u6309\u7167\u6307\u5b9a\u7684\u683c\u5f0f\u3001\u8bed\u8a00\u3001\u65f6\u533a\u6253\u5370\u65f6\u95f4\u6233\u3002\u5141\u8bb8\u7701\u7565\u5176\u4e2d\u7684\u67d0\u90e8\u5206\u914d\u7f6e\uff08\u4f46\u4e24\u4e2a\u5206\u9694\u7b26\u53f7\" \"\u4e0d\u53ef\u7701\u7565\uff09\u3002 Request header %{VARNAME}i support \u5982\u679c\u6ca1\u6709\u627e\u5230\u6307\u5b9a\u7684header\uff0c\u5219\u6253\u5370\"-\" support \u5982\u679c\u6ca1\u6709\u627e\u5230\u6307\u5b9a\u7684header\uff0c\u5219\u6253\u5370\"-\" Response header %{VARNAME}o support \u5982\u679c\u6ca1\u6709\u627e\u5230\u6307\u5b9a\u7684header\uff0c\u5219\u6253\u5370\"-\" support \u5982\u679c\u6ca1\u6709\u627e\u5230\u6307\u5b9a\u7684header\uff0c\u5219\u6253\u5370\"-\" Cookie %{VARNAME}C support \u5982\u679c\u6ca1\u6709\u627e\u5230\u6307\u5b9a\u7684cookie\uff0c\u5219\u6253\u5370\"-\" support \u5982\u679c\u6ca1\u6709\u627e\u5230\u6307\u5b9a\u7684cookie\uff0c\u5219\u6253\u5370\"-\" TraceId %SCB-traceId support \u6253\u5370ServiceComb\u751f\u6210\u7684trace id\uff0c\u627e\u4e0d\u5230\u5219\u6253\u5370\"-\" support \u6253\u5370ServiceComb\u751f\u6210\u7684trace id\uff0c\u627e\u4e0d\u5230\u5219\u6253\u5370\"-\" Invocation Context %{VARNAME}SCB-ctx support \u6253\u5370key\u4e3a VARNAME \u7684invocation context\u503c\uff0c\u627e\u4e0d\u5230\u5219\u6253\u5370\"-\" support \u6253\u5370key\u4e3a VARNAME \u7684invocation context\u503c\uff0c\u627e\u4e0d\u5230\u5219\u6253\u5370\"-\" transport method %SCB-transport unsupported \u53ea\u652f\u6301 rest \u5f62\u5f0f\u8c03\u7528 support \u8c03\u7528\u4f7f\u7528\u7684transport method","title":"\u65e5\u5fd7\u683c\u5f0f\u914d\u7f6e"},{"location":"build-provider/access-log-configuration/#_5","text":"Access log Request log \u7684\u65e5\u5fd7\u6253\u5370\u5b9e\u73b0\u6846\u67b6\u9ed8\u8ba4\u91c7\u7528 Log4j \uff0c\u5e76\u63d0\u4f9b\u4e86\u4e00\u5957\u9ed8\u8ba4\u7684\u65e5\u5fd7\u6587\u4ef6\u914d\u7f6e\u3002\u7528\u6237\u53ef\u4ee5\u5728\u81ea\u5df1\u5b9a\u4e49\u7684 log4j.properties \u6587\u4ef6\u4e2d\u8986\u5199\u8fd9\u4e9b\u914d\u7f6e\u3002\u7528\u6237\u53ef\u914d\u7f6e\u7684\u65e5\u5fd7\u6587\u4ef6\u914d\u7f6e\u9879\u89c1\u4e0b\u8868\u3002 \u65e5\u5fd7\u6587\u4ef6\u914d\u7f6e\u9879 \u914d\u7f6e\u9879 \u9ed8\u8ba4\u503c \u542b\u4e49 \u8bf4\u660e paas.logs.accesslog.dir ${paas.logs.dir} \u65e5\u5fd7\u6587\u4ef6\u8f93\u51fa\u76ee\u5f55 \u4e0e\u666e\u901a\u65e5\u5fd7\u8f93\u51fa\u5230\u540c\u4e00\u4e2a\u76ee\u5f55\u4e2d paas.logs.accesslog.file access.log \u65e5\u5fd7\u6587\u4ef6\u540d - log4j.appender.access.MaxBackupIndex 10 \u6700\u5927\u4fdd\u5b58\u7684\u65e5\u5fd7\u6eda\u52a8\u6587\u4ef6\u4e2a\u6570 - log4j.appender.access.MaxFileSize 20MB \u65e5\u5fd7\u6587\u4ef6\u6700\u5927\u4f53\u79ef \u6b63\u5728\u8bb0\u5f55\u7684\u6587\u4ef6\u8fbe\u5230\u6b64\u5927\u5c0f\u65f6\u89e6\u53d1\u65e5\u5fd7\u6eda\u52a8\u5b58\u50a8 log4j.appender.access.logPermission rw------- \u65e5\u5fd7\u6587\u4ef6\u6743\u9650 - paas.logs.requestlog.dir ${paas.logs.dir} \u65e5\u5fd7\u6587\u4ef6\u8f93\u51fa\u76ee\u5f55 \u4e0e\u666e\u901a\u65e5\u5fd7\u8f93\u51fa\u5230\u540c\u4e00\u4e2a\u76ee\u5f55\u4e2d paas.logs.requestlog.file request.log \u65e5\u5fd7\u6587\u4ef6\u540d - log4j.appender.request.MaxBackupIndex 10 \u6700\u5927\u4fdd\u5b58\u7684\u65e5\u5fd7\u6eda\u52a8\u6587\u4ef6\u4e2a\u6570 - log4j.appender.request.MaxFileSize 20MB \u65e5\u5fd7\u6587\u4ef6\u6700\u5927\u4f53\u79ef \u6b63\u5728\u8bb0\u5f55\u7684\u6587\u4ef6\u8fbe\u5230\u6b64\u5927\u5c0f\u65f6\u89e6\u53d1\u65e5\u5fd7\u6eda\u52a8\u5b58\u50a8 log4j.appender.request.logPermission rw------- \u65e5\u5fd7\u6587\u4ef6\u6743\u9650 - \u6ce8\u610f\uff1a \u7531\u4e8e ServiceComb \u7684\u65e5\u5fd7\u6253\u5370\u529f\u80fd\u53ea\u4f9d\u8d56 slf4j \u7684\u63a5\u53e3\uff0c\u56e0\u6b64\u7528\u6237\u53ef\u4ee5\u9009\u62e9\u5176\u4ed6\u65e5\u5fd7\u6253\u5370\u6846\u67b6\uff0c\u9009\u62e9\u5176\u4ed6\u65e5\u5fd7\u6253\u5370\u6846\u67b6\u65f6\u9700\u8981\u7528\u6237\u81ea\u884c\u914d\u7f6e\u65e5\u5fd7\u6587\u4ef6\u8f93\u51fa\u9009\u9879\u3002","title":"\u65e5\u5fd7\u8f93\u51fa\u6587\u4ef6\u914d\u7f6e"},{"location":"build-provider/access-log-configuration/#logback","text":"\u9488\u5bf9\u91c7\u7528 logback \u4f5c\u4e3a\u65e5\u5fd7\u6253\u5370\u6846\u67b6\u7684\u9879\u76ee\uff0c\u9700\u8981\u5c06\u65e5\u5fd7\u6253\u5370\u6846\u67b6\u4f9d\u8d56\u4ece Log4j \u6539\u4e3a logback \u5e76\u6dfb\u52a0\u90e8\u5206\u914d\u7f6e\u4ee5\u4f7f log \u529f\u80fd\u6b63\u5e38\u751f\u6548\u3002","title":"\u65e5\u5fd7\u5b9e\u73b0\u6846\u67b6\u5207\u6362\u4e3a logback"},{"location":"build-provider/access-log-configuration/#1-log4j","text":"\u5728\u5c06\u65e5\u5fd7\u5b9e\u73b0\u6846\u67b6\u5207\u6362\u4e3a logback \u4e4b\u524d\uff0c\u9700\u8981\u68c0\u67e5\u9879\u76ee\u7684\u4f9d\u8d56\uff0c\u4ece\u4e2d\u6392\u9664\u6389 Log4j \u76f8\u5173\u7684\u4f9d\u8d56\u9879\u3002\u5728\u9879\u76ee\u4e2d\u8fd0\u884c maven \u547d\u4ee4 dependency:tree \uff0c\u627e\u51fa\u5176\u4e2d\u4f9d\u8d56\u4e86Log4j\u7684ServiceComb\u7ec4\u4ef6\uff0c\u5728\u5176 dependency \u4f9d\u8d56\u9879\u4e2d\u6dfb\u52a0\u5982\u4e0b\u914d\u7f6e\uff1a exclusion groupId org.slf4j /groupId artifactId slf4j-log4j12 /artifactId /exclusion","title":"1. \u6392\u9664 Log4j \u4f9d\u8d56"},{"location":"build-provider/access-log-configuration/#2-logback","text":"\u5728 pom \u6587\u4ef6\u4e2d\u6dfb\u52a0 logback \u7684\u4f9d\u8d56\u9879\uff1a dependency groupId org.slf4j /groupId artifactId slf4j-api /artifactId /dependency dependency groupId ch.qos.logback /groupId artifactId logback-classic /artifactId /dependency dependency groupId ch.qos.logback /groupId artifactId logback-core /artifactId /dependency","title":"2. \u6dfb\u52a0 logback \u4f9d\u8d56"},{"location":"build-provider/access-log-configuration/#3-access-log-request-log-logger","text":"ServiceComb \u63d0\u4f9b\u7684\u65e5\u5fd7\u6253\u5370\u7ec4\u4ef6\u662f\u83b7\u53d6\u540d\u4e3a accesslog requestlog \u7684 logger \u6765\u6253\u5370 access log \u548c request log \uff0c\u56e0\u6b64\u5c06\u65e5\u5fd7\u5b9e\u73b0\u6846\u67b6\u4ece Log4j \u5207\u6362\u4e3a logback \u7684\u5173\u952e\u5c31\u662f\u63d0\u4f9b\u4e00\u4e2a\u540d\u4e3a accesslog requestlog \u7684 Logger\uff0c\u5e76\u4e3a\u5176\u914d\u7f6e\u597d\u65e5\u5fd7\u8f93\u51fa\u6587\u4ef6\u3002\u4ee5\u4e0b\u662f access log request log \u5728 logback \u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u914d\u7f6e\u793a\u4f8b\uff08\u672c\u793a\u4f8b\u4ec5\u5c55\u793a access log request log\u76f8\u5173\u7684\u914d\u7f6e\uff0c\u5176\u4ed6\u65e5\u5fd7\u914d\u7f6e\u5747\u7701\u7565\uff09\uff1a ?xml version= 1.0 encoding= UTF-8 ? configuration !-- \u7528\u6237\u53ef\u6839\u636e\u9700\u8981\u81ea\u5b9a\u4e49appender -- appender name= ACCESSLOG class= ch.qos.logback.core.rolling.RollingFileAppender file ./logs/access.log /file rollingPolicy class= ch.qos.logback.core.rolling.TimeBasedRollingPolicy fileNamePattern ./logs/access-%d{yyyy-MM-dd}.log /fileNamePattern /rollingPolicy !-- \u6ce8\u610f\uff1a\u7531\u4e8eaccess log\u7684\u5185\u5bb9\u662f\u5728\u4ee3\u7801\u4e2d\u5b8c\u6210\u683c\u5f0f\u5316\u7684\uff0c\u56e0\u6b64\u8fd9\u91cc\u53ea\u9700\u8f93\u51famessage\u5373\u53ef\uff0c\u65e0\u9700\u6dfb\u52a0\u989d\u5916\u7684\u683c\u5f0f -- encoder pattern %msg%n /pattern /encoder /appender appender name= REQUESTLOG class= ch.qos.logback.core.rolling.RollingFileAppender file ./logs/request.log /file rollingPolicy class= ch.qos.logback.core.rolling.TimeBasedRollingPolicy fileNamePattern ./logs/access-%d{yyyy-MM-dd}.log /fileNamePattern /rollingPolicy !-- \u6ce8\u610f\uff1a\u7531\u4e8erequest log\u7684\u5185\u5bb9\u662f\u5728\u4ee3\u7801\u4e2d\u5b8c\u6210\u683c\u5f0f\u5316\u7684\uff0c\u56e0\u6b64\u8fd9\u91cc\u53ea\u9700\u8f93\u51famessage\u5373\u53ef\uff0c\u65e0\u9700\u6dfb\u52a0\u989d\u5916\u7684\u683c\u5f0f -- encoder pattern %msg%n /pattern /encoder /appender !-- \u63d0\u4f9b\u4e00\u4e2a\u540d\u4e3a accesslog \u7684logger\u4f9baccess log\u6253\u5370\u7ec4\u4ef6\u4f7f\u7528 -- logger name= accesslog level= INFO additivity= false appender-ref ref= ACCESSLOG / /logger !-- \u63d0\u4f9b\u4e00\u4e2a\u540d\u4e3a requestlog \u7684logger\u4f9brequest log\u6253\u5370\u7ec4\u4ef6\u4f7f\u7528 -- logger name= requestlog level= INFO additivity= false appender-ref ref= REQUESTLOG / /logger /configuration","title":"3. \u914d\u7f6e access log &amp; request log \u7ec4\u4ef6\u7684 logger"},{"location":"build-provider/access-log-configuration/#access-log-request-log_1","text":"\u7528\u6237\u53ef\u4ee5\u5229\u7528 ServiceComb \u63d0\u4f9b\u7684 AccessLogItem \u6269\u5c55\u673a\u5236\uff0c\u5b9a\u5236\u81ea\u5df1\u7684 AccessLogItem\uff0c \u6211\u4eec\u628a Request Log \u4e5f\u5f53\u505a\u4e00\u79cd Access Log\u3002","title":"\u81ea\u5b9a\u4e49\u6269\u5c55 Access Log &amp; Request Log"},{"location":"build-provider/access-log-configuration/#_6","text":"AccessLogItem public interface AccessLogItem T { // \u4eceServer\u7aef\u83b7\u53d6\u4fe1\u606f\uff0c\u6253\u5370 Access Log \u65e5\u5fd7 default void appendServerFormattedItem(ServerAccessLogEvent accessLogEvent, StringBuilder builder) { } // \u4eceClient \u7aef\u83b7\u53d6\u4fe1\u606f\uff0c \u6253\u5370 Request Log default void appendClientFormattedItem(InvocationFinishEvent clientLogEvent, StringBuilder builder) { } } AccessLogItem \u7684\u5b9a\u4e49\u5982\u4e0a\u6240\u793a Server \u7aef \u6bcf\u6536\u5230\u4e00\u4e2a\u8bf7\u6c42\uff0c\u4f1a\u89e6\u53d1\u4e00\u6b21 Access Log \u65e5\u5fd7\u6253\u5370\u3002 Client \u7aef \u6bcf\u6b21\u5bf9\u5916\u8fdc\u7a0b\u8c03\u7528\u7ed3\u675f\uff0c\u4f1a\u89e6\u53d1\u4e00\u6b21 Request Log \u65e5\u5fd7\u6253\u5370\u3002 \u6bcf\u6b21\u65e5\u5fd7\u6253\u5370\uff0cSDK \u90fd\u4f1a\u904d\u5386\u6709\u6548\u7684 AccessLogItem \uff0c\u8c03\u7528\u5bf9\u5e94\u7684\u65b9\u6cd5\u83b7\u53d6\u6b64 Item \u751f\u6210\u7684 Log\u7247 \u6bb5\uff0c\u5e76\u5c06\u5168\u90e8\u7247\u6bb5\u62fc\u63a5\u6210\u4e00\u6761 Log \u6253\u5370\u5230\u65e5\u5fd7\u6587\u4ef6\u4e2d\u3002 VertxRestAccessLogItemMeta // pattern\u5360\u4f4d\u7b26\u524d\u7f00 protected String prefix; // pattern\u5360\u4f4d\u7b26\u540e\u7f00 protected String suffix; // \u4f18\u5148\u7ea7\u5e8f\u53f7 protected int order; // AccessLogItem\u6784\u9020\u5668 protected AccessLogItemCreator RoutingContext accessLogItemCreator; VertxRestAccessLogItemMeta \u5305\u542b\u5982\u4e0a\u5c5e\u6027\uff0c\u5b83\u5b9a\u4e49\u4e86 ServiceComb \u5982\u4f55\u89e3\u6790 pattern \u5b57\u7b26\u4e32\u4ee5\u83b7\u5f97\u7279\u5b9a\u7684 AccessLogItem\u3002 \u5982\u679c\u7528\u6237\u60f3\u8981\u5b9a\u4e49\u4e00\u4e2a\u5360\u4f4d\u7b26\u4e3a %user-defined \u7684 AccessLogItem \uff0c\u5219\u9700\u8981\u58f0\u660e\u4e00\u4e2a VertxRestAccessLogItemMeta \u7684\u5b50\u7c7b\uff0c\u8bbe\u7f6e prefix=\"%user-defined\"\uff0csuffix=null\uff0c\u5f53 AccessLogPatternParser \u89e3\u6790\u5230 \"%user-defined\" \u65f6\uff0c\u4ece\u6b64 meta \u7c7b\u4e2d\u53d6\u5f97 AccessLogItemCreator \u521b\u5efa\u5bf9\u5e94\u7684 AccessLogItem \u3002 \u6ce8\u610f \uff1a\u7531\u4e8e \"%user-defined\" \u5360\u4f4d\u7b26\u4e2d\u6ca1\u6709\u53d8\u91cf\u90e8\u5206\uff0c\u56e0\u6b64\u8c03\u7528 AccessLogItemCreator \u4f20\u5165\u7684\u914d\u7f6e\u53c2\u6570\u4e3anull\u3002 \u5982\u679c\u7528\u6237\u60f3\u8981\u5b9a\u4e49\u4e00\u4e2a\u5360\u4f4d\u7b26\u4e3a %{VARNAME}user-defined \u7684 AccessLogItem \uff0c\u5219\u58f0\u660e\u7684 VertxRestAccessLogItemMeta \u5b50\u7c7b\u4e2d\uff0c\u8bbe\u7f6eprefix=\"%{\"\uff0csuffix=\"}user-defined\"\uff0c\u5f53 AccessLogPatternParser \u89e3\u6790\u5230 \"%{VARNAME}user-defined\"\u65f6\uff0c\u4f1a\u622a\u53d6\u51fa\"VARNAME\"\u4f5c\u4e3a\u914d\u7f6e\u53c2\u6570\u4f20\u5165 AccessLogItemCreator \uff0c\u521b\u5efa\u4e00\u4e2a AccessLogItem \u3002 VertxRestAccessLogItemMeta \u6709\u4e00\u4e2a\u5b50\u7c7b CompositeVertxRestAccessLogItemMeta \uff0c\u5f53\u7528\u6237\u9700\u8981\u5b9a\u4e49\u591a\u4e2a AccessLogItem \u65f6\uff0c\u53ef\u4ee5\u5c06\u591a\u4e2a VertxRestAccessLogItemMeta \u805a\u5408\u5230 CompositeVertxRestAccessLogItemMeta \u4e2d\u3002Parser \u52a0\u8f7d\u5230\u7c7b\u578b\u4e3a CompositeVertxRestAccessLogItemMeta \u7684AccessLogItemMeta\u65f6\uff0c\u4f1a\u8c03\u7528\u5176 getAccessLogItemMetas() \u65b9\u6cd5\u83b7\u5f97\u4e00\u7ec4 AccessLogItemMeta\u3002 VertxRestAccessLogItemMeta \u4f7f\u7528SPI\u673a\u5236\u52a0\u8f7d\uff0c\u800c CompositeVertxRestAccessLogItemMeta \u53ef\u4ee5\u8ba9\u7528\u6237\u53ea\u5728SPI\u914d\u7f6e\u6587\u4ef6\u4e2d\u914d\u7f6e\u4e00\u6761\u8bb0\u5f55\u5c31\u52a0\u8f7d\u591a\u6761meta\u4fe1\u606f\uff0c\u7ed9\u4e86\u7528\u6237\u66f4\u7075\u6d3b\u7684\u9009\u62e9\u3002 AccessLogItemCreator public interface AccessLogItemCreator T { // \u63a5\u6536\u914d\u7f6e\u503c\uff0c\u8fd4\u56de\u4e00\u4e2aAccessLogItem\u3002\u5982\u679cAccessLogItem\u7684\u5360\u4f4d\u7b26\u6ca1\u6709\u53ef\u53d8\u7684\u914d\u7f6e\u503c\u90e8\u5206\uff0c\u5219\u6b64\u65b9\u6cd5\u4f1a\u63a5\u6536\u5230null\u3002 AccessLogItem T createItem(String config); } \u7528\u6237\u901a\u8fc7\u8bbe\u7f6e\u5728\u81ea\u5b9a\u4e49\u7684 VertxRestAccessLogItemMeta \u4e2d\u7684 AccessLogItemCreator \u5b9e\u4f8b\u5316\u81ea\u5df1\u7684 AccessLogItem \u3002\u7531\u4e8e\u8fd9\u662f\u4e00\u4e2a\u51fd\u6570\u5f0f\u63a5\u53e3\uff0c\u5f53 AccessLogItem \u7684\u521d\u59cb\u5316\u65b9\u5f0f\u8f83\u7b80\u5355\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 Lambda\u8868\u8fbe\u5f0f\u5b9a\u4e49Creator\uff0c\u4ee5\u7b80\u5316\u5f00\u53d1\u3002","title":"\u76f8\u5173\u7c7b\u8bf4\u660e"},{"location":"build-provider/access-log-configuration/#accesslogitemmeta","text":"AccessLogItemMeta \u52a0\u8f7d\u8fdb Parser \u540e\uff0c\u4f1a\u8fdb\u884c\u4e00\u6b21\u6392\u5e8f\u3002Parser \u89e3\u6790 pattern \u4e32\u65f6\u4f1a\u4ece\u524d\u5230\u540e\u5339\u914d meta list\uff0c\u603b\u7684\u5339\u914d\u89c4\u5219\u5982\u4e0b\uff1a \u4f18\u5148\u5339\u914d\u9ad8\u4f18\u5148\u7ea7\u7684meta\u3002 \u4f18\u5148\u5339\u914d\u6709\u540e\u7f00\u7684meta\uff0c\u5f53\u5339\u914d\u4e0a\u591a\u4e2a\u6709\u540e\u7f00meta\u65f6\uff0c\u53d6\u524d\u540e\u7f00\u76f8\u8ddd\u6700\u5c0f\u7684\u4e00\u4e2a\u3002 \u4f18\u5148\u5339\u914d\u5360\u4f4d\u7b26\u957f\u7684meta\uff0c\u4f8b\u5982\u6709\u4e24\u4e2a meta\uff0c\"%abc\"\u548c\"%a\"\uff0c\u5982\u679c\u5339\u914d\u4e2d\u4e86\"%abc\"\u5219\u76f4\u63a5\u8fd4\u56de\uff0c\u4e0d\u518d\u5339\u914d\"%a\"\u3002","title":"AccessLogItemMeta \u7684\u5339\u914d\u89c4\u5219"},{"location":"build-provider/access-log-configuration/#_7","text":"\u6269\u5c55\u81ea\u5b9a\u4e49 AccessLogItem \u9996\u5148\u7528\u6237\u9700\u8981 AccessLogItem \u63a5\u53e3\u5b9e\u73b0\u81ea\u5df1\u7684 item\uff1a public class UserDefinedAccessLogItem implements AccessLogItem RoutingContext { private String config; public UserDefinedAccessLogItem(String config) { this.config = config; } @Override public void appendServerFormattedItem(ServerAccessLogEvent accessLogEvent, StringBuilder builder) { builder.append( user-defined--server- ) .append(accessLogEvent.getRoutingContext().response().getStatusCode()) .append( - ) .append(config); } @Override public void appendClientFormattedItem(InvocationFinishEvent clientLogEvent, StringBuilder builder) { builder.append( user-server-defined- ) .append(clientLogEvent.getResponse().getStatus()) .append( - ) .append(config); } } \u5b9a\u4e49 AccessLogItem \u7684 meta \u7c7b \u7ee7\u627f VertxRestAccessLogItemMeta \u6216 CompositeVertxRestAccessLogItemMeta \u7c7b\uff0c\u5b9a\u4e49AccessLogItem\u7684\u524d\u540e\u7f00\u7b49\u4fe1\u606f\uff1a public class UserDefinedCompositeExtendedAccessLogItemMeta extends CompositeVertxRestAccessLogItemMeta { private static final List VertxRestAccessLogItemMeta META_LIST = new ArrayList (); static { META_LIST.add(new VertxRestAccessLogItemMeta( %{ , }user-defined , UserDefinedAccessLogItem::new)); } @Override public List VertxRestAccessLogItemMeta getAccessLogItemMetas() { return META_LIST; } } \u914d\u7f6eSPI\u52a0\u8f7d\u6587\u4ef6 \u5728 resources/META-INF/services/ \u76ee\u5f55\u4e0b\u5b9a\u4e49\u4e00\u4e2a\u540d\u4e3a \"org.apache.servicecomb.transport.rest.vertx.accesslog.parser.VertxRestAccessLogItemMeta\" \u7684\u6587\u4ef6\uff0c\u5c06\u4e0a\u4e00\u6b65\u4e2d\u5b9a\u4e49\u7684meta\u7c7b\u5b8c\u6574\u7c7b\u540d\u586b\u5199\u5230\u8be5\u6587\u4ef6\u4e2d\uff0c\u4f9bParser\u52a0\u8f7dmeta\u7c7b\u3002 \u914d\u7f6e Access Log \u7684 pattern # \u670d\u52a1\u7aef\u914d\u7f6e servicecomb: accesslog: enabled: true ## \u5e94\u7528\u4f5c\u4e3a\u670d\u52a1\u7aef\uff0c\u5f00\u542f Access log pattern: %{param}user-defined ## Access log \u65e5\u5fd7\u683c\u5f0f request: enabled: true ## \u5e94\u7528\u4f5c\u4e3a\u5ba2\u6237\u7aef\uff0c\u5f00\u542f Request log pattern: %{param}user-defined ## Request log \u65e5\u5fd7\u683c\u5f0f \u4ee5\u670d\u52a1\u7aef\u4e3a\u4f8b\uff0c \u8fd0\u884c\u670d\u52a1\u89e6\u53d1Access Log\u6253\u5370\uff0c\u5047\u8bbe\u8bf7\u6c42\u8fd4\u56de\u72b6\u6001\u7801\u662f 200\uff0c\u5219\u53ef\u4ee5\u770b\u5230Access Log\u6253\u5370\u5185\u5bb9\u4e3a \" user-defined--server-200-param \"\u3002","title":"\u793a\u4f8b\u8bf4\u660e"},{"location":"build-provider/access-log-configuration/#_8","text":"","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"build-provider/access-log-configuration/#microserviceyaml","text":"## other configurations omitted servicecomb: accesslog: enabled: true ## \u5e94\u7528\u4f5c\u4e3a\u670d\u52a1\u7aef\uff0c\u5f00\u542f Access log pattern: %h - - %t %r %s %B %D ## Access log \u65e5\u5fd7\u683c\u5f0f request: enabled: true ## \u5e94\u7528\u4f5c\u4e3a\u5ba2\u6237\u7aef\uff0c\u5f00\u542f Request log pattern: %h %SCB-transport - - %t %r %s %D ## Request log \u65e5\u5fd7\u683c\u5f0f","title":"microservice.yaml\u6587\u4ef6\u4e2d\u7684\u914d\u7f6e"},{"location":"build-provider/access-log-configuration/#log4jproperties","text":"# log configuration item paas.logs.dir=../logs/ paas.logs.accesslog.file=access.log paas.logs.requestlog.file=request.log # access log File appender log4j.appender.access.MaxBackupIndex=10 log4j.appender.access.MaxFileSize=20MB log4j.appender.access.logPermission=rw------- # request log File appender log4j.appender.request.MaxBackupIndex=10 log4j.appender.request.MaxFileSize=20MB log4j.appender.request.logPermission=rw-------","title":"log4j.properties\u6587\u4ef6\u4e2d\u7684\u914d\u7f6e"},{"location":"build-provider/bootup/","text":"\u6982\u5ff5\u9610\u8ff0 \u670d\u52a1\u63d0\u4f9b\u8005\u7684\u542f\u52a8\u8fc7\u7a0b\u5206\u4e3a\u521d\u59cb\u5316Log4j\u3001bean\u52a0\u8f7d\uff08\u5305\u62ec\u914d\u7f6e\u52a0\u8f7d\uff09\u548c\u670d\u52a1\u6ce8\u518c\u4e09\u90e8\u5206\u3002 \u521d\u59cb\u5316Log4j Log4jUtils \u9ed8\u8ba4\u4f1a\u4ece classpath\\*:config/base/log4j.properties \u548c classpath\\*:config/log4j.properties \u4e24\u4e2a\u8def\u5f84\u8bfb\u53d6log4j\u914d\u7f6e\u5e76\u5408\u5e76\uff0c\u5c06\u5176\u4f20\u9012\u7ed9Log4j\u7684 PropertyConfigurator \u65b9\u6cd5\u521d\u59cb\u5316Log4j\u3002\u5982\u679c\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u914d\u7f6e\u6587\u4ef6\u662f\u5728\u78c1\u76d8\u4e0a\uff0c\u4e14\u5176\u6240\u5728\u76ee\u5f55\u6709\u5199\u6743\u9650\uff0c\u5219\u5c06\u5408\u5e76\u7684\u914d\u7f6e\u8f93\u51fa\u5230\u8be5\u76ee\u5f55\uff0c\u4ee5\u4fbf\u4e8e\u7ef4\u62a4\u65f6\u89c2\u5bdf\u751f\u6548\u7684\u53c2\u6570\u3002 bean\u52a0\u8f7d BeanUtils \u9ed8\u8ba4\u4f1a\u4ece classpath\\*:META-INF/spring/\\*.bean.xml \u8def\u5f84\u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6\uff0c\u5e76\u5c06\u5176\u4f20\u9012\u7ed9Spring\u6846\u67b6\u7684 ClassPathXmlApplicationContext \u5b8c\u6210\u5e94\u7528\u4e0a\u4e0b\u6587\u52a0\u8f7d\u3002\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u4f1a\u52a0\u8f7dfoundation-config\u6a21\u5757\u7684bean\uff0c\u5b8c\u6210\u914d\u7f6e\u52a0\u8f7d\u3002 \u670d\u52a1\u6ce8\u518c \u5728Spring context\u52a0\u8f7d\u5b8c\u6210\u540e\uff0c org.apache.servicecomb.core.CseApplicationListener \u4f1a\u52a0\u8f7dhandler\u914d\u7f6e\u3001\u52a0\u8f7dprovider\u7684schema\u4fe1\u606f\uff0c\u6700\u540e\u5c06\u5fae\u670d\u52a1\u4fe1\u606f\u6ce8\u518c\u5230\u670d\u52a1\u4e2d\u5fc3\u3002 \u8bf4\u660e\uff1a ServiceComb\u7684\u914d\u7f6e\u9879\u5206\u4e3a\u4e09\u4e2a\u5c42\u6b21\uff1a\u914d\u7f6e\u4e2d\u5fc3\u3001\u73af\u5883\u53d8\u91cf\u3001\u672c\u5730\u6587\u4ef6\uff0c\u4e09\u8005\u4f18\u5148\u7ea7\u4f9d\u6b21\u9012\u51cf\uff0c\u9ad8\u4f18\u5148\u7ea7\u4e2d\u7684\u914d\u7f6e\u9879\u8986\u76d6\u4f4e\u4f18\u5148\u7ea7\u540c\u540d\u914d\u7f6e\u9879\u3002\u5b58\u653e\u5728\u914d\u7f6e\u4e2d\u5fc3\u7684\u914d\u7f6e\u9879\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u4fee\u6539\u3002","title":"Bootup"},{"location":"build-provider/bootup/#_1","text":"\u670d\u52a1\u63d0\u4f9b\u8005\u7684\u542f\u52a8\u8fc7\u7a0b\u5206\u4e3a\u521d\u59cb\u5316Log4j\u3001bean\u52a0\u8f7d\uff08\u5305\u62ec\u914d\u7f6e\u52a0\u8f7d\uff09\u548c\u670d\u52a1\u6ce8\u518c\u4e09\u90e8\u5206\u3002 \u521d\u59cb\u5316Log4j Log4jUtils \u9ed8\u8ba4\u4f1a\u4ece classpath\\*:config/base/log4j.properties \u548c classpath\\*:config/log4j.properties \u4e24\u4e2a\u8def\u5f84\u8bfb\u53d6log4j\u914d\u7f6e\u5e76\u5408\u5e76\uff0c\u5c06\u5176\u4f20\u9012\u7ed9Log4j\u7684 PropertyConfigurator \u65b9\u6cd5\u521d\u59cb\u5316Log4j\u3002\u5982\u679c\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u914d\u7f6e\u6587\u4ef6\u662f\u5728\u78c1\u76d8\u4e0a\uff0c\u4e14\u5176\u6240\u5728\u76ee\u5f55\u6709\u5199\u6743\u9650\uff0c\u5219\u5c06\u5408\u5e76\u7684\u914d\u7f6e\u8f93\u51fa\u5230\u8be5\u76ee\u5f55\uff0c\u4ee5\u4fbf\u4e8e\u7ef4\u62a4\u65f6\u89c2\u5bdf\u751f\u6548\u7684\u53c2\u6570\u3002 bean\u52a0\u8f7d BeanUtils \u9ed8\u8ba4\u4f1a\u4ece classpath\\*:META-INF/spring/\\*.bean.xml \u8def\u5f84\u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6\uff0c\u5e76\u5c06\u5176\u4f20\u9012\u7ed9Spring\u6846\u67b6\u7684 ClassPathXmlApplicationContext \u5b8c\u6210\u5e94\u7528\u4e0a\u4e0b\u6587\u52a0\u8f7d\u3002\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u4f1a\u52a0\u8f7dfoundation-config\u6a21\u5757\u7684bean\uff0c\u5b8c\u6210\u914d\u7f6e\u52a0\u8f7d\u3002 \u670d\u52a1\u6ce8\u518c \u5728Spring context\u52a0\u8f7d\u5b8c\u6210\u540e\uff0c org.apache.servicecomb.core.CseApplicationListener \u4f1a\u52a0\u8f7dhandler\u914d\u7f6e\u3001\u52a0\u8f7dprovider\u7684schema\u4fe1\u606f\uff0c\u6700\u540e\u5c06\u5fae\u670d\u52a1\u4fe1\u606f\u6ce8\u518c\u5230\u670d\u52a1\u4e2d\u5fc3\u3002 \u8bf4\u660e\uff1a ServiceComb\u7684\u914d\u7f6e\u9879\u5206\u4e3a\u4e09\u4e2a\u5c42\u6b21\uff1a\u914d\u7f6e\u4e2d\u5fc3\u3001\u73af\u5883\u53d8\u91cf\u3001\u672c\u5730\u6587\u4ef6\uff0c\u4e09\u8005\u4f18\u5148\u7ea7\u4f9d\u6b21\u9012\u51cf\uff0c\u9ad8\u4f18\u5148\u7ea7\u4e2d\u7684\u914d\u7f6e\u9879\u8986\u76d6\u4f4e\u4f18\u5148\u7ea7\u540c\u540d\u914d\u7f6e\u9879\u3002\u5b58\u653e\u5728\u914d\u7f6e\u4e2d\u5fc3\u7684\u914d\u7f6e\u9879\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u4fee\u6539\u3002","title":"\u6982\u5ff5\u9610\u8ff0"},{"location":"build-provider/catalog/","text":"\u5f00\u53d1\u670d\u52a1\u63d0\u4f9b\u8005 \u670d\u52a1\u5b9a\u4e49 \u5b9a\u4e49\u670d\u52a1\u5951\u7ea6 \u4f7f\u7528\u9690\u5f0f\u5951\u7ea6 \u4f7f\u7528Swagger\u6ce8\u89e3 \u7528SpringMVC\u5f00\u53d1\u5fae\u670d\u52a1 \u7528JAX-RS\u5f00\u53d1\u5fae\u670d\u52a1 \u7528\u900f\u660eRPC\u5f00\u53d1\u5fae\u670d\u52a1 \u63a5\u53e3\u5b9a\u4e49\u548c\u6570\u636e\u7c7b\u578b \u670d\u52a1\u76d1\u542c\u5730\u5740\u548c\u53d1\u5e03\u5730\u5740 \u7ebf\u7a0b\u6c60 \u670d\u52a1\u542f\u52a8\u4e8b\u4ef6 \u670d\u52a1\u914d\u7f6e \u9650\u6d41\u7b56\u7565 \u53c2\u6570\u6548\u9a8c \u7a0b\u5e8f\u542f\u52a8\u903b\u8f91 Access Log\u914d\u7f6e","title":"\u5f00\u53d1\u670d\u52a1\u63d0\u4f9b\u8005"},{"location":"build-provider/catalog/#_1","text":"\u670d\u52a1\u5b9a\u4e49 \u5b9a\u4e49\u670d\u52a1\u5951\u7ea6 \u4f7f\u7528\u9690\u5f0f\u5951\u7ea6 \u4f7f\u7528Swagger\u6ce8\u89e3 \u7528SpringMVC\u5f00\u53d1\u5fae\u670d\u52a1 \u7528JAX-RS\u5f00\u53d1\u5fae\u670d\u52a1 \u7528\u900f\u660eRPC\u5f00\u53d1\u5fae\u670d\u52a1 \u63a5\u53e3\u5b9a\u4e49\u548c\u6570\u636e\u7c7b\u578b \u670d\u52a1\u76d1\u542c\u5730\u5740\u548c\u53d1\u5e03\u5730\u5740 \u7ebf\u7a0b\u6c60 \u670d\u52a1\u542f\u52a8\u4e8b\u4ef6 \u670d\u52a1\u914d\u7f6e \u9650\u6d41\u7b56\u7565 \u53c2\u6570\u6548\u9a8c \u7a0b\u5e8f\u542f\u52a8\u903b\u8f91 Access Log\u914d\u7f6e","title":"\u5f00\u53d1\u670d\u52a1\u63d0\u4f9b\u8005"},{"location":"build-provider/code-first/","text":"\u4f7f\u7528\u9690\u5f0f\u5951\u7ea6 \u6982\u5ff5\u9610\u8ff0 \u9690\u5f0f\u5951\u7ea6\u662f\u6307ServiceComb\u6839\u636e\u670d\u52a1\u5b9e\u73b0\u7c7b\u81ea\u52a8\u751f\u6210\u7684\u670d\u52a1\u5951\u7ea6\u3002 \u573a\u666f\u63cf\u8ff0 \u7528\u6237\u901a\u8fc7\u9690\u5f0f\u5951\u7ea6\u529f\u80fd\uff0c\u53ef\u4ee5\u4e0d\u9884\u5148\u5b9a\u4e49\u5951\u7ea6\u548c\u63a5\u53e3\uff0c\u76f4\u63a5\u5b9a\u4e49\u5b9e\u73b0\u7c7b\uff0c\u5728\u670d\u52a1\u542f\u52a8\u65f6\uff0c\u6839\u636e\u5b9e\u73b0\u7c7b\u81ea\u52a8\u751f\u6210\u5951\u7ea6\uff0c\u5e76\u6ce8\u518c\u5230\u670d\u52a1\u4e2d\u5fc3\u3002 \u6d89\u53caAPI \u9690\u5f0f\u5951\u7ea6\u53ef\u7528\u4e8eSpring MVC\u3001JAX-RS\u3001\u900f\u660eRPC\u4e09\u79cd\u5f00\u53d1\u6a21\u5f0f\uff0c\u5177\u4f53\u4f7f\u7528\u53c2\u89c13.4 \u7528SpringMVC\u5f00\u53d1\u5fae\u670d\u52a1\u30013.5 \u7528JAX-RS\u5f00\u53d1\u5fae\u670d\u52a1\u548c3.6 \u7528\u900f\u660eRPC\u5f00\u53d1\u5fae\u670d\u52a1\u3002 \u4f7f\u7528\u900f\u660eRPC\u6a21\u5f0f\u5f00\u53d1\u5fae\u670d\u52a1\u65f6\uff0c\u7531\u4e8e\u4ece\u4ee3\u7801\u4e0a\u65e0\u6cd5\u5206\u8fa8\u5fae\u670d\u52a1\u5f00\u53d1\u4eba\u5458\u671f\u671b\u5982\u4f55\u5b9a\u4e49\u5951\u7ea6\uff0c\u6240\u4ee5\u751f\u6210\u7684\u5951\u7ea6\u5168\u662fPOST\u65b9\u6cd5\uff0c\u6240\u6709method\u7684\u5165\u53c2\u88ab\u5305\u88c5\u4e3a\u4e00\u4e2aclass\uff0c\u4f5c\u4e3abody\u53c2\u6570\u4f20\u9012\uff0c\u6240\u4ee5\u5efa\u8bae\u4f7f\u7528\u9690\u5f0f\u5951\u7ea6\u5f00\u53d1provider\u65f6\uff0c\u9009\u62e9SpringMVC\u6216JAX-RS\u5f00\u53d1\u6a21\u5f0f\uff0c\u53ef\u4ee5\u5f97\u5230\u5b8c\u6574\u7684RESTful\u58f0\u660e\u3002","title":"\u4f7f\u7528\u9690\u5f0f\u5951\u7ea6"},{"location":"build-provider/code-first/#_1","text":"","title":"\u4f7f\u7528\u9690\u5f0f\u5951\u7ea6"},{"location":"build-provider/code-first/#_2","text":"\u9690\u5f0f\u5951\u7ea6\u662f\u6307ServiceComb\u6839\u636e\u670d\u52a1\u5b9e\u73b0\u7c7b\u81ea\u52a8\u751f\u6210\u7684\u670d\u52a1\u5951\u7ea6\u3002","title":"\u6982\u5ff5\u9610\u8ff0"},{"location":"build-provider/code-first/#_3","text":"\u7528\u6237\u901a\u8fc7\u9690\u5f0f\u5951\u7ea6\u529f\u80fd\uff0c\u53ef\u4ee5\u4e0d\u9884\u5148\u5b9a\u4e49\u5951\u7ea6\u548c\u63a5\u53e3\uff0c\u76f4\u63a5\u5b9a\u4e49\u5b9e\u73b0\u7c7b\uff0c\u5728\u670d\u52a1\u542f\u52a8\u65f6\uff0c\u6839\u636e\u5b9e\u73b0\u7c7b\u81ea\u52a8\u751f\u6210\u5951\u7ea6\uff0c\u5e76\u6ce8\u518c\u5230\u670d\u52a1\u4e2d\u5fc3\u3002","title":"\u573a\u666f\u63cf\u8ff0"},{"location":"build-provider/code-first/#api","text":"\u9690\u5f0f\u5951\u7ea6\u53ef\u7528\u4e8eSpring MVC\u3001JAX-RS\u3001\u900f\u660eRPC\u4e09\u79cd\u5f00\u53d1\u6a21\u5f0f\uff0c\u5177\u4f53\u4f7f\u7528\u53c2\u89c13.4 \u7528SpringMVC\u5f00\u53d1\u5fae\u670d\u52a1\u30013.5 \u7528JAX-RS\u5f00\u53d1\u5fae\u670d\u52a1\u548c3.6 \u7528\u900f\u660eRPC\u5f00\u53d1\u5fae\u670d\u52a1\u3002 \u4f7f\u7528\u900f\u660eRPC\u6a21\u5f0f\u5f00\u53d1\u5fae\u670d\u52a1\u65f6\uff0c\u7531\u4e8e\u4ece\u4ee3\u7801\u4e0a\u65e0\u6cd5\u5206\u8fa8\u5fae\u670d\u52a1\u5f00\u53d1\u4eba\u5458\u671f\u671b\u5982\u4f55\u5b9a\u4e49\u5951\u7ea6\uff0c\u6240\u4ee5\u751f\u6210\u7684\u5951\u7ea6\u5168\u662fPOST\u65b9\u6cd5\uff0c\u6240\u6709method\u7684\u5165\u53c2\u88ab\u5305\u88c5\u4e3a\u4e00\u4e2aclass\uff0c\u4f5c\u4e3abody\u53c2\u6570\u4f20\u9012\uff0c\u6240\u4ee5\u5efa\u8bae\u4f7f\u7528\u9690\u5f0f\u5951\u7ea6\u5f00\u53d1provider\u65f6\uff0c\u9009\u62e9SpringMVC\u6216JAX-RS\u5f00\u53d1\u6a21\u5f0f\uff0c\u53ef\u4ee5\u5f97\u5230\u5b8c\u6574\u7684RESTful\u58f0\u660e\u3002","title":"\u6d89\u53caAPI"},{"location":"build-provider/define-contract/","text":"\u5b9a\u4e49\u670d\u52a1\u5951\u7ea6 `` \u6982\u5ff5\u9610\u8ff0 \u670d\u52a1\u5951\u7ea6\uff0c\u6307\u57fa\u4e8eOpenAPI\u89c4\u8303\u7684\u5fae\u670d\u52a1\u63a5\u53e3\u5951\u7ea6\uff0c\u662f\u670d\u52a1\u7aef\u4e0e\u6d88\u8d39\u7aef\u5bf9\u4e8e\u63a5\u53e3\u7684\u5b9a\u4e49\u3002java chassis\u63d0\u4f9b\u4e86\u4e24\u79cd\u65b9\u5f0f\u5b9a\u4e49\u5951\u7ea6\uff1acode first\u548ccontract first\u3002 * code first producer\u4f7f\u7528Jax-RS\u6216SpringMVC\u7684RESTful annotation\u58f0\u660e\u63a5\u53e3\u7684\u8f93\u5165\u3001\u8f93\u51fa\u53c2\u6570\uff0c\u6216\u8005\u518d\u914d\u5408OpenAPI\u7684annotation\uff0c\u589e\u52a0\u4eba\u7c7b\u53ef\u8bfb\u7684\u4fe1\u606f\uff0c\u6bd4\u5982\u6837\u4f8b\u4ee3\u7801\u3001\u6587\u672c\u63cf\u8ff0\u7b49\u7b49\uff1bServiceComb\u5f15\u64ce\u542f\u52a8\u65f6\uff0c\u6839\u636e\u8fd9\u4e9bannotation\u751f\u6210\u5951\u7ea6\u63cf\u8ff0\uff0c\u5e76\u81ea\u52a8\u4e0a\u4f20\u5230\u670d\u52a1\u4e2d\u5fc3\u3002producer\u4e5f\u53ef\u4ee5\u4f7f\u7528\u900f\u660eRPC\u65b9\u5f0f\u5f00\u53d1\uff0c\u4f46\u662f\u56e0\u4e3a\u6ca1\u6709\u4efb\u4f55RESTful\u7684annotation\u6307\u5bfc\u5982\u4f55\u751f\u6210\u5951\u7ea6\uff0c\u6240\u4ee5\u6b64\u65f6\u81ea\u52a8\u751f\u6210\u7684\u5951\u7ea6\u975e\u5e38\u7684\u4e0dRESTful\u5316\uff0c\u4e0d\u5efa\u8bae\u4f7f\u7528\u3002 consumer\u4f7f\u7528\u900f\u660eRPC\u6216RestTemplate\u8fdb\u884c\u8c03\u7528\u3002 code first\u7684\u5f00\u53d1\u6a21\u5f0f\u4e0b\uff0c\u5f00\u53d1\u4eba\u5458\uff0c\u4e0d\u5fc5\u624b\u5199\u5951\u7ea6\u3002 contract first \u6b64\u573a\u666f\u4e0b\uff0c\u4e0d\u4f7f\u7528\u6846\u67b6\u81ea\u52a8\u751f\u6210\u7684\u5951\u7ea6\uff0c\u800c\u662f\u76f4\u63a5\u4f7f\u7528\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u7684\u5951\u7ea6\u6587\u4ef6\uff0c\u8fd9\u9700\u8981\u7531\u5f00\u53d1\u4eba\u5458\u4fdd\u8bc1\u5951\u7ea6\u4e0e\u4ee3\u7801\u7684\u4e00\u81f4\u6027\u3002 \u573a\u666f\u63cf\u8ff0 \u670d\u52a1\u5951\u7ea6\u7528\u4e8e\u670d\u52a1\u7aef\u548c\u6d88\u8d39\u7aef\u7684\u89e3\u8026\uff0c\u670d\u52a1\u7aef\u56f4\u7ed5\u5951\u7ea6\u8fdb\u884c\u670d\u52a1\u7684\u5b9e\u73b0\uff0c\u6d88\u8d39\u7aef\u6839\u636e\u5951\u7ea6\u8fdb\u884c\u670d\u52a1\u7684\u8c03\u7528\uff0c\u53ef\u652f\u6301\u670d\u52a1\u7aef\u548c\u6d88\u8d39\u7aef\u91c7\u7528\u4e0d\u540c\u7684\u7f16\u7a0b\u8bed\u8a00\u5b9e\u73b0\u3002 \u8bf4\u660e: \u670d\u52a1\u63d0\u4f9b\u8005\u5728\u542f\u52a8\u65f6\u4f1a\u5c06\u63a5\u53e3\u5951\u7ea6\u6ce8\u518c\u5230\u670d\u52a1\u4e2d\u5fc3\uff0c\u53ef\u4f9b\u670d\u52a1\u6d88\u8d39\u8005\u4e0b\u8f7d\u4f7f\u7528\u3002\u63a5\u53e3\u5951\u7ea6\u662f\u5fae\u670d\u52a1-\u7248\u672c\u7ea7\u522b\u7684\u4fe1\u606f\uff0c\u5f53\u591a\u4e2a\u5fae\u670d\u52a1\u5b9e\u4f8b\u542f\u52a8\u65f6\uff0c\u6709\u4e00\u4e2a\u5b9e\u4f8b\u5c06\u5951\u7ea6\u6ce8\u518c\u5230\u670d\u52a1\u4e2d\u5fc3\u540e\uff0c\u670d\u52a1\u4e2d\u5fc3\u5c31\u4e0d\u4f1a\u518d\u7528\u540e\u6765\u8005\u6ce8\u518c\u7684\u5951\u7ea6\u4fe1\u606f\u8986\u76d6\u5df2\u6709\u7684\u5951\u7ea6\u3002\u56e0\u6b64\uff0c\u4ec5\u4fee\u6539\u670d\u52a1\u63d0\u4f9b\u8005\u7684\u63a5\u53e3\u4fe1\u606f\u4e0d\u4f1a\u8ba9\u670d\u52a1\u4e2d\u5fc3\u5b58\u50a8\u7684\u5951\u7ea6\u53d1\u751f\u53d8\u5316\uff0c\u5bf9\u4e8e\u670d\u52a1\u6d88\u8d39\u8005\u800c\u8a00\uff0c\u83b7\u53d6\u5230\u7684\u63a5\u53e3\u4fe1\u606f\u4f9d\u7136\u662f\u65e7\u7684\u3002\u82e5\u8981\u66f4\u65b0\u670d\u52a1\u4e2d\u5fc3\u4e2d\u7684\u63a5\u53e3\u5951\u7ea6\uff0c\u53ef\u4ee5\u9009\u62e9\u5347\u7ea7\u5fae\u670d\u52a1\u7248\u672c\u53f7\uff0c\u6216\u8005\u5220\u9664\u5df2\u6709\u7684\u5fae\u670d\u52a1\u4fe1\u606f\uff08\u540e\u8005\u4e0d\u5efa\u8bae\u5728\u751f\u4ea7\u73af\u5883\u4f7f\u7528\uff09\u3002 \u914d\u7f6e\u8bf4\u660e ServiceComb\u4f7f\u7528yaml\u6587\u4ef6\u683c\u5f0f\u5b9a\u4e49\u670d\u52a1\u5951\u7ea6\uff0c\u63a8\u8350\u4f7f\u7528 Swagger Editor \u5de5\u5177\u6765\u7f16\u5199\u5951\u7ea6\uff0c\u53ef\u68c0\u67e5\u8bed\u6cd5\u683c\u5f0f\u53ca\u81ea\u52a8\u751f\u6210API\u6587\u6863\u3002\u8be6\u7ec6\u7684\u5951\u7ea6\u6587\u4ef6\u683c\u5f0f\u8bf7\u53c2\u8003 OpenAPI\u5b98\u65b9\u6587\u6863 \u3002 \u5951\u7ea6\u6587\u4ef6\u653e\u7f6e\u5728\"resources/microservices\"\u6216\u8005\"resources/application\"\u76ee\u5f55\u4e0b\uff0c\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\u6240\u793a\u3002 resources - microservices - serviceName #\u5fae\u670d\u52a1\u540d - schemaId.yaml #schema\u63a5\u53e3\u7684\u5951\u7ea6 - applications - appId #\u5e94\u7528ID - serviceName #\u5fae\u670d\u52a1\u540d - schemaId.yaml #schema\u63a5\u53e3\u7684\u5951\u7ea6 \u6ce8\u610f \uff1a ServiceComb\u7684Swagger\u5951\u7ea6\u6587\u4ef6\u5e94\u5f53\u4f7f\u7528UTF-8\u5b57\u7b26\u96c6\u4fdd\u5b58\u3002\u5982\u679c\u5f53\u7528\u6237\u4f7f\u7528\u5176\u4ed6\u5b57\u7b26\u96c6\u4fdd\u5b58\u5951\u7ea6\u6587\u4ef6\uff0c\u4e14\u6587\u4ef6\u4e2d\u5305\u542b\u4e2d\u6587\u5b57\u7b26\u65f6\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u672a\u77e5\u9519\u8bef\u3002 \u793a\u4f8b\u4ee3\u7801 resources/microservices \u76ee\u5f55\u548c resources/application \u76ee\u5f55\u4e0b\u7684schemaId.yaml\u6587\u4ef6\u5185\u5bb9\u793a\u4f8b\u5982\u4e0b\u3002\u6587\u4ef6\u4e2d\u7684\u63a5\u53e3\u5b9a\u4e49\u9700\u8981\u4e0e\u670d\u52a1\u7684\u5b9e\u9645\u63a5\u53e3\u76f8\u7b26\u3002 swagger: '2.0' info: title: hello version: 1.0.0 x-java-interface: org.apache.servicecomb.samples.common.schema.Hello basePath: /springmvchello produces: - application/json paths: /sayhi: post: operationId: sayHi parameters: - name: name in: query required: true type: string responses: 200: description: \u6b63\u786e\u8fd4\u56de schema: type: string default: description: \u9ed8\u8ba4\u8fd4\u56de schema: type: string /sayhello: post: operationId: sayHello parameters: - name: person in: body required: true schema: $ref: #/definitions/Person responses: 200: description: \u6b63\u786e\u8fd4\u56de schema: type: string default: description: \u9ed8\u8ba4\u8fd4\u56de schema: type: string definitions: Person: type: object properties: name: type: string description: person name xml: name: Person \u6ce8\u610f \uff1a ServiceComb\u4e2d\u7684\u5951\u7ea6\uff0c\u5efa\u8baebasePath\u4e0d\u8981\u5305\u542bweb container\u7684web root\uff0c\u4ee5\u53caservlet\u7684url pattern\u3002 \u56e0\u4e3aServiceComb\u652f\u6301\u90e8\u7f72\u89e3\u8026\uff0c\u65e2\u53ef\u4ee5\u8131\u79bbservlet container\u72ec\u7acb\u90e8\u7f72\uff0c\u4e5f\u53ef\u4f7f\u7528war\u7684\u65b9\u5f0f\u90e8\u7f72\u5230servlet container\u4e2d\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528embedded servlet container\u7684\u65b9\u5f0f\u8fd0\u884c\u3002 \u53ea\u8981base path\u4e0d\u5305\u542bweb root\u4ee5\u53caurl pattern\uff0c\u5219\u90e8\u7f72\u65b9\u5f0f\u4fee\u6539\u5bfc\u81f4\u7684\u5b9e\u9645url\u53d8\u66f4\uff0cServiceComb consumer\u4e1a\u52a1\u4ee3\u7801\u5e76\u4e0d\u9700\u8981\u611f\u77e5\uff0c\u6846\u67b6\u4f1a\u81ea\u52a8\u9002\u914d\u3002 info.x-java-interface\u9700\u8981\u6807\u660e\u5177\u4f53\u7684\u63a5\u53e3\u8def\u5f84\uff0c\u6839\u636e\u9879\u76ee\u5b9e\u9645\u60c5\u51b5\u800c\u5b9a\u3002 SchemaId\u4e2d\u53ef\u4ee5\u5305\u542b\".\"\u5b57\u7b26\uff0c\u4f46\u4e0d\u63a8\u8350\u8fd9\u6837\u547d\u540d\u3002\u8fd9\u662f\u7531\u4e8eServiceComb\u4f7f\u7528\u7684\u914d\u7f6e\u6587\u4ef6\u662fyaml\u683c\u5f0f\u7684\uff0c\".\"\u7b26\u53f7\u7528\u4e8e\u5206\u5272\u914d\u7f6e\u9879\u540d\u79f0\uff0c\u5982\u679cSchemaId\u4e2d\u4e5f\u5305\u542b\u4e86\".\"\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e00\u4e9b\u652f\u6301\u5951\u7ea6\u7ea7\u522b\u7684\u914d\u7f6e\u65e0\u6cd5\u6b63\u786e\u88ab\u8bc6\u522b\u3002 OperationId\u7684\u547d\u540d\u4e2d\u4e0d\u53ef\u5305\u542b\".\"\u5b57\u7b26\u3002","title":"\u5b9a\u4e49\u670d\u52a1\u5951\u7ea6"},{"location":"build-provider/define-contract/#_1","text":"``","title":"\u5b9a\u4e49\u670d\u52a1\u5951\u7ea6"},{"location":"build-provider/define-contract/#_2","text":"\u670d\u52a1\u5951\u7ea6\uff0c\u6307\u57fa\u4e8eOpenAPI\u89c4\u8303\u7684\u5fae\u670d\u52a1\u63a5\u53e3\u5951\u7ea6\uff0c\u662f\u670d\u52a1\u7aef\u4e0e\u6d88\u8d39\u7aef\u5bf9\u4e8e\u63a5\u53e3\u7684\u5b9a\u4e49\u3002java chassis\u63d0\u4f9b\u4e86\u4e24\u79cd\u65b9\u5f0f\u5b9a\u4e49\u5951\u7ea6\uff1acode first\u548ccontract first\u3002 * code first producer\u4f7f\u7528Jax-RS\u6216SpringMVC\u7684RESTful annotation\u58f0\u660e\u63a5\u53e3\u7684\u8f93\u5165\u3001\u8f93\u51fa\u53c2\u6570\uff0c\u6216\u8005\u518d\u914d\u5408OpenAPI\u7684annotation\uff0c\u589e\u52a0\u4eba\u7c7b\u53ef\u8bfb\u7684\u4fe1\u606f\uff0c\u6bd4\u5982\u6837\u4f8b\u4ee3\u7801\u3001\u6587\u672c\u63cf\u8ff0\u7b49\u7b49\uff1bServiceComb\u5f15\u64ce\u542f\u52a8\u65f6\uff0c\u6839\u636e\u8fd9\u4e9bannotation\u751f\u6210\u5951\u7ea6\u63cf\u8ff0\uff0c\u5e76\u81ea\u52a8\u4e0a\u4f20\u5230\u670d\u52a1\u4e2d\u5fc3\u3002producer\u4e5f\u53ef\u4ee5\u4f7f\u7528\u900f\u660eRPC\u65b9\u5f0f\u5f00\u53d1\uff0c\u4f46\u662f\u56e0\u4e3a\u6ca1\u6709\u4efb\u4f55RESTful\u7684annotation\u6307\u5bfc\u5982\u4f55\u751f\u6210\u5951\u7ea6\uff0c\u6240\u4ee5\u6b64\u65f6\u81ea\u52a8\u751f\u6210\u7684\u5951\u7ea6\u975e\u5e38\u7684\u4e0dRESTful\u5316\uff0c\u4e0d\u5efa\u8bae\u4f7f\u7528\u3002 consumer\u4f7f\u7528\u900f\u660eRPC\u6216RestTemplate\u8fdb\u884c\u8c03\u7528\u3002 code first\u7684\u5f00\u53d1\u6a21\u5f0f\u4e0b\uff0c\u5f00\u53d1\u4eba\u5458\uff0c\u4e0d\u5fc5\u624b\u5199\u5951\u7ea6\u3002 contract first \u6b64\u573a\u666f\u4e0b\uff0c\u4e0d\u4f7f\u7528\u6846\u67b6\u81ea\u52a8\u751f\u6210\u7684\u5951\u7ea6\uff0c\u800c\u662f\u76f4\u63a5\u4f7f\u7528\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u7684\u5951\u7ea6\u6587\u4ef6\uff0c\u8fd9\u9700\u8981\u7531\u5f00\u53d1\u4eba\u5458\u4fdd\u8bc1\u5951\u7ea6\u4e0e\u4ee3\u7801\u7684\u4e00\u81f4\u6027\u3002","title":"\u6982\u5ff5\u9610\u8ff0"},{"location":"build-provider/define-contract/#_3","text":"\u670d\u52a1\u5951\u7ea6\u7528\u4e8e\u670d\u52a1\u7aef\u548c\u6d88\u8d39\u7aef\u7684\u89e3\u8026\uff0c\u670d\u52a1\u7aef\u56f4\u7ed5\u5951\u7ea6\u8fdb\u884c\u670d\u52a1\u7684\u5b9e\u73b0\uff0c\u6d88\u8d39\u7aef\u6839\u636e\u5951\u7ea6\u8fdb\u884c\u670d\u52a1\u7684\u8c03\u7528\uff0c\u53ef\u652f\u6301\u670d\u52a1\u7aef\u548c\u6d88\u8d39\u7aef\u91c7\u7528\u4e0d\u540c\u7684\u7f16\u7a0b\u8bed\u8a00\u5b9e\u73b0\u3002 \u8bf4\u660e: \u670d\u52a1\u63d0\u4f9b\u8005\u5728\u542f\u52a8\u65f6\u4f1a\u5c06\u63a5\u53e3\u5951\u7ea6\u6ce8\u518c\u5230\u670d\u52a1\u4e2d\u5fc3\uff0c\u53ef\u4f9b\u670d\u52a1\u6d88\u8d39\u8005\u4e0b\u8f7d\u4f7f\u7528\u3002\u63a5\u53e3\u5951\u7ea6\u662f\u5fae\u670d\u52a1-\u7248\u672c\u7ea7\u522b\u7684\u4fe1\u606f\uff0c\u5f53\u591a\u4e2a\u5fae\u670d\u52a1\u5b9e\u4f8b\u542f\u52a8\u65f6\uff0c\u6709\u4e00\u4e2a\u5b9e\u4f8b\u5c06\u5951\u7ea6\u6ce8\u518c\u5230\u670d\u52a1\u4e2d\u5fc3\u540e\uff0c\u670d\u52a1\u4e2d\u5fc3\u5c31\u4e0d\u4f1a\u518d\u7528\u540e\u6765\u8005\u6ce8\u518c\u7684\u5951\u7ea6\u4fe1\u606f\u8986\u76d6\u5df2\u6709\u7684\u5951\u7ea6\u3002\u56e0\u6b64\uff0c\u4ec5\u4fee\u6539\u670d\u52a1\u63d0\u4f9b\u8005\u7684\u63a5\u53e3\u4fe1\u606f\u4e0d\u4f1a\u8ba9\u670d\u52a1\u4e2d\u5fc3\u5b58\u50a8\u7684\u5951\u7ea6\u53d1\u751f\u53d8\u5316\uff0c\u5bf9\u4e8e\u670d\u52a1\u6d88\u8d39\u8005\u800c\u8a00\uff0c\u83b7\u53d6\u5230\u7684\u63a5\u53e3\u4fe1\u606f\u4f9d\u7136\u662f\u65e7\u7684\u3002\u82e5\u8981\u66f4\u65b0\u670d\u52a1\u4e2d\u5fc3\u4e2d\u7684\u63a5\u53e3\u5951\u7ea6\uff0c\u53ef\u4ee5\u9009\u62e9\u5347\u7ea7\u5fae\u670d\u52a1\u7248\u672c\u53f7\uff0c\u6216\u8005\u5220\u9664\u5df2\u6709\u7684\u5fae\u670d\u52a1\u4fe1\u606f\uff08\u540e\u8005\u4e0d\u5efa\u8bae\u5728\u751f\u4ea7\u73af\u5883\u4f7f\u7528\uff09\u3002","title":"\u573a\u666f\u63cf\u8ff0"},{"location":"build-provider/define-contract/#_4","text":"ServiceComb\u4f7f\u7528yaml\u6587\u4ef6\u683c\u5f0f\u5b9a\u4e49\u670d\u52a1\u5951\u7ea6\uff0c\u63a8\u8350\u4f7f\u7528 Swagger Editor \u5de5\u5177\u6765\u7f16\u5199\u5951\u7ea6\uff0c\u53ef\u68c0\u67e5\u8bed\u6cd5\u683c\u5f0f\u53ca\u81ea\u52a8\u751f\u6210API\u6587\u6863\u3002\u8be6\u7ec6\u7684\u5951\u7ea6\u6587\u4ef6\u683c\u5f0f\u8bf7\u53c2\u8003 OpenAPI\u5b98\u65b9\u6587\u6863 \u3002 \u5951\u7ea6\u6587\u4ef6\u653e\u7f6e\u5728\"resources/microservices\"\u6216\u8005\"resources/application\"\u76ee\u5f55\u4e0b\uff0c\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\u6240\u793a\u3002 resources - microservices - serviceName #\u5fae\u670d\u52a1\u540d - schemaId.yaml #schema\u63a5\u53e3\u7684\u5951\u7ea6 - applications - appId #\u5e94\u7528ID - serviceName #\u5fae\u670d\u52a1\u540d - schemaId.yaml #schema\u63a5\u53e3\u7684\u5951\u7ea6 \u6ce8\u610f \uff1a ServiceComb\u7684Swagger\u5951\u7ea6\u6587\u4ef6\u5e94\u5f53\u4f7f\u7528UTF-8\u5b57\u7b26\u96c6\u4fdd\u5b58\u3002\u5982\u679c\u5f53\u7528\u6237\u4f7f\u7528\u5176\u4ed6\u5b57\u7b26\u96c6\u4fdd\u5b58\u5951\u7ea6\u6587\u4ef6\uff0c\u4e14\u6587\u4ef6\u4e2d\u5305\u542b\u4e2d\u6587\u5b57\u7b26\u65f6\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u672a\u77e5\u9519\u8bef\u3002","title":"\u914d\u7f6e\u8bf4\u660e"},{"location":"build-provider/define-contract/#_5","text":"resources/microservices \u76ee\u5f55\u548c resources/application \u76ee\u5f55\u4e0b\u7684schemaId.yaml\u6587\u4ef6\u5185\u5bb9\u793a\u4f8b\u5982\u4e0b\u3002\u6587\u4ef6\u4e2d\u7684\u63a5\u53e3\u5b9a\u4e49\u9700\u8981\u4e0e\u670d\u52a1\u7684\u5b9e\u9645\u63a5\u53e3\u76f8\u7b26\u3002 swagger: '2.0' info: title: hello version: 1.0.0 x-java-interface: org.apache.servicecomb.samples.common.schema.Hello basePath: /springmvchello produces: - application/json paths: /sayhi: post: operationId: sayHi parameters: - name: name in: query required: true type: string responses: 200: description: \u6b63\u786e\u8fd4\u56de schema: type: string default: description: \u9ed8\u8ba4\u8fd4\u56de schema: type: string /sayhello: post: operationId: sayHello parameters: - name: person in: body required: true schema: $ref: #/definitions/Person responses: 200: description: \u6b63\u786e\u8fd4\u56de schema: type: string default: description: \u9ed8\u8ba4\u8fd4\u56de schema: type: string definitions: Person: type: object properties: name: type: string description: person name xml: name: Person \u6ce8\u610f \uff1a ServiceComb\u4e2d\u7684\u5951\u7ea6\uff0c\u5efa\u8baebasePath\u4e0d\u8981\u5305\u542bweb container\u7684web root\uff0c\u4ee5\u53caservlet\u7684url pattern\u3002 \u56e0\u4e3aServiceComb\u652f\u6301\u90e8\u7f72\u89e3\u8026\uff0c\u65e2\u53ef\u4ee5\u8131\u79bbservlet container\u72ec\u7acb\u90e8\u7f72\uff0c\u4e5f\u53ef\u4f7f\u7528war\u7684\u65b9\u5f0f\u90e8\u7f72\u5230servlet container\u4e2d\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528embedded servlet container\u7684\u65b9\u5f0f\u8fd0\u884c\u3002 \u53ea\u8981base path\u4e0d\u5305\u542bweb root\u4ee5\u53caurl pattern\uff0c\u5219\u90e8\u7f72\u65b9\u5f0f\u4fee\u6539\u5bfc\u81f4\u7684\u5b9e\u9645url\u53d8\u66f4\uff0cServiceComb consumer\u4e1a\u52a1\u4ee3\u7801\u5e76\u4e0d\u9700\u8981\u611f\u77e5\uff0c\u6846\u67b6\u4f1a\u81ea\u52a8\u9002\u914d\u3002 info.x-java-interface\u9700\u8981\u6807\u660e\u5177\u4f53\u7684\u63a5\u53e3\u8def\u5f84\uff0c\u6839\u636e\u9879\u76ee\u5b9e\u9645\u60c5\u51b5\u800c\u5b9a\u3002 SchemaId\u4e2d\u53ef\u4ee5\u5305\u542b\".\"\u5b57\u7b26\uff0c\u4f46\u4e0d\u63a8\u8350\u8fd9\u6837\u547d\u540d\u3002\u8fd9\u662f\u7531\u4e8eServiceComb\u4f7f\u7528\u7684\u914d\u7f6e\u6587\u4ef6\u662fyaml\u683c\u5f0f\u7684\uff0c\".\"\u7b26\u53f7\u7528\u4e8e\u5206\u5272\u914d\u7f6e\u9879\u540d\u79f0\uff0c\u5982\u679cSchemaId\u4e2d\u4e5f\u5305\u542b\u4e86\".\"\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e00\u4e9b\u652f\u6301\u5951\u7ea6\u7ea7\u522b\u7684\u914d\u7f6e\u65e0\u6cd5\u6b63\u786e\u88ab\u8bc6\u522b\u3002 OperationId\u7684\u547d\u540d\u4e2d\u4e0d\u53ef\u5305\u542b\".\"\u5b57\u7b26\u3002","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"build-provider/event-listener/","text":"\u670d\u52a1\u542f\u52a8\u4e8b\u4ef6 java chassis \u542f\u52a8\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u5e7f\u64ad\u4e8b\u4ef6\u3002 \u4e1a\u52a1\u53ef\u4ee5\u5728\u670d\u52a1\u542f\u52a8\u7684\u4e0d\u540c\u9636\u6bb5\u6267\u884c\u4e00\u4e9b\u521d\u59cb\u5316\u903b\u8f91\u3002 \u4e8b\u4ef6\u7c7b\u578b\u5728 BootListener \u91cc\u9762\u5b9a\u4e49\uff1a public interface BootListener { enum EventType { BEFORE_HANDLER, AFTER_HANDLER, BEFORE_PRODUCER_PROVIDER, AFTER_PRODUCER_PROVIDER, BEFORE_CONSUMER_PROVIDER, AFTER_CONSUMER_PROVIDER, BEFORE_TRANSPORT, AFTER_TRANSPORT, BEFORE_REGISTRY, AFTER_REGISTRY, BEFORE_CLOSE, AFTER_CLOSE } } \u81ea\u5b9a\u4e49\u4e8b\u4ef6\u5904\u7406\u5668\u53ea\u9700\u8981\u5b9e\u73b0 BootListener \u7684\u63a5\u53e3\uff0c\u5e76\u4e14\u58f0\u660e\u4e3a Component \u5373\u53ef\u3002 @Component public class AuthHandlerBoot implements BootListener { @Override public void onBootEvent(BootEvent event) { if (EventType.BEFORE_REGISTRY.equals(event.getEventType())) { RSAKeyPairEntry rsaKeyPairEntry = RSAUtils.generateRSAKeyPair(); RSAKeypair4Auth.INSTANCE.setPrivateKey(rsaKeyPairEntry.getPrivateKey()); RSAKeypair4Auth.INSTANCE.setPublicKey(rsaKeyPairEntry.getPublicKey()); RSAKeypair4Auth.INSTANCE.setPublicKeyEncoded(rsaKeyPairEntry.getPublicKeyEncoded()); RegistryUtils.getMicroserviceInstance().getProperties().put(Const.INSTANCE_PUBKEY_PRO, rsaKeyPairEntry.getPublicKeyEncoded()); } } } \u6bd4\u5982\uff0c\u901a\u8fc7\u4e8b\u4ef6\u5904\u7406\u5668\uff0c\u53ef\u4ee5\u5728\u670d\u52a1\u6ce8\u518c\u5b8c\u6210\u6216\u8005\u670d\u52a1\u6ce8\u518c\u4e4b\u524d\u8fdb\u884c\u4e00\u4e9b\u521d\u59cb\u5316\u64cd\u4f5c\u3002","title":"\u670d\u52a1\u542f\u52a8\u4e8b\u4ef6"},{"location":"build-provider/event-listener/#_1","text":"java chassis \u542f\u52a8\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u5e7f\u64ad\u4e8b\u4ef6\u3002 \u4e1a\u52a1\u53ef\u4ee5\u5728\u670d\u52a1\u542f\u52a8\u7684\u4e0d\u540c\u9636\u6bb5\u6267\u884c\u4e00\u4e9b\u521d\u59cb\u5316\u903b\u8f91\u3002 \u4e8b\u4ef6\u7c7b\u578b\u5728 BootListener \u91cc\u9762\u5b9a\u4e49\uff1a public interface BootListener { enum EventType { BEFORE_HANDLER, AFTER_HANDLER, BEFORE_PRODUCER_PROVIDER, AFTER_PRODUCER_PROVIDER, BEFORE_CONSUMER_PROVIDER, AFTER_CONSUMER_PROVIDER, BEFORE_TRANSPORT, AFTER_TRANSPORT, BEFORE_REGISTRY, AFTER_REGISTRY, BEFORE_CLOSE, AFTER_CLOSE } } \u81ea\u5b9a\u4e49\u4e8b\u4ef6\u5904\u7406\u5668\u53ea\u9700\u8981\u5b9e\u73b0 BootListener \u7684\u63a5\u53e3\uff0c\u5e76\u4e14\u58f0\u660e\u4e3a Component \u5373\u53ef\u3002 @Component public class AuthHandlerBoot implements BootListener { @Override public void onBootEvent(BootEvent event) { if (EventType.BEFORE_REGISTRY.equals(event.getEventType())) { RSAKeyPairEntry rsaKeyPairEntry = RSAUtils.generateRSAKeyPair(); RSAKeypair4Auth.INSTANCE.setPrivateKey(rsaKeyPairEntry.getPrivateKey()); RSAKeypair4Auth.INSTANCE.setPublicKey(rsaKeyPairEntry.getPublicKey()); RSAKeypair4Auth.INSTANCE.setPublicKeyEncoded(rsaKeyPairEntry.getPublicKeyEncoded()); RegistryUtils.getMicroserviceInstance().getProperties().put(Const.INSTANCE_PUBKEY_PRO, rsaKeyPairEntry.getPublicKeyEncoded()); } } } \u6bd4\u5982\uff0c\u901a\u8fc7\u4e8b\u4ef6\u5904\u7406\u5668\uff0c\u53ef\u4ee5\u5728\u670d\u52a1\u6ce8\u518c\u5b8c\u6210\u6216\u8005\u670d\u52a1\u6ce8\u518c\u4e4b\u524d\u8fdb\u884c\u4e00\u4e9b\u521d\u59cb\u5316\u64cd\u4f5c\u3002","title":"\u670d\u52a1\u542f\u52a8\u4e8b\u4ef6"},{"location":"build-provider/interface-constraints/","text":"\u63a5\u53e3\u5b9a\u4e49\u548c\u6570\u636e\u7c7b\u578b \u63a5\u53e3\u5b9a\u4e49\u7684\u8981\u6c42 ServiceComb-Java-Chassis\u5efa\u8bae\u63a5\u53e3\u5b9a\u4e49\u9075\u5faa\u4e00\u4e2a\u7b80\u5355\u7684\u539f\u5219\uff1a\u63a5\u53e3\u5b9a\u4e49\u5373\u63a5\u53e3\u4f7f\u7528\u8bf4\u660e\uff0c\u4e0d\u7528\u901a\u8fc7\u67e5\u770b\u4ee3\u7801\u5b9e\u73b0\uff0c\u5c31\u80fd\u8bc6\u522b\u5982\u4f55\u8c03\u7528\u8fd9\u4e2a\u63a5\u53e3\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u8fd9\u4e2a\u539f\u5219\u7ad9\u5728\u4f7f\u7528\u8005\u8fd9\u8fb9\uff0c\u4ee5\u66f4\u5bb9\u6613\u88ab\u4f7f\u7528\u4f5c\u4e3a\u53c2\u8003\u3002ServiceComb\u4f1a\u6839\u636e\u63a5\u53e3\u5b9a\u4e49\u751f\u6210\u63a5\u53e3\u5951\u7ea6\uff0c\u7b26\u5408\u8fd9\u4e2a\u539f\u5219\u7684\u63a5\u53e3\uff0c\u751f\u6210\u7684\u5951\u7ea6\u4e5f\u662f\u7528\u6237\u5bb9\u6613\u9605\u8bfb\u7684\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff1a public Person query(String id); public Object query(String id); public Person query(String name); \u663e\u7136\u8c03\u7528\u63a5\u53e3\u4e00\uff0c\u6211\u4eec\u77e5\u9053\u8981\u4f20\u9012\u4e00\u4e2aString\u7c7b\u578b\u7684id\u53c2\u6570\uff0c\u8fd4\u56de\u503c\u662f\u4e00\u4e2aPerson\u7c7b\u578b\uff0cPerson\u91cc\u9762\u5b58\u5728String\u7c7b\u578b\u7684name\u53c2\u6570\u3002\u8c03\u7528\u63a5\u53e3\u4e8c\uff0c\u6211\u4eec\u4e0d\u77e5\u9053\u600e\u4e48\u5904\u7406\u8fd4\u56de\u503c\uff0c\u5fc5\u987b\u53c2\u8003\u670d\u52a1\u63d0\u4f9b\u8005\u7684\u6587\u6863\u8bf4\u660e\u3002\u8fd9\u4e2a\u89c6\u89d2\u662f\u719f\u7ec3\u7684RPC\u5f00\u53d1\u8005\u7684\u89c6\u89d2\u3002 \u5f53\u6211\u4eec\u8981\u5c06\u63a5\u53e3\u53d1\u5e03\u4e3aREST\u63a5\u53e3\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u6307\u5b9a\u63a5\u53e3\u53c2\u6570\u548cHTTP\u534f\u8bae\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u6bd4\u5982\uff1a public Person query(@RequestParam String id); public Person query(@PathVariable String id); public void save(@RequestBody Person person); \u901a\u5e38\uff0c\u6211\u4eec\u4f1a\u5c06\u7b80\u5355\u7684\u6570\u636e\u7c7b\u578b\uff0c\u6bd4\u5982String, int\u7b49\u5728RequestParam\u6216\u8005PathVariable\u4f20\u9012\uff0c\u800c\u628a\u590d\u6742\u7684\u6570\u636e\u7c7b\u578b\u4f7f\u7528JSON\u7f16\u7801\u4ee5\u540e\u5728RequestBody\u4f20\u9012\uff0c\u4ee5\u51cf\u5c11HTTP\u534f\u8bae\u9650\u5236\u53ef\u80fd\u7ed9\u5f00\u53d1\u8005\u5e26\u6765\u7684\u5404\u79cd\u95ee\u9898\u3002\u8fd9\u4e2a\u89c6\u89d2\u662f\u719f\u7ec3\u7684REST\u5f00\u53d1\u8005\u7684\u89c6\u89d2\uff0c\u5728RPC\u5f00\u53d1\u8005\u7684\u89c6\u89d2\u4e4b\u5916\uff0cREST\u5f00\u53d1\u8005\u9700\u8981\u7406\u89e3\u7684\u4fe1\u606f\u66f4\u591a\uff0c\u4ed6\u4eec\u4e0d\u4ec5\u9700\u8981\u77e5\u9053RPC\u63a5\u53e3\uff0c\u8fd8\u9700\u8981\u4e86\u89e3\u63a5\u53e3\u548cHTTP\u534f\u8bae\u7684\u7ed1\u5b9a\u5173\u7cfb\uff0c\u8981\u7406\u89e3JAVA\u5bf9\u8c61\u5982\u4f55\u5728HTTP\u7684\u6d88\u606f\u4e2d\u8fdb\u884c\u8f6c\u6362\u3002 ServiceComb-Java-Chassis\u8fd8\u6709\u4e00\u4e2a\u7ea6\u675f\uff1a\u63a5\u53e3\u5b9a\u4e49\u5fc5\u987b\u7b26\u5408Open API\u7684\u89c4\u8303\uff0c\u4ece\u800c\u80fd\u591f\u66f4\u597d\u7684\u5728\u4e0d\u540c\u8bed\u8a00\u4e4b\u95f4\u8fdb\u884c\u534f\u4f5c\uff0c\u80fd\u591f\u652f\u6301\u9664\u4e86HTTP\u4ee5\u4e3a\u7684\u5176\u4ed6\u534f\u8bae\u548c\u7f16\u7801\u3002\u719f\u7ec3\u7684SpringMVC\u3001JAX-RS\u5f00\u53d1\u8005\u4f1a\u53d1\u73b0\u4e00\u4e9b\u7279\u6b8a\u7684\u7528\u6cd5\u65e0\u6cd5\u4f7f\u7528\uff0c\u6bd4\u5982\u4f7f\u7528HttpServletRequest\u6765\u89e3\u6790HTTP\u5934\u4fe1\u606f\u7b49\u3002\u518d\u6bd4\u5982\uff0c\u6309\u7167Open API\u89c4\u8303\uff0c\u6bcf\u4e2a\u63a5\u53e3\u90fd\u5fc5\u987b\u6709\u552f\u4e00\u7684ID\uff0c\u5982\u679c\u5f00\u53d1\u8005\u9700\u8981\u4f7f\u7528\u91cd\u8f7d\uff0c\u90a3\u4e48\u5fc5\u987b\u663e\u793a\u7684\u4f7f\u7528@ApiOperation\u7ed9\u91cd\u8f7d\u65b9\u6cd5\u8d4b\u4e88\u552f\u4e00\u7684ID\u3002ServiceComb-Java-Chassis\u63a5\u53e3\u5b9a\u4e49\u8981\u6c42\u7b26\u5408\u4e0b\u9762\u7684\u8303\u5f0f\uff1a @SupportedAnnotations ResponseType methodName(RequestType...) \u4e0d\u80fd\u5b9a\u4e49\u5f02\u5e38\u3001\u4e0d\u80fd\u5305\u542b\u5728\u63a5\u53e3\u539f\u578b\u672a\u58f0\u660e\u7684\u9519\u8bef\u7801\u548c\u8f93\u51fa\uff08\u5982\u679c\u6ca1\u58f0\u660e\u9519\u8bef\u7801\uff0c\u7f3a\u7701\u7684\u9519\u8bef\u7801\u9664\u5916\uff0c\u6bd4\u5982HTTP \u7684200\uff09\u3002 \u901a\u5e38\uff0c\u7cfb\u7edf\u7ea6\u675f\u8d8a\u591a\uff0c\u90a3\u4e48\u5c31\u66f4\u52a0\u5bb9\u6613\u5bf9\u7cfb\u7edf\u8fdb\u884c\u7edf\u4e00\u7684\u7ba1\u63a7\u548c\u6cbb\u7406\uff1b\u5f00\u53d1\u65b9\u5f0f\u8d8a\u81ea\u7531\uff0c\u5b9e\u73b0\u4e1a\u52a1\u529f\u80fd\u5219\u66f4\u52a0\u5feb\u901f\uff0c\u9700\u8981\u5728\u8fd9\u4e24\u65b9\u9762\u53d6\u5f97\u4e00\u4e9b\u5e73\u8861\u3002ServiceComb-Java-Chassis\u662f\u6bd4gRPC\u8981\u7075\u6d3b\u5f88\u591a\u7684\u6846\u67b6\uff0c\u540c\u65f6\u4e5f\u53bb\u6389\u4e86Spring MVC\u7684\u4e00\u4e9b\u4e0d\u5e38\u7528\u7684\u6269\u5c55\u3002\u5f00\u53d1\u8005\u53ef\u4ee5\u5728ServiceComb-Java-Chassis\u8ba8\u8bba\u533a\u53cd\u9988\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u671f\u671b\u652f\u6301\u7684\u573a\u666f\uff0c\u66f4\u597d\u7684\u7ef4\u62a4\u8fd9\u4e2a\u5e73\u8861\u3002\u671f\u671b\u8fd9\u4e2a\u8ba8\u8bba\u662f\u56f4\u7ed5\u67d0\u4e2a\u5177\u4f53\u7684\u5e94\u7528\u573a\u666f\u6765\u8fdb\u884c\u7684\uff0c\u6bd4\u5982\u4e0a\u4f20\u6587\u4ef6\u5982\u4f55\u66f4\u597d\u7684\u8fdb\u884c\uff0c\u800c\u4e0d\u662f\u5177\u4f53\u7684\u5f00\u53d1\u65b9\u5f0f\u8fdb\u884c\u7684\uff0c\u6bd4\u5982\u4f7f\u7528Object\u6765\u4f20\u9012\u53c2\u6570\u3002 \u8be6\u7ec6\u7684\u7ea6\u675f\u5217\u8868 \u5f00\u53d1\u8005\u4e0d\u80fd\u5728\u63a5\u53e3\u5b9a\u4e49\u7684\u65f6\u5019\u4f7f\u7528\u5982\u4e0b\u7c7b\u578b\uff1a \u62bd\u8c61\u7684\u6570\u636e\u7ed3\u6784: java.lang.Object, net.sf.json.JsonObject\u7b49 \u5907\u6ce8\uff1a \u6700\u65b0\u7248\u672c\u53ef\u4ee5\u4f7f\u7528java.lang.Object\u4f5c\u4e3a\u53c2\u6570\u548c\u8fd4\u56de\u503c\u3002\u5b83\u7684\u8fd0\u884c\u65f6\u7c7b\u578b\u53ef\u4ee5\u662fint\u3001String\u3001Map\u7b49\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u5efa\u8bae\u5f00\u53d1\u8005\u4e0d\u8981\u4f7f\u7528\u62bd\u8c61\u6570\u636e\u7ed3\u6784\uff0c\u4ee5\u53ca\u7b2c\u4e09\u65b9\u63d0\u4f9b\u7684\u975ePOJO\u7c7b\u4f5c\u4e3a\u63a5\u53e3\u7684\u53c2\u6570\u548c\u8fd4\u56de\u503c\u3002\u8fd9\u4e9b\u7c7b\u578b\u5305\u62ecjava.math.BigDecimal\u3001org.joda.time.JodaTime\u7b49\u3002\u8fd9\u4e9b\u7c7b\u578b\u4f1a\u7ed9\u5f00\u53d1\u8005\u5e26\u6765\u5f88\u5927\u7684\u56f0\u6270\u3002\u6bd4\u5982\u5f00\u53d1\u8005\u53ef\u80fd\u4ee5\u4e3aBigDecimal\u4f1a\u4ee5\u6570\u5b57\u4f20\u8f93\uff0c\u5b9e\u9645\u4e0d\u7136\uff0c\u5e76\u4e14\u5728\u67d0\u4e9b\u5185\u90e8\u72b6\u6001\u6ca1\u6b63\u786e\u8ba1\u7b97\u7684\u60c5\u51b5\u4e0b\uff0c\u5f97\u5230\u7684\u5e76\u4e0d\u662f\u7528\u6237\u9884\u671f\u7684\u503c\u3002 \u63a5\u53e3\u6216\u8005\u62bd\u8c61\u7c7b java public interface IPerson {//...} public abstract class AbstractPerson {//...} \u4e0a\u8ff0\u7c7b\u578b\u7684\u96c6\u5408\u7c7b\u578b\u6216\u8005\u6ca1\u6709\u6307\u5b9a\u5177\u4f53\u7c7b\u578b\u7684\u96c6\u5408\uff0c\u6bd4\u5982\uff1a List IPerson , Map String, PersonHolder ? , List, Map \u7b49\u3002 List String , List Person \u8fd9\u4e9b\u5177\u4f53\u7c7b\u578b\u662f\u652f\u6301\u7684\u3002 \u5305\u542b\u4e0a\u8ff0\u7c7b\u578b\u4f5c\u4e3a\u5c5e\u6027\u7684\u7c7b\u578b java public class GroupOfPerson {IPerson master //...} \u5f00\u53d1\u8005\u4e0d\u7528\u62c5\u5fc3\u8bb0\u4e0d\u4f4f\u8fd9\u4e9b\u7ea6\u675f\uff0c\u7a0b\u5e8f\u4f1a\u5728\u542f\u52a8\u7684\u65f6\u5019\u68c0\u67e5\u4e0d\u652f\u6301\u7684\u7c7b\u578b\uff0c\u5e76\u7ed9\u4e0e\u9519\u8bef\u63d0\u793a\u3002 \u603b\u4e4b\uff0c\u6570\u636e\u7ed3\u6784\u9700\u8981\u80fd\u591f\u4f7f\u7528\u7b80\u5355\u7684\u6570\u636e\u7c7b\u578b\u8fdb\u884c\u63cf\u8ff0\uff0c\u4e00\u76ee\u4e86\u7136\u5c31\u662f\u6700\u597d\u7684\u3002\u8fd9\u4e2a\u5728\u4e0d\u540c\u7684\u8bed\u8a00\uff0c\u4e0d\u540c\u7684\u534f\u8bae\u91cc\u9762\u90fd\u652f\u6301\u7684\u5f88\u597d\uff0c\u957f\u671f\u6765\u770b\uff0c\u53ef\u4ee5\u5927\u5927\u51cf\u5c11\u5f00\u53d1\u8005\u8054\u8c03\u6c9f\u901a\u548c\u540e\u671f\u91cd\u6784\u7684\u6210\u672c\u3002 \u5173\u4e8e\u6570\u636e\u7ed3\u6784\u548c\u63a5\u53e3\u53d8\u66f4 \u63a5\u53e3\u540d\u79f0\u3001\u53c2\u6570\u7c7b\u578b\u3001\u53c2\u6570\u987a\u5e8f\u3001\u8fd4\u56de\u503c\u7c7b\u578b\u53d8\u66f4\u90fd\u5c5e\u4e8e\u63a5\u53e3\u53d8\u66f4\u3002ServiceComb\u542f\u52a8\u7684\u65f6\u5019\uff0c\u4f1a\u6839\u636e\u7248\u672c\u53f7\u68c0\u6d4b\u63a5\u53e3\u53d8\u5316\uff0c\u63a5\u53e3\u53d8\u5316\u8981\u6c42\u4fee\u6539\u7248\u672c\u53f7\u3002ServiceComb\u8bc6\u522b\u63a5\u53e3\u662f\u5426\u53d8\u5316\u662f\u901a\u8fc7\u4ee3\u7801\u751f\u6210\u7684\u5951\u7ea6\u5185\u5bb9\uff0c\u6709\u4e9b\u4e0d\u89c4\u8303\u7684\u63a5\u53e3\u5b9a\u4e49\u53ef\u80fd\u5bfc\u81f4\u5728\u4ee3\u7801\u6ca1\u6709\u53d8\u5316\u7684\u60c5\u51b5\u4e0b\uff0c\u751f\u6210\u7684\u5951\u7ea6\u4e0d\u540c\u3002\u6bd4\u5982\uff1a public void get(Person p) class Person { private String value; private boolean isOk; public String getName() {return value} public boolean isOk() {return isOK} } \u8fd9\u4e2a\u63a5\u53e3\u901a\u8fc7access method\u5b9a\u4e49\u4e86\"name\"\u548c\"ok\"\u4e24\u4e2a\u5c5e\u6027\uff0c\u548c\u5b9e\u9645\u7684\u5b57\u6bb5\"value\"\u548c\"isOk\"\u4e0d\u540c\u3002\u8fd9\u79cd\u60c5\u51b5\u53ef\u80fd\u5bfc\u81f4\u6bcf\u6b21\u542f\u52a8\u751f\u6210\u7684\u5951\u7ea6\u4e0d\u4e00\u6837\u3002\u9700\u8981\u5c06\u4ee3\u7801\u8c03\u6574\u4e3a\u7b26\u5408JAVA Bean\u89c4\u8303\u7684\u5b9a\u4e49\u3002 public void get(Person p) class Person { private String name; private boolean ok; public String getName() {return name} public boolean isOk() {return ok} } \u6216\u8005\u901a\u8fc7JSON\u6807\u6ce8\uff0c\u663e\u793a\u7684\u6307\u660e\u5b57\u6bb5\u987a\u5e8f\u3002\u6bd4\u5982\uff1a public void get(Person p) @JsonPropertyOrder({ name , ok }) class Person { private String value; private boolean isOk; public String getName() {return value} public boolean isOk() {return isOK} } \u8003\u8651\u5230\u63a5\u53e3\u53d8\u66f4\u7684\u5f71\u54cd\uff0c\u5efa\u8bae\u5728\u8fdb\u884c\u5bf9\u5916\u63a5\u53e3\u5b9a\u4e49\u7684\u65f6\u5019\uff0c\u5c3d\u53ef\u80fd\u4e0d\u8981\u4f7f\u7528\u7b2c\u4e09\u65b9\u8f6f\u4ef6\u63d0\u4f9b\u7684\u7c7b\u4f5c\u4e3a\u63a5\u53e3\u53c2\u6570\uff0c\u800c\u662f\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684POJO\u7c7b\u3002\u4e00\u65b9\u9762\u5347\u7ea7\u4e09\u65b9\u4ef6\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u611f\u77e5\u4e0d\u5230\u63a5\u53e3\u53d8\u5316\uff1b\u53e6\u5916\u4e00\u65b9\u9762\uff0c\u5982\u679c\u51fa\u73b0\u95ee\u9898\uff0c\u65e0\u6cd5\u901a\u8fc7\u4fee\u6539\u7b2c\u4e09\u65b9\u4ee3\u7801\u8fdb\u884c\u89c4\u907f\u3002\u6bd4\u5982\uff1ajava.lang.Timestamp, org.joda.time.JodaTime\u7b49\u3002 \u534f\u8bae\u4e0a\u7684\u5dee\u5f02 \u5c3d\u7ba1ServiceComb-Java-Chassis\u5b9e\u73b0\u4e86\u4e0d\u540c\u534f\u8bae\u4e4b\u95f4\u5f00\u53d1\u65b9\u5f0f\u7684\u900f\u660e\uff0c\u53d7\u9650\u4e8e\u5e95\u5c42\u534f\u8bae\u7684\u9650\u5236\uff0c\u4e0d\u540c\u7684\u534f\u8bae\u5b58\u5728\u5c11\u91cf\u5dee\u5f02\u3002 map\uff0ckey\u53ea\u652f\u6301string highway (protobuf\u9650\u5236) \u4e0d\u652f\u6301\u5728\u7f51\u7edc\u4e0a\u4f20\u9012null\uff0c\u5305\u62ecCollection\u3001array\u4e2d\u7684\u5143\u7d20\uff0cmap\u7684value \u957f\u5ea6\u4e3a0\u7684\u6570\u7ec4\u3001list\uff0c\u4e0d\u4f1a\u5728\u7f51\u7edc\u4e0a\u4f20\u9012\uff0c\u63a5\u6536\u7aef\u89e3\u7801\u51fa\u6765\u5c31\u662f\u9ed8\u8ba4\u503c springmvc \u4e0d\u652f\u6301Date\u4f5c\u4e3apath\u3001query\u53c2\u6570\u3002 \u56e0\u4e3aspringmvc\u76f4\u63a5\u5c06Date\u505atoString\u653e\u5728path\u3001query\u4e2d\uff0c\u4e0eswagger\u7684\u6807\u51c6\u4e0d\u5339\u914d\u3002 \u6cdb\u578b\u652f\u6301 ServiceComb-Java-Chassis \u652f\u6301REST\u4f20\u8f93\u65b9\u5f0f\u4e0b\u7684\u6cdb\u578b\u8bf7\u6c42\u53c2\u6570\u548c\u8fd4\u56de\u503c\u3002\u4f8b\u5982\u4f7f\u7528\u4e00\u4e2a\u6cdb\u578b\u7684\u6570\u636e\u7c7b\u578b: public class Generic T { public T value; } \u5176\u4e2d\u7684\u6cdb\u578b\u5c5e\u6027T\u53ef\u4ee5\u662f\u4e00\u4e2a\u5b9e\u4f53\u7c7b\u3001java.util.Date\u3001\u679a\u4e3e\uff0c\u4e5f\u53ef\u4ee5\u5d4c\u5957\u6cdb\u578b\u6570\u636e\u7c7b\u578b\u3002 \u5f53\u7528\u6237\u4f7f\u7528\u9690\u5f0f\u5951\u7ea6\u529f\u80fd\u81ea\u52a8\u751f\u6210\u5fae\u670d\u52a1\u5951\u7ea6\u65f6\uff0c\u9700\u8981\u5728provider\u63a5\u53e3\u65b9\u6cd5\u7684\u8fd4\u56de\u6d88\u606f\u4e2d\u660e\u786e\u6307\u5b9a\u6cdb\u578b\u7c7b\u578b\uff0c\u4ee5\u4fdd\u8bc1 ServiceComb-Java-Chassis \u751f\u6210\u7684\u5951\u7ea6\u4e2d\u5305\u542b\u8db3\u591f\u7684\u63a5\u53e3\u4fe1\u606f\u3002\u4f8b\u5982\uff0c\u5f53provider\u7aef\u63a5\u53e3\u65b9\u6cd5\u4ee3\u7801\u4e3a public Generic List Person getHolderListArea() { Holder List Person response = new Holder (); // ommited return response; } \u65f6\uff0c ServiceComb-Java-Chassis \u80fd\u591f\u8bc6\u522b\u51fa\u6cdb\u578b\u8fd4\u56de\u5bf9\u8c61\u7684\u786e\u5207\u4fe1\u606f\uff0c\u4ee5\u4fdd\u8bc1consumer\u7aef\u63a5\u6536\u5230\u7684\u5e94\u7b54\u6d88\u606f\u80fd\u591f\u88ab\u6b63\u786e\u5730\u53cd\u5e8f\u5217\u5316\u3002 \u800c\u5982\u679cprovider\u7aef\u63a5\u53e3\u65b9\u6cd5\u7684\u4ee3\u7801\u4e3a public Generic getHolderListArea() { Holder List Person response = new Holder (); // ommited return response; } \u65f6\uff0c\u7531\u4e8e\u5951\u7ea6\u4e2d\u7f3a\u5c11List\u5143\u7d20\u7684\u7c7b\u578b\u4fe1\u606f\uff0c\u5c31\u4f1a\u51fa\u73b0consumer\u7aef\u65e0\u6cd5\u6b63\u786e\u53cd\u5e8f\u5217\u5316\u5e94\u7b54\u7684\u60c5\u51b5\uff0c\u6bd4\u5982consumer\u63a5\u6536\u5230\u7684\u53c2\u6570\u7c7b\u578b\u53ef\u80fd\u4f1a\u53d8\u4e3a Holder List Map String,String \uff0c Person \u5bf9\u8c61\u9000\u5316\u4e3aMap\u7c7b\u578b\u3002 \u8bf4\u660e: \u867d\u7136 ServiceComb-Java-Chassis \u652f\u6301REST\u6cdb\u578b\u53c2\u6570\uff0c\u4f46\u662f\u6211\u4eec\u66f4\u52a0\u63a8\u8350\u7528\u6237\u4f7f\u7528\u5b9e\u4f53\u7c7b\u4f5c\u4e3a\u53c2\u6570\uff0c\u4ee5\u83b7\u5f97\u66f4\u52a0\u660e\u786e\u7684\u63a5\u53e3\u8bed\u4e49\u3002 \u5176\u4ed6\u5e38\u89c1\u95ee\u9898 \u4f7f\u7528RestTemplate\u4f20\u9012raw json \u5047\u8bbe\u670d\u52a1\u7aef\u5b9a\u4e49\u4e86\u63a5\u53e3 Person test(Person input) \u7528\u6237\u671f\u671b\u4f7f\u7528RestTemplate\u81ea\u884c\u62fc\u63a5json\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u8fdb\u884c\u4f20\u9012: String personStr = JsonUtils.writeValueAsString(input); result = template.postForObject(cseUrlPrefix + sayhello , personStr, Person.class); ServiceComb\u4e0d\u63a8\u8350\u5f00\u53d1\u8005\u8fd9\u6837\u4f7f\u7528\uff0c\u91cc\u9762\u7684\u5904\u7406\u903b\u8f91\u5b58\u5728\u5927\u91cf\u6b67\u4e49\u3002\u5982\u679c\u5fc5\u987b\u4f7f\u7528\uff0c\u9700\u8981\u6ee1\u8db3\u51e0\u4e2a\u7ea6\u675f\uff1aPerson\u5fc5\u987b\u5305\u542b\u5e26String\u7c7b\u578b\u7684\u6784\u9020\u51fd\u6570\uff1bprovider/consumer\u90fd\u5fc5\u987b\u5b58\u5728\u8fd9\u4e2aPerson\u7c7b\u578b\u3002","title":"\u63a5\u53e3\u5b9a\u4e49\u548c\u6570\u636e\u7c7b\u578b"},{"location":"build-provider/interface-constraints/#_1","text":"","title":"\u63a5\u53e3\u5b9a\u4e49\u548c\u6570\u636e\u7c7b\u578b"},{"location":"build-provider/interface-constraints/#_2","text":"ServiceComb-Java-Chassis\u5efa\u8bae\u63a5\u53e3\u5b9a\u4e49\u9075\u5faa\u4e00\u4e2a\u7b80\u5355\u7684\u539f\u5219\uff1a\u63a5\u53e3\u5b9a\u4e49\u5373\u63a5\u53e3\u4f7f\u7528\u8bf4\u660e\uff0c\u4e0d\u7528\u901a\u8fc7\u67e5\u770b\u4ee3\u7801\u5b9e\u73b0\uff0c\u5c31\u80fd\u8bc6\u522b\u5982\u4f55\u8c03\u7528\u8fd9\u4e2a\u63a5\u53e3\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u8fd9\u4e2a\u539f\u5219\u7ad9\u5728\u4f7f\u7528\u8005\u8fd9\u8fb9\uff0c\u4ee5\u66f4\u5bb9\u6613\u88ab\u4f7f\u7528\u4f5c\u4e3a\u53c2\u8003\u3002ServiceComb\u4f1a\u6839\u636e\u63a5\u53e3\u5b9a\u4e49\u751f\u6210\u63a5\u53e3\u5951\u7ea6\uff0c\u7b26\u5408\u8fd9\u4e2a\u539f\u5219\u7684\u63a5\u53e3\uff0c\u751f\u6210\u7684\u5951\u7ea6\u4e5f\u662f\u7528\u6237\u5bb9\u6613\u9605\u8bfb\u7684\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff1a public Person query(String id); public Object query(String id); public Person query(String name); \u663e\u7136\u8c03\u7528\u63a5\u53e3\u4e00\uff0c\u6211\u4eec\u77e5\u9053\u8981\u4f20\u9012\u4e00\u4e2aString\u7c7b\u578b\u7684id\u53c2\u6570\uff0c\u8fd4\u56de\u503c\u662f\u4e00\u4e2aPerson\u7c7b\u578b\uff0cPerson\u91cc\u9762\u5b58\u5728String\u7c7b\u578b\u7684name\u53c2\u6570\u3002\u8c03\u7528\u63a5\u53e3\u4e8c\uff0c\u6211\u4eec\u4e0d\u77e5\u9053\u600e\u4e48\u5904\u7406\u8fd4\u56de\u503c\uff0c\u5fc5\u987b\u53c2\u8003\u670d\u52a1\u63d0\u4f9b\u8005\u7684\u6587\u6863\u8bf4\u660e\u3002\u8fd9\u4e2a\u89c6\u89d2\u662f\u719f\u7ec3\u7684RPC\u5f00\u53d1\u8005\u7684\u89c6\u89d2\u3002 \u5f53\u6211\u4eec\u8981\u5c06\u63a5\u53e3\u53d1\u5e03\u4e3aREST\u63a5\u53e3\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u6307\u5b9a\u63a5\u53e3\u53c2\u6570\u548cHTTP\u534f\u8bae\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u6bd4\u5982\uff1a public Person query(@RequestParam String id); public Person query(@PathVariable String id); public void save(@RequestBody Person person); \u901a\u5e38\uff0c\u6211\u4eec\u4f1a\u5c06\u7b80\u5355\u7684\u6570\u636e\u7c7b\u578b\uff0c\u6bd4\u5982String, int\u7b49\u5728RequestParam\u6216\u8005PathVariable\u4f20\u9012\uff0c\u800c\u628a\u590d\u6742\u7684\u6570\u636e\u7c7b\u578b\u4f7f\u7528JSON\u7f16\u7801\u4ee5\u540e\u5728RequestBody\u4f20\u9012\uff0c\u4ee5\u51cf\u5c11HTTP\u534f\u8bae\u9650\u5236\u53ef\u80fd\u7ed9\u5f00\u53d1\u8005\u5e26\u6765\u7684\u5404\u79cd\u95ee\u9898\u3002\u8fd9\u4e2a\u89c6\u89d2\u662f\u719f\u7ec3\u7684REST\u5f00\u53d1\u8005\u7684\u89c6\u89d2\uff0c\u5728RPC\u5f00\u53d1\u8005\u7684\u89c6\u89d2\u4e4b\u5916\uff0cREST\u5f00\u53d1\u8005\u9700\u8981\u7406\u89e3\u7684\u4fe1\u606f\u66f4\u591a\uff0c\u4ed6\u4eec\u4e0d\u4ec5\u9700\u8981\u77e5\u9053RPC\u63a5\u53e3\uff0c\u8fd8\u9700\u8981\u4e86\u89e3\u63a5\u53e3\u548cHTTP\u534f\u8bae\u7684\u7ed1\u5b9a\u5173\u7cfb\uff0c\u8981\u7406\u89e3JAVA\u5bf9\u8c61\u5982\u4f55\u5728HTTP\u7684\u6d88\u606f\u4e2d\u8fdb\u884c\u8f6c\u6362\u3002 ServiceComb-Java-Chassis\u8fd8\u6709\u4e00\u4e2a\u7ea6\u675f\uff1a\u63a5\u53e3\u5b9a\u4e49\u5fc5\u987b\u7b26\u5408Open API\u7684\u89c4\u8303\uff0c\u4ece\u800c\u80fd\u591f\u66f4\u597d\u7684\u5728\u4e0d\u540c\u8bed\u8a00\u4e4b\u95f4\u8fdb\u884c\u534f\u4f5c\uff0c\u80fd\u591f\u652f\u6301\u9664\u4e86HTTP\u4ee5\u4e3a\u7684\u5176\u4ed6\u534f\u8bae\u548c\u7f16\u7801\u3002\u719f\u7ec3\u7684SpringMVC\u3001JAX-RS\u5f00\u53d1\u8005\u4f1a\u53d1\u73b0\u4e00\u4e9b\u7279\u6b8a\u7684\u7528\u6cd5\u65e0\u6cd5\u4f7f\u7528\uff0c\u6bd4\u5982\u4f7f\u7528HttpServletRequest\u6765\u89e3\u6790HTTP\u5934\u4fe1\u606f\u7b49\u3002\u518d\u6bd4\u5982\uff0c\u6309\u7167Open API\u89c4\u8303\uff0c\u6bcf\u4e2a\u63a5\u53e3\u90fd\u5fc5\u987b\u6709\u552f\u4e00\u7684ID\uff0c\u5982\u679c\u5f00\u53d1\u8005\u9700\u8981\u4f7f\u7528\u91cd\u8f7d\uff0c\u90a3\u4e48\u5fc5\u987b\u663e\u793a\u7684\u4f7f\u7528@ApiOperation\u7ed9\u91cd\u8f7d\u65b9\u6cd5\u8d4b\u4e88\u552f\u4e00\u7684ID\u3002ServiceComb-Java-Chassis\u63a5\u53e3\u5b9a\u4e49\u8981\u6c42\u7b26\u5408\u4e0b\u9762\u7684\u8303\u5f0f\uff1a @SupportedAnnotations ResponseType methodName(RequestType...) \u4e0d\u80fd\u5b9a\u4e49\u5f02\u5e38\u3001\u4e0d\u80fd\u5305\u542b\u5728\u63a5\u53e3\u539f\u578b\u672a\u58f0\u660e\u7684\u9519\u8bef\u7801\u548c\u8f93\u51fa\uff08\u5982\u679c\u6ca1\u58f0\u660e\u9519\u8bef\u7801\uff0c\u7f3a\u7701\u7684\u9519\u8bef\u7801\u9664\u5916\uff0c\u6bd4\u5982HTTP \u7684200\uff09\u3002 \u901a\u5e38\uff0c\u7cfb\u7edf\u7ea6\u675f\u8d8a\u591a\uff0c\u90a3\u4e48\u5c31\u66f4\u52a0\u5bb9\u6613\u5bf9\u7cfb\u7edf\u8fdb\u884c\u7edf\u4e00\u7684\u7ba1\u63a7\u548c\u6cbb\u7406\uff1b\u5f00\u53d1\u65b9\u5f0f\u8d8a\u81ea\u7531\uff0c\u5b9e\u73b0\u4e1a\u52a1\u529f\u80fd\u5219\u66f4\u52a0\u5feb\u901f\uff0c\u9700\u8981\u5728\u8fd9\u4e24\u65b9\u9762\u53d6\u5f97\u4e00\u4e9b\u5e73\u8861\u3002ServiceComb-Java-Chassis\u662f\u6bd4gRPC\u8981\u7075\u6d3b\u5f88\u591a\u7684\u6846\u67b6\uff0c\u540c\u65f6\u4e5f\u53bb\u6389\u4e86Spring MVC\u7684\u4e00\u4e9b\u4e0d\u5e38\u7528\u7684\u6269\u5c55\u3002\u5f00\u53d1\u8005\u53ef\u4ee5\u5728ServiceComb-Java-Chassis\u8ba8\u8bba\u533a\u53cd\u9988\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u671f\u671b\u652f\u6301\u7684\u573a\u666f\uff0c\u66f4\u597d\u7684\u7ef4\u62a4\u8fd9\u4e2a\u5e73\u8861\u3002\u671f\u671b\u8fd9\u4e2a\u8ba8\u8bba\u662f\u56f4\u7ed5\u67d0\u4e2a\u5177\u4f53\u7684\u5e94\u7528\u573a\u666f\u6765\u8fdb\u884c\u7684\uff0c\u6bd4\u5982\u4e0a\u4f20\u6587\u4ef6\u5982\u4f55\u66f4\u597d\u7684\u8fdb\u884c\uff0c\u800c\u4e0d\u662f\u5177\u4f53\u7684\u5f00\u53d1\u65b9\u5f0f\u8fdb\u884c\u7684\uff0c\u6bd4\u5982\u4f7f\u7528Object\u6765\u4f20\u9012\u53c2\u6570\u3002","title":"\u63a5\u53e3\u5b9a\u4e49\u7684\u8981\u6c42"},{"location":"build-provider/interface-constraints/#_3","text":"\u5f00\u53d1\u8005\u4e0d\u80fd\u5728\u63a5\u53e3\u5b9a\u4e49\u7684\u65f6\u5019\u4f7f\u7528\u5982\u4e0b\u7c7b\u578b\uff1a \u62bd\u8c61\u7684\u6570\u636e\u7ed3\u6784: java.lang.Object, net.sf.json.JsonObject\u7b49 \u5907\u6ce8\uff1a \u6700\u65b0\u7248\u672c\u53ef\u4ee5\u4f7f\u7528java.lang.Object\u4f5c\u4e3a\u53c2\u6570\u548c\u8fd4\u56de\u503c\u3002\u5b83\u7684\u8fd0\u884c\u65f6\u7c7b\u578b\u53ef\u4ee5\u662fint\u3001String\u3001Map\u7b49\u3002\u5c3d\u7ba1\u5982\u6b64\uff0c\u5efa\u8bae\u5f00\u53d1\u8005\u4e0d\u8981\u4f7f\u7528\u62bd\u8c61\u6570\u636e\u7ed3\u6784\uff0c\u4ee5\u53ca\u7b2c\u4e09\u65b9\u63d0\u4f9b\u7684\u975ePOJO\u7c7b\u4f5c\u4e3a\u63a5\u53e3\u7684\u53c2\u6570\u548c\u8fd4\u56de\u503c\u3002\u8fd9\u4e9b\u7c7b\u578b\u5305\u62ecjava.math.BigDecimal\u3001org.joda.time.JodaTime\u7b49\u3002\u8fd9\u4e9b\u7c7b\u578b\u4f1a\u7ed9\u5f00\u53d1\u8005\u5e26\u6765\u5f88\u5927\u7684\u56f0\u6270\u3002\u6bd4\u5982\u5f00\u53d1\u8005\u53ef\u80fd\u4ee5\u4e3aBigDecimal\u4f1a\u4ee5\u6570\u5b57\u4f20\u8f93\uff0c\u5b9e\u9645\u4e0d\u7136\uff0c\u5e76\u4e14\u5728\u67d0\u4e9b\u5185\u90e8\u72b6\u6001\u6ca1\u6b63\u786e\u8ba1\u7b97\u7684\u60c5\u51b5\u4e0b\uff0c\u5f97\u5230\u7684\u5e76\u4e0d\u662f\u7528\u6237\u9884\u671f\u7684\u503c\u3002 \u63a5\u53e3\u6216\u8005\u62bd\u8c61\u7c7b java public interface IPerson {//...} public abstract class AbstractPerson {//...} \u4e0a\u8ff0\u7c7b\u578b\u7684\u96c6\u5408\u7c7b\u578b\u6216\u8005\u6ca1\u6709\u6307\u5b9a\u5177\u4f53\u7c7b\u578b\u7684\u96c6\u5408\uff0c\u6bd4\u5982\uff1a List IPerson , Map String, PersonHolder ? , List, Map \u7b49\u3002 List String , List Person \u8fd9\u4e9b\u5177\u4f53\u7c7b\u578b\u662f\u652f\u6301\u7684\u3002 \u5305\u542b\u4e0a\u8ff0\u7c7b\u578b\u4f5c\u4e3a\u5c5e\u6027\u7684\u7c7b\u578b java public class GroupOfPerson {IPerson master //...} \u5f00\u53d1\u8005\u4e0d\u7528\u62c5\u5fc3\u8bb0\u4e0d\u4f4f\u8fd9\u4e9b\u7ea6\u675f\uff0c\u7a0b\u5e8f\u4f1a\u5728\u542f\u52a8\u7684\u65f6\u5019\u68c0\u67e5\u4e0d\u652f\u6301\u7684\u7c7b\u578b\uff0c\u5e76\u7ed9\u4e0e\u9519\u8bef\u63d0\u793a\u3002 \u603b\u4e4b\uff0c\u6570\u636e\u7ed3\u6784\u9700\u8981\u80fd\u591f\u4f7f\u7528\u7b80\u5355\u7684\u6570\u636e\u7c7b\u578b\u8fdb\u884c\u63cf\u8ff0\uff0c\u4e00\u76ee\u4e86\u7136\u5c31\u662f\u6700\u597d\u7684\u3002\u8fd9\u4e2a\u5728\u4e0d\u540c\u7684\u8bed\u8a00\uff0c\u4e0d\u540c\u7684\u534f\u8bae\u91cc\u9762\u90fd\u652f\u6301\u7684\u5f88\u597d\uff0c\u957f\u671f\u6765\u770b\uff0c\u53ef\u4ee5\u5927\u5927\u51cf\u5c11\u5f00\u53d1\u8005\u8054\u8c03\u6c9f\u901a\u548c\u540e\u671f\u91cd\u6784\u7684\u6210\u672c\u3002","title":"\u8be6\u7ec6\u7684\u7ea6\u675f\u5217\u8868"},{"location":"build-provider/interface-constraints/#_4","text":"\u63a5\u53e3\u540d\u79f0\u3001\u53c2\u6570\u7c7b\u578b\u3001\u53c2\u6570\u987a\u5e8f\u3001\u8fd4\u56de\u503c\u7c7b\u578b\u53d8\u66f4\u90fd\u5c5e\u4e8e\u63a5\u53e3\u53d8\u66f4\u3002ServiceComb\u542f\u52a8\u7684\u65f6\u5019\uff0c\u4f1a\u6839\u636e\u7248\u672c\u53f7\u68c0\u6d4b\u63a5\u53e3\u53d8\u5316\uff0c\u63a5\u53e3\u53d8\u5316\u8981\u6c42\u4fee\u6539\u7248\u672c\u53f7\u3002ServiceComb\u8bc6\u522b\u63a5\u53e3\u662f\u5426\u53d8\u5316\u662f\u901a\u8fc7\u4ee3\u7801\u751f\u6210\u7684\u5951\u7ea6\u5185\u5bb9\uff0c\u6709\u4e9b\u4e0d\u89c4\u8303\u7684\u63a5\u53e3\u5b9a\u4e49\u53ef\u80fd\u5bfc\u81f4\u5728\u4ee3\u7801\u6ca1\u6709\u53d8\u5316\u7684\u60c5\u51b5\u4e0b\uff0c\u751f\u6210\u7684\u5951\u7ea6\u4e0d\u540c\u3002\u6bd4\u5982\uff1a public void get(Person p) class Person { private String value; private boolean isOk; public String getName() {return value} public boolean isOk() {return isOK} } \u8fd9\u4e2a\u63a5\u53e3\u901a\u8fc7access method\u5b9a\u4e49\u4e86\"name\"\u548c\"ok\"\u4e24\u4e2a\u5c5e\u6027\uff0c\u548c\u5b9e\u9645\u7684\u5b57\u6bb5\"value\"\u548c\"isOk\"\u4e0d\u540c\u3002\u8fd9\u79cd\u60c5\u51b5\u53ef\u80fd\u5bfc\u81f4\u6bcf\u6b21\u542f\u52a8\u751f\u6210\u7684\u5951\u7ea6\u4e0d\u4e00\u6837\u3002\u9700\u8981\u5c06\u4ee3\u7801\u8c03\u6574\u4e3a\u7b26\u5408JAVA Bean\u89c4\u8303\u7684\u5b9a\u4e49\u3002 public void get(Person p) class Person { private String name; private boolean ok; public String getName() {return name} public boolean isOk() {return ok} } \u6216\u8005\u901a\u8fc7JSON\u6807\u6ce8\uff0c\u663e\u793a\u7684\u6307\u660e\u5b57\u6bb5\u987a\u5e8f\u3002\u6bd4\u5982\uff1a public void get(Person p) @JsonPropertyOrder({ name , ok }) class Person { private String value; private boolean isOk; public String getName() {return value} public boolean isOk() {return isOK} } \u8003\u8651\u5230\u63a5\u53e3\u53d8\u66f4\u7684\u5f71\u54cd\uff0c\u5efa\u8bae\u5728\u8fdb\u884c\u5bf9\u5916\u63a5\u53e3\u5b9a\u4e49\u7684\u65f6\u5019\uff0c\u5c3d\u53ef\u80fd\u4e0d\u8981\u4f7f\u7528\u7b2c\u4e09\u65b9\u8f6f\u4ef6\u63d0\u4f9b\u7684\u7c7b\u4f5c\u4e3a\u63a5\u53e3\u53c2\u6570\uff0c\u800c\u662f\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684POJO\u7c7b\u3002\u4e00\u65b9\u9762\u5347\u7ea7\u4e09\u65b9\u4ef6\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u611f\u77e5\u4e0d\u5230\u63a5\u53e3\u53d8\u5316\uff1b\u53e6\u5916\u4e00\u65b9\u9762\uff0c\u5982\u679c\u51fa\u73b0\u95ee\u9898\uff0c\u65e0\u6cd5\u901a\u8fc7\u4fee\u6539\u7b2c\u4e09\u65b9\u4ee3\u7801\u8fdb\u884c\u89c4\u907f\u3002\u6bd4\u5982\uff1ajava.lang.Timestamp, org.joda.time.JodaTime\u7b49\u3002","title":"\u5173\u4e8e\u6570\u636e\u7ed3\u6784\u548c\u63a5\u53e3\u53d8\u66f4"},{"location":"build-provider/interface-constraints/#_5","text":"\u5c3d\u7ba1ServiceComb-Java-Chassis\u5b9e\u73b0\u4e86\u4e0d\u540c\u534f\u8bae\u4e4b\u95f4\u5f00\u53d1\u65b9\u5f0f\u7684\u900f\u660e\uff0c\u53d7\u9650\u4e8e\u5e95\u5c42\u534f\u8bae\u7684\u9650\u5236\uff0c\u4e0d\u540c\u7684\u534f\u8bae\u5b58\u5728\u5c11\u91cf\u5dee\u5f02\u3002 map\uff0ckey\u53ea\u652f\u6301string highway (protobuf\u9650\u5236) \u4e0d\u652f\u6301\u5728\u7f51\u7edc\u4e0a\u4f20\u9012null\uff0c\u5305\u62ecCollection\u3001array\u4e2d\u7684\u5143\u7d20\uff0cmap\u7684value \u957f\u5ea6\u4e3a0\u7684\u6570\u7ec4\u3001list\uff0c\u4e0d\u4f1a\u5728\u7f51\u7edc\u4e0a\u4f20\u9012\uff0c\u63a5\u6536\u7aef\u89e3\u7801\u51fa\u6765\u5c31\u662f\u9ed8\u8ba4\u503c springmvc \u4e0d\u652f\u6301Date\u4f5c\u4e3apath\u3001query\u53c2\u6570\u3002 \u56e0\u4e3aspringmvc\u76f4\u63a5\u5c06Date\u505atoString\u653e\u5728path\u3001query\u4e2d\uff0c\u4e0eswagger\u7684\u6807\u51c6\u4e0d\u5339\u914d\u3002","title":"\u534f\u8bae\u4e0a\u7684\u5dee\u5f02"},{"location":"build-provider/interface-constraints/#_6","text":"ServiceComb-Java-Chassis \u652f\u6301REST\u4f20\u8f93\u65b9\u5f0f\u4e0b\u7684\u6cdb\u578b\u8bf7\u6c42\u53c2\u6570\u548c\u8fd4\u56de\u503c\u3002\u4f8b\u5982\u4f7f\u7528\u4e00\u4e2a\u6cdb\u578b\u7684\u6570\u636e\u7c7b\u578b: public class Generic T { public T value; } \u5176\u4e2d\u7684\u6cdb\u578b\u5c5e\u6027T\u53ef\u4ee5\u662f\u4e00\u4e2a\u5b9e\u4f53\u7c7b\u3001java.util.Date\u3001\u679a\u4e3e\uff0c\u4e5f\u53ef\u4ee5\u5d4c\u5957\u6cdb\u578b\u6570\u636e\u7c7b\u578b\u3002 \u5f53\u7528\u6237\u4f7f\u7528\u9690\u5f0f\u5951\u7ea6\u529f\u80fd\u81ea\u52a8\u751f\u6210\u5fae\u670d\u52a1\u5951\u7ea6\u65f6\uff0c\u9700\u8981\u5728provider\u63a5\u53e3\u65b9\u6cd5\u7684\u8fd4\u56de\u6d88\u606f\u4e2d\u660e\u786e\u6307\u5b9a\u6cdb\u578b\u7c7b\u578b\uff0c\u4ee5\u4fdd\u8bc1 ServiceComb-Java-Chassis \u751f\u6210\u7684\u5951\u7ea6\u4e2d\u5305\u542b\u8db3\u591f\u7684\u63a5\u53e3\u4fe1\u606f\u3002\u4f8b\u5982\uff0c\u5f53provider\u7aef\u63a5\u53e3\u65b9\u6cd5\u4ee3\u7801\u4e3a public Generic List Person getHolderListArea() { Holder List Person response = new Holder (); // ommited return response; } \u65f6\uff0c ServiceComb-Java-Chassis \u80fd\u591f\u8bc6\u522b\u51fa\u6cdb\u578b\u8fd4\u56de\u5bf9\u8c61\u7684\u786e\u5207\u4fe1\u606f\uff0c\u4ee5\u4fdd\u8bc1consumer\u7aef\u63a5\u6536\u5230\u7684\u5e94\u7b54\u6d88\u606f\u80fd\u591f\u88ab\u6b63\u786e\u5730\u53cd\u5e8f\u5217\u5316\u3002 \u800c\u5982\u679cprovider\u7aef\u63a5\u53e3\u65b9\u6cd5\u7684\u4ee3\u7801\u4e3a public Generic getHolderListArea() { Holder List Person response = new Holder (); // ommited return response; } \u65f6\uff0c\u7531\u4e8e\u5951\u7ea6\u4e2d\u7f3a\u5c11List\u5143\u7d20\u7684\u7c7b\u578b\u4fe1\u606f\uff0c\u5c31\u4f1a\u51fa\u73b0consumer\u7aef\u65e0\u6cd5\u6b63\u786e\u53cd\u5e8f\u5217\u5316\u5e94\u7b54\u7684\u60c5\u51b5\uff0c\u6bd4\u5982consumer\u63a5\u6536\u5230\u7684\u53c2\u6570\u7c7b\u578b\u53ef\u80fd\u4f1a\u53d8\u4e3a Holder List Map String,String \uff0c Person \u5bf9\u8c61\u9000\u5316\u4e3aMap\u7c7b\u578b\u3002 \u8bf4\u660e: \u867d\u7136 ServiceComb-Java-Chassis \u652f\u6301REST\u6cdb\u578b\u53c2\u6570\uff0c\u4f46\u662f\u6211\u4eec\u66f4\u52a0\u63a8\u8350\u7528\u6237\u4f7f\u7528\u5b9e\u4f53\u7c7b\u4f5c\u4e3a\u53c2\u6570\uff0c\u4ee5\u83b7\u5f97\u66f4\u52a0\u660e\u786e\u7684\u63a5\u53e3\u8bed\u4e49\u3002","title":"\u6cdb\u578b\u652f\u6301"},{"location":"build-provider/interface-constraints/#_7","text":"\u4f7f\u7528RestTemplate\u4f20\u9012raw json \u5047\u8bbe\u670d\u52a1\u7aef\u5b9a\u4e49\u4e86\u63a5\u53e3 Person test(Person input) \u7528\u6237\u671f\u671b\u4f7f\u7528RestTemplate\u81ea\u884c\u62fc\u63a5json\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u8fdb\u884c\u4f20\u9012: String personStr = JsonUtils.writeValueAsString(input); result = template.postForObject(cseUrlPrefix + sayhello , personStr, Person.class); ServiceComb\u4e0d\u63a8\u8350\u5f00\u53d1\u8005\u8fd9\u6837\u4f7f\u7528\uff0c\u91cc\u9762\u7684\u5904\u7406\u903b\u8f91\u5b58\u5728\u5927\u91cf\u6b67\u4e49\u3002\u5982\u679c\u5fc5\u987b\u4f7f\u7528\uff0c\u9700\u8981\u6ee1\u8db3\u51e0\u4e2a\u7ea6\u675f\uff1aPerson\u5fc5\u987b\u5305\u542b\u5e26String\u7c7b\u578b\u7684\u6784\u9020\u51fd\u6570\uff1bprovider/consumer\u90fd\u5fc5\u987b\u5b58\u5728\u8fd9\u4e2aPerson\u7c7b\u578b\u3002","title":"\u5176\u4ed6\u5e38\u89c1\u95ee\u9898"},{"location":"build-provider/jaxrs/","text":"\u7528JAX-RS\u5f00\u53d1\u5fae\u670d\u52a1 \u6982\u5ff5\u9610\u8ff0 ServiceComb\u652f\u6301\u5f00\u53d1\u8005\u4f7f\u7528JAX-RS\u6ce8\u89e3\uff0c\u4f7f\u7528 JAX-RS \u6a21\u5f0f\u5f00\u53d1\u670d\u52a1\u3002 \u5f00\u53d1\u793a\u4f8b \u6b65\u9aa4 1\u5b9a\u4e49\u670d\u52a1\u63a5\u53e3\u3002 \u6839\u636e\u5f00\u53d1\u4e4b\u524d\u5b9a\u4e49\u597d\u7684\u5951\u7ea6\uff0c\u7f16\u5199Java\u4e1a\u52a1\u63a5\u53e3\uff0c\u4ee3\u7801\u5982\u4e0b\u3002\u5b9a\u4e49\u63a5\u53e3\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u4f46\u662f \u4e00\u4e2a\u597d\u4e60\u60ef\uff0c\u53ef\u4ee5\u7b80\u5316\u5ba2\u6237\u7aef\u4f7f\u7528RPC\u65b9\u5f0f\u7f16\u5199\u4ee3\u7801\u3002 public interface Hello { String sayHi(String name); String sayHello(Person person); } \u6b65\u9aa4 2\u5b9e\u73b0\u670d\u52a1\u3002 \u4f7f\u7528JAX-RS\u6ce8\u89e3\u5f00\u53d1\u4e1a\u52a1\u4ee3\u7801\uff0cHello\u7684\u670d\u52a1\u5b9e\u73b0\u5982\u4e0b\uff1a @RestSchema(schemaId = jaxrsHello ) @Path( /jaxrshello ) @Produces(MediaType.APPLICATION_JSON) public class JaxrsHelloImpl implements Hello { @Path( /sayhi ) @POST @Override public String sayHi(String name) { return Hello + name; } @Path( /sayhello ) @POST @Override public String sayHello(Person person) { return Hello person + person.getName(); } /** * \u8fd9\u4e2a\u65b9\u6cd5\u662f\u5b9e\u73b0\u7c7b\u7279\u6709\u7684,\u56e0\u6b64\u5bf9\u5b83\u7684\u8fdc\u7a0b\u8c03\u7528\u4f1a\u6709\u6240\u4e0d\u540c. * \u5177\u4f53\u53ef\u4ee5\u53c2\u8003 jaxrs-consumer */ @Path( /saybye ) @GET public String sayBye() { return Bye ! ; } } \u6b65\u9aa4 3\u53d1\u5e03\u670d\u52a1\u3002 \u5728resources/META-INF/spring\u76ee\u5f55\u4e0b\u521b\u5efajaxrsHello.bean.xml\u6587\u4ef6\uff0c\u914d\u7f6espring\u8fdb\u884c\u670d\u52a1\u626b\u63cf\u7684base-package\uff0c\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b\u3002\uff08\u6ce8\u610f\u4fee\u6539package\u540d\u79f0\u4e3a\u6b63\u786e\u540d\u79f0\uff09 ?xml version= 1.0 encoding= UTF-8 ? beans xmlns= http://www.springframework.org/schema/beans xmlns:xsi= http://www.w3.org/2001/XMLSchema-instance xmlns:p= http://www.springframework.org/schema/p xmlns:util= http://www.springframework.org/schema/util xmlns:cse= http://www.huawei.com/schema/paas/cse/rpc xmlns:context= http://www.springframework.org/schema/context xsi:schemaLocation= http://www.springframework.org/schema/beans classpath:org/springframework/beans/factory/xml/spring-beans-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.huawei.com/schema/paas/cse/rpc classpath:META-INF/spring/spring-paas-cse-rpc.xsd context:component-scan base-package= org.apache.servicecomb.samples.jaxrs.provider / /beans \u6b65\u9aa4 4\u542f\u52a8\u670d\u52a1\u3002 public class JaxrsProviderMain{ public static void main(String[] args) throws Exception { Log4jUtils.init(); BeanUtils.init(); } } \u6d89\u53caAPI JAX-RS\u5f00\u53d1\u6a21\u5f0f\u5f53\u524d\u652f\u6301\u5982\u4e0b\u6ce8\u89e3\uff0c\u6240\u6709\u6ce8\u89e3\u7684\u4f7f\u7528\u65b9\u6cd5\u53c2\u8003 JAX-RS\u5b98\u65b9\u6587\u6863 \u3002 \u88681-1JAX-RS\u6ce8\u89e3\u652f\u6301\u6c47\u603b \u6ce8\u89e3 \u4f4d\u7f6e \u63cf\u8ff0 javax.ws.rs.Path schema/operation URL\u8def\u5f84 javax.ws.rs.Produces schema/operation \u65b9\u6cd5\u652f\u6301\u7684\u7f16\u89e3\u7801\u80fd\u529b javax.ws.rs.DELETE operation http method javax.ws.rs.GET operation http method javax.ws.rs.POST operation http method javax.ws.rs.PUT operation http method javax.ws.rs.QueryParam parameter \u4ecequery string\u4e2d\u83b7\u53d6\u53c2\u6570 javax.ws.rs.PathParam parameter \u4ecepath\u4e2d\u83b7\u53d6\u53c2\u6570\uff0c\u5fc5\u987b\u5728path\u4e2d\u5b9a\u4e49\u8be5\u53c2\u6570 javax.ws.rs.HeaderParam parameter \u4eceheader\u4e2d\u83b7\u53d6\u53c2\u6570 javax.ws.rs.CookieParam parameter \u4ececookie\u4e2d\u83b7\u53d6\u53c2\u6570 javax.ws.rs.FormParam parameter \u4eceform\u4e2d\u83b7\u53d6\u53c2\u6570 javax.ws.rs.BeanParam parameter \u7528\u4e8e\u53c2\u6570\u805a\u5408\uff0c\u5141\u8bb8\u5728\u4e00\u4e2aJavaBean\u7684\u5c5e\u6027\u4e0a\u6253\u4e0a\u53c2\u6570\u6807\u8bb0\u4ee5\u5c06\u591a\u4e2a\u53c2\u6570\u805a\u5408\u4e3a\u4e00\u4e2aJavaBean \u8bf4\u660e: \u5f53\u65b9\u6cd5\u53c2\u6570\u6ca1\u6709\u6ce8\u89e3\uff0c\u4e14\u4e0d\u4e3a HttpServletRequest \u3001 InvocationContext \u7c7b\u578b\u53c2\u6570\u65f6\uff0c\u9ed8\u8ba4\u4e3abody\u7c7b\u578b\u53c2\u6570\uff0c\u4e00\u4e2a\u65b9\u6cd5\u6700\u591a\u53ea\u652f\u6301\u4e00\u4e2abody\u7c7b\u578b\u53c2\u6570\u3002 \u4f7f\u7528@BeanParam\u805a\u5408\u53c2\u6570 \u4f7f\u7528\u8bf4\u660e \u7528\u6237\u53ef\u4ee5\u4f7f\u7528@BeanParam\u6ce8\u89e3\u5c06\u591a\u4e2a\u53c2\u6570\u805a\u5408\u5230\u4e00\u4e2aJavaBean\u4e2d\uff0c\u901a\u8fc7\u5c06@QueryParam\u7b49\u53c2\u6570\u6ce8\u89e3\u6253\u5728\u6b64JavaBean\u7684\u5c5e\u6027\u6216setter\u65b9\u6cd5\u4e0a\u6765\u58f0\u660e\u53c2\u6570\uff0c\u4ece\u800c\u7b80\u5316\u4e1a\u52a1\u63a5\u53e3\u7684\u53c2\u6570\u8868\u3002\u53ef\u4ee5\u53c2\u8003JAX-RS\u7684\u5b98\u65b9\u8bf4\u660e\uff1ahttps://docs.oracle.com/javaee/7/api/javax/ws/rs/BeanParam.html ServiceComb\u73b0\u5728\u4e5f\u652f\u6301\u7c7b\u4f3c\u7684\u7528\u6cd5\uff0c\u8be5\u7528\u6cd5\u7684\u8981\u6c42\u5982\u4e0b\uff1a 1. \u805a\u5408\u53c2\u6570\u6240\u7528\u7684\u7c7b\u578b\u5fc5\u987b\u662f\u6807\u51c6\u7684JavaBean\uff0c\u5373\u7c7b\u578b\u7684\u5c5e\u6027\u4e0egetter\u3001setter\u65b9\u6cd5\u540d\u79f0\u5339\u914d\uff0csetter\u65b9\u6cd5\u7684\u8fd4\u56de\u7c7b\u578b\u4e3a void 2. \u53c2\u6570\u6ce8\u89e3\u53ef\u4ee5\u6253\u5728JavaBean\u7684\u5c5e\u6027\u6216setter\u65b9\u6cd5\u4e0a 3. \u5141\u8bb8\u901a\u8fc7@FormParam\u5c06\u591a\u4e2a\u4e0a\u4f20\u6587\u4ef6\u53c2\u6570\u805a\u5408\u5230JavaBean\u4e2d 4. \u4f5c\u4e3aBeanParam\u7684JavaBean\u5185\u90e8\u5982\u679c\u6709\u591a\u4f59\u7684\u5c5e\u6027\uff0c\u9700\u8981\u6253\u4e0a @JsonIgnore \u5ffd\u7565\u6389 5. body\u53c2\u6570\u65e0\u6cd5\u805a\u5408\u8fdbBeanParam 6. Consumer\u7aef\u4e0d\u652f\u6301\u5c06\u53c2\u6570\u805a\u5408\u4e3aJavaBean\u53d1\u9001\uff0c\u5373\u4ecd\u7136\u9700\u8981\u6309\u7167\u63a5\u53e3\u5951\u7ea6\u5355\u72ec\u586b\u5199\u5404\u4e2a\u53c2\u6570 \u4ee3\u7801\u793a\u4f8b Provider\u7aef\u5f00\u53d1\u670d\u52a1 Provider\u7aef\u4e1a\u52a1\u63a5\u53e3\u4ee3\u7801\uff1a @RestSchema(schemaId = helloService ) @Path( /hello ) public class HelloService { @Path( /sayHello/{name} ) @GET public String sayHello(@BeanParam Person person) { System.out.println( sayHello is called, person = [ + person + ] ); return Hello, your name is + person.getName() + , and age is + person.getAge(); } } BeanParam\u53c2\u6570\u5b9a\u4e49\uff1a public class Person { private String name; @QueryParam( age ) private int age; @PathParam( name ) public void setName(String name) { this.name = name; } @JsonIgnore // \u5ffd\u7565\u590d\u6742\u5c5e\u6027 private List Person children; // \u5176\u4ed6\u65b9\u6cd5\u5ffd\u7565 } \u63a5\u53e3\u5951\u7ea6\uff1a # \u5ffd\u7565\u5951\u7ea6\u7684\u5176\u4ed6\u90e8\u5206 basePath: /hello paths: /sayHello/{name}: get: operationId: sayHello parameters: - name: name in: path required: true type: string - name: age in: query required: false type: integer format: int32 responses: 200: description: response of 200 schema: type: string Consumer\u7aef\u8c03\u7528\u670d\u52a1 consumer\u7aefRPC\u5f00\u53d1\u6a21\u5f0f\uff1a Provider\u63a5\u53e3\u5b9a\u4e49 public interface HelloServiceIntf { String sayHello(String name, int age); } \u8c03\u7528\u4ee3\u7801 String result = helloService.sayHello( Bob , 22); // result\u7684\u503c\u4e3a Hello, your name is Bob, and age is 22 consumer\u7aefRestTemplate\u5f00\u53d1\u6a21\u5f0f\uff1a String result = restTemplate.getForObject( cse://provider-service/hello/sayHello/Bob?age=22 , String.class); // \u8c03\u7528\u6548\u679c\u4e0eRPC\u65b9\u5f0f\u76f8\u540c","title":"\u7528JAX-RS\u5f00\u53d1\u5fae\u670d\u52a1"},{"location":"build-provider/jaxrs/#jax-rs","text":"","title":"\u7528JAX-RS\u5f00\u53d1\u5fae\u670d\u52a1"},{"location":"build-provider/jaxrs/#_1","text":"ServiceComb\u652f\u6301\u5f00\u53d1\u8005\u4f7f\u7528JAX-RS\u6ce8\u89e3\uff0c\u4f7f\u7528 JAX-RS \u6a21\u5f0f\u5f00\u53d1\u670d\u52a1\u3002","title":"\u6982\u5ff5\u9610\u8ff0"},{"location":"build-provider/jaxrs/#_2","text":"","title":"\u5f00\u53d1\u793a\u4f8b"},{"location":"build-provider/jaxrs/#1","text":"\u6839\u636e\u5f00\u53d1\u4e4b\u524d\u5b9a\u4e49\u597d\u7684\u5951\u7ea6\uff0c\u7f16\u5199Java\u4e1a\u52a1\u63a5\u53e3\uff0c\u4ee3\u7801\u5982\u4e0b\u3002\u5b9a\u4e49\u63a5\u53e3\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u4f46\u662f \u4e00\u4e2a\u597d\u4e60\u60ef\uff0c\u53ef\u4ee5\u7b80\u5316\u5ba2\u6237\u7aef\u4f7f\u7528RPC\u65b9\u5f0f\u7f16\u5199\u4ee3\u7801\u3002 public interface Hello { String sayHi(String name); String sayHello(Person person); }","title":"\u6b65\u9aa4 1\u5b9a\u4e49\u670d\u52a1\u63a5\u53e3\u3002"},{"location":"build-provider/jaxrs/#2","text":"\u4f7f\u7528JAX-RS\u6ce8\u89e3\u5f00\u53d1\u4e1a\u52a1\u4ee3\u7801\uff0cHello\u7684\u670d\u52a1\u5b9e\u73b0\u5982\u4e0b\uff1a @RestSchema(schemaId = jaxrsHello ) @Path( /jaxrshello ) @Produces(MediaType.APPLICATION_JSON) public class JaxrsHelloImpl implements Hello { @Path( /sayhi ) @POST @Override public String sayHi(String name) { return Hello + name; } @Path( /sayhello ) @POST @Override public String sayHello(Person person) { return Hello person + person.getName(); } /** * \u8fd9\u4e2a\u65b9\u6cd5\u662f\u5b9e\u73b0\u7c7b\u7279\u6709\u7684,\u56e0\u6b64\u5bf9\u5b83\u7684\u8fdc\u7a0b\u8c03\u7528\u4f1a\u6709\u6240\u4e0d\u540c. * \u5177\u4f53\u53ef\u4ee5\u53c2\u8003 jaxrs-consumer */ @Path( /saybye ) @GET public String sayBye() { return Bye ! ; } }","title":"\u6b65\u9aa4 2\u5b9e\u73b0\u670d\u52a1\u3002"},{"location":"build-provider/jaxrs/#3","text":"\u5728resources/META-INF/spring\u76ee\u5f55\u4e0b\u521b\u5efajaxrsHello.bean.xml\u6587\u4ef6\uff0c\u914d\u7f6espring\u8fdb\u884c\u670d\u52a1\u626b\u63cf\u7684base-package\uff0c\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b\u3002\uff08\u6ce8\u610f\u4fee\u6539package\u540d\u79f0\u4e3a\u6b63\u786e\u540d\u79f0\uff09 ?xml version= 1.0 encoding= UTF-8 ? beans xmlns= http://www.springframework.org/schema/beans xmlns:xsi= http://www.w3.org/2001/XMLSchema-instance xmlns:p= http://www.springframework.org/schema/p xmlns:util= http://www.springframework.org/schema/util xmlns:cse= http://www.huawei.com/schema/paas/cse/rpc xmlns:context= http://www.springframework.org/schema/context xsi:schemaLocation= http://www.springframework.org/schema/beans classpath:org/springframework/beans/factory/xml/spring-beans-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.huawei.com/schema/paas/cse/rpc classpath:META-INF/spring/spring-paas-cse-rpc.xsd context:component-scan base-package= org.apache.servicecomb.samples.jaxrs.provider / /beans","title":"\u6b65\u9aa4 3\u53d1\u5e03\u670d\u52a1\u3002"},{"location":"build-provider/jaxrs/#4","text":"public class JaxrsProviderMain{ public static void main(String[] args) throws Exception { Log4jUtils.init(); BeanUtils.init(); } }","title":"\u6b65\u9aa4 4\u542f\u52a8\u670d\u52a1\u3002"},{"location":"build-provider/jaxrs/#api","text":"JAX-RS\u5f00\u53d1\u6a21\u5f0f\u5f53\u524d\u652f\u6301\u5982\u4e0b\u6ce8\u89e3\uff0c\u6240\u6709\u6ce8\u89e3\u7684\u4f7f\u7528\u65b9\u6cd5\u53c2\u8003 JAX-RS\u5b98\u65b9\u6587\u6863 \u3002","title":"\u6d89\u53caAPI"},{"location":"build-provider/jaxrs/#1-1jax-rs","text":"\u6ce8\u89e3 \u4f4d\u7f6e \u63cf\u8ff0 javax.ws.rs.Path schema/operation URL\u8def\u5f84 javax.ws.rs.Produces schema/operation \u65b9\u6cd5\u652f\u6301\u7684\u7f16\u89e3\u7801\u80fd\u529b javax.ws.rs.DELETE operation http method javax.ws.rs.GET operation http method javax.ws.rs.POST operation http method javax.ws.rs.PUT operation http method javax.ws.rs.QueryParam parameter \u4ecequery string\u4e2d\u83b7\u53d6\u53c2\u6570 javax.ws.rs.PathParam parameter \u4ecepath\u4e2d\u83b7\u53d6\u53c2\u6570\uff0c\u5fc5\u987b\u5728path\u4e2d\u5b9a\u4e49\u8be5\u53c2\u6570 javax.ws.rs.HeaderParam parameter \u4eceheader\u4e2d\u83b7\u53d6\u53c2\u6570 javax.ws.rs.CookieParam parameter \u4ececookie\u4e2d\u83b7\u53d6\u53c2\u6570 javax.ws.rs.FormParam parameter \u4eceform\u4e2d\u83b7\u53d6\u53c2\u6570 javax.ws.rs.BeanParam parameter \u7528\u4e8e\u53c2\u6570\u805a\u5408\uff0c\u5141\u8bb8\u5728\u4e00\u4e2aJavaBean\u7684\u5c5e\u6027\u4e0a\u6253\u4e0a\u53c2\u6570\u6807\u8bb0\u4ee5\u5c06\u591a\u4e2a\u53c2\u6570\u805a\u5408\u4e3a\u4e00\u4e2aJavaBean \u8bf4\u660e: \u5f53\u65b9\u6cd5\u53c2\u6570\u6ca1\u6709\u6ce8\u89e3\uff0c\u4e14\u4e0d\u4e3a HttpServletRequest \u3001 InvocationContext \u7c7b\u578b\u53c2\u6570\u65f6\uff0c\u9ed8\u8ba4\u4e3abody\u7c7b\u578b\u53c2\u6570\uff0c\u4e00\u4e2a\u65b9\u6cd5\u6700\u591a\u53ea\u652f\u6301\u4e00\u4e2abody\u7c7b\u578b\u53c2\u6570\u3002","title":"\u88681-1JAX-RS\u6ce8\u89e3\u652f\u6301\u6c47\u603b"},{"location":"build-provider/jaxrs/#beanparam","text":"","title":"\u4f7f\u7528@BeanParam\u805a\u5408\u53c2\u6570"},{"location":"build-provider/jaxrs/#_3","text":"\u7528\u6237\u53ef\u4ee5\u4f7f\u7528@BeanParam\u6ce8\u89e3\u5c06\u591a\u4e2a\u53c2\u6570\u805a\u5408\u5230\u4e00\u4e2aJavaBean\u4e2d\uff0c\u901a\u8fc7\u5c06@QueryParam\u7b49\u53c2\u6570\u6ce8\u89e3\u6253\u5728\u6b64JavaBean\u7684\u5c5e\u6027\u6216setter\u65b9\u6cd5\u4e0a\u6765\u58f0\u660e\u53c2\u6570\uff0c\u4ece\u800c\u7b80\u5316\u4e1a\u52a1\u63a5\u53e3\u7684\u53c2\u6570\u8868\u3002\u53ef\u4ee5\u53c2\u8003JAX-RS\u7684\u5b98\u65b9\u8bf4\u660e\uff1ahttps://docs.oracle.com/javaee/7/api/javax/ws/rs/BeanParam.html ServiceComb\u73b0\u5728\u4e5f\u652f\u6301\u7c7b\u4f3c\u7684\u7528\u6cd5\uff0c\u8be5\u7528\u6cd5\u7684\u8981\u6c42\u5982\u4e0b\uff1a 1. \u805a\u5408\u53c2\u6570\u6240\u7528\u7684\u7c7b\u578b\u5fc5\u987b\u662f\u6807\u51c6\u7684JavaBean\uff0c\u5373\u7c7b\u578b\u7684\u5c5e\u6027\u4e0egetter\u3001setter\u65b9\u6cd5\u540d\u79f0\u5339\u914d\uff0csetter\u65b9\u6cd5\u7684\u8fd4\u56de\u7c7b\u578b\u4e3a void 2. \u53c2\u6570\u6ce8\u89e3\u53ef\u4ee5\u6253\u5728JavaBean\u7684\u5c5e\u6027\u6216setter\u65b9\u6cd5\u4e0a 3. \u5141\u8bb8\u901a\u8fc7@FormParam\u5c06\u591a\u4e2a\u4e0a\u4f20\u6587\u4ef6\u53c2\u6570\u805a\u5408\u5230JavaBean\u4e2d 4. \u4f5c\u4e3aBeanParam\u7684JavaBean\u5185\u90e8\u5982\u679c\u6709\u591a\u4f59\u7684\u5c5e\u6027\uff0c\u9700\u8981\u6253\u4e0a @JsonIgnore \u5ffd\u7565\u6389 5. body\u53c2\u6570\u65e0\u6cd5\u805a\u5408\u8fdbBeanParam 6. Consumer\u7aef\u4e0d\u652f\u6301\u5c06\u53c2\u6570\u805a\u5408\u4e3aJavaBean\u53d1\u9001\uff0c\u5373\u4ecd\u7136\u9700\u8981\u6309\u7167\u63a5\u53e3\u5951\u7ea6\u5355\u72ec\u586b\u5199\u5404\u4e2a\u53c2\u6570","title":"\u4f7f\u7528\u8bf4\u660e"},{"location":"build-provider/jaxrs/#_4","text":"","title":"\u4ee3\u7801\u793a\u4f8b"},{"location":"build-provider/jaxrs/#provider","text":"Provider\u7aef\u4e1a\u52a1\u63a5\u53e3\u4ee3\u7801\uff1a @RestSchema(schemaId = helloService ) @Path( /hello ) public class HelloService { @Path( /sayHello/{name} ) @GET public String sayHello(@BeanParam Person person) { System.out.println( sayHello is called, person = [ + person + ] ); return Hello, your name is + person.getName() + , and age is + person.getAge(); } } BeanParam\u53c2\u6570\u5b9a\u4e49\uff1a public class Person { private String name; @QueryParam( age ) private int age; @PathParam( name ) public void setName(String name) { this.name = name; } @JsonIgnore // \u5ffd\u7565\u590d\u6742\u5c5e\u6027 private List Person children; // \u5176\u4ed6\u65b9\u6cd5\u5ffd\u7565 } \u63a5\u53e3\u5951\u7ea6\uff1a # \u5ffd\u7565\u5951\u7ea6\u7684\u5176\u4ed6\u90e8\u5206 basePath: /hello paths: /sayHello/{name}: get: operationId: sayHello parameters: - name: name in: path required: true type: string - name: age in: query required: false type: integer format: int32 responses: 200: description: response of 200 schema: type: string","title":"Provider\u7aef\u5f00\u53d1\u670d\u52a1"},{"location":"build-provider/jaxrs/#consumer","text":"consumer\u7aefRPC\u5f00\u53d1\u6a21\u5f0f\uff1a Provider\u63a5\u53e3\u5b9a\u4e49 public interface HelloServiceIntf { String sayHello(String name, int age); } \u8c03\u7528\u4ee3\u7801 String result = helloService.sayHello( Bob , 22); // result\u7684\u503c\u4e3a Hello, your name is Bob, and age is 22 consumer\u7aefRestTemplate\u5f00\u53d1\u6a21\u5f0f\uff1a String result = restTemplate.getForObject( cse://provider-service/hello/sayHello/Bob?age=22 , String.class); // \u8c03\u7528\u6548\u679c\u4e0eRPC\u65b9\u5f0f\u76f8\u540c","title":"Consumer\u7aef\u8c03\u7528\u670d\u52a1"},{"location":"build-provider/listen-address-and-publish-address/","text":"\u670d\u52a1\u76d1\u542c\u5730\u5740\u548c\u53d1\u5e03\u5730\u5740 \u6982\u5ff5\u9610\u8ff0 \u5728JavaChassis\u4e2d\uff0c\u670d\u52a1\u7684\u76d1\u542c\u5730\u5740\u548c\u53d1\u5e03\u5730\u5740\u662f\u4e24\u4e2a\u72ec\u7acb\u7684\u6982\u5ff5\uff0c\u53ef\u4ee5\u72ec\u7acb\u914d\u7f6e\uff1a \u76d1\u542c\u5730\u5740\uff1a\u6307\u5fae\u670d\u52a1\u5b9e\u4f8b\u542f\u52a8\u65f6\u76d1\u542c\u7684\u5730\u5740\u3002\u8be5\u914d\u7f6e\u9879\u51b3\u5b9a\u4e86\u53ef\u4ee5\u901a\u8fc7\u54ea\u4e9bIP\u8bbf\u95ee\u6b64\u670d\u52a1\u3002 \u53d1\u5e03\u5730\u5740\uff1a\u6307\u5fae\u670d\u52a1\u5b9e\u4f8b\u6ce8\u518c\u5230\u670d\u52a1\u4e2d\u5fc3\u7684\u5730\u5740\u3002\u5176\u4ed6\u7684\u5fae\u670d\u52a1\u5b9e\u4f8b\u4f1a\u901a\u8fc7\u670d\u52a1\u4e2d\u5fc3\u83b7\u53d6\u6b64\u5b9e\u4f8b\u7684\u4fe1\u606f\uff0c\u6839\u636e\u53d1\u5e03\u5730\u5740\u8bbf\u95ee\u6b64\u670d\u52a1\u5b9e\u4f8b\uff0c\u6240\u4ee5\u8be5\u914d\u7f6e\u9879\u51b3\u5b9a\u4e86\u5176\u4ed6\u670d\u52a1\u5b9e\u9645\u4e0a\u4f1a\u4f7f\u7528\u54ea\u4e2aIP\u8bbf\u95ee\u6b64\u670d\u52a1\u3002 \u573a\u666f\u63cf\u8ff0 \u7528\u6237\u901a\u8fc7\u914d\u7f6e\u670d\u52a1\u7684\u76d1\u542c\u5730\u5740\u548c\u53d1\u5e03\u5730\u5740\u6765\u786e\u5b9a\u670d\u52a1\u5b9e\u4f8b\u76d1\u542c\u7684IP\u548c\u5176\u4ed6\u670d\u52a1\u5b9e\u4f8b\u8bbf\u95ee\u672c\u5b9e\u4f8b\u65f6\u8bf7\u6c42\u7684IP\u3002 \u914d\u7f6e\u8bf4\u660e \u670d\u52a1\u76d1\u542c\u5730\u5740\u7684\u914d\u7f6e\u9879\u662f servicecomb.rest.address \u548c servicecomb.highway.address \uff0c\u5206\u522b\u5bf9\u5e94rest\u4f20\u8f93\u65b9\u5f0f\u548chighway\u4f20\u8f93\u65b9\u5f0f\u7684\u76d1\u542c\u5730\u5740\u3002\u4e24\u8005\u7684\u914d\u7f6e\u89c4\u5219\u76f8\u540c\uff0c\u4ee5\u4e0b\u4ec5\u4ee5 servicecomb.rest.address \u4f5c\u4e3a\u8bf4\u660e\u3002 \u670d\u52a1\u53d1\u5e03\u5730\u5740\u7684\u914d\u7f6e\u9879\u662f servicecomb.service.publishAddress \uff0c\u8be5\u5730\u5740 \u53ef\u4ee5\u4e0d\u914d\u7f6e \u3002\u4e0d\u914d\u7f6e\u6b64\u9879\u65f6JavaChassis\u4f1a\u6839\u636e\u7279\u5b9a\u7684\u89c4\u5219\u9009\u53d6\u53d1\u5e03\u5730\u5740\u3002 \u88681 \u670d\u52a1\u53d1\u5e03\u5730\u5740\u751f\u6548\u89c4\u5219 \u89c4\u5219\u7f16\u53f7 \u76d1\u542c\u5730\u5740\u914d\u7f6e \u53d1\u5e03\u5730\u5740\u914d\u7f6e \u5b9e\u9645\u751f\u6548\u7684\u53d1\u5e03\u5730\u5740 1 127.0.0.1 - 127.0.0.1 2 0.0.0.0 - \u9009\u53d6\u4e00\u5f20\u7f51\u5361\u7684IP\u5730\u5740\u4f5c\u4e3a\u53d1\u5e03\u5730\u5740\u3002 \u8981\u6c42\u8be5\u5730\u5740\u4e0d\u80fd\u662f\u901a\u914d\u7b26\u5730\u5740\u3001\u56de\u73af\u5730\u5740\u6216\u5e7f\u64ad\u5730\u5740 3 \u5177\u4f53IP - \u4e0e\u76d1\u542c\u5730\u5740\u4e00\u81f4 4 * \u5177\u4f53IP \u4e0e\u53d1\u5e03\u5730\u5740\u914d\u7f6e\u9879\u4e00\u81f4 5 * \"{\u7f51\u5361\u540d}\" \u6307\u5b9a\u7f51\u5361\u540d\u7684IP\uff0c\u6ce8\u610f\u9700\u8981\u52a0\u4e0a\u5f15\u53f7\u548c\u62ec\u53f7 \u8bf4\u660e\uff1a - \u670d\u52a1\u5b9e\u4f8b\u5b9e\u9645\u76d1\u542c\u7684\u5730\u5740\u59cb\u7ec8\u4e0e\u76d1\u542c\u5730\u5740\u914d\u7f6e\u9879\u4fdd\u6301\u4e00\u81f4\u3002 - \u4f7f\u7528\u7f51\u5361\u540d\u914d\u7f6e\u53d1\u5e03\u5730\u5740\u65f6\uff0c\u8981\u6c42\u4f7f\u7528\u53cc\u5f15\u53f7\u5305\u88f9\u4f4f\u7f51\u5361\u540d\u5360\u4f4d\u7b26\uff0c\u5426\u5219\u4f1a\u9020\u6210\u89e3\u6790\u914d\u7f6e\u62a5\u9519\u3002 - \u7f51\u5361\u540d\u5fc5\u987b\u662f\u4e3b\u673a\u5b58\u5728\u7684\u7f51\u5361\u3002 \u793a\u4f8b\u4ee3\u7801 microservice.yaml\u6587\u4ef6\u7684\u914d\u7f6e\u793a\u4f8b\u5982\u4e0b\uff1a servicecomb: service: publishAddress: {eth0} # \u6ce8\u518c\u5230\u670d\u52a1\u4e2d\u5fc3\u7684\u53d1\u5e03\u5730\u5740\u4f1a\u662feth0\u7f51\u5361\u7684IP rest: address: 0.0.0.0:8080 # \u76d1\u542c\u4e3b\u673a\u7684\u5168\u90e8\u7f51\u5361IP highway: address: 0.0.0.0:7070 # \u76d1\u542c\u4e3b\u673a\u7684\u5168\u90e8\u7f51\u5361IP","title":"\u670d\u52a1\u76d1\u542c\u5730\u5740\u548c\u53d1\u5e03\u5730\u5740"},{"location":"build-provider/listen-address-and-publish-address/#_1","text":"","title":"\u670d\u52a1\u76d1\u542c\u5730\u5740\u548c\u53d1\u5e03\u5730\u5740"},{"location":"build-provider/listen-address-and-publish-address/#_2","text":"\u5728JavaChassis\u4e2d\uff0c\u670d\u52a1\u7684\u76d1\u542c\u5730\u5740\u548c\u53d1\u5e03\u5730\u5740\u662f\u4e24\u4e2a\u72ec\u7acb\u7684\u6982\u5ff5\uff0c\u53ef\u4ee5\u72ec\u7acb\u914d\u7f6e\uff1a \u76d1\u542c\u5730\u5740\uff1a\u6307\u5fae\u670d\u52a1\u5b9e\u4f8b\u542f\u52a8\u65f6\u76d1\u542c\u7684\u5730\u5740\u3002\u8be5\u914d\u7f6e\u9879\u51b3\u5b9a\u4e86\u53ef\u4ee5\u901a\u8fc7\u54ea\u4e9bIP\u8bbf\u95ee\u6b64\u670d\u52a1\u3002 \u53d1\u5e03\u5730\u5740\uff1a\u6307\u5fae\u670d\u52a1\u5b9e\u4f8b\u6ce8\u518c\u5230\u670d\u52a1\u4e2d\u5fc3\u7684\u5730\u5740\u3002\u5176\u4ed6\u7684\u5fae\u670d\u52a1\u5b9e\u4f8b\u4f1a\u901a\u8fc7\u670d\u52a1\u4e2d\u5fc3\u83b7\u53d6\u6b64\u5b9e\u4f8b\u7684\u4fe1\u606f\uff0c\u6839\u636e\u53d1\u5e03\u5730\u5740\u8bbf\u95ee\u6b64\u670d\u52a1\u5b9e\u4f8b\uff0c\u6240\u4ee5\u8be5\u914d\u7f6e\u9879\u51b3\u5b9a\u4e86\u5176\u4ed6\u670d\u52a1\u5b9e\u9645\u4e0a\u4f1a\u4f7f\u7528\u54ea\u4e2aIP\u8bbf\u95ee\u6b64\u670d\u52a1\u3002","title":"\u6982\u5ff5\u9610\u8ff0"},{"location":"build-provider/listen-address-and-publish-address/#_3","text":"\u7528\u6237\u901a\u8fc7\u914d\u7f6e\u670d\u52a1\u7684\u76d1\u542c\u5730\u5740\u548c\u53d1\u5e03\u5730\u5740\u6765\u786e\u5b9a\u670d\u52a1\u5b9e\u4f8b\u76d1\u542c\u7684IP\u548c\u5176\u4ed6\u670d\u52a1\u5b9e\u4f8b\u8bbf\u95ee\u672c\u5b9e\u4f8b\u65f6\u8bf7\u6c42\u7684IP\u3002","title":"\u573a\u666f\u63cf\u8ff0"},{"location":"build-provider/listen-address-and-publish-address/#_4","text":"\u670d\u52a1\u76d1\u542c\u5730\u5740\u7684\u914d\u7f6e\u9879\u662f servicecomb.rest.address \u548c servicecomb.highway.address \uff0c\u5206\u522b\u5bf9\u5e94rest\u4f20\u8f93\u65b9\u5f0f\u548chighway\u4f20\u8f93\u65b9\u5f0f\u7684\u76d1\u542c\u5730\u5740\u3002\u4e24\u8005\u7684\u914d\u7f6e\u89c4\u5219\u76f8\u540c\uff0c\u4ee5\u4e0b\u4ec5\u4ee5 servicecomb.rest.address \u4f5c\u4e3a\u8bf4\u660e\u3002 \u670d\u52a1\u53d1\u5e03\u5730\u5740\u7684\u914d\u7f6e\u9879\u662f servicecomb.service.publishAddress \uff0c\u8be5\u5730\u5740 \u53ef\u4ee5\u4e0d\u914d\u7f6e \u3002\u4e0d\u914d\u7f6e\u6b64\u9879\u65f6JavaChassis\u4f1a\u6839\u636e\u7279\u5b9a\u7684\u89c4\u5219\u9009\u53d6\u53d1\u5e03\u5730\u5740\u3002 \u88681 \u670d\u52a1\u53d1\u5e03\u5730\u5740\u751f\u6548\u89c4\u5219 \u89c4\u5219\u7f16\u53f7 \u76d1\u542c\u5730\u5740\u914d\u7f6e \u53d1\u5e03\u5730\u5740\u914d\u7f6e \u5b9e\u9645\u751f\u6548\u7684\u53d1\u5e03\u5730\u5740 1 127.0.0.1 - 127.0.0.1 2 0.0.0.0 - \u9009\u53d6\u4e00\u5f20\u7f51\u5361\u7684IP\u5730\u5740\u4f5c\u4e3a\u53d1\u5e03\u5730\u5740\u3002 \u8981\u6c42\u8be5\u5730\u5740\u4e0d\u80fd\u662f\u901a\u914d\u7b26\u5730\u5740\u3001\u56de\u73af\u5730\u5740\u6216\u5e7f\u64ad\u5730\u5740 3 \u5177\u4f53IP - \u4e0e\u76d1\u542c\u5730\u5740\u4e00\u81f4 4 * \u5177\u4f53IP \u4e0e\u53d1\u5e03\u5730\u5740\u914d\u7f6e\u9879\u4e00\u81f4 5 * \"{\u7f51\u5361\u540d}\" \u6307\u5b9a\u7f51\u5361\u540d\u7684IP\uff0c\u6ce8\u610f\u9700\u8981\u52a0\u4e0a\u5f15\u53f7\u548c\u62ec\u53f7 \u8bf4\u660e\uff1a - \u670d\u52a1\u5b9e\u4f8b\u5b9e\u9645\u76d1\u542c\u7684\u5730\u5740\u59cb\u7ec8\u4e0e\u76d1\u542c\u5730\u5740\u914d\u7f6e\u9879\u4fdd\u6301\u4e00\u81f4\u3002 - \u4f7f\u7528\u7f51\u5361\u540d\u914d\u7f6e\u53d1\u5e03\u5730\u5740\u65f6\uff0c\u8981\u6c42\u4f7f\u7528\u53cc\u5f15\u53f7\u5305\u88f9\u4f4f\u7f51\u5361\u540d\u5360\u4f4d\u7b26\uff0c\u5426\u5219\u4f1a\u9020\u6210\u89e3\u6790\u914d\u7f6e\u62a5\u9519\u3002 - \u7f51\u5361\u540d\u5fc5\u987b\u662f\u4e3b\u673a\u5b58\u5728\u7684\u7f51\u5361\u3002","title":"\u914d\u7f6e\u8bf4\u660e"},{"location":"build-provider/listen-address-and-publish-address/#_5","text":"microservice.yaml\u6587\u4ef6\u7684\u914d\u7f6e\u793a\u4f8b\u5982\u4e0b\uff1a servicecomb: service: publishAddress: {eth0} # \u6ce8\u518c\u5230\u670d\u52a1\u4e2d\u5fc3\u7684\u53d1\u5e03\u5730\u5740\u4f1a\u662feth0\u7f51\u5361\u7684IP rest: address: 0.0.0.0:8080 # \u76d1\u542c\u4e3b\u673a\u7684\u5168\u90e8\u7f51\u5361IP highway: address: 0.0.0.0:7070 # \u76d1\u542c\u4e3b\u673a\u7684\u5168\u90e8\u7f51\u5361IP","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"build-provider/service-configuration/","text":"\u8d1f\u8f7d\u5747\u8861\u7b56\u7565 \u2022 ServiceComb\u63d0\u4f9b\u4e86\u57fa\u4e8eRibbon\u7684\u8d1f\u8f7d\u5747\u8861\u65b9\u6848\uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u914d\u7f6e\u8d1f\u8f7d\u5747\u8861\u7b56\u7565\uff0c\u5f53\u524d\u652f\u6301\u968f\u673a\u3001\u987a\u5e8f\u3001\u57fa\u4e8e\u54cd\u5e94\u65f6\u95f4\u7684\u6743\u503c\u7b49\u591a\u79cd\u8d1f\u8f7d\u5747\u8861\u8def\u7531\u7b56\u7565## Service Center {:target=\"_blank\"} \u9650\u6d41\u7b56\u7565 \u2022 \u7528\u6237\u5728provider\u7aef\u4f7f\u7528\u9650\u6d41\u7b56\u7565\uff0c\u53ef\u4ee5\u9650\u5236\u6307\u5b9a\u5fae\u670d\u52a1\u5411\u5176\u53d1\u9001\u8bf7\u6c42\u7684\u9891\u7387\uff0c\u8fbe\u5230\u9650\u5236\u6bcf\u79d2\u949f\u6700\u5927\u8bf7\u6c42\u6570\u91cf\u7684\u6548\u679c\u3002 \u964d\u7ea7\u7b56\u7565 \u2022 \u964d\u7ea7\u7b56\u7565\u662f\u5f53\u670d\u52a1\u8bf7\u6c42\u5f02\u5e38\u65f6\uff0c\u5fae\u670d\u52a1\u6240\u91c7\u7528\u7684\u5f02\u5e38\u5904\u7406\u7b56\u7565\u3002 \u53c2\u6570\u6548\u9a8c \u2022 \u7528\u6237\u5728provider\u7aef\u4f7f\u7528\u53c2\u6570\u6548\u9a8c\uff0c\u53ef\u4ee5\u5bf9\u76f8\u5e94\u7684\u53c2\u6570\u8f93\u5165\u8981\u6c42\u9884\u5148\u8fdb\u884c\u8bbe\u7f6e\uff0c\u5728\u63a5\u53e3\u5b9e\u9645\u8c03\u7528\u524d\u8fdb\u884c\u6548\u9a8c\u5904\u7406\uff0c\u8fbe\u5230\u63a7\u5236\u53c2\u6570\u8f93\u5165\u6807\u51c6\u7684\u6548\u679c\u3002","title":"Service configuration"},{"location":"build-provider/service-configuration/#_1","text":"\u2022 ServiceComb\u63d0\u4f9b\u4e86\u57fa\u4e8eRibbon\u7684\u8d1f\u8f7d\u5747\u8861\u65b9\u6848\uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u914d\u7f6e\u8d1f\u8f7d\u5747\u8861\u7b56\u7565\uff0c\u5f53\u524d\u652f\u6301\u968f\u673a\u3001\u987a\u5e8f\u3001\u57fa\u4e8e\u54cd\u5e94\u65f6\u95f4\u7684\u6743\u503c\u7b49\u591a\u79cd\u8d1f\u8f7d\u5747\u8861\u8def\u7531\u7b56\u7565## Service Center {:target=\"_blank\"}","title":"\u8d1f\u8f7d\u5747\u8861\u7b56\u7565"},{"location":"build-provider/service-configuration/#_2","text":"\u2022 \u7528\u6237\u5728provider\u7aef\u4f7f\u7528\u9650\u6d41\u7b56\u7565\uff0c\u53ef\u4ee5\u9650\u5236\u6307\u5b9a\u5fae\u670d\u52a1\u5411\u5176\u53d1\u9001\u8bf7\u6c42\u7684\u9891\u7387\uff0c\u8fbe\u5230\u9650\u5236\u6bcf\u79d2\u949f\u6700\u5927\u8bf7\u6c42\u6570\u91cf\u7684\u6548\u679c\u3002","title":"\u9650\u6d41\u7b56\u7565"},{"location":"build-provider/service-configuration/#_3","text":"\u2022 \u964d\u7ea7\u7b56\u7565\u662f\u5f53\u670d\u52a1\u8bf7\u6c42\u5f02\u5e38\u65f6\uff0c\u5fae\u670d\u52a1\u6240\u91c7\u7528\u7684\u5f02\u5e38\u5904\u7406\u7b56\u7565\u3002","title":"\u964d\u7ea7\u7b56\u7565"},{"location":"build-provider/service-configuration/#_4","text":"\u2022 \u7528\u6237\u5728provider\u7aef\u4f7f\u7528\u53c2\u6570\u6548\u9a8c\uff0c\u53ef\u4ee5\u5bf9\u76f8\u5e94\u7684\u53c2\u6570\u8f93\u5165\u8981\u6c42\u9884\u5148\u8fdb\u884c\u8bbe\u7f6e\uff0c\u5728\u63a5\u53e3\u5b9e\u9645\u8c03\u7528\u524d\u8fdb\u884c\u6548\u9a8c\u5904\u7406\uff0c\u8fbe\u5230\u63a7\u5236\u53c2\u6570\u8f93\u5165\u6807\u51c6\u7684\u6548\u679c\u3002","title":"\u53c2\u6570\u6548\u9a8c"},{"location":"build-provider/springmvc/","text":"\u7528SpringMVC \u5f00\u53d1\u5fae\u670d\u52a1 \u6982\u5ff5\u9610\u8ff0 ServiceComb\u652f\u6301SpringMVC\u6ce8\u89e3\uff0c\u5141\u8bb8\u4f7f\u7528SpringMVC\u98ce\u683c\u5f00\u53d1\u5fae\u670d\u52a1\u3002\u5efa\u8bae\u53c2\u7167\u7740\u9879\u76ee SpringMVC \u8fdb\u884c\u8be6\u7ec6\u9605\u8bfb \u5f00\u53d1\u793a\u4f8b \u6b65\u9aa41 \u5b9a\u4e49\u670d\u52a1\u63a5\u53e3\uff08\u53ef\u9009\uff0c\u65b9\u4fbf\u4f7f\u7528RPC\u65b9\u5f0f\u8c03\u7528\uff09 \u5b9a\u4e49\u63a5\u53e3\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u4f46\u662f \u4e00\u4e2a\u597d\u4e60\u60ef\uff0c\u53ef\u4ee5\u7b80\u5316\u5ba2\u6237\u7aef\u4f7f\u7528RPC\u65b9\u5f0f\u7f16\u5199\u4ee3\u7801\u3002 public interface Hello { String sayHi(String name); String sayHello(Person person); } \u6b65\u9aa42 \u5b9e\u73b0\u670d\u52a1 \u4f7f\u7528Spring MVC\u6ce8\u89e3\u5f00\u53d1\u4e1a\u52a1\u4ee3\u7801\uff0cHello\u7684\u670d\u52a1\u5b9e\u73b0\u5982\u4e0b\u3002\u5728\u670d\u52a1\u7684\u5b9e\u73b0\u7c7b\u4e0a\u6253\u4e0a\u6ce8\u89e3@RestSchema\uff0c\u6307\u5b9aschemaId\uff0cschemaId\u5fc5\u987b\u4fdd\u8bc1\u5fae\u670d\u52a1\u8303\u56f4\u5185\u552f\u4e00\u3002 @RestSchema(schemaId = springmvcHello ) @RequestMapping(path = /springmvchello , produces = MediaType.APPLICATION_JSON) public class SpringmvcHelloImpl implements Hello { @Override @RequestMapping(path = /sayhi , method = RequestMethod.POST) public String sayHi(@RequestParam(name = name ) String name) { return Hello + name; } @Override @RequestMapping(path = /sayhello , method = RequestMethod.POST) public String sayHello(@RequestBody Person person) { return Hello person + person.getName(); } } \u6b65\u9aa43 \u53d1\u5e03\u670d\u52a1 \uff08\u53ef\u9009\uff0c\u9ed8\u8ba4\u4f1a\u626b\u63cfmain\u51fd\u6570\u6240\u5728\u7684package\uff09 \u5728 resources/META-INF/spring \u76ee\u5f55\u4e0b\u521b\u5efa springmvcprovider.bean.xml \u6587\u4ef6\uff0c\u547d\u540d\u89c4\u5219\u4e3a \\*.bean.xml \uff0c\u914d\u7f6espring\u8fdb\u884c\u670d\u52a1\u626b\u63cf\u7684base-package\uff0c\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b\uff1a ?xml version= 1.0 encoding= UTF-8 ? beans xmlns= http://www.springframework.org/schema/beans xmlns:xsi= http://www.w3.org/2001/XMLSchema-instance xmlns:context= http://www.springframework.org/schema/context xsi:schemaLocation= http://www.springframework.org/schema/beans classpath:org/springframework/beans/factory/xml/spring-beans-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd context:component-scan base-package= org.apache.servicecomb.samples.springmvc.povider / /beans \u6b65\u9aa44 \u542f\u52a8provider \u670d\u52a1 \u4e0b\u9762\u7684\u4ee3\u7801\u4f7f\u7528Log4j\u4f5c\u4e3a\u65e5\u5fd7\u8bb0\u5f55\u5668\u3002\u5f00\u53d1\u8005\u53ef\u4ee5\u65b9\u4fbf\u4f7f\u7528\u5176\u4ed6\u65e5\u5fd7\u6846\u67b6\u3002 public class SpringmvcProviderMain { public static void main(String[] args) throws Exception { Log4jUtils.init(); BeanUtils.init(); } } Query\u53c2\u6570\u805a\u5408\u4e3aPOJO\u5bf9\u8c61 \u4f7f\u7528\u8bf4\u660e SpringBoot\u652f\u6301\u5c06Java\u4e1a\u52a1\u63a5\u53e3\u4e2d\u7684\u591a\u4e2aquery\u53c2\u6570\u805a\u5408\u4e3a\u4e00\u4e2aPOJO\u7c7b\uff0cSpringBoot\u539f\u751f\u7528\u6cd5\u793a\u4f8b\u5982\u4e0b\uff1a @RequestMapping( /hello ) public class HelloService { @RequestMapping(value = /sayHello , method = RequestMethod.GET) public String sayHello(Person person) { System.out.println( sayHello is called, person = [ + person + ] ); return Hello, your name is + person.getName() + , and age is + person.getAge(); } } \u5176\u4e2d\uff0c\u4f5c\u4e3a\u53c2\u6570\u7684 Person \u7c7b\u662f\u4e00\u4e2a\u6807\u51c6\u7684JavaBean\uff0c\u5305\u542b\u5c5e\u6027 name \u548c age \u3002\u5f53\u670d\u52a1\u63a5\u6536\u5230\u7684\u8bf7\u6c42\u65f6\uff0cSpringBoot\u4f1a\u5c06query\u53c2\u6570 name \u548c age \u805a\u5408\u4e3aPerson\u5bf9\u8c61\u4f20\u5165\u4e1a\u52a1\u63a5\u53e3\u3002 ServiceComb\u7684SpringMVC\u5f00\u53d1\u6a21\u5f0f\u73b0\u5728\u4e5f\u652f\u6301\u7c7b\u4f3c\u7684\u7528\u6cd5\uff0c\u8be5\u7528\u6cd5\u7684\u8981\u6c42\u5982\u4e0b\uff1a 1. POJO\u53c2\u6570\u4e0a\u4e0d\u80fd\u6709Spring\u7684\u53c2\u6570\u6ce8\u89e3\uff0c\u5426\u5219ServiceComb\u4e0d\u4f1a\u5c06\u5176\u4f5c\u4e3a\u805a\u5408\u7684query\u53c2\u6570\u5bf9\u8c61\u5904\u7406\u3002 2. \u4ec5\u652f\u6301\u805a\u5408query\u53c2\u6570 3. POJO\u53c2\u6570\u7c7b\u4e2d\u7684\u5c5e\u6027\u540d\u4e0equery\u53c2\u6570\u540d\u9700\u8981\u4fdd\u6301\u4e00\u81f4 4. POJO\u53c2\u6570\u4e2d\u4e0d\u652f\u6301\u590d\u6742\u7684\u5c5e\u6027\uff0c\u5982\u5176\u4ed6POJO\u5bf9\u8c61\u3001List\u7b49\u3002\u7528\u6237\u53ef\u4ee5\u5728\u8fd9\u4e9b\u590d\u6742\u7c7b\u578b\u6253\u4e0a @JsonIgnore \u6ce8\u89e3\u6765\u8ba9ServiceComb\u5ffd\u7565\u8fd9\u4e9b\u590d\u6742\u5c5e\u6027\u3002 5. consumer\u7aef\u4e0d\u652f\u6301query\u53c2\u6570\u805a\u5408\u4e3aPOJO\u5bf9\u8c61\uff0c\u8c03\u7528\u670d\u52a1\u65f6\u4f9d\u7136\u8981\u6309\u7167\u5951\u7ea6\u53d1\u9001\u8bf7\u6c42\u3002\u5373provider\u7aef\u88ab\u805a\u5408\u7684POJO\u53c2\u6570\u5728\u5951\u7ea6\u4e2d\u4f1a\u88ab\u5c55\u5f00\u6210\u4e00\u7cfb\u5217\u7684query\u53c2\u6570\uff0cconsumer\u7aef\u9700\u8981\u5728provider\u63a5\u53e3\u65b9\u6cd5\u4e2d\u4f9d\u6b21\u5b9a\u4e49\u8fd9\u4e9bquery\u53c2\u6570\uff08RPC\u5f00\u53d1\u6a21\u5f0f\uff09\uff0c\u6216\u5728\u53d1\u9001\u8bf7\u6c42\u65f6\u586b\u5165\u8fd9\u4e9bquery\u53c2\u6570\uff08RestTemplate\u5f00\u53d1\u6a21\u5f0f\uff09\u3002 \u4ee3\u7801\u793a\u4f8b Provider\u7aef\u5f00\u53d1\u670d\u52a1 Provider\u7aef\u4e1a\u52a1\u63a5\u53e3\u4ee3\u7801\uff1a @RestSchema(schemaId = helloService ) @RequestMapping( /hello ) public class HelloService { @RequestMapping(value = /sayHello , method = RequestMethod.GET) public String sayHello(Person person) { System.out.println( sayHello is called, person = [ + person + ] ); return Hello, your name is + person.getName() + , and age is + person.getAge(); } } POJO\u53c2\u6570\u5bf9\u8c61\u5b9a\u4e49\uff1a public class Person { private String name; private int age; @JsonIgnore // \u590d\u6742\u5c5e\u6027\u9700\u8981\u6807\u8bb0@JsonIgnore\uff0c\u5426\u5219\u542f\u52a8\u65f6\u4f1a\u62a5\u9519 private List Person children; } \u63a5\u53e3\u5951\u7ea6\uff1a # \u5ffd\u7565\u5951\u7ea6\u7684\u5176\u4ed6\u90e8\u5206 basePath: /hello paths: /sayHello: get: operationId: sayHello parameters: # Person\u7c7b\u7684name\u5c5e\u6027\u548cage\u5c5e\u6027\u4f5c\u4e3a\u5951\u7ea6\u4e2d\u7684query\u53c2\u6570 - name: name in: query required: false type: string - name: age in: query required: false type: integer format: int32 responses: 200: description: response of 200 schema: type: string Consumer\u7aef\u8c03\u7528\u670d\u52a1 consumer\u7aefRPC\u5f00\u53d1\u6a21\u5f0f\uff1a Provider\u63a5\u53e3\u5b9a\u4e49 public interface HelloServiceIntf { String sayHello(String name, int age); } \u8c03\u7528\u4ee3\u7801 String result = helloService.sayHello( Bob , 22); // result\u7684\u503c\u4e3a Hello, your name is Bob, and age is 22 consumer\u7aefRestTemplate\u5f00\u53d1\u6a21\u5f0f\uff1a String result = restTemplate.getForObject( cse://provider-service/hello/sayHello?name=Bob age=22 , String.class); // \u8c03\u7528\u6548\u679c\u4e0eRPC\u65b9\u5f0f\u76f8\u540c ServiceComb\u652f\u6301\u7684Spring MVC\u6807\u7b7e\u8bf4\u660e ServiceComb\u652f\u6301\u4f7f\u7528Spring MVC\u63d0\u4f9b\u7684\u6807\u7b7e(org.springframework.web.bind.annotation)\u6765\u58f0\u660eREST\u63a5\u53e3\uff0c\u4f46\u662f\u4e24\u8005\u662f\u72ec\u7acb\u7684\u5b9e\u73b0\uff0c\u800c\u4e14\u6709\u4e0d\u4e00\u6837\u7684\u8bbe\u8ba1\u76ee\u6807\u3002CSE\u7684\u76ee\u6807\u662f\u63d0\u4f9b\u8de8\u8bed\u8a00\u3001\u652f\u6301\u591a\u901a\u4fe1\u534f\u8bae\u7684\u6846\u67b6\uff0c\u56e0\u6b64\u53bb\u6389\u4e86Spring MVC\u4e2d\u4e00\u4e9b\u5bf9\u8de8\u8bed\u8a00\u652f\u6301\u4e0d\u662f\u5f88\u597d\u7684\u7279\u6027\uff0c\u4e5f\u4e0d\u652f\u6301\u7279\u5b9a\u8fd0\u884c\u6846\u67b6\u5f3a\u76f8\u5173\u7684\u7279\u6027\uff0c\u6bd4\u5982\u76f4\u63a5\u8bbf\u95eeServlet\u534f\u8bae\u5b9a\u4e49\u7684 HttpServletRequest \u3002ServiceComb\u6ca1\u6709\u5b9e\u73b0 @Controller \u76f8\u5173\u529f\u80fd, \u53ea\u5b9e\u73b0\u4e86 @RestController \uff0c\u5373\u901a\u8fc7MVC\u6a21\u5f0f\u8fdb\u884c\u9875\u9762\u6e32\u67d3\u7b49\u529f\u80fd\u90fd\u662f\u4e0d\u652f\u6301\u7684\u3002 \u4e0b\u9762\u662f\u4e00\u4e9b\u5177\u4f53\u5dee\u5f02\u3002 \u5e38\u7528\u6807\u7b7e\u652f\u6301 \u4e0b\u9762\u662fCSE\u5bf9\u4e8eSpring MVC\u5e38\u7528\u6807\u7b7e\u7684\u652f\u6301\u60c5\u51b5\u3002 \u88681-1 Spring MVC\u6ce8\u89e3\u60c5\u51b5\u8bf4\u660e \u6807\u7b7e\u540d\u79f0 \u662f\u5426\u652f\u6301 \u8bf4\u660e RequestMapping \u662f \u4e0d\u5141\u8bb8\u5236\u5b9a\u591a\u4e2aPath\uff0c\u4e00\u4e2a\u63a5\u53e3\u53ea\u5141\u8bb8\u4e00\u4e2aPath GetMapping \u662f PutMapping \u662f PostMapping \u662f DeleteMapping \u662f PatchMapping \u662f RequestParam \u662f CookieValue \u662f PathVariable \u662f RequestHeader \u662f RequestBody \u662f \u76ee\u524d\u652f\u6301application/json\uff0cplain/text RequestPart \u662f \u7528\u4e8e\u6587\u4ef6\u4e0a\u4f20\u7684\u573a\u666f\uff0c\u5bf9\u5e94\u7684\u6807\u7b7e\u8fd8\u6709Part\u3001MultipartFile ResponseBody \u5426 \u8fd4\u56de\u503c\u7f3a\u7701\u90fd\u662f\u5728body\u8fd4\u56de ResponseStatus \u5426 \u53ef\u4ee5\u901a\u8fc7ApiResponse\u6307\u5b9a\u8fd4\u56de\u7684\u9519\u8bef\u7801 RequestAttribute \u5426 Servlet\u534f\u8bae\u76f8\u5173\u7684\u6807\u7b7e SessionAttribute \u5426 Servlet\u534f\u8bae\u76f8\u5173\u7684\u6807\u7b7e MatrixVariable \u5426 ModelAttribute \u5426 ControllerAdvice \u5426 CrossOrigin \u5426 ExceptionHandler \u5426 InitBinder \u5426 \u670d\u52a1\u58f0\u660e\u65b9\u5f0f Spring MVC\u4f7f\u7528 @RestController \u58f0\u660e\u670d\u52a1\uff0c\u800cServiceComb\u4f7f\u7528 @RestSchema \u58f0\u660e\u670d\u52a1\uff0c\u5e76\u4e14\u9700\u8981\u663e\u5f0f\u5730\u4f7f\u7528 @RequestMapping \u58f0\u660e\u670d\u52a1\u8def\u5f84\uff0c\u4ee5\u533a\u5206\u8be5\u670d\u52a1\u662f\u91c7\u7528Spring MVC\u7684\u6807\u7b7e\u8fd8\u662f\u4f7f\u7528JAX RS\u7684\u6807\u7b7e\u3002 @RestSchema(schemaId = hello ) @RequestMapping(path = / ) Schema\u662fCSE\u7684\u670d\u52a1\u5951\u7ea6\uff0c\u662f\u670d\u52a1\u8fd0\u884c\u65f6\u7684\u57fa\u7840\uff0c\u670d\u52a1\u6cbb\u7406\u3001\u7f16\u89e3\u7801\u7b49\u90fd\u57fa\u4e8e\u5951\u7ea6\u8fdb\u884c\u3002\u5728\u8de8\u8bed\u8a00\u7684\u573a\u666f\uff0c\u5951\u7ea6\u4e5f\u5b9a\u4e49\u4e86\u4e0d\u540c\u8bed\u8a00\u80fd\u591f\u540c\u65f6\u7406\u89e3\u7684\u90e8\u5206\u3002 \u6700\u65b0\u7248\u672c\u4e5f\u652f\u6301 @RestController \u58f0\u660e\uff0c\u7b49\u4ef7\u4e8e @RestSchma(schemaId=\"\u670d\u52a1\u7684class\u540d\u79f0\") \uff0c\u5efa\u8bae\u7528\u6237\u4f7f\u7528 @RestSchema \u663e\u5f0f\u58f0\u660eschemaId\uff0c\u5728\u7ba1\u7406\u63a5\u53e3\u57fa\u672c\u7684\u914d\u7f6e\u9879\u7684\u65f6\u5019\uff0c\u66f4\u52a0\u76f4\u89c2\u3002 \u6ce8\u610f \uff1a\u5982\u679c\u4e0d\u5e0c\u671bJava-Chassis\u626b\u63cf @RestController \u6ce8\u89e3\u4f5c\u4e3aREST\u63a5\u53e3\u7c7b\u5904\u7406\uff0c\u9700\u8981\u589e\u52a0\u914d\u7f6e servicecomb.provider.rest.scanRestController=false \u4ee5\u5173\u95ed\u6b64\u529f\u80fd\u3002 \u6570\u636e\u7c7b\u578b\u652f\u6301 \u91c7\u7528Spring MVC\uff0c\u53ef\u4ee5\u5728\u670d\u52a1\u5b9a\u4e49\u4e2d\u4f7f\u7528\u591a\u79cd\u6570\u636e\u7c7b\u578b\uff0c\u53ea\u8981\u8fd9\u79cd\u6570\u636e\u7c7b\u578b\u80fd\u591f\u88abjson\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u3002\u6bd4\u5982\uff1a // \u62bd\u8c61\u7c7b\u578b public void postData(@RequestBody Object data) // \u63a5\u53e3\u5b9a\u4e49 public void postData(@RequestBody IPerson interfaceData) // \u6ca1\u6307\u5b9a\u7c7b\u578b\u7684\u6cdb\u578b public void postData(@RequestBody Map rawData) // \u5177\u4f53\u534f\u8bae\u76f8\u5173\u7684\u7c7b\u578b public void postData(HttpServletRequest rquest) ServiceComb\u4f1a\u6839\u636e\u63a5\u53e3\u5b9a\u4e49\u751f\u6210\u5951\u7ea6\uff0c\u4ece\u4e0a\u9762\u7684\u63a5\u53e3\u5b9a\u4e49\uff0c\u5982\u679c\u4e0d\u7ed3\u5408\u5b9e\u9645\u7684\u5b9e\u73b0\u4ee3\u7801\u6216\u8005\u989d\u5916\u7684\u5f00\u53d1\u6587\u6863\u8bf4\u660e\uff0c\u65e0\u6cd5\u76f4\u63a5\u751f\u6210\u5951\u7ea6\u3002\u4e5f\u5c31\u662f\u7ad9\u5728\u6d4f\u89c8\u5668\u7684REST\u89c6\u89d2\uff0c\u4e0d\u77e5\u9053\u5982\u4f55\u5728body\u91cc\u9762\u6784\u9020\u6d88\u606f\u5185\u5bb9\u3002ServiceComb\u4e0d\u5efa\u8bae\u5b9a\u4e49\u63a5\u53e3\u7684\u65f6\u5019\u4f7f\u7528\u62bd\u8c61\u7c7b\u578b\u3001\u63a5\u53e3\u7b49\u3002 \u4e3a\u4e86\u652f\u6301\u5feb\u901f\u5f00\u53d1\uff0cServiceComb\u7684\u6570\u636e\u7c7b\u578b\u9650\u5236\u4e5f\u5728\u4e0d\u505c\u7684\u6269\u5145\uff0c\u6bd4\u5982\u652f\u6301HttpServletRequest\uff0cObject\u7b49\u3002\u4f46\u662f\u5b9e\u9645\u5728\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u4ed6\u4eec\u4e0eWEB\u670d\u52a1\u5668\u7684\u8bed\u4e49\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u6bd4\u5982\u4e0d\u80fd\u76f4\u63a5\u64cd\u4f5c\u6d41\u3002\u56e0\u6b64\u5efa\u8bae\u5f00\u53d1\u8005\u5728ServiceComb\u7684\u4f7f\u7528\u573a\u666f\u4e0b\uff0c\u5c3d\u53ef\u80fd\u4f7f\u7528\u5951\u7ea6\u80fd\u591f\u63cf\u8ff0\u7684\u7c7b\u578b\uff0c\u8ba9\u4ee3\u7801\u9605\u8bfb\u6027\u66f4\u597d\u3002 ServiceComb\u5728\u6570\u636e\u7c7b\u578b\u7684\u652f\u6301\u65b9\u9762\u7684\u66f4\u591a\u8bf4\u660e\uff0c\u8bf7\u53c2\u8003\uff1a \u63a5\u53e3\u5b9a\u4e49\u548c\u6570\u636e\u7c7b\u578b \u5176\u4ed6 \u66f4\u591a\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u78b0\u5230\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u53c2\u8003 \u6848\u4f8b \u3002\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u5b58\u5728\u7591\u95ee\uff0c\u4e5f\u53ef\u4ee5\u5728\u8fd9\u91cc\u8fdb\u884c\u63d0\u95ee\u3002","title":"\u7528SpringMVC \u5f00\u53d1\u5fae\u670d\u52a1"},{"location":"build-provider/springmvc/#springmvc","text":"","title":"\u7528SpringMVC \u5f00\u53d1\u5fae\u670d\u52a1"},{"location":"build-provider/springmvc/#_1","text":"ServiceComb\u652f\u6301SpringMVC\u6ce8\u89e3\uff0c\u5141\u8bb8\u4f7f\u7528SpringMVC\u98ce\u683c\u5f00\u53d1\u5fae\u670d\u52a1\u3002\u5efa\u8bae\u53c2\u7167\u7740\u9879\u76ee SpringMVC \u8fdb\u884c\u8be6\u7ec6\u9605\u8bfb","title":"\u6982\u5ff5\u9610\u8ff0"},{"location":"build-provider/springmvc/#_2","text":"","title":"\u5f00\u53d1\u793a\u4f8b"},{"location":"build-provider/springmvc/#1-rpc","text":"\u5b9a\u4e49\u63a5\u53e3\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u4f46\u662f \u4e00\u4e2a\u597d\u4e60\u60ef\uff0c\u53ef\u4ee5\u7b80\u5316\u5ba2\u6237\u7aef\u4f7f\u7528RPC\u65b9\u5f0f\u7f16\u5199\u4ee3\u7801\u3002 public interface Hello { String sayHi(String name); String sayHello(Person person); }","title":"\u6b65\u9aa41 \u5b9a\u4e49\u670d\u52a1\u63a5\u53e3\uff08\u53ef\u9009\uff0c\u65b9\u4fbf\u4f7f\u7528RPC\u65b9\u5f0f\u8c03\u7528\uff09"},{"location":"build-provider/springmvc/#2","text":"\u4f7f\u7528Spring MVC\u6ce8\u89e3\u5f00\u53d1\u4e1a\u52a1\u4ee3\u7801\uff0cHello\u7684\u670d\u52a1\u5b9e\u73b0\u5982\u4e0b\u3002\u5728\u670d\u52a1\u7684\u5b9e\u73b0\u7c7b\u4e0a\u6253\u4e0a\u6ce8\u89e3@RestSchema\uff0c\u6307\u5b9aschemaId\uff0cschemaId\u5fc5\u987b\u4fdd\u8bc1\u5fae\u670d\u52a1\u8303\u56f4\u5185\u552f\u4e00\u3002 @RestSchema(schemaId = springmvcHello ) @RequestMapping(path = /springmvchello , produces = MediaType.APPLICATION_JSON) public class SpringmvcHelloImpl implements Hello { @Override @RequestMapping(path = /sayhi , method = RequestMethod.POST) public String sayHi(@RequestParam(name = name ) String name) { return Hello + name; } @Override @RequestMapping(path = /sayhello , method = RequestMethod.POST) public String sayHello(@RequestBody Person person) { return Hello person + person.getName(); } }","title":"\u6b65\u9aa42 \u5b9e\u73b0\u670d\u52a1"},{"location":"build-provider/springmvc/#3-mainpackage","text":"\u5728 resources/META-INF/spring \u76ee\u5f55\u4e0b\u521b\u5efa springmvcprovider.bean.xml \u6587\u4ef6\uff0c\u547d\u540d\u89c4\u5219\u4e3a \\*.bean.xml \uff0c\u914d\u7f6espring\u8fdb\u884c\u670d\u52a1\u626b\u63cf\u7684base-package\uff0c\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b\uff1a ?xml version= 1.0 encoding= UTF-8 ? beans xmlns= http://www.springframework.org/schema/beans xmlns:xsi= http://www.w3.org/2001/XMLSchema-instance xmlns:context= http://www.springframework.org/schema/context xsi:schemaLocation= http://www.springframework.org/schema/beans classpath:org/springframework/beans/factory/xml/spring-beans-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd context:component-scan base-package= org.apache.servicecomb.samples.springmvc.povider / /beans","title":"\u6b65\u9aa43 \u53d1\u5e03\u670d\u52a1 \uff08\u53ef\u9009\uff0c\u9ed8\u8ba4\u4f1a\u626b\u63cfmain\u51fd\u6570\u6240\u5728\u7684package\uff09"},{"location":"build-provider/springmvc/#4-provider","text":"\u4e0b\u9762\u7684\u4ee3\u7801\u4f7f\u7528Log4j\u4f5c\u4e3a\u65e5\u5fd7\u8bb0\u5f55\u5668\u3002\u5f00\u53d1\u8005\u53ef\u4ee5\u65b9\u4fbf\u4f7f\u7528\u5176\u4ed6\u65e5\u5fd7\u6846\u67b6\u3002 public class SpringmvcProviderMain { public static void main(String[] args) throws Exception { Log4jUtils.init(); BeanUtils.init(); } }","title":"\u6b65\u9aa44 \u542f\u52a8provider \u670d\u52a1"},{"location":"build-provider/springmvc/#querypojo","text":"","title":"Query\u53c2\u6570\u805a\u5408\u4e3aPOJO\u5bf9\u8c61"},{"location":"build-provider/springmvc/#_3","text":"SpringBoot\u652f\u6301\u5c06Java\u4e1a\u52a1\u63a5\u53e3\u4e2d\u7684\u591a\u4e2aquery\u53c2\u6570\u805a\u5408\u4e3a\u4e00\u4e2aPOJO\u7c7b\uff0cSpringBoot\u539f\u751f\u7528\u6cd5\u793a\u4f8b\u5982\u4e0b\uff1a @RequestMapping( /hello ) public class HelloService { @RequestMapping(value = /sayHello , method = RequestMethod.GET) public String sayHello(Person person) { System.out.println( sayHello is called, person = [ + person + ] ); return Hello, your name is + person.getName() + , and age is + person.getAge(); } } \u5176\u4e2d\uff0c\u4f5c\u4e3a\u53c2\u6570\u7684 Person \u7c7b\u662f\u4e00\u4e2a\u6807\u51c6\u7684JavaBean\uff0c\u5305\u542b\u5c5e\u6027 name \u548c age \u3002\u5f53\u670d\u52a1\u63a5\u6536\u5230\u7684\u8bf7\u6c42\u65f6\uff0cSpringBoot\u4f1a\u5c06query\u53c2\u6570 name \u548c age \u805a\u5408\u4e3aPerson\u5bf9\u8c61\u4f20\u5165\u4e1a\u52a1\u63a5\u53e3\u3002 ServiceComb\u7684SpringMVC\u5f00\u53d1\u6a21\u5f0f\u73b0\u5728\u4e5f\u652f\u6301\u7c7b\u4f3c\u7684\u7528\u6cd5\uff0c\u8be5\u7528\u6cd5\u7684\u8981\u6c42\u5982\u4e0b\uff1a 1. POJO\u53c2\u6570\u4e0a\u4e0d\u80fd\u6709Spring\u7684\u53c2\u6570\u6ce8\u89e3\uff0c\u5426\u5219ServiceComb\u4e0d\u4f1a\u5c06\u5176\u4f5c\u4e3a\u805a\u5408\u7684query\u53c2\u6570\u5bf9\u8c61\u5904\u7406\u3002 2. \u4ec5\u652f\u6301\u805a\u5408query\u53c2\u6570 3. POJO\u53c2\u6570\u7c7b\u4e2d\u7684\u5c5e\u6027\u540d\u4e0equery\u53c2\u6570\u540d\u9700\u8981\u4fdd\u6301\u4e00\u81f4 4. POJO\u53c2\u6570\u4e2d\u4e0d\u652f\u6301\u590d\u6742\u7684\u5c5e\u6027\uff0c\u5982\u5176\u4ed6POJO\u5bf9\u8c61\u3001List\u7b49\u3002\u7528\u6237\u53ef\u4ee5\u5728\u8fd9\u4e9b\u590d\u6742\u7c7b\u578b\u6253\u4e0a @JsonIgnore \u6ce8\u89e3\u6765\u8ba9ServiceComb\u5ffd\u7565\u8fd9\u4e9b\u590d\u6742\u5c5e\u6027\u3002 5. consumer\u7aef\u4e0d\u652f\u6301query\u53c2\u6570\u805a\u5408\u4e3aPOJO\u5bf9\u8c61\uff0c\u8c03\u7528\u670d\u52a1\u65f6\u4f9d\u7136\u8981\u6309\u7167\u5951\u7ea6\u53d1\u9001\u8bf7\u6c42\u3002\u5373provider\u7aef\u88ab\u805a\u5408\u7684POJO\u53c2\u6570\u5728\u5951\u7ea6\u4e2d\u4f1a\u88ab\u5c55\u5f00\u6210\u4e00\u7cfb\u5217\u7684query\u53c2\u6570\uff0cconsumer\u7aef\u9700\u8981\u5728provider\u63a5\u53e3\u65b9\u6cd5\u4e2d\u4f9d\u6b21\u5b9a\u4e49\u8fd9\u4e9bquery\u53c2\u6570\uff08RPC\u5f00\u53d1\u6a21\u5f0f\uff09\uff0c\u6216\u5728\u53d1\u9001\u8bf7\u6c42\u65f6\u586b\u5165\u8fd9\u4e9bquery\u53c2\u6570\uff08RestTemplate\u5f00\u53d1\u6a21\u5f0f\uff09\u3002","title":"\u4f7f\u7528\u8bf4\u660e"},{"location":"build-provider/springmvc/#_4","text":"","title":"\u4ee3\u7801\u793a\u4f8b"},{"location":"build-provider/springmvc/#provider","text":"Provider\u7aef\u4e1a\u52a1\u63a5\u53e3\u4ee3\u7801\uff1a @RestSchema(schemaId = helloService ) @RequestMapping( /hello ) public class HelloService { @RequestMapping(value = /sayHello , method = RequestMethod.GET) public String sayHello(Person person) { System.out.println( sayHello is called, person = [ + person + ] ); return Hello, your name is + person.getName() + , and age is + person.getAge(); } } POJO\u53c2\u6570\u5bf9\u8c61\u5b9a\u4e49\uff1a public class Person { private String name; private int age; @JsonIgnore // \u590d\u6742\u5c5e\u6027\u9700\u8981\u6807\u8bb0@JsonIgnore\uff0c\u5426\u5219\u542f\u52a8\u65f6\u4f1a\u62a5\u9519 private List Person children; } \u63a5\u53e3\u5951\u7ea6\uff1a # \u5ffd\u7565\u5951\u7ea6\u7684\u5176\u4ed6\u90e8\u5206 basePath: /hello paths: /sayHello: get: operationId: sayHello parameters: # Person\u7c7b\u7684name\u5c5e\u6027\u548cage\u5c5e\u6027\u4f5c\u4e3a\u5951\u7ea6\u4e2d\u7684query\u53c2\u6570 - name: name in: query required: false type: string - name: age in: query required: false type: integer format: int32 responses: 200: description: response of 200 schema: type: string","title":"Provider\u7aef\u5f00\u53d1\u670d\u52a1"},{"location":"build-provider/springmvc/#consumer","text":"consumer\u7aefRPC\u5f00\u53d1\u6a21\u5f0f\uff1a Provider\u63a5\u53e3\u5b9a\u4e49 public interface HelloServiceIntf { String sayHello(String name, int age); } \u8c03\u7528\u4ee3\u7801 String result = helloService.sayHello( Bob , 22); // result\u7684\u503c\u4e3a Hello, your name is Bob, and age is 22 consumer\u7aefRestTemplate\u5f00\u53d1\u6a21\u5f0f\uff1a String result = restTemplate.getForObject( cse://provider-service/hello/sayHello?name=Bob age=22 , String.class); // \u8c03\u7528\u6548\u679c\u4e0eRPC\u65b9\u5f0f\u76f8\u540c","title":"Consumer\u7aef\u8c03\u7528\u670d\u52a1"},{"location":"build-provider/springmvc/#servicecombspring-mvc","text":"ServiceComb\u652f\u6301\u4f7f\u7528Spring MVC\u63d0\u4f9b\u7684\u6807\u7b7e(org.springframework.web.bind.annotation)\u6765\u58f0\u660eREST\u63a5\u53e3\uff0c\u4f46\u662f\u4e24\u8005\u662f\u72ec\u7acb\u7684\u5b9e\u73b0\uff0c\u800c\u4e14\u6709\u4e0d\u4e00\u6837\u7684\u8bbe\u8ba1\u76ee\u6807\u3002CSE\u7684\u76ee\u6807\u662f\u63d0\u4f9b\u8de8\u8bed\u8a00\u3001\u652f\u6301\u591a\u901a\u4fe1\u534f\u8bae\u7684\u6846\u67b6\uff0c\u56e0\u6b64\u53bb\u6389\u4e86Spring MVC\u4e2d\u4e00\u4e9b\u5bf9\u8de8\u8bed\u8a00\u652f\u6301\u4e0d\u662f\u5f88\u597d\u7684\u7279\u6027\uff0c\u4e5f\u4e0d\u652f\u6301\u7279\u5b9a\u8fd0\u884c\u6846\u67b6\u5f3a\u76f8\u5173\u7684\u7279\u6027\uff0c\u6bd4\u5982\u76f4\u63a5\u8bbf\u95eeServlet\u534f\u8bae\u5b9a\u4e49\u7684 HttpServletRequest \u3002ServiceComb\u6ca1\u6709\u5b9e\u73b0 @Controller \u76f8\u5173\u529f\u80fd, \u53ea\u5b9e\u73b0\u4e86 @RestController \uff0c\u5373\u901a\u8fc7MVC\u6a21\u5f0f\u8fdb\u884c\u9875\u9762\u6e32\u67d3\u7b49\u529f\u80fd\u90fd\u662f\u4e0d\u652f\u6301\u7684\u3002 \u4e0b\u9762\u662f\u4e00\u4e9b\u5177\u4f53\u5dee\u5f02\u3002 \u5e38\u7528\u6807\u7b7e\u652f\u6301 \u4e0b\u9762\u662fCSE\u5bf9\u4e8eSpring MVC\u5e38\u7528\u6807\u7b7e\u7684\u652f\u6301\u60c5\u51b5\u3002","title":"ServiceComb\u652f\u6301\u7684Spring MVC\u6807\u7b7e\u8bf4\u660e"},{"location":"build-provider/springmvc/#1-1-spring-mvc","text":"\u6807\u7b7e\u540d\u79f0 \u662f\u5426\u652f\u6301 \u8bf4\u660e RequestMapping \u662f \u4e0d\u5141\u8bb8\u5236\u5b9a\u591a\u4e2aPath\uff0c\u4e00\u4e2a\u63a5\u53e3\u53ea\u5141\u8bb8\u4e00\u4e2aPath GetMapping \u662f PutMapping \u662f PostMapping \u662f DeleteMapping \u662f PatchMapping \u662f RequestParam \u662f CookieValue \u662f PathVariable \u662f RequestHeader \u662f RequestBody \u662f \u76ee\u524d\u652f\u6301application/json\uff0cplain/text RequestPart \u662f \u7528\u4e8e\u6587\u4ef6\u4e0a\u4f20\u7684\u573a\u666f\uff0c\u5bf9\u5e94\u7684\u6807\u7b7e\u8fd8\u6709Part\u3001MultipartFile ResponseBody \u5426 \u8fd4\u56de\u503c\u7f3a\u7701\u90fd\u662f\u5728body\u8fd4\u56de ResponseStatus \u5426 \u53ef\u4ee5\u901a\u8fc7ApiResponse\u6307\u5b9a\u8fd4\u56de\u7684\u9519\u8bef\u7801 RequestAttribute \u5426 Servlet\u534f\u8bae\u76f8\u5173\u7684\u6807\u7b7e SessionAttribute \u5426 Servlet\u534f\u8bae\u76f8\u5173\u7684\u6807\u7b7e MatrixVariable \u5426 ModelAttribute \u5426 ControllerAdvice \u5426 CrossOrigin \u5426 ExceptionHandler \u5426 InitBinder \u5426 \u670d\u52a1\u58f0\u660e\u65b9\u5f0f Spring MVC\u4f7f\u7528 @RestController \u58f0\u660e\u670d\u52a1\uff0c\u800cServiceComb\u4f7f\u7528 @RestSchema \u58f0\u660e\u670d\u52a1\uff0c\u5e76\u4e14\u9700\u8981\u663e\u5f0f\u5730\u4f7f\u7528 @RequestMapping \u58f0\u660e\u670d\u52a1\u8def\u5f84\uff0c\u4ee5\u533a\u5206\u8be5\u670d\u52a1\u662f\u91c7\u7528Spring MVC\u7684\u6807\u7b7e\u8fd8\u662f\u4f7f\u7528JAX RS\u7684\u6807\u7b7e\u3002 @RestSchema(schemaId = hello ) @RequestMapping(path = / ) Schema\u662fCSE\u7684\u670d\u52a1\u5951\u7ea6\uff0c\u662f\u670d\u52a1\u8fd0\u884c\u65f6\u7684\u57fa\u7840\uff0c\u670d\u52a1\u6cbb\u7406\u3001\u7f16\u89e3\u7801\u7b49\u90fd\u57fa\u4e8e\u5951\u7ea6\u8fdb\u884c\u3002\u5728\u8de8\u8bed\u8a00\u7684\u573a\u666f\uff0c\u5951\u7ea6\u4e5f\u5b9a\u4e49\u4e86\u4e0d\u540c\u8bed\u8a00\u80fd\u591f\u540c\u65f6\u7406\u89e3\u7684\u90e8\u5206\u3002 \u6700\u65b0\u7248\u672c\u4e5f\u652f\u6301 @RestController \u58f0\u660e\uff0c\u7b49\u4ef7\u4e8e @RestSchma(schemaId=\"\u670d\u52a1\u7684class\u540d\u79f0\") \uff0c\u5efa\u8bae\u7528\u6237\u4f7f\u7528 @RestSchema \u663e\u5f0f\u58f0\u660eschemaId\uff0c\u5728\u7ba1\u7406\u63a5\u53e3\u57fa\u672c\u7684\u914d\u7f6e\u9879\u7684\u65f6\u5019\uff0c\u66f4\u52a0\u76f4\u89c2\u3002 \u6ce8\u610f \uff1a\u5982\u679c\u4e0d\u5e0c\u671bJava-Chassis\u626b\u63cf @RestController \u6ce8\u89e3\u4f5c\u4e3aREST\u63a5\u53e3\u7c7b\u5904\u7406\uff0c\u9700\u8981\u589e\u52a0\u914d\u7f6e servicecomb.provider.rest.scanRestController=false \u4ee5\u5173\u95ed\u6b64\u529f\u80fd\u3002 \u6570\u636e\u7c7b\u578b\u652f\u6301 \u91c7\u7528Spring MVC\uff0c\u53ef\u4ee5\u5728\u670d\u52a1\u5b9a\u4e49\u4e2d\u4f7f\u7528\u591a\u79cd\u6570\u636e\u7c7b\u578b\uff0c\u53ea\u8981\u8fd9\u79cd\u6570\u636e\u7c7b\u578b\u80fd\u591f\u88abjson\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u3002\u6bd4\u5982\uff1a // \u62bd\u8c61\u7c7b\u578b public void postData(@RequestBody Object data) // \u63a5\u53e3\u5b9a\u4e49 public void postData(@RequestBody IPerson interfaceData) // \u6ca1\u6307\u5b9a\u7c7b\u578b\u7684\u6cdb\u578b public void postData(@RequestBody Map rawData) // \u5177\u4f53\u534f\u8bae\u76f8\u5173\u7684\u7c7b\u578b public void postData(HttpServletRequest rquest) ServiceComb\u4f1a\u6839\u636e\u63a5\u53e3\u5b9a\u4e49\u751f\u6210\u5951\u7ea6\uff0c\u4ece\u4e0a\u9762\u7684\u63a5\u53e3\u5b9a\u4e49\uff0c\u5982\u679c\u4e0d\u7ed3\u5408\u5b9e\u9645\u7684\u5b9e\u73b0\u4ee3\u7801\u6216\u8005\u989d\u5916\u7684\u5f00\u53d1\u6587\u6863\u8bf4\u660e\uff0c\u65e0\u6cd5\u76f4\u63a5\u751f\u6210\u5951\u7ea6\u3002\u4e5f\u5c31\u662f\u7ad9\u5728\u6d4f\u89c8\u5668\u7684REST\u89c6\u89d2\uff0c\u4e0d\u77e5\u9053\u5982\u4f55\u5728body\u91cc\u9762\u6784\u9020\u6d88\u606f\u5185\u5bb9\u3002ServiceComb\u4e0d\u5efa\u8bae\u5b9a\u4e49\u63a5\u53e3\u7684\u65f6\u5019\u4f7f\u7528\u62bd\u8c61\u7c7b\u578b\u3001\u63a5\u53e3\u7b49\u3002 \u4e3a\u4e86\u652f\u6301\u5feb\u901f\u5f00\u53d1\uff0cServiceComb\u7684\u6570\u636e\u7c7b\u578b\u9650\u5236\u4e5f\u5728\u4e0d\u505c\u7684\u6269\u5145\uff0c\u6bd4\u5982\u652f\u6301HttpServletRequest\uff0cObject\u7b49\u3002\u4f46\u662f\u5b9e\u9645\u5728\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u4ed6\u4eec\u4e0eWEB\u670d\u52a1\u5668\u7684\u8bed\u4e49\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u6bd4\u5982\u4e0d\u80fd\u76f4\u63a5\u64cd\u4f5c\u6d41\u3002\u56e0\u6b64\u5efa\u8bae\u5f00\u53d1\u8005\u5728ServiceComb\u7684\u4f7f\u7528\u573a\u666f\u4e0b\uff0c\u5c3d\u53ef\u80fd\u4f7f\u7528\u5951\u7ea6\u80fd\u591f\u63cf\u8ff0\u7684\u7c7b\u578b\uff0c\u8ba9\u4ee3\u7801\u9605\u8bfb\u6027\u66f4\u597d\u3002 ServiceComb\u5728\u6570\u636e\u7c7b\u578b\u7684\u652f\u6301\u65b9\u9762\u7684\u66f4\u591a\u8bf4\u660e\uff0c\u8bf7\u53c2\u8003\uff1a \u63a5\u53e3\u5b9a\u4e49\u548c\u6570\u636e\u7c7b\u578b \u5176\u4ed6 \u66f4\u591a\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u78b0\u5230\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u53c2\u8003 \u6848\u4f8b \u3002\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u5b58\u5728\u7591\u95ee\uff0c\u4e5f\u53ef\u4ee5\u5728\u8fd9\u91cc\u8fdb\u884c\u63d0\u95ee\u3002","title":"\u88681-1 Spring MVC\u6ce8\u89e3\u60c5\u51b5\u8bf4\u660e"},{"location":"build-provider/swagger-annotation/","text":"\u4f7f\u7528 Swagger \u6ce8\u89e3 \u6982\u5ff5\u9610\u8ff0 Swagger\u63d0\u4f9b\u4e86\u4e00\u5957\u6ce8\u89e3\u7528\u4e8e\u63cf\u8ff0\u63a5\u53e3\u5951\u7ea6\uff0c\u7528\u6237\u4f7f\u7528\u6ce8\u89e3\uff0c\u53ef\u4ee5\u5728\u4ee3\u7801\u4e2d\u589e\u52a0\u5bf9\u4e8e\u5951\u7ea6\u7684\u63cf\u8ff0\u4fe1\u606f\u3002ServiceComb\u652f\u6301\u5176\u4e2d\u7684\u90e8\u5206\u6ce8\u89e3\u3002 \u573a\u666f\u63cf\u8ff0 \u901a\u8fc7\u4f7f\u7528\u6ce8\u89e3\u63cf\u8ff0\u63a5\u53e3\u5951\u7ea6\uff0c\u7528\u6237\u53ef\u4ee5\u5229\u7528ServiceComb\u7684Swagger\u5951\u7ea6\u751f\u6210\u529f\u80fd\u81ea\u52a8\u751f\u6210\u7b26\u5408\u8981\u6c42\u7684\u5951\u7ea6\u6587\u4ef6\uff0c\u800c\u65e0\u987b\u624b\u5de5\u7f16\u5199\u548c\u4fee\u6539\u5951\u7ea6\uff0c\u80fd\u591f\u6709\u6548\u63d0\u9ad8\u5f00\u53d1\u6548\u7387\u3002 \u914d\u7f6e\u8bf4\u660e \u5173\u4e8eSwagger\u6ce8\u89e3\u7684\u542b\u4e49\uff0c\u53ef\u4ee5\u5728 Swagger\u6ce8\u89e3\u6587\u6863 \u4e2d\u627e\u5230\u5b98\u65b9\u8bf4\u660e\u3002\u60a8\u53ef\u4ee5\u5bf9\u7167\u8be5\u5b98\u65b9\u6587\u6863\u4e0e\u672c\u8bf4\u660e\u6765\u4e86\u89e3\u5982\u4f55\u5728ServiceComb\u6846\u67b6\u4e0b\u4f7f\u7528\u6ce8\u89e3\u6307\u5b9aSwagger\u5951\u7ea6\u7684\u5404\u9879\u5c5e\u6027\u3002 \u5728ServiceComb\u4e2d\uff0cSwagger\u6ce8\u89e3\u4e0d\u662f\u5fc5\u987b\u4f7f\u7528\u7684\u3002\u5f53\u7528\u6237\u4f7f\u7528SpringMVC\u548cJAX-RS\u7684\u6ce8\u89e3\u6765\u6807\u6ce8\u5fae\u670d\u52a1\u65b9\u6cd5\u65f6\uff0cServiceComb\u53ef\u4ee5\u6839\u636e\u8fd9\u4e9b\u6ce8\u89e3\u7684\u503c\u63a8\u65ad\u51fa\u5404\u5fae\u670d\u52a1\u65b9\u6cd5\u7684\u5951\u7ea6\u4fe1\u606f\u3002 @Api @Api \u4f5c\u7528\u4e8e\u7c7b\u7ea7\u522b\uff0c\u5728Swagger\u5b98\u65b9\u63cf\u8ff0\u4e2d\u662f\u7528\u4e8e\u5c06\u4e00\u4e2aClass\u6807\u6ce8\u4e3a\u4e00\u4e2aSwagger\u8d44\u6e90\u3002\u4f46\u8be5\u6ce8\u89e3\u5728ServiceComb\u4e2d\u4e0d\u662f\u5fc5\u987b\u7684\uff0cServiceComb\u53ef\u4ee5\u6839\u636e @RestSchema \u548c @RpcSchema \u786e\u5b9a\u9700\u8981\u4ece\u54ea\u4e9b\u7c7b\u4e2d\u89e3\u6790\u51faSwagger\u5951\u7ea6\u3002 \u5c5e\u6027 \u7c7b\u578b \u8bf4\u660e tags string \u8bbe\u7f6e\u5f53\u524dClass\u4e0b\u5b9a\u4e49\u7684operation\u7684\u9ed8\u8ba4tag\u503c consumes string \u6307\u5b9a\u5951\u7ea6\u7ea7\u522b\u7684\u8bf7\u6c42\u4f53\u6570\u636e\u683c\u5f0f\uff0c\u53ef\u4ee5\u4f7f\u7528\u9017\u53f7\u5206\u9694\u6307\u5b9a\u591a\u4e2a produces string \u6307\u5b9a\u5951\u7ea6\u7ea7\u522b\u7684\u54cd\u5e94\u4f53\u6570\u636e\u683c\u5f0f\uff0c\u53ef\u4ee5\u4f7f\u7528\u9017\u53f7\u5206\u9694\u6307\u5b9a\u591a\u4e2a @SwaggerDefinition \u4f5c\u7528\u4e8e\u7c7b\u7ea7\u522b\uff0c\u7528\u4e8e\u5b9a\u4e49\u4e00\u4e2aSwagger\u8d44\u6e90\u4e2d\u7684\u4fe1\u606f\u3002 \u5c5e\u6027 \u7c7b\u578b \u8bf4\u660e info.title string \u5951\u7ea6\u6587\u4ef6\u6807\u9898 info.description string \u63cf\u8ff0\u4fe1\u606f info.version string \u5951\u7ea6\u7248\u672c\u53f7 info.termsOfService string \u670d\u52a1\u6761\u6b3e info.contact string \u8054\u7cfb\u4fe1\u606f\uff0c\u5305\u542bname\u3001email\u3001url\u5c5e\u6027 info.license string \u8bb8\u53ef\u8bc1\u4fe1\u606f\uff0c\u5305\u542bname\u3001url\u5c5e\u6027 info.extensions string \u6269\u5c55\u4fe1\u606f consumes string \u63a5\u6536\u7684\u8bf7\u6c42\u683c\u5f0f produces string \u8fd4\u56de\u7684\u5e94\u7b54\u683c\u5f0f schemes SwaggerDefinition.Scheme \u53ef\u9009\u503c\u6709 HTTP/HTTPS/WS/WSS/DEFAULT tags @Tag Tag\u5b9a\u4e49\uff0c@Tag\u5305\u542bname\u3001description\u3001externalDocs\u4e09\u4e2a\u5c5e\u6027 externalDocs @externalDocs \u5916\u90e8\u8bf4\u660e\u6587\u6863\u94fe\u63a5\uff0c\u5305\u542bvalue\u3001url\u4e24\u4e2a\u5c5e\u6027 @ApiOperation \u4f5c\u7528\u4e8e\u65b9\u6cd5\u7ea7\u522b\uff0c\u7528\u4e8e\u63cf\u8ff0\u4e00\u4e2aSwagger operation\u3002 \u5c5e\u6027 \u7c7b\u578b \u8bf4\u660e value string \u65b9\u6cd5\u7684\u7b80\u8981\u8bf4\u660e\uff0c\u5bf9\u5e94\u4e8eSwagger\u5951\u7ea6operation\u7684 summary \u5b57\u6bb5 notes string \u8be6\u7ec6\u4fe1\u606f\uff0c\u5bf9\u5e94\u4e8eSwagger\u5951\u7ea6operation\u7684 description \u5b57\u6bb5 tags string \u6807\u6ce8operation\u7684\u6807\u7b7e code int \u54cd\u5e94\u6d88\u606f\u7684HTTP\u72b6\u6001\u7801 response Class ? \u65b9\u6cd5\u8fd4\u56de\u503c\u7c7b\u578b responseContainer string \u5305\u88c5\u8fd4\u56de\u503c\u7684\u5bb9\u5668\u7c7b\u578b\uff0c\u53ef\u9009\u503c\u4e3a List \u3001 Set \u3001 Map responseHeaders @ResponseHeader \u54cd\u5e94\u6d88\u606f\u7684HTTP\u5934\uff0cServiceComb\u652f\u6301\u7684\u5c5e\u6027\u503c\u4e3a name \u3001 response \u3001 responseContainer consumes string \u6307\u5b9a\u8bf7\u6c42\u4f53\u7684\u6570\u636e\u683c\u5f0f produces string \u6307\u5b9a\u54cd\u5e94\u4f53\u7684\u6570\u636e\u683c\u5f0f protocols string \u8bbe\u7f6e\u53ef\u7528\u7684\u534f\u8bae\uff08schemes\uff09\uff0c\u53ef\u9009\u503c\u6709 http \u3001 https \u3001 ws \u3001 wss \uff0c\u9017\u53f7\u5206\u9694 httpMethod string \u8bbe\u7f6eHTTP\u65b9\u6cd5 hidden boolean \u662f\u5426\u9690\u85cf\u6b64\u65b9\u6cd5 @ApiImplicitParam \u4f5c\u7528\u4e8e\u65b9\u6cd5\u7ea7\u522b\uff0c\u7528\u4e8e\u8bf4\u660eSwagger\u6587\u6863\u4e2doperation\u7684\u53c2\u6570\u7684\u5c5e\u6027\u3002 \u6ce8\u610f \uff1aServiceComb\u53ef\u4ee5\u6839\u636e\u4ee3\u7801\u548cSpringMVC\u3001JAX-RS\u7684\u6ce8\u89e3\u81ea\u52a8\u63a8\u65ad\u51fa\u53c2\u6570\u540d\u79f0\u3002\u5982\u679c @ApiImplicitParam \u914d\u7f6e\u7684\u53c2\u6570\u540d\u79f0\u4e0e\u81ea\u52a8\u63a8\u65ad\u7684\u53c2\u6570\u540d\u4e0d\u540c\uff0c\u5219\u5219\u8be5\u6ce8\u89e3\u914d\u7f6e\u7684\u53c2\u6570\u5c06\u88ab\u4f5c\u4e3a\u4e00\u4e2a\u65b0\u7684\u53c2\u6570\u52a0\u5165\u5230\u6ce8\u89e3\u6240\u5728\u7684operation\u4e2d\uff1b\u5426\u5219\u5c06\u8986\u76d6\u540c\u540d\u53c2\u6570\u7684\u5c5e\u6027\u3002 \u5c5e\u6027 \u7c7b\u578b \u8bf4\u660e name string \u53c2\u6570\u540d\u79f0 value string \u53c2\u6570\u8bf4\u660e required boolean \u662f\u5426\u662f\u5fc5\u586b\u53c2\u6570 dataType string \u53c2\u6570\u6570\u636e\u7c7b\u578b paramType string \u53c2\u6570\u4f4d\u7f6e\uff0c\u6709\u6548\u7684\u53ef\u9009\u503c\u4e3apath/query/body/header/form allowableValues string \u53c2\u6570\u7684\u6709\u6548\u503c\u8303\u56f4 allowEmptyValue boolean \u662f\u5426\u5141\u8bb8\u7a7a\u503c allowMultiple boolean \u662f\u5426\u5141\u8bb8\u591a\u4e2a\u503c\uff08\u82e5\u4e3atrue\uff0c\u5219\u53ef\u4ee5\u5c06\u53c2\u6570\u4f5c\u4e3a\u6570\u7ec4\uff09 collectionFormat string \u4ee5\u4f55\u79cd\u683c\u5f0f\u6307\u5b9a\u53c2\u6570\u6570\u7ec4\uff0c\u5f53\u524dServiceComb\u652f\u6301\u7684\u503c\u4e3a csv/multi defaultValue string \u53c2\u6570\u9ed8\u8ba4\u503c example string \u4e00\u4e2a\u975ebody\u53c2\u6570\u7684\u793a\u4f8b\u503c format string \u5141\u8bb8\u7528\u6237\u81ea\u5b9a\u4e49\u6570\u636e\u683c\u5f0f\uff0c\u8be6\u60c5\u53c2\u89c1Swagger\u5b98\u65b9\u6587\u6863 @ApiImplicitParams @ApiImplicitParams \u4f5c\u7528\u4e8e\u65b9\u6cd5\u3001\u7c7b\u7ea7\u522b\uff0c\u7528\u4e8e\u6279\u91cf\u6307\u5b9a\u591a\u4e2a @ApiImplicitParam \u3002 \u5c5e\u6027 \u7c7b\u578b \u8bf4\u660e value @ApiImplicitParam \u53c2\u6570\u5b9a\u4e49 @ApiResponse \u7528\u4e8e\u63cf\u8ff0\u8fd4\u56de\u6d88\u606f\u7684HTTP\u72b6\u6001\u7801\u6240\u8868\u8fbe\u7684\u542b\u4e49\u3002\u901a\u5e38 @ApiOperation \u53ef\u4ee5\u8868\u793a\u4e00\u4e2a\u6b63\u5e38\u60c5\u51b5\u8fd4\u56de\u6d88\u606f\u7684HTTP\u72b6\u6001\u7801\uff0c\u5176\u4ed6\u60c5\u5f62\u4e0b\u7684HTTP\u72b6\u6001\u7801\u7531\u672c\u6ce8\u89e3\u63cf\u8ff0\u3002\u6839\u636eSwagger\u5b98\u65b9\u6587\u6863\u7684\u63cf\u8ff0\uff0c\u672c\u6ce8\u89e3\u4e0d\u5e94\u8be5\u76f4\u63a5\u7528\u4e8e\u65b9\u6cd5\u7ea7\u522b\uff0c\u800c\u5e94\u8be5\u88ab\u5305\u542b\u5728 @ApiResponses \u4e2d\u3002 \u5c5e\u6027 \u7c7b\u578b \u8bf4\u660e code int \u8fd4\u56de\u6d88\u606f\u7684HTTP\u72b6\u6001\u7801 message string \u8fd4\u56de\u503c\u7684\u8bf4\u660e\u4fe1\u606f response Class ? \u8fd4\u56de\u503c\u7684\u7c7b\u578b responseContainer string \u8fd4\u56de\u503c\u7684\u5305\u88c5\u5bb9\u5668\uff0c\u53ef\u9009\u503c\u4e3a List/Set/Map responseHeaders @ResponseHeader \u63cf\u8ff0\u4e00\u7ec4\u8fd4\u56de\u6d88\u606f\u7684HTTP\u5934\uff0cServiceComb\u652f\u6301\u7684 @ResponseHeader \u7684\u5c5e\u6027\u6709 name \u3001 description \u3001 response \u3001 responseContainer @ApiResponses \u4f5c\u7528\u4e8e\u65b9\u6cd5\u3001\u7c7b\u7ea7\u522b\uff0c\u7528\u4e8e\u6307\u5b9a\u548c\u8bf4\u660e\u4e00\u7ec4\u8fd4\u56de\u503c\u3002 \u5c5e\u6027 \u7c7b\u578b \u8bf4\u660e value @ApiResponse \u8fd4\u56de\u6d88\u606f\u8bf4\u660e","title":"\u4f7f\u7528 Swagger \u6ce8\u89e3"},{"location":"build-provider/swagger-annotation/#swagger","text":"","title":"\u4f7f\u7528 Swagger \u6ce8\u89e3"},{"location":"build-provider/swagger-annotation/#_1","text":"Swagger\u63d0\u4f9b\u4e86\u4e00\u5957\u6ce8\u89e3\u7528\u4e8e\u63cf\u8ff0\u63a5\u53e3\u5951\u7ea6\uff0c\u7528\u6237\u4f7f\u7528\u6ce8\u89e3\uff0c\u53ef\u4ee5\u5728\u4ee3\u7801\u4e2d\u589e\u52a0\u5bf9\u4e8e\u5951\u7ea6\u7684\u63cf\u8ff0\u4fe1\u606f\u3002ServiceComb\u652f\u6301\u5176\u4e2d\u7684\u90e8\u5206\u6ce8\u89e3\u3002","title":"\u6982\u5ff5\u9610\u8ff0"},{"location":"build-provider/swagger-annotation/#_2","text":"\u901a\u8fc7\u4f7f\u7528\u6ce8\u89e3\u63cf\u8ff0\u63a5\u53e3\u5951\u7ea6\uff0c\u7528\u6237\u53ef\u4ee5\u5229\u7528ServiceComb\u7684Swagger\u5951\u7ea6\u751f\u6210\u529f\u80fd\u81ea\u52a8\u751f\u6210\u7b26\u5408\u8981\u6c42\u7684\u5951\u7ea6\u6587\u4ef6\uff0c\u800c\u65e0\u987b\u624b\u5de5\u7f16\u5199\u548c\u4fee\u6539\u5951\u7ea6\uff0c\u80fd\u591f\u6709\u6548\u63d0\u9ad8\u5f00\u53d1\u6548\u7387\u3002","title":"\u573a\u666f\u63cf\u8ff0"},{"location":"build-provider/swagger-annotation/#_3","text":"\u5173\u4e8eSwagger\u6ce8\u89e3\u7684\u542b\u4e49\uff0c\u53ef\u4ee5\u5728 Swagger\u6ce8\u89e3\u6587\u6863 \u4e2d\u627e\u5230\u5b98\u65b9\u8bf4\u660e\u3002\u60a8\u53ef\u4ee5\u5bf9\u7167\u8be5\u5b98\u65b9\u6587\u6863\u4e0e\u672c\u8bf4\u660e\u6765\u4e86\u89e3\u5982\u4f55\u5728ServiceComb\u6846\u67b6\u4e0b\u4f7f\u7528\u6ce8\u89e3\u6307\u5b9aSwagger\u5951\u7ea6\u7684\u5404\u9879\u5c5e\u6027\u3002 \u5728ServiceComb\u4e2d\uff0cSwagger\u6ce8\u89e3\u4e0d\u662f\u5fc5\u987b\u4f7f\u7528\u7684\u3002\u5f53\u7528\u6237\u4f7f\u7528SpringMVC\u548cJAX-RS\u7684\u6ce8\u89e3\u6765\u6807\u6ce8\u5fae\u670d\u52a1\u65b9\u6cd5\u65f6\uff0cServiceComb\u53ef\u4ee5\u6839\u636e\u8fd9\u4e9b\u6ce8\u89e3\u7684\u503c\u63a8\u65ad\u51fa\u5404\u5fae\u670d\u52a1\u65b9\u6cd5\u7684\u5951\u7ea6\u4fe1\u606f\u3002","title":"\u914d\u7f6e\u8bf4\u660e"},{"location":"build-provider/swagger-annotation/#api","text":"@Api \u4f5c\u7528\u4e8e\u7c7b\u7ea7\u522b\uff0c\u5728Swagger\u5b98\u65b9\u63cf\u8ff0\u4e2d\u662f\u7528\u4e8e\u5c06\u4e00\u4e2aClass\u6807\u6ce8\u4e3a\u4e00\u4e2aSwagger\u8d44\u6e90\u3002\u4f46\u8be5\u6ce8\u89e3\u5728ServiceComb\u4e2d\u4e0d\u662f\u5fc5\u987b\u7684\uff0cServiceComb\u53ef\u4ee5\u6839\u636e @RestSchema \u548c @RpcSchema \u786e\u5b9a\u9700\u8981\u4ece\u54ea\u4e9b\u7c7b\u4e2d\u89e3\u6790\u51faSwagger\u5951\u7ea6\u3002 \u5c5e\u6027 \u7c7b\u578b \u8bf4\u660e tags string \u8bbe\u7f6e\u5f53\u524dClass\u4e0b\u5b9a\u4e49\u7684operation\u7684\u9ed8\u8ba4tag\u503c consumes string \u6307\u5b9a\u5951\u7ea6\u7ea7\u522b\u7684\u8bf7\u6c42\u4f53\u6570\u636e\u683c\u5f0f\uff0c\u53ef\u4ee5\u4f7f\u7528\u9017\u53f7\u5206\u9694\u6307\u5b9a\u591a\u4e2a produces string \u6307\u5b9a\u5951\u7ea6\u7ea7\u522b\u7684\u54cd\u5e94\u4f53\u6570\u636e\u683c\u5f0f\uff0c\u53ef\u4ee5\u4f7f\u7528\u9017\u53f7\u5206\u9694\u6307\u5b9a\u591a\u4e2a","title":"@Api"},{"location":"build-provider/swagger-annotation/#swaggerdefinition","text":"\u4f5c\u7528\u4e8e\u7c7b\u7ea7\u522b\uff0c\u7528\u4e8e\u5b9a\u4e49\u4e00\u4e2aSwagger\u8d44\u6e90\u4e2d\u7684\u4fe1\u606f\u3002 \u5c5e\u6027 \u7c7b\u578b \u8bf4\u660e info.title string \u5951\u7ea6\u6587\u4ef6\u6807\u9898 info.description string \u63cf\u8ff0\u4fe1\u606f info.version string \u5951\u7ea6\u7248\u672c\u53f7 info.termsOfService string \u670d\u52a1\u6761\u6b3e info.contact string \u8054\u7cfb\u4fe1\u606f\uff0c\u5305\u542bname\u3001email\u3001url\u5c5e\u6027 info.license string \u8bb8\u53ef\u8bc1\u4fe1\u606f\uff0c\u5305\u542bname\u3001url\u5c5e\u6027 info.extensions string \u6269\u5c55\u4fe1\u606f consumes string \u63a5\u6536\u7684\u8bf7\u6c42\u683c\u5f0f produces string \u8fd4\u56de\u7684\u5e94\u7b54\u683c\u5f0f schemes SwaggerDefinition.Scheme \u53ef\u9009\u503c\u6709 HTTP/HTTPS/WS/WSS/DEFAULT tags @Tag Tag\u5b9a\u4e49\uff0c@Tag\u5305\u542bname\u3001description\u3001externalDocs\u4e09\u4e2a\u5c5e\u6027 externalDocs @externalDocs \u5916\u90e8\u8bf4\u660e\u6587\u6863\u94fe\u63a5\uff0c\u5305\u542bvalue\u3001url\u4e24\u4e2a\u5c5e\u6027","title":"@SwaggerDefinition"},{"location":"build-provider/swagger-annotation/#apioperation","text":"\u4f5c\u7528\u4e8e\u65b9\u6cd5\u7ea7\u522b\uff0c\u7528\u4e8e\u63cf\u8ff0\u4e00\u4e2aSwagger operation\u3002 \u5c5e\u6027 \u7c7b\u578b \u8bf4\u660e value string \u65b9\u6cd5\u7684\u7b80\u8981\u8bf4\u660e\uff0c\u5bf9\u5e94\u4e8eSwagger\u5951\u7ea6operation\u7684 summary \u5b57\u6bb5 notes string \u8be6\u7ec6\u4fe1\u606f\uff0c\u5bf9\u5e94\u4e8eSwagger\u5951\u7ea6operation\u7684 description \u5b57\u6bb5 tags string \u6807\u6ce8operation\u7684\u6807\u7b7e code int \u54cd\u5e94\u6d88\u606f\u7684HTTP\u72b6\u6001\u7801 response Class ? \u65b9\u6cd5\u8fd4\u56de\u503c\u7c7b\u578b responseContainer string \u5305\u88c5\u8fd4\u56de\u503c\u7684\u5bb9\u5668\u7c7b\u578b\uff0c\u53ef\u9009\u503c\u4e3a List \u3001 Set \u3001 Map responseHeaders @ResponseHeader \u54cd\u5e94\u6d88\u606f\u7684HTTP\u5934\uff0cServiceComb\u652f\u6301\u7684\u5c5e\u6027\u503c\u4e3a name \u3001 response \u3001 responseContainer consumes string \u6307\u5b9a\u8bf7\u6c42\u4f53\u7684\u6570\u636e\u683c\u5f0f produces string \u6307\u5b9a\u54cd\u5e94\u4f53\u7684\u6570\u636e\u683c\u5f0f protocols string \u8bbe\u7f6e\u53ef\u7528\u7684\u534f\u8bae\uff08schemes\uff09\uff0c\u53ef\u9009\u503c\u6709 http \u3001 https \u3001 ws \u3001 wss \uff0c\u9017\u53f7\u5206\u9694 httpMethod string \u8bbe\u7f6eHTTP\u65b9\u6cd5 hidden boolean \u662f\u5426\u9690\u85cf\u6b64\u65b9\u6cd5","title":"@ApiOperation"},{"location":"build-provider/swagger-annotation/#apiimplicitparam","text":"\u4f5c\u7528\u4e8e\u65b9\u6cd5\u7ea7\u522b\uff0c\u7528\u4e8e\u8bf4\u660eSwagger\u6587\u6863\u4e2doperation\u7684\u53c2\u6570\u7684\u5c5e\u6027\u3002 \u6ce8\u610f \uff1aServiceComb\u53ef\u4ee5\u6839\u636e\u4ee3\u7801\u548cSpringMVC\u3001JAX-RS\u7684\u6ce8\u89e3\u81ea\u52a8\u63a8\u65ad\u51fa\u53c2\u6570\u540d\u79f0\u3002\u5982\u679c @ApiImplicitParam \u914d\u7f6e\u7684\u53c2\u6570\u540d\u79f0\u4e0e\u81ea\u52a8\u63a8\u65ad\u7684\u53c2\u6570\u540d\u4e0d\u540c\uff0c\u5219\u5219\u8be5\u6ce8\u89e3\u914d\u7f6e\u7684\u53c2\u6570\u5c06\u88ab\u4f5c\u4e3a\u4e00\u4e2a\u65b0\u7684\u53c2\u6570\u52a0\u5165\u5230\u6ce8\u89e3\u6240\u5728\u7684operation\u4e2d\uff1b\u5426\u5219\u5c06\u8986\u76d6\u540c\u540d\u53c2\u6570\u7684\u5c5e\u6027\u3002 \u5c5e\u6027 \u7c7b\u578b \u8bf4\u660e name string \u53c2\u6570\u540d\u79f0 value string \u53c2\u6570\u8bf4\u660e required boolean \u662f\u5426\u662f\u5fc5\u586b\u53c2\u6570 dataType string \u53c2\u6570\u6570\u636e\u7c7b\u578b paramType string \u53c2\u6570\u4f4d\u7f6e\uff0c\u6709\u6548\u7684\u53ef\u9009\u503c\u4e3apath/query/body/header/form allowableValues string \u53c2\u6570\u7684\u6709\u6548\u503c\u8303\u56f4 allowEmptyValue boolean \u662f\u5426\u5141\u8bb8\u7a7a\u503c allowMultiple boolean \u662f\u5426\u5141\u8bb8\u591a\u4e2a\u503c\uff08\u82e5\u4e3atrue\uff0c\u5219\u53ef\u4ee5\u5c06\u53c2\u6570\u4f5c\u4e3a\u6570\u7ec4\uff09 collectionFormat string \u4ee5\u4f55\u79cd\u683c\u5f0f\u6307\u5b9a\u53c2\u6570\u6570\u7ec4\uff0c\u5f53\u524dServiceComb\u652f\u6301\u7684\u503c\u4e3a csv/multi defaultValue string \u53c2\u6570\u9ed8\u8ba4\u503c example string \u4e00\u4e2a\u975ebody\u53c2\u6570\u7684\u793a\u4f8b\u503c format string \u5141\u8bb8\u7528\u6237\u81ea\u5b9a\u4e49\u6570\u636e\u683c\u5f0f\uff0c\u8be6\u60c5\u53c2\u89c1Swagger\u5b98\u65b9\u6587\u6863","title":"@ApiImplicitParam"},{"location":"build-provider/swagger-annotation/#apiimplicitparams","text":"@ApiImplicitParams \u4f5c\u7528\u4e8e\u65b9\u6cd5\u3001\u7c7b\u7ea7\u522b\uff0c\u7528\u4e8e\u6279\u91cf\u6307\u5b9a\u591a\u4e2a @ApiImplicitParam \u3002 \u5c5e\u6027 \u7c7b\u578b \u8bf4\u660e value @ApiImplicitParam \u53c2\u6570\u5b9a\u4e49","title":"@ApiImplicitParams"},{"location":"build-provider/swagger-annotation/#apiresponse","text":"\u7528\u4e8e\u63cf\u8ff0\u8fd4\u56de\u6d88\u606f\u7684HTTP\u72b6\u6001\u7801\u6240\u8868\u8fbe\u7684\u542b\u4e49\u3002\u901a\u5e38 @ApiOperation \u53ef\u4ee5\u8868\u793a\u4e00\u4e2a\u6b63\u5e38\u60c5\u51b5\u8fd4\u56de\u6d88\u606f\u7684HTTP\u72b6\u6001\u7801\uff0c\u5176\u4ed6\u60c5\u5f62\u4e0b\u7684HTTP\u72b6\u6001\u7801\u7531\u672c\u6ce8\u89e3\u63cf\u8ff0\u3002\u6839\u636eSwagger\u5b98\u65b9\u6587\u6863\u7684\u63cf\u8ff0\uff0c\u672c\u6ce8\u89e3\u4e0d\u5e94\u8be5\u76f4\u63a5\u7528\u4e8e\u65b9\u6cd5\u7ea7\u522b\uff0c\u800c\u5e94\u8be5\u88ab\u5305\u542b\u5728 @ApiResponses \u4e2d\u3002 \u5c5e\u6027 \u7c7b\u578b \u8bf4\u660e code int \u8fd4\u56de\u6d88\u606f\u7684HTTP\u72b6\u6001\u7801 message string \u8fd4\u56de\u503c\u7684\u8bf4\u660e\u4fe1\u606f response Class ? \u8fd4\u56de\u503c\u7684\u7c7b\u578b responseContainer string \u8fd4\u56de\u503c\u7684\u5305\u88c5\u5bb9\u5668\uff0c\u53ef\u9009\u503c\u4e3a List/Set/Map responseHeaders @ResponseHeader \u63cf\u8ff0\u4e00\u7ec4\u8fd4\u56de\u6d88\u606f\u7684HTTP\u5934\uff0cServiceComb\u652f\u6301\u7684 @ResponseHeader \u7684\u5c5e\u6027\u6709 name \u3001 description \u3001 response \u3001 responseContainer","title":"@ApiResponse"},{"location":"build-provider/swagger-annotation/#apiresponses","text":"\u4f5c\u7528\u4e8e\u65b9\u6cd5\u3001\u7c7b\u7ea7\u522b\uff0c\u7528\u4e8e\u6307\u5b9a\u548c\u8bf4\u660e\u4e00\u7ec4\u8fd4\u56de\u503c\u3002 \u5c5e\u6027 \u7c7b\u578b \u8bf4\u660e value @ApiResponse \u8fd4\u56de\u6d88\u606f\u8bf4\u660e","title":"@ApiResponses"},{"location":"build-provider/thread-pool/","text":"\u7ebf\u7a0b\u6c60 \u7ebf\u7a0b\u6c60\u7528\u4e8e\u6267\u884c\u540c\u6b65\u6a21\u5f0f\u7684\u4e1a\u52a1\u903b\u8f91\uff0c\u7f51\u7edc\u6536\u53d1\u53careactive\u6a21\u5f0f\u7684\u4e1a\u52a1\u903b\u8f91\u5728 event-loop \u4e2d\u6267\u884c\uff0c\u4e0e\u7ebf\u7a0b\u6c60\u65e0\u5173\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c Consumer \u548c Provider \u7684 \u4e1a\u52a1\u903b\u8f91\u4ee3\u7801\u7684\u6267\u884c\u90fd\u662f\u5728\u7ebf\u7a0b\u6c60\u91cc\u9762\uff0c Edge Service \u7684\u4e1a\u52a1\u903b\u8f91\u6267\u884c\u5728 event-loop \u91cc\u9762\u3002 Java Chassis \u63d0\u4f9b\u4e86\u4e00\u4e2a\u5168\u5c40\u7684\u5185\u7f6e\u7ebf\u7a0b\u6c60\uff0c \u5982\u679c\u4e1a\u52a1\u6709\u7279\u6b8a\u7684\u9700\u6c42\uff0c\u53ef\u4ee5\u6307\u5b9a\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u5168\u5c40\u7ebf\u7a0b\u6c60\uff0c\u5e76\u4e14\u53ef\u4ee5\u6839 \u636e schemaId \u6216 operationId \u6307\u5b9a\u5404\u81ea\u4f7f\u7528\u72ec\u7acb\u7684\u7ebf\u7a0b\u6c60\uff0c\u5b9e\u73b0\u9694\u79bb\u4ed3\u7684\u6548\u679c\u3002 \u5b9a\u5236\u7ebf\u7a0b\u6c60 \u5b9e\u73b0\u7ebf\u7a0b\u6c60 \u4e0b\u9762\u7684\u65b9\u6cd5\u4efb\u9009\u5176\u4e00\u5373\u53ef \u5b9e\u73b0 java.util.concurrent.Executor \u63a5\u53e3\uff0c \u4e3a\u4e86\u652f\u6301\u4f18\u96c5\u9000\u51fa\uff0c\u5982\u679c\u5185\u90e8\u7ebf\u7a0b\u672a\u8bbe\u7f6e\u4e3adaemon\u7ebf\u7a0b\uff0c\u5219\u8fd8\u9700\u8981\u5b9e\u73b0 java.io.Closeable \u63a5\u53e3\uff0c\u8d1f\u8d23\u9500\u6bc1\u7ebf\u7a0b\u6c60 \u5b9e\u73b0 java.util.concurrent.ExecutorService \u63a5\u53e3 \u5c06\u5b9e\u73b0\u7684\u7ebf\u7a0b\u6c60\u58f0\u660e\u4e3a spring bean \u542f\u7528\u7ebf\u7a0b\u6c60 \u5047\u8bbe\u65b0\u7ebf\u7a0b\u6c60bean id\u4e3acustom-executor \u66ff\u6362\u5168\u5c40\u7ebf\u7a0b\u6c60\uff1a servicecomb.executors.default: custom-executor \u6307\u5b9aschema\u4e13\u7528\u7684\u7ebf\u7a0b\u6c60: servicecomb.executors.Provider.${schemaId}: custom-executor \u6307\u5b9aoperation\u4e13\u7528\u7684\u7ebf\u7a0b\u6c60: servicecomb.executors.Provider.${schemaId}.${operationId}: custom-executor ServiceComb\u5185\u7f6e\u7ebf\u7a0b\u6c60 \u4e00\u822c\u7684\u7ebf\u7a0b\u6c60\u90fd\u662f\u6240\u6709\u7ebf\u7a0b\u5171\u4eab\u4e00\u4e2a\u4efb\u52a1\u961f\u5217\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6240\u6709\u7f51\u7edc\u7ebf\u7a0b\u9700\u8981\u5411\u540c\u4e00\u4e2a\u961f\u5217\u7533\u8bf7\u8bf7\u6c42\u5165\u961f\uff0c\u7ebf\u7a0b\u6c60\u4e2d\u7684\u6240\u6709\u7ebf\u7a0b\u9700\u8981\u4ece\u540c\u4e00\u4e2a\u961f\u5217\u4e2d\u62a2\u4efb\u52a1\u6267\u884c\uff0c\u5bf9\u4e8e\u9ad8\u541e\u5410\u7684\u573a\u666f\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u7ade\u4e89\u51b2\u7a81\uff0c\u5f62\u6210\u6027\u80fd\u74f6\u9888 \u6240\u4ee5\uff0c\u4e3a\u4e86\u63d0\u5347\u6027\u80fd\uff0cServiceComb\u5185\u7f6e\u7ebf\u7a0b\u6c60\u5b9e\u9645\u662f\u771f\u6b63\u7ebf\u7a0b\u6c60\u7684\u5305\u88c5\uff0c\u5141\u8bb8\u5728\u5176\u5185\u90e8\u914d\u7f6e\u591a\u7ec4\u7ebf\u7a0b\u6c60\uff0c\u4e14\u6bcf\u4e2a\u7f51\u7edc\u7ebf\u7a0b\u7ed1\u5b9a\u4e00\u7ec4\u7ebf\u7a0b\u6c60\uff0c\u4ee5\u51cf\u5c0f\u7ade\u4e89\u51b2\u7a81 1.2.0\u4e4b\u524d\u7684\u7248\u672c \u914d\u7f6e\u9879 \u9ed8\u8ba4\u503c \u542b\u4e49 servicecomb.executor.default.group 2 \u521b\u5efa\u51e0\u7ec4\u7ebf\u7a0b\u6c60 servicecomb.executor.default.thread-per-group CPU\u6570 \u6bcf\u7ec4\u7ebf\u7a0b\u6c60\u7684\u7ebf\u7a0b\u6570 \u5927\u4e8e\u7b49\u4e8e1.2.0\u7684\u7248\u672c \u914d\u7f6e\u9879 \u9ed8\u8ba4\u503c \u542b\u4e49 servicecomb.executor.default.group 2 \u521b\u5efa\u51e0\u7ec4\u7ebf\u7a0b\u6c60 servicecomb.executor.default.thread-per-group 100 \u6bcf\u7ec4\u7ebf\u7a0b\u6c60\u7684\u6700\u5927\u7ebf\u7a0b\u6570 Deprecated\uff0c\u65b0\u540d\u5b57\uff1amaxThreads-per-group servicecomb.executor.default.coreThreads-per-group 25 \u6bcf\u7ec4\u7ebf\u7a0b\u6c60\u7684\u6700\u5c0f\u7ebf\u7a0b\u6570 \u7ebf\u7a0b\u4e0d\u4f1a\u9884\u521b\u5efa\uff0c\u800c\u662f\u5df2\u7ecf\u521b\u5efa\u540e\uff0c\u53ea\u6709\u5927\u4e8e\u8fd9\u4e2a\u503c\u7684\u7ebf\u7a0b\uff0c\u624d\u4f1a\u56e0idle\u800c\u9500\u6bc1 servicecomb.executor.default.maxThreads-per-group 100 \u6bcf\u7ec4\u7ebf\u7a0b\u6c60\u7684\u6700\u5927\u7ebf\u7a0b\u6570 servicecomb.executor.default.maxIdleSecond-per-group 60 \u6bcf\u7ec4\u7ebf\u7a0b\u6c60\u4e2d\u8d85\u8fc7coreThreads-per-group\u7684\u7ebf\u7a0b\uff0c\u5982\u679cidle\u8d85\u65f6\uff0c\u5219\u4f1a\u9500\u6bc1\u8be5\u7ebf\u7a0b servicecomb.executor.default.maxQueueSize-per-group Integer.MAX_VALUE \u6bcf\u7ec4\u7ebf\u7a0b\u6c60\u4e2d\u4efb\u52a1\u961f\u5217\u7684\u6700\u5927\u957f\u5ea6","title":"\u7ebf\u7a0b\u6c60"},{"location":"build-provider/thread-pool/#_1","text":"\u7ebf\u7a0b\u6c60\u7528\u4e8e\u6267\u884c\u540c\u6b65\u6a21\u5f0f\u7684\u4e1a\u52a1\u903b\u8f91\uff0c\u7f51\u7edc\u6536\u53d1\u53careactive\u6a21\u5f0f\u7684\u4e1a\u52a1\u903b\u8f91\u5728 event-loop \u4e2d\u6267\u884c\uff0c\u4e0e\u7ebf\u7a0b\u6c60\u65e0\u5173\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c Consumer \u548c Provider \u7684 \u4e1a\u52a1\u903b\u8f91\u4ee3\u7801\u7684\u6267\u884c\u90fd\u662f\u5728\u7ebf\u7a0b\u6c60\u91cc\u9762\uff0c Edge Service \u7684\u4e1a\u52a1\u903b\u8f91\u6267\u884c\u5728 event-loop \u91cc\u9762\u3002 Java Chassis \u63d0\u4f9b\u4e86\u4e00\u4e2a\u5168\u5c40\u7684\u5185\u7f6e\u7ebf\u7a0b\u6c60\uff0c \u5982\u679c\u4e1a\u52a1\u6709\u7279\u6b8a\u7684\u9700\u6c42\uff0c\u53ef\u4ee5\u6307\u5b9a\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u5168\u5c40\u7ebf\u7a0b\u6c60\uff0c\u5e76\u4e14\u53ef\u4ee5\u6839 \u636e schemaId \u6216 operationId \u6307\u5b9a\u5404\u81ea\u4f7f\u7528\u72ec\u7acb\u7684\u7ebf\u7a0b\u6c60\uff0c\u5b9e\u73b0\u9694\u79bb\u4ed3\u7684\u6548\u679c\u3002","title":"\u7ebf\u7a0b\u6c60"},{"location":"build-provider/thread-pool/#_2","text":"\u5b9e\u73b0\u7ebf\u7a0b\u6c60 \u4e0b\u9762\u7684\u65b9\u6cd5\u4efb\u9009\u5176\u4e00\u5373\u53ef \u5b9e\u73b0 java.util.concurrent.Executor \u63a5\u53e3\uff0c \u4e3a\u4e86\u652f\u6301\u4f18\u96c5\u9000\u51fa\uff0c\u5982\u679c\u5185\u90e8\u7ebf\u7a0b\u672a\u8bbe\u7f6e\u4e3adaemon\u7ebf\u7a0b\uff0c\u5219\u8fd8\u9700\u8981\u5b9e\u73b0 java.io.Closeable \u63a5\u53e3\uff0c\u8d1f\u8d23\u9500\u6bc1\u7ebf\u7a0b\u6c60 \u5b9e\u73b0 java.util.concurrent.ExecutorService \u63a5\u53e3 \u5c06\u5b9e\u73b0\u7684\u7ebf\u7a0b\u6c60\u58f0\u660e\u4e3a spring bean \u542f\u7528\u7ebf\u7a0b\u6c60 \u5047\u8bbe\u65b0\u7ebf\u7a0b\u6c60bean id\u4e3acustom-executor \u66ff\u6362\u5168\u5c40\u7ebf\u7a0b\u6c60\uff1a servicecomb.executors.default: custom-executor \u6307\u5b9aschema\u4e13\u7528\u7684\u7ebf\u7a0b\u6c60: servicecomb.executors.Provider.${schemaId}: custom-executor \u6307\u5b9aoperation\u4e13\u7528\u7684\u7ebf\u7a0b\u6c60: servicecomb.executors.Provider.${schemaId}.${operationId}: custom-executor","title":"\u5b9a\u5236\u7ebf\u7a0b\u6c60"},{"location":"build-provider/thread-pool/#servicecomb","text":"\u4e00\u822c\u7684\u7ebf\u7a0b\u6c60\u90fd\u662f\u6240\u6709\u7ebf\u7a0b\u5171\u4eab\u4e00\u4e2a\u4efb\u52a1\u961f\u5217\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6240\u6709\u7f51\u7edc\u7ebf\u7a0b\u9700\u8981\u5411\u540c\u4e00\u4e2a\u961f\u5217\u7533\u8bf7\u8bf7\u6c42\u5165\u961f\uff0c\u7ebf\u7a0b\u6c60\u4e2d\u7684\u6240\u6709\u7ebf\u7a0b\u9700\u8981\u4ece\u540c\u4e00\u4e2a\u961f\u5217\u4e2d\u62a2\u4efb\u52a1\u6267\u884c\uff0c\u5bf9\u4e8e\u9ad8\u541e\u5410\u7684\u573a\u666f\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u7ade\u4e89\u51b2\u7a81\uff0c\u5f62\u6210\u6027\u80fd\u74f6\u9888 \u6240\u4ee5\uff0c\u4e3a\u4e86\u63d0\u5347\u6027\u80fd\uff0cServiceComb\u5185\u7f6e\u7ebf\u7a0b\u6c60\u5b9e\u9645\u662f\u771f\u6b63\u7ebf\u7a0b\u6c60\u7684\u5305\u88c5\uff0c\u5141\u8bb8\u5728\u5176\u5185\u90e8\u914d\u7f6e\u591a\u7ec4\u7ebf\u7a0b\u6c60\uff0c\u4e14\u6bcf\u4e2a\u7f51\u7edc\u7ebf\u7a0b\u7ed1\u5b9a\u4e00\u7ec4\u7ebf\u7a0b\u6c60\uff0c\u4ee5\u51cf\u5c0f\u7ade\u4e89\u51b2\u7a81 1.2.0\u4e4b\u524d\u7684\u7248\u672c \u914d\u7f6e\u9879 \u9ed8\u8ba4\u503c \u542b\u4e49 servicecomb.executor.default.group 2 \u521b\u5efa\u51e0\u7ec4\u7ebf\u7a0b\u6c60 servicecomb.executor.default.thread-per-group CPU\u6570 \u6bcf\u7ec4\u7ebf\u7a0b\u6c60\u7684\u7ebf\u7a0b\u6570 \u5927\u4e8e\u7b49\u4e8e1.2.0\u7684\u7248\u672c \u914d\u7f6e\u9879 \u9ed8\u8ba4\u503c \u542b\u4e49 servicecomb.executor.default.group 2 \u521b\u5efa\u51e0\u7ec4\u7ebf\u7a0b\u6c60 servicecomb.executor.default.thread-per-group 100 \u6bcf\u7ec4\u7ebf\u7a0b\u6c60\u7684\u6700\u5927\u7ebf\u7a0b\u6570 Deprecated\uff0c\u65b0\u540d\u5b57\uff1amaxThreads-per-group servicecomb.executor.default.coreThreads-per-group 25 \u6bcf\u7ec4\u7ebf\u7a0b\u6c60\u7684\u6700\u5c0f\u7ebf\u7a0b\u6570 \u7ebf\u7a0b\u4e0d\u4f1a\u9884\u521b\u5efa\uff0c\u800c\u662f\u5df2\u7ecf\u521b\u5efa\u540e\uff0c\u53ea\u6709\u5927\u4e8e\u8fd9\u4e2a\u503c\u7684\u7ebf\u7a0b\uff0c\u624d\u4f1a\u56e0idle\u800c\u9500\u6bc1 servicecomb.executor.default.maxThreads-per-group 100 \u6bcf\u7ec4\u7ebf\u7a0b\u6c60\u7684\u6700\u5927\u7ebf\u7a0b\u6570 servicecomb.executor.default.maxIdleSecond-per-group 60 \u6bcf\u7ec4\u7ebf\u7a0b\u6c60\u4e2d\u8d85\u8fc7coreThreads-per-group\u7684\u7ebf\u7a0b\uff0c\u5982\u679cidle\u8d85\u65f6\uff0c\u5219\u4f1a\u9500\u6bc1\u8be5\u7ebf\u7a0b servicecomb.executor.default.maxQueueSize-per-group Integer.MAX_VALUE \u6bcf\u7ec4\u7ebf\u7a0b\u6c60\u4e2d\u4efb\u52a1\u961f\u5217\u7684\u6700\u5927\u957f\u5ea6","title":"ServiceComb\u5185\u7f6e\u7ebf\u7a0b\u6c60"},{"location":"build-provider/transparent-rpc/","text":"\u7528\u900f\u660eRPC\u5f00\u53d1\u5fae\u670d\u52a1 \u6982\u5ff5\u9610\u8ff0 \u900f\u660eRPC\u5f00\u53d1\u6a21\u5f0f\u662f\u4e00\u79cd\u57fa\u4e8e\u63a5\u53e3\u548c\u63a5\u53e3\u5b9e\u73b0\u7684\u5f00\u53d1\u6a21\u5f0f\uff0c\u670d\u52a1\u7684\u5f00\u53d1\u8005\u4e0d\u9700\u8981\u4f7f\u7528Spring MVC\u548cJAX-RS\u6ce8\u89e3\u3002 \u5f00\u53d1\u793a\u4f8b \u900f\u660eRPC\u5f00\u53d1\u6a21\u5f0f\u652f\u6301Spring xml\u914d\u7f6e\u548c\u6ce8\u89e3\u914d\u7f6e\u4e24\u79cd\u670d\u52a1\u53d1\u5e03\u65b9\u5f0f\uff0c\u901a\u8fc7Spring xml\u914d\u7f6e\u7684\u65b9\u5f0f\u5982\u4e0b\uff1a \u6b65\u9aa4 1\u5b9a\u4e49\u670d\u52a1\u63a5\u53e3\u3002 \u6839\u636e\u5f00\u53d1\u4e4b\u524d\u5b9a\u4e49\u597d\u7684\u5951\u7ea6\uff0c\u7f16\u5199Java\u4e1a\u52a1\u63a5\u53e3\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a public interface Hello { String sayHi(String name); String sayHello(Person person); } public interface Compute { int add(int a, int b); int multi(int a, int b); int sub(int a, int b); int divide(int a, int b); } \u6b65\u9aa4 2\u5b9e\u73b0\u670d\u52a1 Hello\u7684\u670d\u52a1\u5b9e\u73b0\u5982\u4e0b\uff1a \u8bf4\u660e \uff1a \u6bcf\u4e00\u4e2a\u670d\u52a1\u63a5\u53e3\u90fd\u9700\u8981\u5b9a\u4e49\u4e00\u4e2aschema\u58f0\u660e\u3002 \u5728\u63a5\u53e3Hello \u548c Compute \u7684\u5b9e\u73b0\u7c7b\u4e0a\u4f7f\u7528@RpcSchema\u6ce8\u89e3\u5b9a\u4e49schema\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a @RpcSchema(schemaId = hello ) public class HelloImpl implements Hello { @Override public String sayHi(String name) { return Hello + name; } @Override public String sayHello(Person person) { return Hello person + person.getName(); } } @RpcSchema(schemaId = codeFirstCompute ) public class CodeFirstComputeImpl implements Compute { @Override public int add(int a, int b) { return a + b; } @Override public int multi(int a, int b) { return a * b; } @Override public int sub(int a, int b) { return a - b; } @Override public int divide(int a, int b) { if (b != 0) { return a / b; } return 0; } } \u6b65\u9aa4 3\u53d1\u5e03\u670d\u52a1 \u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u65b9\u5f0f \u5728resources/META-INF/spring\u76ee\u5f55\u4e0b\u7684pojoHello.bean.xml\u6587\u4ef6\u4e2d\uff0c\u914d\u7f6eSpring\u8fdb\u884c\u670d\u52a1\u626b\u63cf\u7684base-package\uff0c\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b\uff1a ?xml version= 1.0 encoding= UTF-8 ? beans xmlns= http://www.springframework.org/schema/beans xmlns:xsi= http://www.w3.org/2001/XMLSchema-instance xmlns:p= http://www.springframework.org/schema/p xmlns:util= http://www.springframework.org/schema/util xmlns:cse= http://www.huawei.com/schema/paas/cse/rpc xmlns:context= http://www.springframework.org/schema/context xsi:schemaLocation= http://www.springframework.org/schema/beans classpath:org/springframework/beans/factory/xml/spring-beans-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.huawei.com/schema/paas/cse/rpc classpath:META-INF/spring/spring-paas-cse-rpc.xsd context:component-scan base-package= org.apache.servicecomb.samples.pojo.provider / /beans \u6b65\u9aa4 4 \u542f\u52a8\u670d\u52a1 public class PojoProviderMain { public static void main(String[] args) throws Exception { Log4jUtils.init(); BeanUtils.init(); } } \u8bf4\u660e \uff1a \u4e0eSpring MVC\u5f00\u53d1\u6a21\u5f0f\u548cJAX-RS\u5f00\u53d1\u6a21\u5f0f\u4e0d\u540c\u7684\u662f\uff0c\u900f\u660eRPC\u5f00\u53d1\u6a21\u5f0f\u4f7f\u7528\u7684\u6ce8\u89e3\u662f @RpcSchema \u800c\u975e @RestSchema \u3002","title":"\u7528\u900f\u660eRPC\u5f00\u53d1\u5fae\u670d\u52a1"},{"location":"build-provider/transparent-rpc/#rpc","text":"","title":"\u7528\u900f\u660eRPC\u5f00\u53d1\u5fae\u670d\u52a1"},{"location":"build-provider/transparent-rpc/#_1","text":"\u900f\u660eRPC\u5f00\u53d1\u6a21\u5f0f\u662f\u4e00\u79cd\u57fa\u4e8e\u63a5\u53e3\u548c\u63a5\u53e3\u5b9e\u73b0\u7684\u5f00\u53d1\u6a21\u5f0f\uff0c\u670d\u52a1\u7684\u5f00\u53d1\u8005\u4e0d\u9700\u8981\u4f7f\u7528Spring MVC\u548cJAX-RS\u6ce8\u89e3\u3002","title":"\u6982\u5ff5\u9610\u8ff0"},{"location":"build-provider/transparent-rpc/#_2","text":"\u900f\u660eRPC\u5f00\u53d1\u6a21\u5f0f\u652f\u6301Spring xml\u914d\u7f6e\u548c\u6ce8\u89e3\u914d\u7f6e\u4e24\u79cd\u670d\u52a1\u53d1\u5e03\u65b9\u5f0f\uff0c\u901a\u8fc7Spring xml\u914d\u7f6e\u7684\u65b9\u5f0f\u5982\u4e0b\uff1a","title":"\u5f00\u53d1\u793a\u4f8b"},{"location":"build-provider/transparent-rpc/#1","text":"\u6839\u636e\u5f00\u53d1\u4e4b\u524d\u5b9a\u4e49\u597d\u7684\u5951\u7ea6\uff0c\u7f16\u5199Java\u4e1a\u52a1\u63a5\u53e3\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a public interface Hello { String sayHi(String name); String sayHello(Person person); } public interface Compute { int add(int a, int b); int multi(int a, int b); int sub(int a, int b); int divide(int a, int b); }","title":"\u6b65\u9aa4 1\u5b9a\u4e49\u670d\u52a1\u63a5\u53e3\u3002"},{"location":"build-provider/transparent-rpc/#2","text":"Hello\u7684\u670d\u52a1\u5b9e\u73b0\u5982\u4e0b\uff1a \u8bf4\u660e \uff1a \u6bcf\u4e00\u4e2a\u670d\u52a1\u63a5\u53e3\u90fd\u9700\u8981\u5b9a\u4e49\u4e00\u4e2aschema\u58f0\u660e\u3002 \u5728\u63a5\u53e3Hello \u548c Compute \u7684\u5b9e\u73b0\u7c7b\u4e0a\u4f7f\u7528@RpcSchema\u6ce8\u89e3\u5b9a\u4e49schema\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a @RpcSchema(schemaId = hello ) public class HelloImpl implements Hello { @Override public String sayHi(String name) { return Hello + name; } @Override public String sayHello(Person person) { return Hello person + person.getName(); } } @RpcSchema(schemaId = codeFirstCompute ) public class CodeFirstComputeImpl implements Compute { @Override public int add(int a, int b) { return a + b; } @Override public int multi(int a, int b) { return a * b; } @Override public int sub(int a, int b) { return a - b; } @Override public int divide(int a, int b) { if (b != 0) { return a / b; } return 0; } }","title":"\u6b65\u9aa4 2\u5b9e\u73b0\u670d\u52a1"},{"location":"build-provider/transparent-rpc/#3","text":"\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u65b9\u5f0f \u5728resources/META-INF/spring\u76ee\u5f55\u4e0b\u7684pojoHello.bean.xml\u6587\u4ef6\u4e2d\uff0c\u914d\u7f6eSpring\u8fdb\u884c\u670d\u52a1\u626b\u63cf\u7684base-package\uff0c\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b\uff1a ?xml version= 1.0 encoding= UTF-8 ? beans xmlns= http://www.springframework.org/schema/beans xmlns:xsi= http://www.w3.org/2001/XMLSchema-instance xmlns:p= http://www.springframework.org/schema/p xmlns:util= http://www.springframework.org/schema/util xmlns:cse= http://www.huawei.com/schema/paas/cse/rpc xmlns:context= http://www.springframework.org/schema/context xsi:schemaLocation= http://www.springframework.org/schema/beans classpath:org/springframework/beans/factory/xml/spring-beans-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.huawei.com/schema/paas/cse/rpc classpath:META-INF/spring/spring-paas-cse-rpc.xsd context:component-scan base-package= org.apache.servicecomb.samples.pojo.provider / /beans","title":"\u6b65\u9aa4 3\u53d1\u5e03\u670d\u52a1"},{"location":"build-provider/transparent-rpc/#4","text":"public class PojoProviderMain { public static void main(String[] args) throws Exception { Log4jUtils.init(); BeanUtils.init(); } } \u8bf4\u660e \uff1a \u4e0eSpring MVC\u5f00\u53d1\u6a21\u5f0f\u548cJAX-RS\u5f00\u53d1\u6a21\u5f0f\u4e0d\u540c\u7684\u662f\uff0c\u900f\u660eRPC\u5f00\u53d1\u6a21\u5f0f\u4f7f\u7528\u7684\u6ce8\u89e3\u662f @RpcSchema \u800c\u975e @RestSchema \u3002","title":"\u6b65\u9aa4 4 \u542f\u52a8\u670d\u52a1"},{"location":"build-provider/configuration/parameter-validator/","text":"\u573a\u666f\u63cf\u8ff0 \u7528\u6237\u5728provider\u7aef\u4f7f\u7528\u53c2\u6570\u6548\u9a8c\uff0c\u53ef\u4ee5\u5bf9\u76f8\u5e94\u7684\u53c2\u6570\u8f93\u5165\u8981\u6c42\u9884\u5148\u8fdb\u884c\u8bbe\u7f6e\uff0c\u5728\u63a5\u53e3\u5b9e\u9645\u8c03\u7528\u524d\u8fdb\u884c\u6548\u9a8c\u5904\u7406\uff0c\u8fbe\u5230\u63a7\u5236\u53c2\u6570\u8f93\u5165\u6807\u51c6\u7684\u6548\u679c\u3002 \u914d\u7f6e\u8bf4\u660e \u6dfb\u52a0swagger-invocation-validator\u7684pom\u4f9d\u8d56\uff1a xml dependency groupId org.apache.servicecomb /groupId artifactId swagger-invocation-validator /artifactId /dependency \u5728\u9700\u8981\u9a8c\u8bc1\u7684\u4ee3\u7801\u4e0a\u6309\u7167JSR 349\u89c4\u8303\u6dfb\u52a0\u9a8c\u8bc1\u5668\u6ce8\u89e3\uff0c\u5982@NotNull\uff0c@Min\uff0c@Max\u7b49\u3002 \u793a\u4f8b\u4ee3\u7801 \u63a5\u53e3\u53c2\u6570\u9a8c\u8bc1 @RestSchema(schemaId = validator ) @Path( /validator ) @Produces(MediaType.APPLICATION_JSON) public class Validator { @Path( /add ) @POST public int add(@FormParam( a ) int a, @Min(20) @FormParam( b ) int b) { return a + b; } @Path( /sayhi/{name} ) @PUT public String sayHi(@Length(min = 3) @PathParam( name ) String name) { ContextUtils.getInvocationContext().setStatus(202); return name + sayhi ; } @Path( /sayhello ) @POST public Student sayHello(@Valid Student student) { student.setName( hello + student.getName()); student.setAge(student.getAge()); return student; } } bean\u7c7b\u9a8c\u8bc1 \u9700\u8981\u5728\u4f20\u5165\u7684Student\u5bf9\u8c61\u524d\u52a0@Valid\uff0c\u5982\u4e0a\u56fesayHello(@Valid Student student)\u65b9\u6cd5\u3002 public class Student { @NotNull private String name; @Max(20) private int age; public void setName(String name) { this.name = name; } public String getName() { return this.name; } public void setAge(int age) { this.age = age; } public int getAge() { return age; } } \u81ea\u5b9a\u4e49\u8fd4\u56de\u5f02\u5e38 \u9ed8\u8ba4\u7684\u53c2\u6570\u6548\u9a8c\u5668ParameterValidator\u5df2\u7ecf\u5b9e\u73b0\u4e86\u63a5\u53e3ProducerInvokeExtension\uff0c\u6309\u7167JSR 349\u89c4\u8303\u5904\u7406\u6240\u9700\u7684\u53c2\u6570\u9a8c\u8bc1\u3002 \u5982\u679c\u4efb\u4f55\u53c2\u6570\u9a8c\u8bc1\u5931\u8d25\uff0c\u7f3a\u7701\u9519\u8bef\u662fBAD_REQUEST(400, \"Bad Request\")\u3002 \u8fd4\u56de\u9519\u8bef\u652f\u6301\u81ea\u5b9a\u4e49\u6269\u5c55\uff0c\u4f7f\u7528SPI\u673a\u5236\u3002 \u53ef\u4ee5\u901a\u8fc7\u5b9e\u73b0\u63a5\u53e3ExceptionToProducerResponseConverter\u6765\u81ea\u5b9a\u4e49\u8fd4\u56de\u7684\u9519\u8bef\u4fe1\u606f\uff0c\u4ee5ConstraintViolationExceptionToProducerResponseConverter\u4e3a\u4f8b\u3002 \u5b9e\u73b0ExceptionToProducerResponseConverter\u63a5\u53e3\uff0c\u91cd\u5199\u65b9\u6cd5\uff0c\u5176\u4e2dgetOrder\u65b9\u6cd5\u7684\u8fd4\u56de\u7ed3\u679c\u8868\u793a\u8be5\u9a8c\u8bc1\u5668\u7684\u4f18\u5148\u7ea7\uff0c\u503c\u8d8a\u5c0f\u4f18\u5148\u7ea7\u8d8a\u9ad8\u3002 ```java public class ConstraintViolationExceptionToProducerResponseConverter implements ExceptionToProducerResponseConverter { @Override public Class getExceptionClass() { return ConstraintViolationException.class; } @Override public Response convert(SwaggerInvocation swaggerInvocation, ConstraintViolationException e) { return Response.createFail(new InvocationException(Status.BAD_REQUEST, e.getConstraintViolations().toString())); } @Override public int getOrder() { return -100; } } ``` \u5728META-INF\u4e0b\u7684services\u6587\u4ef6\u5939\u589e\u52a0\u4e00\u4e2a\u6587\u4ef6\uff0c\u4ee5\u6240\u5b9e\u73b0\u63a5\u53e3x.x.x.ExceptionToProducerResponseConverter(\u5e26\u5305\u540d)\u4e3a\u540d\uff0c\u4ee5\u5177\u4f53\u5b9e\u73b0\u7c7bx.x.x.ConstraintViolationExceptionToProducerResponseConverter(\u5e26\u5305\u540d)\u4e3a\u5185\u5bb9\u3002","title":"Parameter validator"},{"location":"build-provider/configuration/parameter-validator/#_1","text":"\u7528\u6237\u5728provider\u7aef\u4f7f\u7528\u53c2\u6570\u6548\u9a8c\uff0c\u53ef\u4ee5\u5bf9\u76f8\u5e94\u7684\u53c2\u6570\u8f93\u5165\u8981\u6c42\u9884\u5148\u8fdb\u884c\u8bbe\u7f6e\uff0c\u5728\u63a5\u53e3\u5b9e\u9645\u8c03\u7528\u524d\u8fdb\u884c\u6548\u9a8c\u5904\u7406\uff0c\u8fbe\u5230\u63a7\u5236\u53c2\u6570\u8f93\u5165\u6807\u51c6\u7684\u6548\u679c\u3002","title":"\u573a\u666f\u63cf\u8ff0"},{"location":"build-provider/configuration/parameter-validator/#_2","text":"\u6dfb\u52a0swagger-invocation-validator\u7684pom\u4f9d\u8d56\uff1a xml dependency groupId org.apache.servicecomb /groupId artifactId swagger-invocation-validator /artifactId /dependency \u5728\u9700\u8981\u9a8c\u8bc1\u7684\u4ee3\u7801\u4e0a\u6309\u7167JSR 349\u89c4\u8303\u6dfb\u52a0\u9a8c\u8bc1\u5668\u6ce8\u89e3\uff0c\u5982@NotNull\uff0c@Min\uff0c@Max\u7b49\u3002","title":"\u914d\u7f6e\u8bf4\u660e"},{"location":"build-provider/configuration/parameter-validator/#_3","text":"\u63a5\u53e3\u53c2\u6570\u9a8c\u8bc1 @RestSchema(schemaId = validator ) @Path( /validator ) @Produces(MediaType.APPLICATION_JSON) public class Validator { @Path( /add ) @POST public int add(@FormParam( a ) int a, @Min(20) @FormParam( b ) int b) { return a + b; } @Path( /sayhi/{name} ) @PUT public String sayHi(@Length(min = 3) @PathParam( name ) String name) { ContextUtils.getInvocationContext().setStatus(202); return name + sayhi ; } @Path( /sayhello ) @POST public Student sayHello(@Valid Student student) { student.setName( hello + student.getName()); student.setAge(student.getAge()); return student; } } bean\u7c7b\u9a8c\u8bc1 \u9700\u8981\u5728\u4f20\u5165\u7684Student\u5bf9\u8c61\u524d\u52a0@Valid\uff0c\u5982\u4e0a\u56fesayHello(@Valid Student student)\u65b9\u6cd5\u3002 public class Student { @NotNull private String name; @Max(20) private int age; public void setName(String name) { this.name = name; } public String getName() { return this.name; } public void setAge(int age) { this.age = age; } public int getAge() { return age; } }","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"build-provider/configuration/parameter-validator/#_4","text":"\u9ed8\u8ba4\u7684\u53c2\u6570\u6548\u9a8c\u5668ParameterValidator\u5df2\u7ecf\u5b9e\u73b0\u4e86\u63a5\u53e3ProducerInvokeExtension\uff0c\u6309\u7167JSR 349\u89c4\u8303\u5904\u7406\u6240\u9700\u7684\u53c2\u6570\u9a8c\u8bc1\u3002 \u5982\u679c\u4efb\u4f55\u53c2\u6570\u9a8c\u8bc1\u5931\u8d25\uff0c\u7f3a\u7701\u9519\u8bef\u662fBAD_REQUEST(400, \"Bad Request\")\u3002 \u8fd4\u56de\u9519\u8bef\u652f\u6301\u81ea\u5b9a\u4e49\u6269\u5c55\uff0c\u4f7f\u7528SPI\u673a\u5236\u3002 \u53ef\u4ee5\u901a\u8fc7\u5b9e\u73b0\u63a5\u53e3ExceptionToProducerResponseConverter\u6765\u81ea\u5b9a\u4e49\u8fd4\u56de\u7684\u9519\u8bef\u4fe1\u606f\uff0c\u4ee5ConstraintViolationExceptionToProducerResponseConverter\u4e3a\u4f8b\u3002 \u5b9e\u73b0ExceptionToProducerResponseConverter\u63a5\u53e3\uff0c\u91cd\u5199\u65b9\u6cd5\uff0c\u5176\u4e2dgetOrder\u65b9\u6cd5\u7684\u8fd4\u56de\u7ed3\u679c\u8868\u793a\u8be5\u9a8c\u8bc1\u5668\u7684\u4f18\u5148\u7ea7\uff0c\u503c\u8d8a\u5c0f\u4f18\u5148\u7ea7\u8d8a\u9ad8\u3002 ```java public class ConstraintViolationExceptionToProducerResponseConverter implements ExceptionToProducerResponseConverter { @Override public Class getExceptionClass() { return ConstraintViolationException.class; } @Override public Response convert(SwaggerInvocation swaggerInvocation, ConstraintViolationException e) { return Response.createFail(new InvocationException(Status.BAD_REQUEST, e.getConstraintViolations().toString())); } @Override public int getOrder() { return -100; } } ``` \u5728META-INF\u4e0b\u7684services\u6587\u4ef6\u5939\u589e\u52a0\u4e00\u4e2a\u6587\u4ef6\uff0c\u4ee5\u6240\u5b9e\u73b0\u63a5\u53e3x.x.x.ExceptionToProducerResponseConverter(\u5e26\u5305\u540d)\u4e3a\u540d\uff0c\u4ee5\u5177\u4f53\u5b9e\u73b0\u7c7bx.x.x.ConstraintViolationExceptionToProducerResponseConverter(\u5e26\u5305\u540d)\u4e3a\u5185\u5bb9\u3002","title":"\u81ea\u5b9a\u4e49\u8fd4\u56de\u5f02\u5e38"},{"location":"build-provider/configuration/ratelimite-strategy/","text":"\u573a\u666f\u63cf\u8ff0 \u7528\u6237\u5728provider\u7aef\u4f7f\u7528\u9650\u6d41\u7b56\u7565\uff0c\u53ef\u4ee5\u9650\u5236\u6307\u5b9a\u5fae\u670d\u52a1\u5411\u5176\u53d1\u9001\u8bf7\u6c42\u7684\u9891\u7387\uff0c\u8fbe\u5230\u9650\u5236\u6bcf\u79d2\u949f\u6700\u5927\u8bf7\u6c42\u6570\u91cf\u7684\u6548\u679c\u3002 \u6ce8\u610f\u4e8b\u9879 \u9650\u6d41\u7b56\u7565\u7684\u63a7\u5236\u5e76\u4e0d\u662f\u7edd\u5bf9\u7cbe\u786e\u7684\uff0c\u53ef\u80fd\u4f1a\u6709\u5c11\u91cf\u8bef\u5dee\u3002 provider\u7aef\u7684\u6d41\u91cf\u63a7\u5236\u662f\u4e1a\u52a1\u5c42\u9762\u7684\u529f\u80fd\uff0c\u4e0d\u662f\u5b89\u5168\u610f\u4e49\u4e0a\u7684\u6d41\u91cf\u63a7\u5236\uff0c\u5982\u9700\u9632\u6b62DDoS\u653b\u51fb\uff0c\u9700\u8981\u7ed3\u5408\u5176\u4ed6\u7684\u4e00\u7cfb\u5217\u63aa\u65bd\u3002 \u6d41\u91cf\u63a7\u5236\u662f\u5fae\u670d\u52a1\u7ea7\u7684\uff0c\u4e0d\u662f\u5b9e\u4f8b\u7ea7\u7684\u3002\u4f8b\u5982\u4e00\u4e2aconsumer\u670d\u52a1\u6709\u4e09\u4e2a\u5b9e\u4f8b\uff0c\u5f53\u5bf9\u5b83\u4eec\u4f9d\u8d56\u7684provider\u5b9e\u4f8b\u914d\u7f6e\u9650\u6d41\u7b56\u7565\u540e\uff0cprovider\u4e0d\u4f1a\u533a\u5206consumer\u7684\u8bf7\u6c42\u5177\u4f53\u662f\u7531\u54ea\u4e2a\u5b9e\u4f8b\u53d1\u51fa\u7684\uff0c\u800c\u662f\u6c47\u603b\u6210\u5fae\u670d\u52a1\u7ea7\u7684\u7edf\u8ba1\u6570\u636e\u8fdb\u884c\u9650\u6d41\u5224\u65ad\u3002 \u914d\u7f6e\u8bf4\u660e \u9650\u6d41\u7b56\u7565\u914d\u7f6e\u5728microservice.yaml\u6587\u4ef6\u4e2d\uff0c\u76f8\u5173\u914d\u7f6e\u9879\u89c1\u8868 QPS\u6d41\u63a7\u914d\u7f6e\u9879\u8bf4\u660e \u3002\u8981\u5f00\u542f\u670d\u52a1\u63d0\u4f9b\u8005\u7aef\u7684\u9650\u6d41\u7b56\u7565\uff0c\u8fd8\u9700\u8981\u5728\u5904\u7406\u94fe\u4e2d\u914d\u7f6e\u670d\u52a1\u7aef\u9650\u6d41handler\uff0c\u5e76\u6dfb\u52a0pom\u4f9d\u8d56\u3002 microservice.yaml\u914d\u7f6e\u793a\u4f8b\u5982\u4e0b\uff1a yaml servicecomb: handler: chain: Provider: default: qps-flowcontrol-provider \u6dfb\u52a0handler-flowcontrol-qps\u7684pom\u4f9d\u8d56\uff1a xml dependency groupId org.apache.servicecomb /groupId artifactId handler-flowcontrol-qps /artifactId version 1.0.0.B003 /version /dependency QPS\u6d41\u63a7\u914d\u7f6e\u9879\u8bf4\u660e \u914d\u7f6e\u9879 \u9ed8\u8ba4\u503c \u53d6\u503c\u8303\u56f4 \u662f\u5426\u5fc5\u9009 \u542b\u4e49 \u6ce8\u610f servicecomb.flowcontrol.Provider.qps.enabled true true/false \u5426 \u662f\u5426\u542f\u7528Provider\u6d41\u63a7 - servicecomb.flowcontrol.Provider.qps.limit.[ServiceName].[Schema].[operation] 2147483647\uff08max int\uff09 (0,2147483647]\uff0c\u6574\u5f62 \u5426 \u6bcf\u79d2\u949f\u5141\u8bb8\u7684\u8bf7\u6c42\u6570 \u652f\u6301microservice/schema/operation\u4e09\u4e2a\u7ea7\u522b\u7684\u914d\u7f6e\uff0c\u540e\u8005\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u524d\u8005 servicecomb.flowcontrol.Provider.qps.global.limit 2147483647\uff08max int\uff09 (0,2147483647]\uff0c\u6574\u5f62 \u5426 provider\u63a5\u53d7\u8bf7\u6c42\u6d41\u91cf\u7684\u5168\u5c40\u914d\u7f6e \u6ca1\u6709\u5177\u4f53\u7684\u6d41\u63a7\u914d\u7f6e\u65f6\uff0c\u6b64\u914d\u7f6e\u751f\u6548 \u6ce8\u610f\uff1a provider\u7aef\u9650\u6d41\u7b56\u7565\u914d\u7f6e\u4e2d\u7684 ServiceName \u6307\u7684\u662f\u8c03\u7528\u8be5provider\u7684consumer\uff0c\u800c schema \u3001 operation \u6307\u7684\u662fprovider\u81ea\u8eab\u7684\u3002\u5373provider\u7aef\u9650\u6d41\u914d\u7f6e\u7684\u542b\u4e49\u662f\uff0c\u9650\u5236\u6307\u5b9aconsumer\u8c03\u7528\u672cprovider\u7684\u67d0\u4e2aschema\u3001operation\u7684\u6d41\u91cf\u3002","title":"Ratelimite strategy"},{"location":"build-provider/configuration/ratelimite-strategy/#_1","text":"\u7528\u6237\u5728provider\u7aef\u4f7f\u7528\u9650\u6d41\u7b56\u7565\uff0c\u53ef\u4ee5\u9650\u5236\u6307\u5b9a\u5fae\u670d\u52a1\u5411\u5176\u53d1\u9001\u8bf7\u6c42\u7684\u9891\u7387\uff0c\u8fbe\u5230\u9650\u5236\u6bcf\u79d2\u949f\u6700\u5927\u8bf7\u6c42\u6570\u91cf\u7684\u6548\u679c\u3002","title":"\u573a\u666f\u63cf\u8ff0"},{"location":"build-provider/configuration/ratelimite-strategy/#_2","text":"\u9650\u6d41\u7b56\u7565\u7684\u63a7\u5236\u5e76\u4e0d\u662f\u7edd\u5bf9\u7cbe\u786e\u7684\uff0c\u53ef\u80fd\u4f1a\u6709\u5c11\u91cf\u8bef\u5dee\u3002 provider\u7aef\u7684\u6d41\u91cf\u63a7\u5236\u662f\u4e1a\u52a1\u5c42\u9762\u7684\u529f\u80fd\uff0c\u4e0d\u662f\u5b89\u5168\u610f\u4e49\u4e0a\u7684\u6d41\u91cf\u63a7\u5236\uff0c\u5982\u9700\u9632\u6b62DDoS\u653b\u51fb\uff0c\u9700\u8981\u7ed3\u5408\u5176\u4ed6\u7684\u4e00\u7cfb\u5217\u63aa\u65bd\u3002 \u6d41\u91cf\u63a7\u5236\u662f\u5fae\u670d\u52a1\u7ea7\u7684\uff0c\u4e0d\u662f\u5b9e\u4f8b\u7ea7\u7684\u3002\u4f8b\u5982\u4e00\u4e2aconsumer\u670d\u52a1\u6709\u4e09\u4e2a\u5b9e\u4f8b\uff0c\u5f53\u5bf9\u5b83\u4eec\u4f9d\u8d56\u7684provider\u5b9e\u4f8b\u914d\u7f6e\u9650\u6d41\u7b56\u7565\u540e\uff0cprovider\u4e0d\u4f1a\u533a\u5206consumer\u7684\u8bf7\u6c42\u5177\u4f53\u662f\u7531\u54ea\u4e2a\u5b9e\u4f8b\u53d1\u51fa\u7684\uff0c\u800c\u662f\u6c47\u603b\u6210\u5fae\u670d\u52a1\u7ea7\u7684\u7edf\u8ba1\u6570\u636e\u8fdb\u884c\u9650\u6d41\u5224\u65ad\u3002","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"build-provider/configuration/ratelimite-strategy/#_3","text":"\u9650\u6d41\u7b56\u7565\u914d\u7f6e\u5728microservice.yaml\u6587\u4ef6\u4e2d\uff0c\u76f8\u5173\u914d\u7f6e\u9879\u89c1\u8868 QPS\u6d41\u63a7\u914d\u7f6e\u9879\u8bf4\u660e \u3002\u8981\u5f00\u542f\u670d\u52a1\u63d0\u4f9b\u8005\u7aef\u7684\u9650\u6d41\u7b56\u7565\uff0c\u8fd8\u9700\u8981\u5728\u5904\u7406\u94fe\u4e2d\u914d\u7f6e\u670d\u52a1\u7aef\u9650\u6d41handler\uff0c\u5e76\u6dfb\u52a0pom\u4f9d\u8d56\u3002 microservice.yaml\u914d\u7f6e\u793a\u4f8b\u5982\u4e0b\uff1a yaml servicecomb: handler: chain: Provider: default: qps-flowcontrol-provider \u6dfb\u52a0handler-flowcontrol-qps\u7684pom\u4f9d\u8d56\uff1a xml dependency groupId org.apache.servicecomb /groupId artifactId handler-flowcontrol-qps /artifactId version 1.0.0.B003 /version /dependency QPS\u6d41\u63a7\u914d\u7f6e\u9879\u8bf4\u660e \u914d\u7f6e\u9879 \u9ed8\u8ba4\u503c \u53d6\u503c\u8303\u56f4 \u662f\u5426\u5fc5\u9009 \u542b\u4e49 \u6ce8\u610f servicecomb.flowcontrol.Provider.qps.enabled true true/false \u5426 \u662f\u5426\u542f\u7528Provider\u6d41\u63a7 - servicecomb.flowcontrol.Provider.qps.limit.[ServiceName].[Schema].[operation] 2147483647\uff08max int\uff09 (0,2147483647]\uff0c\u6574\u5f62 \u5426 \u6bcf\u79d2\u949f\u5141\u8bb8\u7684\u8bf7\u6c42\u6570 \u652f\u6301microservice/schema/operation\u4e09\u4e2a\u7ea7\u522b\u7684\u914d\u7f6e\uff0c\u540e\u8005\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u524d\u8005 servicecomb.flowcontrol.Provider.qps.global.limit 2147483647\uff08max int\uff09 (0,2147483647]\uff0c\u6574\u5f62 \u5426 provider\u63a5\u53d7\u8bf7\u6c42\u6d41\u91cf\u7684\u5168\u5c40\u914d\u7f6e \u6ca1\u6709\u5177\u4f53\u7684\u6d41\u63a7\u914d\u7f6e\u65f6\uff0c\u6b64\u914d\u7f6e\u751f\u6548 \u6ce8\u610f\uff1a provider\u7aef\u9650\u6d41\u7b56\u7565\u914d\u7f6e\u4e2d\u7684 ServiceName \u6307\u7684\u662f\u8c03\u7528\u8be5provider\u7684consumer\uff0c\u800c schema \u3001 operation \u6307\u7684\u662fprovider\u81ea\u8eab\u7684\u3002\u5373provider\u7aef\u9650\u6d41\u914d\u7f6e\u7684\u542b\u4e49\u662f\uff0c\u9650\u5236\u6307\u5b9aconsumer\u8c03\u7528\u672cprovider\u7684\u67d0\u4e2aschema\u3001operation\u7684\u6d41\u91cf\u3002","title":"\u914d\u7f6e\u8bf4\u660e"},{"location":"build-provider/definition/heartbeats/","text":"\u573a\u666f\u63cf\u8ff0 \u5f53\u5fae\u670d\u52a1\u5b9e\u4f8b\u6ce8\u518c\u5230\u670d\u52a1\u4e2d\u5fc3\u540e\uff0c\u5fae\u670d\u52a1\u9700\u8981\u5b9a\u65f6\u5411\u670d\u52a1\u4e2d\u5fc3\u53d1\u9001\u5fc3\u8df3\u3002\u82e5\u670d\u52a1\u4e2d\u5fc3\u5728\u4e00\u5b9a\u65f6\u95f4\u5185\u6ca1\u6709\u6536\u5230\u5fc3\u8df3\u4fe1\u606f\uff0c\u5219\u4f1a\u6ce8\u9500\u6b64\u5b9e\u4f8b\u3002 \u6d89\u53caAPI org.apache.servicecomb.serviceregistry.client.ServiceRegistryClient \uff1a\u670d\u52a1\u4e2d\u5fc3\u5ba2\u6237\u7aef \u914d\u7f6e\u8bf4\u660e ServiceRegistryClient \u63d0\u4f9b\u4e86\u53d1\u9001\u5fc3\u8df3\u7684\u65b9\u6cd5 heartbeat \uff0c\u7528\u6237\u76f4\u63a5\u8c03\u7528\u5373\u53ef\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a public static void main(String[] args) throws Exception { // \u9996\u5148\u9700\u8981\u6ce8\u518c\u5fae\u670d\u52a1\u548c\u5b9e\u4f8b\u2026\u2026 // \u53d1\u9001\u5fc3\u8df3\uff0c\u4e0d\u7136\u5b9e\u4f8b\u4f1a\u6d88\u5931 while (true) { System.out.println( heartbeat sended: + client.heartbeat(service2.getServiceId(), instance.getInstanceId())); Thread.sleep(3000); } }","title":"Heartbeats"},{"location":"build-provider/definition/heartbeats/#_1","text":"\u5f53\u5fae\u670d\u52a1\u5b9e\u4f8b\u6ce8\u518c\u5230\u670d\u52a1\u4e2d\u5fc3\u540e\uff0c\u5fae\u670d\u52a1\u9700\u8981\u5b9a\u65f6\u5411\u670d\u52a1\u4e2d\u5fc3\u53d1\u9001\u5fc3\u8df3\u3002\u82e5\u670d\u52a1\u4e2d\u5fc3\u5728\u4e00\u5b9a\u65f6\u95f4\u5185\u6ca1\u6709\u6536\u5230\u5fc3\u8df3\u4fe1\u606f\uff0c\u5219\u4f1a\u6ce8\u9500\u6b64\u5b9e\u4f8b\u3002","title":"\u573a\u666f\u63cf\u8ff0"},{"location":"build-provider/definition/heartbeats/#api","text":"org.apache.servicecomb.serviceregistry.client.ServiceRegistryClient \uff1a\u670d\u52a1\u4e2d\u5fc3\u5ba2\u6237\u7aef","title":"\u6d89\u53caAPI"},{"location":"build-provider/definition/heartbeats/#_2","text":"ServiceRegistryClient \u63d0\u4f9b\u4e86\u53d1\u9001\u5fc3\u8df3\u7684\u65b9\u6cd5 heartbeat \uff0c\u7528\u6237\u76f4\u63a5\u8c03\u7528\u5373\u53ef\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a public static void main(String[] args) throws Exception { // \u9996\u5148\u9700\u8981\u6ce8\u518c\u5fae\u670d\u52a1\u548c\u5b9e\u4f8b\u2026\u2026 // \u53d1\u9001\u5fc3\u8df3\uff0c\u4e0d\u7136\u5b9e\u4f8b\u4f1a\u6d88\u5931 while (true) { System.out.println( heartbeat sended: + client.heartbeat(service2.getServiceId(), instance.getInstanceId())); Thread.sleep(3000); } }","title":"\u914d\u7f6e\u8bf4\u660e"},{"location":"build-provider/definition/isolate-relationship/","text":"\u573a\u666f\u63cf\u8ff0 \u8fdb\u884c\u670d\u52a1\u53d1\u73b0\u7684\u65f6\u5019\uff0c\u5f00\u53d1\u8005\u9700\u8981\u4e86\u89e3\u672c\u5fae\u670d\u52a1\u80fd\u591f\u53d1\u73b0\u90a3\u4e9b\u5176\u4ed6\u670d\u52a1\u7684\u5b9e\u4f8b\u3002ServiceComb\u63d0\u4f9b\u4e86\u5206\u5c42\u6b21\u7684\u5b9e\u4f8b\u9694\u79bb\u3002 \u5fae\u670d\u52a1\u5b9e\u4f8b\u5206\u5c42\u7ba1\u7406 \u8981\u4e86\u89e3\u5b9e\u4f8b\u95f4\u7684\u9694\u79bb\u5c42\u6b21\uff0c\u9996\u5148\u9700\u8981\u4e86\u89e3ServiceComb\u5b9a\u4e49\u7684\u4e00\u4e2a\u4f53\u7cfb\u5b8c\u5907\u7684\u5fae\u670d\u52a1\u7cfb\u7edf\u7ed3\u6784\uff1a \u5728\u5fae\u670d\u52a1\u7cfb\u7edf\u7ed3\u6784\u4e2d\uff0c\u9876\u5c42\u662f\u201c\u9879\u76ee\u201d\uff0c\u5728\u9879\u76ee\u4e0b\u5206\u4e3a\u591a\u4e2a\u79df\u6237\uff0c\u79df\u6237\u4e2d\u5305\u542b\u591a\u4e2a\u5e94\u7528\uff0c\u800c\u6bcf\u4e2a\u5e94\u7528\u7531\u5305\u542b\u591a\u4e2a\u73af\u5883\uff0c\u5373\u6d4b\u8bd5\u548c\u751f\u4ea7\u73af\u5883\u53ef\u4ee5\u5206\u5f00\u3002\u5728\u67d0\u4e2a\u7279\u5b9a\u5e94\u7528\u7684\u7279\u5b9a\u73af\u5883\u4e2d\uff0c\u5305\u542b\u591a\u4e2a\u5fae\u670d\u52a1\uff0c\u800c\u4e00\u4e2a\u5fae\u670d\u52a1\u53c8\u53ef\u4ee5\u540c\u65f6\u5b58\u5728\u591a\u4e2a\u7248\u672c\u3002\u4ee5\u4e0a\uff0c\u662f\u6240\u6709\u9759\u6001\u5143\u6570\u636e\u7684\u8303\u7574\uff0c\u67d0\u4e2a\u7279\u5b9a\u670d\u52a1\u7684\u7279\u5b9a\u7248\u672c\u5219\u5305\u542b\u591a\u4e2a\u5728\u8fd0\u884c\u65f6\u6ce8\u518c\u4e0a\u6765\u7684\u5fae\u670d\u52a1\u5b9e\u4f8b\uff0c\u56e0\u4e3a\u670d\u52a1\u5b9e\u4f8b\u7684\u4fe1\u606f\u5728\u8fd0\u884c\u65f6\u968f\u7740\u7cfb\u7edf\u7684\u4f38\u7f29\u3001\u6545\u969c\u7b49\u539f\u56e0\u662f\u52a8\u6001\u53d8\u5316\u7684\uff0c\u6240\u4ee5\u670d\u52a1\u5b9e\u4f8b\u7684\u8def\u7531\u4fe1\u606f\u53c8\u4e3a\u52a8\u6001\u6570\u636e\u3002\u901a\u8fc7\u5206\u5c42\u7ba1\u7406\u5fae\u670d\u52a1\u7684\u8fd9\u4e9b\u6570\u636e\uff0c\u4e5f\u5c31\u81ea\u7136\u800c\u7136\u7684\u5b9e\u73b0\u4e86\u5b9e\u4f8b\u4e4b\u95f4\u7684\u903b\u8f91\u9694\u79bb\u3002 \u9694\u79bb\u5c42\u6b21\u8bf4\u660e ServiceComb\u652f\u6301\u81ea\u5b9a\u4e49\u5206\u5c42\u914d\u7f6e\uff0c\u6ee1\u8db3\u7528\u6237\u7684\u5b9e\u4f8b\u5206\u5c42\u7ba1\u7406\u9700\u6c42\uff0c\u4ee5\u4e0b\u662f\u5177\u4f53\u914d\u7f6e\u8bf4\u660e\u3002 \u5e94\u7528ID \u901a\u8fc7APPLICATIOIN_ID\u6765\u5b9a\u4e49\uff0c\u7f3a\u7701\u503c\u4e3adefault\u3002\u5fae\u670d\u52a1\u5728\u53d1\u73b0\u5b9e\u4f8b\u7684\u65f6\u5019\uff0c\u7f3a\u7701\u53ea\u80fd\u591f\u88ab\u76f8\u540cAPPLICATIOIN_ID\u4e0b\u7684\u6d88\u8d39\u8005\u53d1\u73b0\u3002 Domain\u540d\u79f0 \u901a\u8fc7cse.config.client.domainName\u6765\u5b9a\u4e49\uff0c\u7f3a\u7701\u503c\u4e3adefault\u3002\u4f5c\u4e3a\u5fae\u670d\u52a1\u63d0\u4f9b\u8005\uff0c\u7528\u4e8e\u8868\u660e\u81ea\u8eab\u6240\u5c5e\u79df\u6237\u4fe1\u606f\u3002\u5fae\u670d\u52a1\u5728\u53d1\u73b0\u5b9e\u4f8b\u7684\u65f6\u5019\uff0c\u53ea\u80fd\u88ab\u76f8\u540c\u79df\u6237\u4e0b\u7684\u6d88\u8d39\u8005\u53d1\u73b0\u3002 \u6570\u636e\u4e2d\u5fc3\u4fe1\u606f \u6570\u636e\u4e2d\u5fc3\u5305\u62ec3\u4e2a\u5c5e\u6027\uff1acse.datacenter.name\uff0c cse.datacenter.region, cse.datacenter.availableZone\u3002\u6570\u636e\u4e2d\u5fc3\u4fe1\u606f\u4e0d\u63d0\u4f9b\u9694\u79bb\u80fd\u529b\uff0c\u5fae\u670d\u52a1\u53ef\u4ee5\u53d1\u73b0\u5176\u4ed6\u6570\u636e\u4e2d\u5fc3\u7684\u5b9e\u4f8b\u3002\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u542f\u7528\u5b9e\u4f8b\u4eb2\u548c\u6027\uff0c\u6765\u4f18\u5148\u5f80\u6307\u5b9a\u7684\u533a\u57df\u6216\u8005Zone\u53d1\u6d88\u606f\uff1a cse: loadbalance: serverListFilters: zoneaware serverListFilter: zoneaware: className: org.apache.servicecomb.loadbalance.filter.ZoneAwareServerListFilterExt \u8fd9\u6837\u914d\u7f6e\u540e\uff0c\u5ba2\u6237\u7aef\u5728\u8def\u7531\u7684\u65f6\u5019\uff0c\u4f1a\u4f18\u5148\u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230zone/region\u90fd\u76f8\u540c\u7684\u5b9e\u4f8b\uff0c\u7136\u540e\u662fregion\u76f8\u540c\uff0c\u4f46zone\u4e0d\u76f8\u540c\u7684\u5b9e\u4f8b\uff0c\u90fd\u4e0d\u76f8\u540c\u7684\u65f6\u5019\uff0c\u5219\u6309\u7167\u8def\u7531\u89c4\u5219\u9009\u62e9\u4e00\u4e2a\u3002\u4eb2\u548c\u6027\u4e0d\u662f\u903b\u8f91\u9694\u79bb\uff0c\u53ea\u8981\u5b9e\u4f8b\u4e4b\u95f4\u7f51\u7edc\u662f\u8054\u901a\u7684\uff0c\u90a3\u4e48\u90fd\u6709\u53ef\u80fd\u8bbf\u95ee\u5230\uff1b\u5982\u679c\u7f51\u7edc\u4e0d\u901a\uff0c\u5219\u4f1a\u8bbf\u95ee\u5931\u8d25\u3002 \u73af\u5883\u4fe1\u606f \u5728yaml\u6587\u4ef6\u91cc\u901a\u8fc7service_description.environment\u6765\u914d\u7f6e\uff0c\u540c\u65f6\u652f\u6301\u901a\u8fc7\u73af\u5883\u53d8\u91cfSERVICECOMB_ENV\u914d\u7f6e\uff0c\u4ec5\u652f\u6301\u4ee5\u4e0b\u679a\u4e3e\u503c development,testing,acceptance,production\uff0c\u7f3a\u7701\u503c\u4e3a\"\"(\u7a7a)\u3002\u5fae\u670d\u52a1\u5728\u53d1\u73b0\u5b9e\u4f8b\u7684\u65f6\u5019\uff0c\u7f3a\u7701\u53ea\u80fd\u591f\u88ab\u76f8\u540cenvironment\u4e0b\u7684\u6d88\u8d39\u8005\u53d1\u73b0\u3002 service_description: environment: production \u4e0e\u534e\u4e3a\u516c\u6709\u4e91\u6982\u5ff5\u7684\u5bf9\u5e94\u5173\u7cfb \u534e\u4e3a\u516c\u6709\u4e91\u6709\u7c7b\u4f3c\u7684\u6982\u5ff5\uff0c\u5e94\u7528\u3001\u79df\u6237\u3001Project\u3001Cluster\u7b49\uff0c\u5728\u5b9e\u9645\u5e94\u7528\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u5206\u522b\u5bf9\u5e94\u5230ServiceComb\u7684\u5e94\u7528\u3001\u79df\u6237\u3001Domain\u3001Zone\u7b49\u4fe1\u606f\u3002\u6bd4\u5982\u5728\u516c\u6709\u4e91\u4e0a\u5982\u679cCluster\u5171\u4eabProject\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u901a\u8fc7zone\u6765\u5bf9\u5e94Cluster\uff0c\u5b9e\u73b0\u96c6\u7fa4\u4e4b\u95f4\u7684\u4eb2\u548c\u6027\u8bbf\u95ee\u3002","title":"Isolate relationship"},{"location":"build-provider/definition/isolate-relationship/#_1","text":"\u8fdb\u884c\u670d\u52a1\u53d1\u73b0\u7684\u65f6\u5019\uff0c\u5f00\u53d1\u8005\u9700\u8981\u4e86\u89e3\u672c\u5fae\u670d\u52a1\u80fd\u591f\u53d1\u73b0\u90a3\u4e9b\u5176\u4ed6\u670d\u52a1\u7684\u5b9e\u4f8b\u3002ServiceComb\u63d0\u4f9b\u4e86\u5206\u5c42\u6b21\u7684\u5b9e\u4f8b\u9694\u79bb\u3002","title":"\u573a\u666f\u63cf\u8ff0"},{"location":"build-provider/definition/isolate-relationship/#_2","text":"\u8981\u4e86\u89e3\u5b9e\u4f8b\u95f4\u7684\u9694\u79bb\u5c42\u6b21\uff0c\u9996\u5148\u9700\u8981\u4e86\u89e3ServiceComb\u5b9a\u4e49\u7684\u4e00\u4e2a\u4f53\u7cfb\u5b8c\u5907\u7684\u5fae\u670d\u52a1\u7cfb\u7edf\u7ed3\u6784\uff1a \u5728\u5fae\u670d\u52a1\u7cfb\u7edf\u7ed3\u6784\u4e2d\uff0c\u9876\u5c42\u662f\u201c\u9879\u76ee\u201d\uff0c\u5728\u9879\u76ee\u4e0b\u5206\u4e3a\u591a\u4e2a\u79df\u6237\uff0c\u79df\u6237\u4e2d\u5305\u542b\u591a\u4e2a\u5e94\u7528\uff0c\u800c\u6bcf\u4e2a\u5e94\u7528\u7531\u5305\u542b\u591a\u4e2a\u73af\u5883\uff0c\u5373\u6d4b\u8bd5\u548c\u751f\u4ea7\u73af\u5883\u53ef\u4ee5\u5206\u5f00\u3002\u5728\u67d0\u4e2a\u7279\u5b9a\u5e94\u7528\u7684\u7279\u5b9a\u73af\u5883\u4e2d\uff0c\u5305\u542b\u591a\u4e2a\u5fae\u670d\u52a1\uff0c\u800c\u4e00\u4e2a\u5fae\u670d\u52a1\u53c8\u53ef\u4ee5\u540c\u65f6\u5b58\u5728\u591a\u4e2a\u7248\u672c\u3002\u4ee5\u4e0a\uff0c\u662f\u6240\u6709\u9759\u6001\u5143\u6570\u636e\u7684\u8303\u7574\uff0c\u67d0\u4e2a\u7279\u5b9a\u670d\u52a1\u7684\u7279\u5b9a\u7248\u672c\u5219\u5305\u542b\u591a\u4e2a\u5728\u8fd0\u884c\u65f6\u6ce8\u518c\u4e0a\u6765\u7684\u5fae\u670d\u52a1\u5b9e\u4f8b\uff0c\u56e0\u4e3a\u670d\u52a1\u5b9e\u4f8b\u7684\u4fe1\u606f\u5728\u8fd0\u884c\u65f6\u968f\u7740\u7cfb\u7edf\u7684\u4f38\u7f29\u3001\u6545\u969c\u7b49\u539f\u56e0\u662f\u52a8\u6001\u53d8\u5316\u7684\uff0c\u6240\u4ee5\u670d\u52a1\u5b9e\u4f8b\u7684\u8def\u7531\u4fe1\u606f\u53c8\u4e3a\u52a8\u6001\u6570\u636e\u3002\u901a\u8fc7\u5206\u5c42\u7ba1\u7406\u5fae\u670d\u52a1\u7684\u8fd9\u4e9b\u6570\u636e\uff0c\u4e5f\u5c31\u81ea\u7136\u800c\u7136\u7684\u5b9e\u73b0\u4e86\u5b9e\u4f8b\u4e4b\u95f4\u7684\u903b\u8f91\u9694\u79bb\u3002","title":"\u5fae\u670d\u52a1\u5b9e\u4f8b\u5206\u5c42\u7ba1\u7406"},{"location":"build-provider/definition/isolate-relationship/#_3","text":"ServiceComb\u652f\u6301\u81ea\u5b9a\u4e49\u5206\u5c42\u914d\u7f6e\uff0c\u6ee1\u8db3\u7528\u6237\u7684\u5b9e\u4f8b\u5206\u5c42\u7ba1\u7406\u9700\u6c42\uff0c\u4ee5\u4e0b\u662f\u5177\u4f53\u914d\u7f6e\u8bf4\u660e\u3002 \u5e94\u7528ID \u901a\u8fc7APPLICATIOIN_ID\u6765\u5b9a\u4e49\uff0c\u7f3a\u7701\u503c\u4e3adefault\u3002\u5fae\u670d\u52a1\u5728\u53d1\u73b0\u5b9e\u4f8b\u7684\u65f6\u5019\uff0c\u7f3a\u7701\u53ea\u80fd\u591f\u88ab\u76f8\u540cAPPLICATIOIN_ID\u4e0b\u7684\u6d88\u8d39\u8005\u53d1\u73b0\u3002 Domain\u540d\u79f0 \u901a\u8fc7cse.config.client.domainName\u6765\u5b9a\u4e49\uff0c\u7f3a\u7701\u503c\u4e3adefault\u3002\u4f5c\u4e3a\u5fae\u670d\u52a1\u63d0\u4f9b\u8005\uff0c\u7528\u4e8e\u8868\u660e\u81ea\u8eab\u6240\u5c5e\u79df\u6237\u4fe1\u606f\u3002\u5fae\u670d\u52a1\u5728\u53d1\u73b0\u5b9e\u4f8b\u7684\u65f6\u5019\uff0c\u53ea\u80fd\u88ab\u76f8\u540c\u79df\u6237\u4e0b\u7684\u6d88\u8d39\u8005\u53d1\u73b0\u3002 \u6570\u636e\u4e2d\u5fc3\u4fe1\u606f \u6570\u636e\u4e2d\u5fc3\u5305\u62ec3\u4e2a\u5c5e\u6027\uff1acse.datacenter.name\uff0c cse.datacenter.region, cse.datacenter.availableZone\u3002\u6570\u636e\u4e2d\u5fc3\u4fe1\u606f\u4e0d\u63d0\u4f9b\u9694\u79bb\u80fd\u529b\uff0c\u5fae\u670d\u52a1\u53ef\u4ee5\u53d1\u73b0\u5176\u4ed6\u6570\u636e\u4e2d\u5fc3\u7684\u5b9e\u4f8b\u3002\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u542f\u7528\u5b9e\u4f8b\u4eb2\u548c\u6027\uff0c\u6765\u4f18\u5148\u5f80\u6307\u5b9a\u7684\u533a\u57df\u6216\u8005Zone\u53d1\u6d88\u606f\uff1a cse: loadbalance: serverListFilters: zoneaware serverListFilter: zoneaware: className: org.apache.servicecomb.loadbalance.filter.ZoneAwareServerListFilterExt \u8fd9\u6837\u914d\u7f6e\u540e\uff0c\u5ba2\u6237\u7aef\u5728\u8def\u7531\u7684\u65f6\u5019\uff0c\u4f1a\u4f18\u5148\u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230zone/region\u90fd\u76f8\u540c\u7684\u5b9e\u4f8b\uff0c\u7136\u540e\u662fregion\u76f8\u540c\uff0c\u4f46zone\u4e0d\u76f8\u540c\u7684\u5b9e\u4f8b\uff0c\u90fd\u4e0d\u76f8\u540c\u7684\u65f6\u5019\uff0c\u5219\u6309\u7167\u8def\u7531\u89c4\u5219\u9009\u62e9\u4e00\u4e2a\u3002\u4eb2\u548c\u6027\u4e0d\u662f\u903b\u8f91\u9694\u79bb\uff0c\u53ea\u8981\u5b9e\u4f8b\u4e4b\u95f4\u7f51\u7edc\u662f\u8054\u901a\u7684\uff0c\u90a3\u4e48\u90fd\u6709\u53ef\u80fd\u8bbf\u95ee\u5230\uff1b\u5982\u679c\u7f51\u7edc\u4e0d\u901a\uff0c\u5219\u4f1a\u8bbf\u95ee\u5931\u8d25\u3002 \u73af\u5883\u4fe1\u606f \u5728yaml\u6587\u4ef6\u91cc\u901a\u8fc7service_description.environment\u6765\u914d\u7f6e\uff0c\u540c\u65f6\u652f\u6301\u901a\u8fc7\u73af\u5883\u53d8\u91cfSERVICECOMB_ENV\u914d\u7f6e\uff0c\u4ec5\u652f\u6301\u4ee5\u4e0b\u679a\u4e3e\u503c development,testing,acceptance,production\uff0c\u7f3a\u7701\u503c\u4e3a\"\"(\u7a7a)\u3002\u5fae\u670d\u52a1\u5728\u53d1\u73b0\u5b9e\u4f8b\u7684\u65f6\u5019\uff0c\u7f3a\u7701\u53ea\u80fd\u591f\u88ab\u76f8\u540cenvironment\u4e0b\u7684\u6d88\u8d39\u8005\u53d1\u73b0\u3002 service_description: environment: production","title":"\u9694\u79bb\u5c42\u6b21\u8bf4\u660e"},{"location":"build-provider/definition/isolate-relationship/#_4","text":"\u534e\u4e3a\u516c\u6709\u4e91\u6709\u7c7b\u4f3c\u7684\u6982\u5ff5\uff0c\u5e94\u7528\u3001\u79df\u6237\u3001Project\u3001Cluster\u7b49\uff0c\u5728\u5b9e\u9645\u5e94\u7528\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u5206\u522b\u5bf9\u5e94\u5230ServiceComb\u7684\u5e94\u7528\u3001\u79df\u6237\u3001Domain\u3001Zone\u7b49\u4fe1\u606f\u3002\u6bd4\u5982\u5728\u516c\u6709\u4e91\u4e0a\u5982\u679cCluster\u5171\u4eabProject\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u901a\u8fc7zone\u6765\u5bf9\u5e94Cluster\uff0c\u5b9e\u73b0\u96c6\u7fa4\u4e4b\u95f4\u7684\u4eb2\u548c\u6027\u8bbf\u95ee\u3002","title":"\u4e0e\u534e\u4e3a\u516c\u6709\u4e91\u6982\u5ff5\u7684\u5bf9\u5e94\u5173\u7cfb"},{"location":"build-provider/definition/service-definition/","text":"\u6982\u5ff5\u9610\u8ff0 \u670d\u52a1\u5b9a\u4e49\u4fe1\u606f\u662f\u5fae\u670d\u52a1\u7684\u8eab\u4efd\u6807\u8bc6\uff0c\u5b83\u5b9a\u4e49\u4e86\u670d\u52a1\u4ece\u5c5e\u4e8e\u54ea\u4e2a\u5e94\u7528\uff0c\u4ee5\u53ca\u540d\u5b57\u548c\u7248\u672c\u3002\u670d\u52a1\u5b9a\u4e49\u4fe1\u606f\u4e2d\u4e5f\u53ef\u4ee5\u6709\u6269\u5c55\u4fe1\u606f\uff0c\u7528\u4e8e\u5b9a\u4e49\u670d\u52a1\u7684\u5c5e\u6027\u5143\u6570\u636e\u3002 \u573a\u666f\u63cf\u8ff0 \u5f53\u7528\u6237\u5b9a\u4e49\u65b0\u7684\u5fae\u670d\u52a1\u6216\u4fee\u6539\u5fae\u670d\u52a1\u7684\u57fa\u672c\u4fe1\u606f\u65f6\uff0c\u4f1a\u6d89\u53ca\u5230\u670d\u52a1\u5b9a\u4e49\u4fe1\u606f\u7684\u521b\u5efa\u548c\u4fee\u6539\u64cd\u4f5c\u3002 \u914d\u7f6e\u8bf4\u660e \u672c\u7ae0\u8282\u4ecb\u7ecd\u6d89\u53camicroservice.yaml\u6587\u4ef6\u7684\u4ee5\u4e0b\u914d\u7f6e\u9879\uff0c\u6587\u4ef6\u5728\u9879\u76ee\u4e2d\u7684\u5b58\u653e\u8def\u5f84\u4e3asrc\\main\\resources\\microservice.yaml\u3002 \u88681-1\u914d\u7f6e\u9879\u8bf4\u660e \u914d\u7f6e\u9879 \u9ed8\u8ba4\u503c \u53d6\u503c\u8303\u56f4 \u662f\u5426\u5fc5\u9009 \u542b\u4e49 \u6ce8\u610f APPLICATION_ID - - \u662f \u5e94\u7528\u540d - service_description.name - - \u662f \u5fae\u670d\u52a1\u540d \u5e94\u786e\u4fddapp\u5185\u90e8\u552f\u4e00\u3002\u5fae\u670d\u52a1\u540d\u652f\u6301\u6570\u5b57\u3001\u5927\u5c0f\u5199\u5b57\u6bcd\u548c\"-\"\u3001\"_\"\u3001\".\"\u4e09\u4e2a\u7279\u6b8a\u5b57\u7b26\uff0c\u4f46\u662f\u4e0d\u80fd\u4ee5\u7279\u6b8a\u5b57\u7b26\u4f5c\u4e3a\u9996\u5c3e\u5b57\u7b26\uff0c\u547d\u540d\u89c4\u8303\u4e3a\uff1a^[a-zA-Z0-9]+$ ^[a-zA-Z0-9][a-zA-Z0-9_-.]*[a-zA-Z0-9]$\u3002 service_description.version - - \u662f \u5fae\u670d\u52a1\u7248\u672c\u53f7 - service_description.description - - \u5426 \u5fae\u670d\u52a1\u63cf\u8ff0 service_description.properties - - \u5426 \u5fae\u670d\u52a1\u5143\u6570\u636e\u914d\u7f6e\uff08\u901a\u8fc7microservice.yaml\u6587\u4ef6\u8fdb\u884c\u914d\u7f6e\uff09 - service_description.propertyExtendedClass - - \u5426 \u5fae\u670d\u52a1\u5143\u6570\u636e\u914d\u7f6e\uff08\u901a\u8fc7\u5b9e\u73b0\u63a5\u53e3PropertyExtended\u8fdb\u884c\u914d\u7f6e\uff09 \u63a5\u53e3\u8fd4\u56de\u7684\u914d\u7f6e\u4f1a\u8986\u76d6\u914d\u7f6e\u6587\u4ef6\u4e2dkey\u76f8\u540c\u7684\u914d\u7f6e\u3002 instance_description.properties - - \u5426 \u670d\u52a1\u5b9e\u4f8b\u5143\u6570\u636e\u914d\u7f6e\uff08\u901a\u8fc7microservice.yaml\u6587\u4ef6\u8fdb\u884c\u914d\u7f6e\uff09 instance_description.propertyExtendedClass - - \u5426 \u5fae\u670d\u52a1\u5143\u6570\u636e\u914d\u7f6e\uff08\u901a\u8fc7\u5b9e\u73b0\u63a5\u53e3PropertyExtended\u8fdb\u884c\u914d\u7f6e\uff09 \u540cservice_description.propertyExtendedClass \u8bf4\u660e\uff1a \u670d\u52a1\u7684\u5143\u6570\u636e\u4f1a\u968f\u670d\u52a1\u4e00\u540c\u6ce8\u518c\u5230\u670d\u52a1\u4e2d\u5fc3\uff0c\u5982\u9700\u4fee\u6539\uff0c\u5219\u8981\u8fde\u540c\u670d\u52a1version\u4e00\u8d77\u53d8\u66f4\u3002\u82e5\u60f3\u4fdd\u6301\u670d\u52a1version\u4e0d\u53d8\uff0c\u5219\u9700\u8981\u901a\u8fc7\u670d\u52a1\u7ba1\u7406\u4e2d\u5fc3\u7edf\u4e00\u53d8\u66f4\u5143\u6570\u636e\u3002 \u867d\u7136\u5fae\u670d\u52a1\u540d\u3001\u5951\u7ea6\u540d\u4e2d\u53ef\u4ee5\u4f7f\u7528\".\"\u5b57\u7b26\uff0c\u4f46\u662f\u4e0d\u63a8\u8350\u5728\u547d\u540d\u4e2d\u4f7f\u7528\".\"\u3002\u8fd9\u662f\u7531\u4e8eServiceComb\u4f7f\u7528\u7684\u914d\u7f6e\u6587\u4ef6\u662fyaml\u683c\u5f0f\u7684\uff0c\".\"\u7b26\u53f7\u7528\u4e8e\u5206\u5272\u914d\u7f6e\u9879\u540d\u79f0\uff0c\u5982\u679c\u5fae\u670d\u52a1\u540d\u3001\u5951\u7ea6\u540d\u4e2d\u4e5f\u5305\u542b\u4e86\".\"\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e00\u4e9b\u652f\u6301\u5fae\u670d\u52a1\u3001\u5951\u7ea6\u7ea7\u522b\u7684\u914d\u7f6e\u65e0\u6cd5\u6b63\u786e\u88ab\u8bc6\u522b\u3002 \u793a\u4f8b\u4ee3\u7801 APPLICATION_ID: helloTest # \u5e94\u7528\u540d service_description: # \u670d\u52a1\u63cf\u8ff0 name: helloServer # \u5fae\u670d\u52a1\u540d\u79f0 version: 0.0.1 # \u670d\u52a1\u7248\u672c\u53f7 properties: # \u5143\u6570\u636e key1: value1 key2: value2 description: This is a description about the microservice # \u5fae\u670d\u52a1\u63cf\u8ff0 propertyExtentedClass: org.apache.servicecomb.serviceregistry.MicroServicePropertyExtendedStub instance_description: #\u5b9e\u4f8b\u63cf\u8ff0 properties: #\u5143\u6570\u636e key3: value3 propertyExtentedClass: org.apache.servicecomb.serviceregistry.MicroServicePropertyExtendedStub","title":"Service definition"},{"location":"build-provider/definition/service-definition/#_1","text":"\u670d\u52a1\u5b9a\u4e49\u4fe1\u606f\u662f\u5fae\u670d\u52a1\u7684\u8eab\u4efd\u6807\u8bc6\uff0c\u5b83\u5b9a\u4e49\u4e86\u670d\u52a1\u4ece\u5c5e\u4e8e\u54ea\u4e2a\u5e94\u7528\uff0c\u4ee5\u53ca\u540d\u5b57\u548c\u7248\u672c\u3002\u670d\u52a1\u5b9a\u4e49\u4fe1\u606f\u4e2d\u4e5f\u53ef\u4ee5\u6709\u6269\u5c55\u4fe1\u606f\uff0c\u7528\u4e8e\u5b9a\u4e49\u670d\u52a1\u7684\u5c5e\u6027\u5143\u6570\u636e\u3002","title":"\u6982\u5ff5\u9610\u8ff0"},{"location":"build-provider/definition/service-definition/#_2","text":"\u5f53\u7528\u6237\u5b9a\u4e49\u65b0\u7684\u5fae\u670d\u52a1\u6216\u4fee\u6539\u5fae\u670d\u52a1\u7684\u57fa\u672c\u4fe1\u606f\u65f6\uff0c\u4f1a\u6d89\u53ca\u5230\u670d\u52a1\u5b9a\u4e49\u4fe1\u606f\u7684\u521b\u5efa\u548c\u4fee\u6539\u64cd\u4f5c\u3002","title":"\u573a\u666f\u63cf\u8ff0"},{"location":"build-provider/definition/service-definition/#_3","text":"\u672c\u7ae0\u8282\u4ecb\u7ecd\u6d89\u53camicroservice.yaml\u6587\u4ef6\u7684\u4ee5\u4e0b\u914d\u7f6e\u9879\uff0c\u6587\u4ef6\u5728\u9879\u76ee\u4e2d\u7684\u5b58\u653e\u8def\u5f84\u4e3asrc\\main\\resources\\microservice.yaml\u3002 \u88681-1\u914d\u7f6e\u9879\u8bf4\u660e \u914d\u7f6e\u9879 \u9ed8\u8ba4\u503c \u53d6\u503c\u8303\u56f4 \u662f\u5426\u5fc5\u9009 \u542b\u4e49 \u6ce8\u610f APPLICATION_ID - - \u662f \u5e94\u7528\u540d - service_description.name - - \u662f \u5fae\u670d\u52a1\u540d \u5e94\u786e\u4fddapp\u5185\u90e8\u552f\u4e00\u3002\u5fae\u670d\u52a1\u540d\u652f\u6301\u6570\u5b57\u3001\u5927\u5c0f\u5199\u5b57\u6bcd\u548c\"-\"\u3001\"_\"\u3001\".\"\u4e09\u4e2a\u7279\u6b8a\u5b57\u7b26\uff0c\u4f46\u662f\u4e0d\u80fd\u4ee5\u7279\u6b8a\u5b57\u7b26\u4f5c\u4e3a\u9996\u5c3e\u5b57\u7b26\uff0c\u547d\u540d\u89c4\u8303\u4e3a\uff1a^[a-zA-Z0-9]+$ ^[a-zA-Z0-9][a-zA-Z0-9_-.]*[a-zA-Z0-9]$\u3002 service_description.version - - \u662f \u5fae\u670d\u52a1\u7248\u672c\u53f7 - service_description.description - - \u5426 \u5fae\u670d\u52a1\u63cf\u8ff0 service_description.properties - - \u5426 \u5fae\u670d\u52a1\u5143\u6570\u636e\u914d\u7f6e\uff08\u901a\u8fc7microservice.yaml\u6587\u4ef6\u8fdb\u884c\u914d\u7f6e\uff09 - service_description.propertyExtendedClass - - \u5426 \u5fae\u670d\u52a1\u5143\u6570\u636e\u914d\u7f6e\uff08\u901a\u8fc7\u5b9e\u73b0\u63a5\u53e3PropertyExtended\u8fdb\u884c\u914d\u7f6e\uff09 \u63a5\u53e3\u8fd4\u56de\u7684\u914d\u7f6e\u4f1a\u8986\u76d6\u914d\u7f6e\u6587\u4ef6\u4e2dkey\u76f8\u540c\u7684\u914d\u7f6e\u3002 instance_description.properties - - \u5426 \u670d\u52a1\u5b9e\u4f8b\u5143\u6570\u636e\u914d\u7f6e\uff08\u901a\u8fc7microservice.yaml\u6587\u4ef6\u8fdb\u884c\u914d\u7f6e\uff09 instance_description.propertyExtendedClass - - \u5426 \u5fae\u670d\u52a1\u5143\u6570\u636e\u914d\u7f6e\uff08\u901a\u8fc7\u5b9e\u73b0\u63a5\u53e3PropertyExtended\u8fdb\u884c\u914d\u7f6e\uff09 \u540cservice_description.propertyExtendedClass \u8bf4\u660e\uff1a \u670d\u52a1\u7684\u5143\u6570\u636e\u4f1a\u968f\u670d\u52a1\u4e00\u540c\u6ce8\u518c\u5230\u670d\u52a1\u4e2d\u5fc3\uff0c\u5982\u9700\u4fee\u6539\uff0c\u5219\u8981\u8fde\u540c\u670d\u52a1version\u4e00\u8d77\u53d8\u66f4\u3002\u82e5\u60f3\u4fdd\u6301\u670d\u52a1version\u4e0d\u53d8\uff0c\u5219\u9700\u8981\u901a\u8fc7\u670d\u52a1\u7ba1\u7406\u4e2d\u5fc3\u7edf\u4e00\u53d8\u66f4\u5143\u6570\u636e\u3002 \u867d\u7136\u5fae\u670d\u52a1\u540d\u3001\u5951\u7ea6\u540d\u4e2d\u53ef\u4ee5\u4f7f\u7528\".\"\u5b57\u7b26\uff0c\u4f46\u662f\u4e0d\u63a8\u8350\u5728\u547d\u540d\u4e2d\u4f7f\u7528\".\"\u3002\u8fd9\u662f\u7531\u4e8eServiceComb\u4f7f\u7528\u7684\u914d\u7f6e\u6587\u4ef6\u662fyaml\u683c\u5f0f\u7684\uff0c\".\"\u7b26\u53f7\u7528\u4e8e\u5206\u5272\u914d\u7f6e\u9879\u540d\u79f0\uff0c\u5982\u679c\u5fae\u670d\u52a1\u540d\u3001\u5951\u7ea6\u540d\u4e2d\u4e5f\u5305\u542b\u4e86\".\"\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e00\u4e9b\u652f\u6301\u5fae\u670d\u52a1\u3001\u5951\u7ea6\u7ea7\u522b\u7684\u914d\u7f6e\u65e0\u6cd5\u6b63\u786e\u88ab\u8bc6\u522b\u3002","title":"\u914d\u7f6e\u8bf4\u660e"},{"location":"build-provider/definition/service-definition/#_4","text":"APPLICATION_ID: helloTest # \u5e94\u7528\u540d service_description: # \u670d\u52a1\u63cf\u8ff0 name: helloServer # \u5fae\u670d\u52a1\u540d\u79f0 version: 0.0.1 # \u670d\u52a1\u7248\u672c\u53f7 properties: # \u5143\u6570\u636e key1: value1 key2: value2 description: This is a description about the microservice # \u5fae\u670d\u52a1\u63cf\u8ff0 propertyExtentedClass: org.apache.servicecomb.serviceregistry.MicroServicePropertyExtendedStub instance_description: #\u5b9e\u4f8b\u63cf\u8ff0 properties: #\u5143\u6570\u636e key3: value3 propertyExtentedClass: org.apache.servicecomb.serviceregistry.MicroServicePropertyExtendedStub","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"catalog/build-consumer/","text":"\u4f7f\u7528RestTemplate\u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005 RestTemplate\u662fSpring\u63d0\u4f9b\u7684RESTful\u8bbf\u95ee\u63a5\u53e3\uff0cServiceComb\u63d0\u4f9b\u8be5\u63a5\u53e3\u7684\u5b9e\u73b0\u7c7b\u7528\u4e8e\u670d\u52a1\u7684\u8c03\u7528\u3002 \u4f7f\u7528AsynRestTemplate\u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005 AsyncRestTemplate \u5f00\u53d1\u65b9\u5f0f\u5141\u8bb8\u7528\u6237\u5f02\u6b65\u7684\u8fdb\u884c\u670d\u52a1\u8c03\u7528\u3002\u5177\u4f53\u7684\u4e1a\u52a1\u6d41\u7a0b\u548c RestTemplate \u7c7b\u4f3c\uff0c\u53ea\u662f\u8fd9\u91cc\u4ee5\u5f02\u6b65\u7684\u5f62\u5f0f\u8fdb\u884c\u670d\u52a1\u7684\u8c03\u7528\u3002 \u4f7f\u7528\u900f\u660eRPC\u65b9\u5f0f\u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005 \u900f\u660eRPC\u5f00\u53d1\u6a21\u5f0f\u5141\u8bb8\u7528\u6237\u901a\u8fc7\u7b80\u5355\u7684java interface\u50cf\u672c\u5730\u8c03\u7528\u4e00\u6837\u8fdb\u884c\u670d\u52a1\u8c03\u7528\u3002 \u4f7f\u7528\u670d\u52a1\u5951\u7ea6 \u5f53\u670d\u52a1\u6d88\u8d39\u8005\u8c03\u7528\u670d\u52a1\u63d0\u4f9b\u8005\u7684\u670d\u52a1\u65f6\uff0c\u9700\u8981\u83b7\u53d6\u670d\u52a1\u5951\u7ea6\u3002\u6d88\u8d39\u8005\u6709\u4e24\u79cd\u65b9\u5f0f\u83b7\u53d6\u63d0\u4f9b\u8005\u7684\u670d\u52a1\u5951\u7ea6\uff0c\u4e00\u79cd\u662f\u4ece\u670d\u52a1\u7684\u63d0\u4f9b\u65b9\u79bb\u7ebf\u83b7\u53d6\u5951\u7ea6\u6587\u4ef6\uff0c\u624b\u5de5\u914d\u7f6e\u5230\u9879\u76ee\u4e2d\uff1b\u53e6\u4e00\u79cd\u662f\u4ece\u670d\u52a1\u4e2d\u5fc3\u81ea\u52a8\u4e0b\u8f7d\u5951\u7ea6\u3002 \u8c03\u7528\u63a7\u5236 \u5b9e\u4f8b\u7ea7\u6545\u969c\u9694\u79bb \u5b9e\u4f8b\u7ea7\u6545\u969c\u9694\u79bb\u529f\u80fd\u5141\u8bb8\u5728\u5fae\u670d\u52a1\u7684\u90e8\u5206\u5b9e\u4f8b\u8c03\u7528\u5931\u8d25\u65f6\uff0c\u505c\u6b62\u5411\u6545\u969c\u5b9e\u4f8b\u53d1\u9001\u8bf7\u6c42\uff0c\u4ece\u800c\u8fbe\u5230\u9694\u79bb\u6545\u969c\u5b9e\u4f8b\u7684\u529f\u80fd\u3002 \u7194\u65ad\u7b56\u7565 \u7194\u65ad\u7b56\u7565\u662f\u5bf9ServiceComb\u7194\u65ad\u529f\u80fd\u7684\u8bbe\u7f6e\uff0c\u7528\u6237\u901a\u8fc7\u914d\u7f6e\u7194\u65ad\u7b56\u7565\u53ef\u4ee5\u6307\u5b9a\u5728\u4f55\u79cd\u6761\u4ef6\u4e0bServiceComb\u6846\u67b6\u5c06\u7ec8\u6b62\u53d1\u9001\u8bf7\u6c42\u3002 \u9650\u6d41\u7b56\u7565 \u7528\u6237\u5728consumer\u7aef\u4f7f\u7528\u9650\u6d41\u7b56\u7565\uff0c\u53ef\u4ee5\u9650\u5236\u53d1\u5f80\u6307\u5b9a\u5fae\u670d\u52a1\u7684\u8bf7\u6c42\u7684\u9891\u7387\u3002 \u6545\u969c\u6ce8\u5165 \u7528\u6237\u5728consumer\u7aef\u4f7f\u7528\u6545\u969c\u6ce8\u5165\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u53d1\u5f80\u6307\u5b9a\u5fae\u670d\u52a1\u7684\u8bf7\u6c42\u7684\u65f6\u5ef6\u548c\u9519\u8bef\u53ca\u5176\u89e6\u53d1\u6982\u7387\u3002","title":"Build consumer"},{"location":"catalog/build-consumer/#resttemplate","text":"RestTemplate\u662fSpring\u63d0\u4f9b\u7684RESTful\u8bbf\u95ee\u63a5\u53e3\uff0cServiceComb\u63d0\u4f9b\u8be5\u63a5\u53e3\u7684\u5b9e\u73b0\u7c7b\u7528\u4e8e\u670d\u52a1\u7684\u8c03\u7528\u3002","title":"\u4f7f\u7528RestTemplate\u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005"},{"location":"catalog/build-consumer/#asynresttemplate","text":"AsyncRestTemplate \u5f00\u53d1\u65b9\u5f0f\u5141\u8bb8\u7528\u6237\u5f02\u6b65\u7684\u8fdb\u884c\u670d\u52a1\u8c03\u7528\u3002\u5177\u4f53\u7684\u4e1a\u52a1\u6d41\u7a0b\u548c RestTemplate \u7c7b\u4f3c\uff0c\u53ea\u662f\u8fd9\u91cc\u4ee5\u5f02\u6b65\u7684\u5f62\u5f0f\u8fdb\u884c\u670d\u52a1\u7684\u8c03\u7528\u3002","title":"\u4f7f\u7528AsynRestTemplate\u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005"},{"location":"catalog/build-consumer/#rpc","text":"\u900f\u660eRPC\u5f00\u53d1\u6a21\u5f0f\u5141\u8bb8\u7528\u6237\u901a\u8fc7\u7b80\u5355\u7684java interface\u50cf\u672c\u5730\u8c03\u7528\u4e00\u6837\u8fdb\u884c\u670d\u52a1\u8c03\u7528\u3002","title":"\u4f7f\u7528\u900f\u660eRPC\u65b9\u5f0f\u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005"},{"location":"catalog/build-consumer/#_1","text":"\u5f53\u670d\u52a1\u6d88\u8d39\u8005\u8c03\u7528\u670d\u52a1\u63d0\u4f9b\u8005\u7684\u670d\u52a1\u65f6\uff0c\u9700\u8981\u83b7\u53d6\u670d\u52a1\u5951\u7ea6\u3002\u6d88\u8d39\u8005\u6709\u4e24\u79cd\u65b9\u5f0f\u83b7\u53d6\u63d0\u4f9b\u8005\u7684\u670d\u52a1\u5951\u7ea6\uff0c\u4e00\u79cd\u662f\u4ece\u670d\u52a1\u7684\u63d0\u4f9b\u65b9\u79bb\u7ebf\u83b7\u53d6\u5951\u7ea6\u6587\u4ef6\uff0c\u624b\u5de5\u914d\u7f6e\u5230\u9879\u76ee\u4e2d\uff1b\u53e6\u4e00\u79cd\u662f\u4ece\u670d\u52a1\u4e2d\u5fc3\u81ea\u52a8\u4e0b\u8f7d\u5951\u7ea6\u3002","title":"\u4f7f\u7528\u670d\u52a1\u5951\u7ea6"},{"location":"catalog/build-consumer/#_2","text":"","title":"\u8c03\u7528\u63a7\u5236"},{"location":"catalog/build-consumer/#_3","text":"\u5b9e\u4f8b\u7ea7\u6545\u969c\u9694\u79bb\u529f\u80fd\u5141\u8bb8\u5728\u5fae\u670d\u52a1\u7684\u90e8\u5206\u5b9e\u4f8b\u8c03\u7528\u5931\u8d25\u65f6\uff0c\u505c\u6b62\u5411\u6545\u969c\u5b9e\u4f8b\u53d1\u9001\u8bf7\u6c42\uff0c\u4ece\u800c\u8fbe\u5230\u9694\u79bb\u6545\u969c\u5b9e\u4f8b\u7684\u529f\u80fd\u3002","title":"\u5b9e\u4f8b\u7ea7\u6545\u969c\u9694\u79bb"},{"location":"catalog/build-consumer/#_4","text":"\u7194\u65ad\u7b56\u7565\u662f\u5bf9ServiceComb\u7194\u65ad\u529f\u80fd\u7684\u8bbe\u7f6e\uff0c\u7528\u6237\u901a\u8fc7\u914d\u7f6e\u7194\u65ad\u7b56\u7565\u53ef\u4ee5\u6307\u5b9a\u5728\u4f55\u79cd\u6761\u4ef6\u4e0bServiceComb\u6846\u67b6\u5c06\u7ec8\u6b62\u53d1\u9001\u8bf7\u6c42\u3002","title":"\u7194\u65ad\u7b56\u7565"},{"location":"catalog/build-consumer/#_5","text":"\u7528\u6237\u5728consumer\u7aef\u4f7f\u7528\u9650\u6d41\u7b56\u7565\uff0c\u53ef\u4ee5\u9650\u5236\u53d1\u5f80\u6307\u5b9a\u5fae\u670d\u52a1\u7684\u8bf7\u6c42\u7684\u9891\u7387\u3002","title":"\u9650\u6d41\u7b56\u7565"},{"location":"catalog/build-consumer/#_6","text":"\u7528\u6237\u5728consumer\u7aef\u4f7f\u7528\u6545\u969c\u6ce8\u5165\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u53d1\u5f80\u6307\u5b9a\u5fae\u670d\u52a1\u7684\u8bf7\u6c42\u7684\u65f6\u5ef6\u548c\u9519\u8bef\u53ca\u5176\u89e6\u53d1\u6982\u7387\u3002","title":"\u6545\u969c\u6ce8\u5165"},{"location":"catalog/build-provider/","text":"\u670d\u52a1\u5b9a\u4e49 \u2022 \u670d\u52a1\u5b9a\u4e49\u4fe1\u606f\u662f\u5fae\u670d\u52a1\u7684\u8eab\u4efd\u6807\u8bc6\uff0c\u5b83\u5b9a\u4e49\u4e86\u670d\u52a1\u4ece\u5c5e\u4e8e\u54ea\u4e2a\u5e94\u7528\uff0c\u4ee5\u53ca\u540d\u5b57\u548c\u7248\u672c\u3002\u670d\u52a1\u5b9a\u4e49\u4fe1\u606f\u4e2d\u4e5f\u53ef\u4ee5\u6709\u6269\u5c55\u4fe1\u606f\uff0c\u7528\u4e8e\u5b9a\u4e49\u670d\u52a1\u7684\u5c5e\u6027\u5143\u6570\u636e\u3002 \u5b9a\u4e49\u670d\u52a1\u5951\u7ea6 \u2022 \u670d\u52a1\u5951\u7ea6\uff0c\u6307\u57fa\u4e8eOpenAPI\u89c4\u8303\u7684\u5fae\u670d\u52a1\u63a5\u53e3\u5951\u7ea6\uff0c\u662f\u670d\u52a1\u7aef\u4e0e\u6d88\u8d39\u7aef\u5bf9\u4e8e\u63a5\u53e3\u7684\u5b9a\u4e49\u3002java chassis\u63d0\u4f9b\u4e86\u4e24\u79cd\u65b9\u5f0f\u5b9a\u4e49\u5951\u7ea6\uff1acode first\u548ccontract first\u3002 \u4f7f\u7528\u9690\u5f0f\u5951\u7ea6 \u2022 \u964d\u7ea7\u7b56\u7565\u662f\u5f53\u670d\u52a1\u8bf7\u6c42\u5f02\u5e38\u65f6\uff0c\u5fae\u670d\u52a1\u6240\u91c7\u7528\u7684\u5f02\u5e38\u5904\u7406\u7b56\u7565\u3002 \u4f7f\u7528 Swagger \u6ce8\u89e3 \u2022 Swagger\u63d0\u4f9b\u4e86\u4e00\u5957\u6ce8\u89e3\u7528\u4e8e\u63cf\u8ff0\u63a5\u53e3\u5951\u7ea6\uff0c\u7528\u6237\u4f7f\u7528\u6ce8\u89e3\uff0c\u53ef\u4ee5\u5728\u4ee3\u7801\u4e2d\u589e\u52a0\u5bf9\u4e8e\u5951\u7ea6\u7684\u63cf\u8ff0\u4fe1\u606f\u3002ServiceComb\u652f\u6301\u5176\u4e2d\u7684\u90e8\u5206\u6ce8\u89e3\u3002 \u7528SpringMVC \u5f00\u53d1\u5fae\u670d\u52a1 \u2022 ServiceComb\u652f\u6301SpringMVC\u6ce8\u89e3\uff0c\u5141\u8bb8\u4f7f\u7528SpringMVC\u98ce\u683c\u5f00\u53d1\u5fae\u670d\u52a1\u3002\u5efa\u8bae\u53c2\u7167\u7740\u9879\u76ee SpringMVC\u8fdb\u884c\u8be6\u7ec6\u9605\u8bfb\u3002 \u7528JAX-RS\u5f00\u53d1\u5fae\u670d\u52a1 \u2022 ServiceComb\u652f\u6301\u5f00\u53d1\u8005\u4f7f\u7528JAX-RS\u6ce8\u89e3\uff0c\u4f7f\u7528JAX-RS\u6a21\u5f0f\u5f00\u53d1\u670d\u52a1\u3002 \u7528\u900f\u660eRPC\u5f00\u53d1\u5fae\u670d\u52a1 \u2022 \u900f\u660eRPC\u5f00\u53d1\u6a21\u5f0f\u662f\u4e00\u79cd\u57fa\u4e8e\u63a5\u53e3\u548c\u63a5\u53e3\u5b9e\u73b0\u7684\u5f00\u53d1\u6a21\u5f0f\uff0c\u670d\u52a1\u7684\u5f00\u53d1\u8005\u4e0d\u9700\u8981\u4f7f\u7528Spring MVC\u548cJAX-RS\u6ce8\u89e3\u3002 \u63a5\u53e3\u5b9a\u4e49\u548c\u6570\u636e\u7c7b\u578b \u2022 ServiceComb-Java-Chassis\u5efa\u8bae\u63a5\u53e3\u5b9a\u4e49\u9075\u5faa\u4e00\u4e2a\u7b80\u5355\u7684\u539f\u5219\uff1a\u63a5\u53e3\u5b9a\u4e49\u5373\u63a5\u53e3\u4f7f\u7528\u8bf4\u660e\uff0c\u4e0d\u7528\u901a\u8fc7\u67e5\u770b\u4ee3\u7801\u5b9e\u73b0\uff0c\u5c31\u80fd\u8bc6\u522b\u5982\u4f55\u8c03\u7528\u8fd9\u4e2a\u63a5\u53e3\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u8fd9\u4e2a\u539f\u5219\u7ad9\u5728\u4f7f\u7528\u8005\u8fd9\u8fb9\uff0c\u4ee5\u66f4\u5bb9\u6613\u88ab\u4f7f\u7528\u4f5c\u4e3a\u53c2\u8003\u3002ServiceComb\u4f1a\u6839\u636e\u63a5\u53e3\u5b9a\u4e49\u751f\u6210\u63a5\u53e3\u5951\u7ea6\uff0c\u7b26\u5408\u8fd9\u4e2a\u539f\u5219\u7684\u63a5\u53e3\uff0c\u751f\u6210\u7684\u5951\u7ea6\u4e5f\u662f\u7528\u6237\u5bb9\u6613\u9605\u8bfb\u7684\u3002 \u670d\u52a1\u76d1\u542c\u5730\u5740\u548c\u53d1\u5e03\u5730\u5740 \u2022\u5728JavaChassis\u4e2d\uff0c\u670d\u52a1\u7684\u76d1\u542c\u5730\u5740\u548c\u53d1\u5e03\u5730\u5740\u662f\u4e24\u4e2a\u72ec\u7acb\u7684\u6982\u5ff5\uff0c\u53ef\u4ee5\u72ec\u7acb\u914d\u7f6e\uff1a \u76d1\u542c\u5730\u5740\uff1a\u6307\u5fae\u670d\u52a1\u5b9e\u4f8b\u542f\u52a8\u65f6\u76d1\u542c\u7684\u5730\u5740\u3002\u8be5\u914d\u7f6e\u9879\u51b3\u5b9a\u4e86\u53ef\u4ee5\u901a\u8fc7\u54ea\u4e9bIP\u8bbf\u95ee\u6b64\u670d\u52a1\u3002 \u53d1\u5e03\u5730\u5740\uff1a\u6307\u5fae\u670d\u52a1\u5b9e\u4f8b\u6ce8\u518c\u5230\u670d\u52a1\u4e2d\u5fc3\u7684\u5730\u5740\u3002\u5176\u4ed6\u7684\u5fae\u670d\u52a1\u5b9e\u4f8b\u4f1a\u901a\u8fc7\u670d\u52a1\u4e2d\u5fc3\u83b7\u53d6\u6b64\u5b9e\u4f8b\u7684\u4fe1\u606f\uff0c\u6839\u636e\u53d1\u5e03\u5730\u5740\u8bbf\u95ee\u6b64\u670d\u52a1\u5b9e\u4f8b\uff0c\u6240\u4ee5\u8be5\u914d\u7f6e\u9879\u51b3\u5b9a\u4e86\u5176\u4ed6\u670d\u52a1\u5b9e\u9645\u4e0a\u4f1a\u4f7f\u7528\u54ea\u4e2aIP\u8bbf\u95ee\u6b64\u670d\u52a1\u3002 \u670d\u52a1\u914d\u7f6e \u2022 \u8d1f\u8f7d\u5747\u8861\u7b56\u7565 \u2022 \u9650\u6d41\u7b56\u7565 \u2022 \u53c2\u6570\u6559\u7814","title":"Build provider"},{"location":"catalog/build-provider/#_1","text":"\u2022 \u670d\u52a1\u5b9a\u4e49\u4fe1\u606f\u662f\u5fae\u670d\u52a1\u7684\u8eab\u4efd\u6807\u8bc6\uff0c\u5b83\u5b9a\u4e49\u4e86\u670d\u52a1\u4ece\u5c5e\u4e8e\u54ea\u4e2a\u5e94\u7528\uff0c\u4ee5\u53ca\u540d\u5b57\u548c\u7248\u672c\u3002\u670d\u52a1\u5b9a\u4e49\u4fe1\u606f\u4e2d\u4e5f\u53ef\u4ee5\u6709\u6269\u5c55\u4fe1\u606f\uff0c\u7528\u4e8e\u5b9a\u4e49\u670d\u52a1\u7684\u5c5e\u6027\u5143\u6570\u636e\u3002","title":"\u670d\u52a1\u5b9a\u4e49"},{"location":"catalog/build-provider/#_2","text":"\u2022 \u670d\u52a1\u5951\u7ea6\uff0c\u6307\u57fa\u4e8eOpenAPI\u89c4\u8303\u7684\u5fae\u670d\u52a1\u63a5\u53e3\u5951\u7ea6\uff0c\u662f\u670d\u52a1\u7aef\u4e0e\u6d88\u8d39\u7aef\u5bf9\u4e8e\u63a5\u53e3\u7684\u5b9a\u4e49\u3002java chassis\u63d0\u4f9b\u4e86\u4e24\u79cd\u65b9\u5f0f\u5b9a\u4e49\u5951\u7ea6\uff1acode first\u548ccontract first\u3002","title":"\u5b9a\u4e49\u670d\u52a1\u5951\u7ea6"},{"location":"catalog/build-provider/#_3","text":"\u2022 \u964d\u7ea7\u7b56\u7565\u662f\u5f53\u670d\u52a1\u8bf7\u6c42\u5f02\u5e38\u65f6\uff0c\u5fae\u670d\u52a1\u6240\u91c7\u7528\u7684\u5f02\u5e38\u5904\u7406\u7b56\u7565\u3002","title":"\u4f7f\u7528\u9690\u5f0f\u5951\u7ea6"},{"location":"catalog/build-provider/#swagger","text":"\u2022 Swagger\u63d0\u4f9b\u4e86\u4e00\u5957\u6ce8\u89e3\u7528\u4e8e\u63cf\u8ff0\u63a5\u53e3\u5951\u7ea6\uff0c\u7528\u6237\u4f7f\u7528\u6ce8\u89e3\uff0c\u53ef\u4ee5\u5728\u4ee3\u7801\u4e2d\u589e\u52a0\u5bf9\u4e8e\u5951\u7ea6\u7684\u63cf\u8ff0\u4fe1\u606f\u3002ServiceComb\u652f\u6301\u5176\u4e2d\u7684\u90e8\u5206\u6ce8\u89e3\u3002","title":"\u4f7f\u7528 Swagger \u6ce8\u89e3"},{"location":"catalog/build-provider/#springmvc","text":"\u2022 ServiceComb\u652f\u6301SpringMVC\u6ce8\u89e3\uff0c\u5141\u8bb8\u4f7f\u7528SpringMVC\u98ce\u683c\u5f00\u53d1\u5fae\u670d\u52a1\u3002\u5efa\u8bae\u53c2\u7167\u7740\u9879\u76ee SpringMVC\u8fdb\u884c\u8be6\u7ec6\u9605\u8bfb\u3002","title":"\u7528SpringMVC \u5f00\u53d1\u5fae\u670d\u52a1"},{"location":"catalog/build-provider/#jax-rs","text":"\u2022 ServiceComb\u652f\u6301\u5f00\u53d1\u8005\u4f7f\u7528JAX-RS\u6ce8\u89e3\uff0c\u4f7f\u7528JAX-RS\u6a21\u5f0f\u5f00\u53d1\u670d\u52a1\u3002","title":"\u7528JAX-RS\u5f00\u53d1\u5fae\u670d\u52a1"},{"location":"catalog/build-provider/#rpc","text":"\u2022 \u900f\u660eRPC\u5f00\u53d1\u6a21\u5f0f\u662f\u4e00\u79cd\u57fa\u4e8e\u63a5\u53e3\u548c\u63a5\u53e3\u5b9e\u73b0\u7684\u5f00\u53d1\u6a21\u5f0f\uff0c\u670d\u52a1\u7684\u5f00\u53d1\u8005\u4e0d\u9700\u8981\u4f7f\u7528Spring MVC\u548cJAX-RS\u6ce8\u89e3\u3002","title":"\u7528\u900f\u660eRPC\u5f00\u53d1\u5fae\u670d\u52a1"},{"location":"catalog/build-provider/#_4","text":"\u2022 ServiceComb-Java-Chassis\u5efa\u8bae\u63a5\u53e3\u5b9a\u4e49\u9075\u5faa\u4e00\u4e2a\u7b80\u5355\u7684\u539f\u5219\uff1a\u63a5\u53e3\u5b9a\u4e49\u5373\u63a5\u53e3\u4f7f\u7528\u8bf4\u660e\uff0c\u4e0d\u7528\u901a\u8fc7\u67e5\u770b\u4ee3\u7801\u5b9e\u73b0\uff0c\u5c31\u80fd\u8bc6\u522b\u5982\u4f55\u8c03\u7528\u8fd9\u4e2a\u63a5\u53e3\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u8fd9\u4e2a\u539f\u5219\u7ad9\u5728\u4f7f\u7528\u8005\u8fd9\u8fb9\uff0c\u4ee5\u66f4\u5bb9\u6613\u88ab\u4f7f\u7528\u4f5c\u4e3a\u53c2\u8003\u3002ServiceComb\u4f1a\u6839\u636e\u63a5\u53e3\u5b9a\u4e49\u751f\u6210\u63a5\u53e3\u5951\u7ea6\uff0c\u7b26\u5408\u8fd9\u4e2a\u539f\u5219\u7684\u63a5\u53e3\uff0c\u751f\u6210\u7684\u5951\u7ea6\u4e5f\u662f\u7528\u6237\u5bb9\u6613\u9605\u8bfb\u7684\u3002","title":"\u63a5\u53e3\u5b9a\u4e49\u548c\u6570\u636e\u7c7b\u578b"},{"location":"catalog/build-provider/#_5","text":"\u2022\u5728JavaChassis\u4e2d\uff0c\u670d\u52a1\u7684\u76d1\u542c\u5730\u5740\u548c\u53d1\u5e03\u5730\u5740\u662f\u4e24\u4e2a\u72ec\u7acb\u7684\u6982\u5ff5\uff0c\u53ef\u4ee5\u72ec\u7acb\u914d\u7f6e\uff1a \u76d1\u542c\u5730\u5740\uff1a\u6307\u5fae\u670d\u52a1\u5b9e\u4f8b\u542f\u52a8\u65f6\u76d1\u542c\u7684\u5730\u5740\u3002\u8be5\u914d\u7f6e\u9879\u51b3\u5b9a\u4e86\u53ef\u4ee5\u901a\u8fc7\u54ea\u4e9bIP\u8bbf\u95ee\u6b64\u670d\u52a1\u3002 \u53d1\u5e03\u5730\u5740\uff1a\u6307\u5fae\u670d\u52a1\u5b9e\u4f8b\u6ce8\u518c\u5230\u670d\u52a1\u4e2d\u5fc3\u7684\u5730\u5740\u3002\u5176\u4ed6\u7684\u5fae\u670d\u52a1\u5b9e\u4f8b\u4f1a\u901a\u8fc7\u670d\u52a1\u4e2d\u5fc3\u83b7\u53d6\u6b64\u5b9e\u4f8b\u7684\u4fe1\u606f\uff0c\u6839\u636e\u53d1\u5e03\u5730\u5740\u8bbf\u95ee\u6b64\u670d\u52a1\u5b9e\u4f8b\uff0c\u6240\u4ee5\u8be5\u914d\u7f6e\u9879\u51b3\u5b9a\u4e86\u5176\u4ed6\u670d\u52a1\u5b9e\u9645\u4e0a\u4f1a\u4f7f\u7528\u54ea\u4e2aIP\u8bbf\u95ee\u6b64\u670d\u52a1\u3002","title":"\u670d\u52a1\u76d1\u542c\u5730\u5740\u548c\u53d1\u5e03\u5730\u5740"},{"location":"catalog/build-provider/#_6","text":"\u2022 \u8d1f\u8f7d\u5747\u8861\u7b56\u7565 \u2022 \u9650\u6d41\u7b56\u7565 \u2022 \u53c2\u6570\u6559\u7814","title":"\u670d\u52a1\u914d\u7f6e"},{"location":"catalog/config/","text":"\u901a\u7528\u914d\u7f6e\u8bf4\u660e \u8bf4\u660eServiceComb-Java-Chassis\u7684\u914d\u7f6e\u9879\u5c42\u7ea7\u5173\u7cfb\u3001\u914d\u7f6e\u8bfb\u53d6\u65b9\u6cd5\u3002","title":"Config"},{"location":"catalog/config/#_1","text":"\u8bf4\u660eServiceComb-Java-Chassis\u7684\u914d\u7f6e\u9879\u5c42\u7ea7\u5173\u7cfb\u3001\u914d\u7f6e\u8bfb\u53d6\u65b9\u6cd5\u3002","title":"\u901a\u7528\u914d\u7f6e\u8bf4\u660e"},{"location":"catalog/data-conform/","text":"","title":"Data conform"},{"location":"catalog/general-develop/","text":"\u8bbf\u95ee\u670d\u52a1\u4e2d\u5fc3 \u7cfb\u7edf\u901a\u8fc7\u670d\u52a1\u4e2d\u5fc3\u5b9e\u73b0\u670d\u52a1\u4e4b\u95f4\u7684\u53d1\u73b0\u3002\u670d\u52a1\u542f\u52a8\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u5411\u670d\u52a1\u4e2d\u5fc3\u8fdb\u884c\u6ce8\u518c\u3002\u5728\u8c03\u7528\u5176\u4ed6\u670d\u52a1\u7684\u65f6\u5019\uff0c\u4f1a\u4ece\u670d\u52a1\u4e2d\u5fc3\u67e5\u8be2\u5176\u4ed6\u670d\u52a1\u7684\u5b9e\u4f8b\u4fe1\u606f\uff0c\u6bd4\u5982\u8bbf\u95ee\u5730\u5740\u3001\u4f7f\u7528\u7684\u534f\u8bae\u4ee5\u53ca\u5176\u4ed6\u53c2\u6570\u3002\u670d\u52a1\u4e2d\u5fc3\u652f\u6301\u4f7f\u7528PULL\u548cPUSH\u4e24\u79cd\u6a21\u5f0f\u901a\u77e5\u5b9e\u4f8b\u53d8\u5316\u3002 \u5e94\u7528\u6027\u80fd\u76d1\u63a7 \u4e00\u3001Metrics\u4ecb\u7ecd \u4e8c\u3001\u7edf\u8ba1\u9879\u6c47\u603b \u4e09\u3001\u4f7f\u7528\u65b9\u6cd5 \u5fae\u670d\u52a1\u8c03\u7528\u94fe \u5fae\u670d\u52a1\u67b6\u6784\u89e3\u51b3\u4e86\u5f88\u591a\u5355\u4f53\u5e94\u7528\u5e26\u6765\u7684\u95ee\u9898\uff0c\u4f46\u540c\u65f6\u4e5f\u9700\u8981\u6211\u4eec\u4ed8\u51fa\u989d\u5916\u7684\u4ee3\u4ef7\u3002\u7531\u4e8e\u7f51\u7edc\u7684\u4e0d\u7a33\u5b9a\u6027\u5e26\u6765\u7684\u8bf7\u6c42\u5904\u7406\u5ef6\u8fdf\u5c31\u662f\u4ee3\u4ef7\u4e4b\u4e00\u3002 \u5728\u5355\u4f53\u5e94\u7528\u4e2d\uff0c\u6240\u6709\u6a21\u5757\u90fd\u5728\u540c\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u8fd0\u884c\uff0c\u6240\u4ee5\u5e76\u6ca1\u6709\u6a21\u5757\u95f4\u4e92\u901a\u7684\u95ee\u9898\u3002\u4f46\u5fae\u670d\u52a1\u67b6\u6784\u4e2d\uff0c\u670d\u52a1\u95f4\u901a\u8fc7\u7f51\u7edc\u6c9f\u901a\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u5f97\u4e0d\u5904\u7406\u548c\u7f51\u7edc\u6709\u5173\u7684 \u95ee\u9898\uff0c\u4f8b\u5982\uff1a\u5ef6\u8fdf\u3001\u8d85\u65f6\u3001\u7f51\u7edc\u5206\u533a\u7b49\u3002 \u53e6\u5916\uff0c\u968f\u7740\u4e1a\u52a1\u7684\u6269\u5c55\u670d\u52a1\u589e\u591a\uff0c\u6211\u4eec\u5f88\u96be\u6d1e\u5bdf\u6570\u636e\u5982\u4f55\u5728\u86db\u7f51\u822c\u590d\u6742\u7684\u670d\u52a1\u7ed3\u6784\u4e2d\u6d41\u8f6c\u3002\u6211\u4eec\u5982\u4f55\u624d\u80fd\u6709\u6548\u7684\u76d1\u63a7\u7f51\u7edc\u5ef6\u8fdf\u5e76\u4e14\u53ef\u89c6\u5316\u670d\u52a1\u4e2d\u7684\u6570\u636e\u6d41\u8f6c\u5462\uff1f \u5206\u5e03\u5f0f\u8c03\u7528\u94fe\u8ffd\u8e2a\u7528\u4e8e\u6709\u6548\u5730\u76d1\u63a7\u5fae\u670d\u52a1\u7684\u7f51\u7edc\u5ef6\u65f6\u5e76\u53ef\u89c6\u5316\u5fae\u670d\u52a1\u4e2d\u7684\u6570\u636e\u6d41\u8f6c\u3002 \u81ea\u5b9a\u4e49\u8c03\u7528\u94fe\u6253\u70b9 \u5206\u5e03\u5f0f\u8c03\u7528\u94fe\u8ffd\u8e2a\u63d0\u4f9b\u4e86\u670d\u52a1\u95f4\u8c03\u7528\u7684\u65f6\u5e8f\u4fe1\u606f\uff0c\u4f46\u670d\u52a1\u5185\u90e8\u7684\u94fe\u8def\u8c03\u7528\u4fe1\u606f\u5bf9\u5f00\u53d1\u8005\u540c\u6837\u91cd\u8981\uff0c\u5982\u679c\u80fd\u5c06\u4e24\u8005\u5408\u4e8c\u4e3a\u4e00\uff0c\u5c31\u80fd\u63d0\u4f9b\u66f4\u5b8c\u6574\u7684\u8c03\u7528\u94fe\uff0c\u66f4\u5bb9\u6613\u5b9a\u4f4d\u9519\u8bef\u548c\u6f5c\u5728\u6027\u80fd\u95ee\u9898\u3002 \u672c\u5730\u5f00\u53d1\u548c\u6d4b\u8bd5 \u672c\u5c0f\u8282\u4ecb\u7ecd\u5982\u4f55\u5728\u5f00\u53d1\u8005\u672c\u5730\u8fdb\u884c\u6d88\u8d39\u8005/\u63d0\u4f9b\u8005\u5e94\u7528\u7684\u5f00\u53d1\u8c03\u8bd5\u3002\u5f00\u53d1\u670d\u52a1\u63d0\u4f9b\u8005\u8bf7\u53c2\u80033 \u5f00\u53d1\u670d\u52a1\u63d0\u4f9b\u8005\u7ae0\u8282\uff0c\u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005\u8bf7\u53c2\u80034 \u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005\u3002\u670d\u52a1\u63d0\u4f9b\u8005\u548c\u6d88\u8d39\u63d0\u4f9b\u8005\u5747\u9700\u8981\u8fde\u63a5\u5230\u5728\u8fdc\u7a0b\u7684\u670d\u52a1\u4e2d\u5fc3\uff0c\u4e3a\u4e86\u672c\u5730\u5fae\u670d\u52a1\u7684\u5f00\u53d1\u548c\u8c03\u8bd5\uff0c\u672c\u5c0f\u8282\u4ecb\u7ecd\u4e86\u4e24\u79cd\u642d\u5efa\u672c\u5730\u670d\u52a1\u4e2d\u5fc3\u7684\u65b9\u6cd5\u8fdb\u884c\u672c\u5730\u5fae\u670d\u52a1\u8c03\u8bd5\uff1a Http Filter \u67d0\u4e9b\u573a\u666f\u4e2d\uff0c\u4e1a\u52a1\u4f7f\u7528http\u800c\u4e0d\u662fhttps\uff0c\u4f5c\u4e3a\u7f51\u7edc\u4f20\u8f93\u901a\u9053\uff0c\u6b64\u65f6\u4e3a\u4e86\u9632\u6b62\u88ab\u4f2a\u9020\u6216\u7be1\u6539\u8bf7\u6c42\uff0c\u9700\u8981\u63d0\u4f9bconsumer\u3001producer\u4e4b\u95f4\u5bf9http\u7801\u6d41\u7684\u7b7e\u540d\u529f\u80fd\u3002 \u6587\u4ef6\u4e0a\u4f20 \u6587\u4ef6\u4e0a\u4f20\uff0c\u5f53\u524d\u652f\u6301\u5728vertx rest\u901a\u9053\u548cservlet rest\u4e2d\u4f7f\u7528\u3002 \u6587\u4ef6\u4e0a\u4f20\u4f7f\u7528\u6807\u51c6\u7684http form\u683c\u5f0f\uff0c\u53ef\u4e0e\u6d4f\u89c8\u5668\u7684\u4e0a\u4f20\u76f4\u63a5\u5bf9\u63a5\u3002 \u6587\u4ef6\u4e0b\u8f7d \u6587\u4ef6\u4e0b\u8f7d\uff0c\u5f53\u524d\u5728vertx rest\u901a\u9053\u548cservlet rest\u4e2d\u53ef\u7528\u3002 Reactive \u7b80\u5355\u540c\u6b65\u6a21\u5f0f\u3001\u5d4c\u5957\u540c\u6b65\u8c03\u7528\u3001\u7eafReactive\u673a\u5236\u3001\u6df7\u5408Reactive\u673a\u5236\u4e4b\u95f4\u7684\u5bf9\u6bd4\u53ca\u8bf4\u660e\u3002 DNS\u81ea\u5b9a\u4e49\u914d\u7f6e \u7528\u6237\u4f7f\u7528\u57df\u540d\u8fde\u63a5\u534e\u4e3a\u516c\u6709\u4e91\u6216\u8005\u4e09\u65b9\u7cfb\u7edf\u65f6\uff0c\u9700\u8981\u4f7f\u7528\u5230\u57df\u540d\u89e3\u6790\u7cfb\u7edf\u3002\u5728\u4e0d\u540c\u7684\u7cfb\u7edf\u3001\u4e0d\u540c\u7684\u6846\u67b6\u4f7f\u7528\u7684\u57df\u540d\u89e3\u6790\u673a\u5236\u90fd\u53ef\u80fd\u4e0d\u592a\u4e00\u6837\u3002\u6240\u4ee5\u6211\u4eec\u6709\u5fc5\u8981\u63d0\u4f9b\u4e00\u4e2a\u7edf\u4e00\u7684\u914d\u7f6e\u5165\u53e3\uff0c\u4ee5\u4fbf\u5f00\u53d1\u8fd0\u7ef4\u4eba\u5458\u53ef\u4ee5\u81ea\u5b9a\u4e49DNS\u89e3\u6790\u673a\u5236\uff0c\u800c\u4e0d\u5b8c\u5168\u53d7\u5236\u4e8e\u7cfb\u7edf\u914d\u7f6e\u3002 \u4ee3\u7406\u8bbe\u7f6e \u4f5c\u4e3a\u4e00\u540d\u5f00\u53d1\u8005\uff0c\u5728\u516c\u53f8\u5f00\u53d1\u73af\u5883\uff0c\u53ef\u80fd\u662f\u901a\u8fc7\u516c\u53f8\u4ee3\u7406\u7f51\u7edc\u63a5\u5165\u5230\u56e0\u7279\u7f51\u3002\u5982\u679c\u8c03\u8bd5\u670d\u52a1\u65f6\u8fd8\u5fc5\u987b\u4f9d\u8d56\u7f51\u4e0a\u8d44\u6e90\uff0c\u6bd4\u5982\u76f4\u63a5\u8fde\u63a5\u534e\u4e3a\u5171\u6709\u4e91\u670d\u52a1\u4e2d\u5fc3\uff0c\u90a3\u4e48\u5c31\u5fc5\u987b\u914d\u7f6e\u4ee3\u7406\u3002 \u6846\u67b6\u4e0a\u62a5\u7248\u672c\u53f7 \u4e3a\u65b9\u4fbf\u6cbb\u7406\uff0c\u4f7f\u7528ServiceComb\u8fdb\u884c\u5f00\u53d1\uff0c\u4f1a\u5c06\u5f53\u524d\u4f7f\u7528\u7684ServiceComb\u7248\u672c\u53f7\u4e0a\u62a5\u81f3\u670d\u52a1\u4e2d\u5fc3\uff0c\u5e76\u4e14\u652f\u6301\u5176\u4ed6\u6846\u67b6\u96c6\u6210ServiceComb\u65f6\u4e0a\u62a5\u5176\u4ed6\u6846\u67b6\u7684\u7248\u672c\u53f7\u3002 \u8de8\u5e94\u7528\u8c03\u7528 \u5e94\u7528\u662f\u5fae\u670d\u52a1\u5b9e\u4f8b\u9694\u79bb\u5c42\u6b21\u4e2d\u7684\u4e00\u5c42\uff0c\u4e00\u4e2a\u5e94\u7528\u5305\u542b\u591a\u4e2a\u5fae\u670d\u52a1\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u53ea\u5141\u8bb8\u540c\u5e94\u7528\u7684\u5fae\u670d\u52a1\u5b9e\u4f8b\u76f8\u4e92\u8c03\u7528\u3002 \u5b9a\u5236\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u65b9\u6cd5 \u7531\u4e8eHTTP\u534f\u8bae\u7684\u975e\u5b89\u5168\u6027\uff0c\u5728\u7f51\u7edc\u4e2d\u4f20\u8f93\u7684\u6570\u636e\u80fd\u8f7b\u6613\u88ab\u5404\u79cd\u6293\u5305\u5de5\u5177\u76d1\u542c\u3002\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u4e1a\u52a1\u5bf9\u5e94\u7528\u6216\u670d\u52a1\u95f4\u4f20\u8f93\u7684\u654f\u611f\u6570\u636e\u6709\u8f83\u9ad8\u7684\u5b89\u5168\u8981\u6c42\uff0c\u8fd9\u7c7b\u6570\u636e\u9700\u8981\u7279\u522b\u7684\u52a0\u5bc6\u4fdd\u62a4\uff08\u4e1a\u52a1\u4e0d\u540c\u5bf9\u7b97\u6cd5\u8981\u6c42\u4e0d\u540c\uff09\uff0c\u8fd9\u6837\u5373\u4f7f\u5185\u5bb9\u88ab\u622a\u83b7\uff0c\u4e5f\u53ef\u4ee5\u4fdd\u62a4\u5176\u4e2d\u7684\u654f\u611f\u6570\u636e\u4e0d\u88ab\u8f7b\u6613\u83b7\u53d6\u3002 \u4f7f\u7528Context\u4f20\u9012\u63a7\u5236\u6d88\u606f ServiceComb\u63d0\u4f9b\u4e86Context\u5728\u5fae\u670d\u52a1\u4e4b\u95f4\u4f20\u9012\u6570\u636e\u3002Context\u662fkey/value\u5bf9\uff0c\u53ea\u80fd\u591f\u4f7f\u7528String\u7c7b\u578b\u7684\u6570\u636e\u3002\u7531\u4e8eContext\u4f1a\u5e8f\u5217\u5316\u4e3ajson\u683c\u5f0f\u5e76\u901a\u8fc7HTTP Header\u4f20\u9012\uff0c\u56e0\u6b64\u4e5f\u4e0d\u652f\u6301ASCII\u4e4b\u5916\u7684\u5b57\u7b26\uff0c\u5176\u4ed6\u5b57\u7b26\u9700\u8981\u5f00\u53d1\u8005\u5148\u81ea\u884c\u7f16\u7801\u518d\u4f20\u9012\u3002Context\u5728\u4e00\u6b21\u8bf7\u6c42\u4e2d\uff0c\u4f1a\u5728\u8bf7\u6c42\u94fe\u4e0a\u4f20\u9012\uff0c\u4e0d\u9700\u8981\u91cd\u65b0\u8bbe\u7f6e\u3002access log\u7684trace id\u7b49\u529f\u80fd\u90fd\u57fa\u4e8e\u8fd9\u4e2a\u7279\u6027\u5b9e\u73b0\u7684\u3002 \u8fd4\u56de\u503c\u5e8f\u5217\u5316\u6269\u5c55 \u5f53\u524dREST\u901a\u9053\u8fd4\u56de\u503c\u652f\u6301application/json\u548ctext/plain\u4e24\u79cd\u683c\u5f0f\uff0c\u652f\u6301\u5f00\u53d1\u4eba\u5458\u6269\u5c55\u548c\u91cd\u5199\uff0c\u670d\u52a1\u63d0\u4f9b\u8005\u901a\u8fc7produces\u58f0\u660e\u53ef\u63d0\u4f9b\u5e8f\u5217\u5316\u80fd\u529b\uff0c\u670d\u52a1\u6d88\u8d39\u8005\u901a\u8fc7\u8bf7\u6c42\u7684Accept\u5934\u6307\u660e\u8fd4\u56de\u503c\u5e8f\u5217\u5316\u65b9\u5f0f\uff0c\u9ed8\u8ba4\u8fd4\u56deapplication/json\u683c\u5f0f\u7684\u6570\u636e\u3002 CORS\u673a\u5236 \u8de8\u57df\u8d44\u6e90\u5171\u4eab(CORS, Cross-Origin Resource Sharing)\u5141\u8bb8Web\u670d\u52a1\u5668\u8fdb\u884c\u8de8\u57df\u8bbf\u95ee\u63a7\u5236\uff0c\u4f7f\u6d4f\u89c8\u5668\u53ef\u4ee5\u66f4\u5b89\u5168\u5730\u8fdb\u884c\u8de8\u57df\u6570\u636e\u4f20\u8f93\u3002 \u83b7\u53d6\u7194\u65ad\u4e0e\u5b9e\u4f8b\u9694\u79bb\u544a\u8b66\u4e8b\u4ef6\u4fe1\u606f \u5728\u5fae\u670d\u52a1\u8fd0\u884c\u671f\u95f4\u7194\u65ad\u6216\u5b9e\u4f8b\u9694\u79bb\u72b6\u6001\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u9700\u8981\u76d1\u542c\u5230\u76f8\u5173\u4e8b\u4ef6\uff0c\u83b7\u53d6\u76f8\u5173\u4fe1\u606f\u5e76\u8fdb\u884c\u5904\u7406","title":"General develop"},{"location":"catalog/general-develop/#_1","text":"\u7cfb\u7edf\u901a\u8fc7\u670d\u52a1\u4e2d\u5fc3\u5b9e\u73b0\u670d\u52a1\u4e4b\u95f4\u7684\u53d1\u73b0\u3002\u670d\u52a1\u542f\u52a8\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u5411\u670d\u52a1\u4e2d\u5fc3\u8fdb\u884c\u6ce8\u518c\u3002\u5728\u8c03\u7528\u5176\u4ed6\u670d\u52a1\u7684\u65f6\u5019\uff0c\u4f1a\u4ece\u670d\u52a1\u4e2d\u5fc3\u67e5\u8be2\u5176\u4ed6\u670d\u52a1\u7684\u5b9e\u4f8b\u4fe1\u606f\uff0c\u6bd4\u5982\u8bbf\u95ee\u5730\u5740\u3001\u4f7f\u7528\u7684\u534f\u8bae\u4ee5\u53ca\u5176\u4ed6\u53c2\u6570\u3002\u670d\u52a1\u4e2d\u5fc3\u652f\u6301\u4f7f\u7528PULL\u548cPUSH\u4e24\u79cd\u6a21\u5f0f\u901a\u77e5\u5b9e\u4f8b\u53d8\u5316\u3002","title":"\u8bbf\u95ee\u670d\u52a1\u4e2d\u5fc3"},{"location":"catalog/general-develop/#_2","text":"\u4e00\u3001Metrics\u4ecb\u7ecd \u4e8c\u3001\u7edf\u8ba1\u9879\u6c47\u603b \u4e09\u3001\u4f7f\u7528\u65b9\u6cd5","title":"\u5e94\u7528\u6027\u80fd\u76d1\u63a7"},{"location":"catalog/general-develop/#_3","text":"\u5fae\u670d\u52a1\u67b6\u6784\u89e3\u51b3\u4e86\u5f88\u591a\u5355\u4f53\u5e94\u7528\u5e26\u6765\u7684\u95ee\u9898\uff0c\u4f46\u540c\u65f6\u4e5f\u9700\u8981\u6211\u4eec\u4ed8\u51fa\u989d\u5916\u7684\u4ee3\u4ef7\u3002\u7531\u4e8e\u7f51\u7edc\u7684\u4e0d\u7a33\u5b9a\u6027\u5e26\u6765\u7684\u8bf7\u6c42\u5904\u7406\u5ef6\u8fdf\u5c31\u662f\u4ee3\u4ef7\u4e4b\u4e00\u3002 \u5728\u5355\u4f53\u5e94\u7528\u4e2d\uff0c\u6240\u6709\u6a21\u5757\u90fd\u5728\u540c\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u8fd0\u884c\uff0c\u6240\u4ee5\u5e76\u6ca1\u6709\u6a21\u5757\u95f4\u4e92\u901a\u7684\u95ee\u9898\u3002\u4f46\u5fae\u670d\u52a1\u67b6\u6784\u4e2d\uff0c\u670d\u52a1\u95f4\u901a\u8fc7\u7f51\u7edc\u6c9f\u901a\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u5f97\u4e0d\u5904\u7406\u548c\u7f51\u7edc\u6709\u5173\u7684 \u95ee\u9898\uff0c\u4f8b\u5982\uff1a\u5ef6\u8fdf\u3001\u8d85\u65f6\u3001\u7f51\u7edc\u5206\u533a\u7b49\u3002 \u53e6\u5916\uff0c\u968f\u7740\u4e1a\u52a1\u7684\u6269\u5c55\u670d\u52a1\u589e\u591a\uff0c\u6211\u4eec\u5f88\u96be\u6d1e\u5bdf\u6570\u636e\u5982\u4f55\u5728\u86db\u7f51\u822c\u590d\u6742\u7684\u670d\u52a1\u7ed3\u6784\u4e2d\u6d41\u8f6c\u3002\u6211\u4eec\u5982\u4f55\u624d\u80fd\u6709\u6548\u7684\u76d1\u63a7\u7f51\u7edc\u5ef6\u8fdf\u5e76\u4e14\u53ef\u89c6\u5316\u670d\u52a1\u4e2d\u7684\u6570\u636e\u6d41\u8f6c\u5462\uff1f \u5206\u5e03\u5f0f\u8c03\u7528\u94fe\u8ffd\u8e2a\u7528\u4e8e\u6709\u6548\u5730\u76d1\u63a7\u5fae\u670d\u52a1\u7684\u7f51\u7edc\u5ef6\u65f6\u5e76\u53ef\u89c6\u5316\u5fae\u670d\u52a1\u4e2d\u7684\u6570\u636e\u6d41\u8f6c\u3002","title":"\u5fae\u670d\u52a1\u8c03\u7528\u94fe"},{"location":"catalog/general-develop/#_4","text":"\u5206\u5e03\u5f0f\u8c03\u7528\u94fe\u8ffd\u8e2a\u63d0\u4f9b\u4e86\u670d\u52a1\u95f4\u8c03\u7528\u7684\u65f6\u5e8f\u4fe1\u606f\uff0c\u4f46\u670d\u52a1\u5185\u90e8\u7684\u94fe\u8def\u8c03\u7528\u4fe1\u606f\u5bf9\u5f00\u53d1\u8005\u540c\u6837\u91cd\u8981\uff0c\u5982\u679c\u80fd\u5c06\u4e24\u8005\u5408\u4e8c\u4e3a\u4e00\uff0c\u5c31\u80fd\u63d0\u4f9b\u66f4\u5b8c\u6574\u7684\u8c03\u7528\u94fe\uff0c\u66f4\u5bb9\u6613\u5b9a\u4f4d\u9519\u8bef\u548c\u6f5c\u5728\u6027\u80fd\u95ee\u9898\u3002","title":"\u81ea\u5b9a\u4e49\u8c03\u7528\u94fe\u6253\u70b9"},{"location":"catalog/general-develop/#_5","text":"\u672c\u5c0f\u8282\u4ecb\u7ecd\u5982\u4f55\u5728\u5f00\u53d1\u8005\u672c\u5730\u8fdb\u884c\u6d88\u8d39\u8005/\u63d0\u4f9b\u8005\u5e94\u7528\u7684\u5f00\u53d1\u8c03\u8bd5\u3002\u5f00\u53d1\u670d\u52a1\u63d0\u4f9b\u8005\u8bf7\u53c2\u80033 \u5f00\u53d1\u670d\u52a1\u63d0\u4f9b\u8005\u7ae0\u8282\uff0c\u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005\u8bf7\u53c2\u80034 \u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005\u3002\u670d\u52a1\u63d0\u4f9b\u8005\u548c\u6d88\u8d39\u63d0\u4f9b\u8005\u5747\u9700\u8981\u8fde\u63a5\u5230\u5728\u8fdc\u7a0b\u7684\u670d\u52a1\u4e2d\u5fc3\uff0c\u4e3a\u4e86\u672c\u5730\u5fae\u670d\u52a1\u7684\u5f00\u53d1\u548c\u8c03\u8bd5\uff0c\u672c\u5c0f\u8282\u4ecb\u7ecd\u4e86\u4e24\u79cd\u642d\u5efa\u672c\u5730\u670d\u52a1\u4e2d\u5fc3\u7684\u65b9\u6cd5\u8fdb\u884c\u672c\u5730\u5fae\u670d\u52a1\u8c03\u8bd5\uff1a","title":"\u672c\u5730\u5f00\u53d1\u548c\u6d4b\u8bd5"},{"location":"catalog/general-develop/#http-filter","text":"\u67d0\u4e9b\u573a\u666f\u4e2d\uff0c\u4e1a\u52a1\u4f7f\u7528http\u800c\u4e0d\u662fhttps\uff0c\u4f5c\u4e3a\u7f51\u7edc\u4f20\u8f93\u901a\u9053\uff0c\u6b64\u65f6\u4e3a\u4e86\u9632\u6b62\u88ab\u4f2a\u9020\u6216\u7be1\u6539\u8bf7\u6c42\uff0c\u9700\u8981\u63d0\u4f9bconsumer\u3001producer\u4e4b\u95f4\u5bf9http\u7801\u6d41\u7684\u7b7e\u540d\u529f\u80fd\u3002","title":"Http Filter"},{"location":"catalog/general-develop/#_6","text":"\u6587\u4ef6\u4e0a\u4f20\uff0c\u5f53\u524d\u652f\u6301\u5728vertx rest\u901a\u9053\u548cservlet rest\u4e2d\u4f7f\u7528\u3002 \u6587\u4ef6\u4e0a\u4f20\u4f7f\u7528\u6807\u51c6\u7684http form\u683c\u5f0f\uff0c\u53ef\u4e0e\u6d4f\u89c8\u5668\u7684\u4e0a\u4f20\u76f4\u63a5\u5bf9\u63a5\u3002","title":"\u6587\u4ef6\u4e0a\u4f20"},{"location":"catalog/general-develop/#_7","text":"\u6587\u4ef6\u4e0b\u8f7d\uff0c\u5f53\u524d\u5728vertx rest\u901a\u9053\u548cservlet rest\u4e2d\u53ef\u7528\u3002","title":"\u6587\u4ef6\u4e0b\u8f7d"},{"location":"catalog/general-develop/#reactive","text":"\u7b80\u5355\u540c\u6b65\u6a21\u5f0f\u3001\u5d4c\u5957\u540c\u6b65\u8c03\u7528\u3001\u7eafReactive\u673a\u5236\u3001\u6df7\u5408Reactive\u673a\u5236\u4e4b\u95f4\u7684\u5bf9\u6bd4\u53ca\u8bf4\u660e\u3002","title":"Reactive"},{"location":"catalog/general-develop/#dns","text":"\u7528\u6237\u4f7f\u7528\u57df\u540d\u8fde\u63a5\u534e\u4e3a\u516c\u6709\u4e91\u6216\u8005\u4e09\u65b9\u7cfb\u7edf\u65f6\uff0c\u9700\u8981\u4f7f\u7528\u5230\u57df\u540d\u89e3\u6790\u7cfb\u7edf\u3002\u5728\u4e0d\u540c\u7684\u7cfb\u7edf\u3001\u4e0d\u540c\u7684\u6846\u67b6\u4f7f\u7528\u7684\u57df\u540d\u89e3\u6790\u673a\u5236\u90fd\u53ef\u80fd\u4e0d\u592a\u4e00\u6837\u3002\u6240\u4ee5\u6211\u4eec\u6709\u5fc5\u8981\u63d0\u4f9b\u4e00\u4e2a\u7edf\u4e00\u7684\u914d\u7f6e\u5165\u53e3\uff0c\u4ee5\u4fbf\u5f00\u53d1\u8fd0\u7ef4\u4eba\u5458\u53ef\u4ee5\u81ea\u5b9a\u4e49DNS\u89e3\u6790\u673a\u5236\uff0c\u800c\u4e0d\u5b8c\u5168\u53d7\u5236\u4e8e\u7cfb\u7edf\u914d\u7f6e\u3002","title":"DNS\u81ea\u5b9a\u4e49\u914d\u7f6e"},{"location":"catalog/general-develop/#_8","text":"\u4f5c\u4e3a\u4e00\u540d\u5f00\u53d1\u8005\uff0c\u5728\u516c\u53f8\u5f00\u53d1\u73af\u5883\uff0c\u53ef\u80fd\u662f\u901a\u8fc7\u516c\u53f8\u4ee3\u7406\u7f51\u7edc\u63a5\u5165\u5230\u56e0\u7279\u7f51\u3002\u5982\u679c\u8c03\u8bd5\u670d\u52a1\u65f6\u8fd8\u5fc5\u987b\u4f9d\u8d56\u7f51\u4e0a\u8d44\u6e90\uff0c\u6bd4\u5982\u76f4\u63a5\u8fde\u63a5\u534e\u4e3a\u5171\u6709\u4e91\u670d\u52a1\u4e2d\u5fc3\uff0c\u90a3\u4e48\u5c31\u5fc5\u987b\u914d\u7f6e\u4ee3\u7406\u3002","title":"\u4ee3\u7406\u8bbe\u7f6e"},{"location":"catalog/general-develop/#_9","text":"\u4e3a\u65b9\u4fbf\u6cbb\u7406\uff0c\u4f7f\u7528ServiceComb\u8fdb\u884c\u5f00\u53d1\uff0c\u4f1a\u5c06\u5f53\u524d\u4f7f\u7528\u7684ServiceComb\u7248\u672c\u53f7\u4e0a\u62a5\u81f3\u670d\u52a1\u4e2d\u5fc3\uff0c\u5e76\u4e14\u652f\u6301\u5176\u4ed6\u6846\u67b6\u96c6\u6210ServiceComb\u65f6\u4e0a\u62a5\u5176\u4ed6\u6846\u67b6\u7684\u7248\u672c\u53f7\u3002","title":"\u6846\u67b6\u4e0a\u62a5\u7248\u672c\u53f7"},{"location":"catalog/general-develop/#_10","text":"\u5e94\u7528\u662f\u5fae\u670d\u52a1\u5b9e\u4f8b\u9694\u79bb\u5c42\u6b21\u4e2d\u7684\u4e00\u5c42\uff0c\u4e00\u4e2a\u5e94\u7528\u5305\u542b\u591a\u4e2a\u5fae\u670d\u52a1\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u53ea\u5141\u8bb8\u540c\u5e94\u7528\u7684\u5fae\u670d\u52a1\u5b9e\u4f8b\u76f8\u4e92\u8c03\u7528\u3002","title":"\u8de8\u5e94\u7528\u8c03\u7528"},{"location":"catalog/general-develop/#_11","text":"\u7531\u4e8eHTTP\u534f\u8bae\u7684\u975e\u5b89\u5168\u6027\uff0c\u5728\u7f51\u7edc\u4e2d\u4f20\u8f93\u7684\u6570\u636e\u80fd\u8f7b\u6613\u88ab\u5404\u79cd\u6293\u5305\u5de5\u5177\u76d1\u542c\u3002\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u4e1a\u52a1\u5bf9\u5e94\u7528\u6216\u670d\u52a1\u95f4\u4f20\u8f93\u7684\u654f\u611f\u6570\u636e\u6709\u8f83\u9ad8\u7684\u5b89\u5168\u8981\u6c42\uff0c\u8fd9\u7c7b\u6570\u636e\u9700\u8981\u7279\u522b\u7684\u52a0\u5bc6\u4fdd\u62a4\uff08\u4e1a\u52a1\u4e0d\u540c\u5bf9\u7b97\u6cd5\u8981\u6c42\u4e0d\u540c\uff09\uff0c\u8fd9\u6837\u5373\u4f7f\u5185\u5bb9\u88ab\u622a\u83b7\uff0c\u4e5f\u53ef\u4ee5\u4fdd\u62a4\u5176\u4e2d\u7684\u654f\u611f\u6570\u636e\u4e0d\u88ab\u8f7b\u6613\u83b7\u53d6\u3002","title":"\u5b9a\u5236\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u65b9\u6cd5"},{"location":"catalog/general-develop/#context","text":"ServiceComb\u63d0\u4f9b\u4e86Context\u5728\u5fae\u670d\u52a1\u4e4b\u95f4\u4f20\u9012\u6570\u636e\u3002Context\u662fkey/value\u5bf9\uff0c\u53ea\u80fd\u591f\u4f7f\u7528String\u7c7b\u578b\u7684\u6570\u636e\u3002\u7531\u4e8eContext\u4f1a\u5e8f\u5217\u5316\u4e3ajson\u683c\u5f0f\u5e76\u901a\u8fc7HTTP Header\u4f20\u9012\uff0c\u56e0\u6b64\u4e5f\u4e0d\u652f\u6301ASCII\u4e4b\u5916\u7684\u5b57\u7b26\uff0c\u5176\u4ed6\u5b57\u7b26\u9700\u8981\u5f00\u53d1\u8005\u5148\u81ea\u884c\u7f16\u7801\u518d\u4f20\u9012\u3002Context\u5728\u4e00\u6b21\u8bf7\u6c42\u4e2d\uff0c\u4f1a\u5728\u8bf7\u6c42\u94fe\u4e0a\u4f20\u9012\uff0c\u4e0d\u9700\u8981\u91cd\u65b0\u8bbe\u7f6e\u3002access log\u7684trace id\u7b49\u529f\u80fd\u90fd\u57fa\u4e8e\u8fd9\u4e2a\u7279\u6027\u5b9e\u73b0\u7684\u3002","title":"\u4f7f\u7528Context\u4f20\u9012\u63a7\u5236\u6d88\u606f"},{"location":"catalog/general-develop/#_12","text":"\u5f53\u524dREST\u901a\u9053\u8fd4\u56de\u503c\u652f\u6301application/json\u548ctext/plain\u4e24\u79cd\u683c\u5f0f\uff0c\u652f\u6301\u5f00\u53d1\u4eba\u5458\u6269\u5c55\u548c\u91cd\u5199\uff0c\u670d\u52a1\u63d0\u4f9b\u8005\u901a\u8fc7produces\u58f0\u660e\u53ef\u63d0\u4f9b\u5e8f\u5217\u5316\u80fd\u529b\uff0c\u670d\u52a1\u6d88\u8d39\u8005\u901a\u8fc7\u8bf7\u6c42\u7684Accept\u5934\u6307\u660e\u8fd4\u56de\u503c\u5e8f\u5217\u5316\u65b9\u5f0f\uff0c\u9ed8\u8ba4\u8fd4\u56deapplication/json\u683c\u5f0f\u7684\u6570\u636e\u3002","title":"\u8fd4\u56de\u503c\u5e8f\u5217\u5316\u6269\u5c55"},{"location":"catalog/general-develop/#cors","text":"\u8de8\u57df\u8d44\u6e90\u5171\u4eab(CORS, Cross-Origin Resource Sharing)\u5141\u8bb8Web\u670d\u52a1\u5668\u8fdb\u884c\u8de8\u57df\u8bbf\u95ee\u63a7\u5236\uff0c\u4f7f\u6d4f\u89c8\u5668\u53ef\u4ee5\u66f4\u5b89\u5168\u5730\u8fdb\u884c\u8de8\u57df\u6570\u636e\u4f20\u8f93\u3002","title":"CORS\u673a\u5236"},{"location":"catalog/general-develop/#_13","text":"\u5728\u5fae\u670d\u52a1\u8fd0\u884c\u671f\u95f4\u7194\u65ad\u6216\u5b9e\u4f8b\u9694\u79bb\u72b6\u6001\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u9700\u8981\u76d1\u542c\u5230\u76f8\u5173\u4e8b\u4ef6\uff0c\u83b7\u53d6\u76f8\u5173\u4fe1\u606f\u5e76\u8fdb\u884c\u5904\u7406","title":"\u83b7\u53d6\u7194\u65ad\u4e0e\u5b9e\u4f8b\u9694\u79bb\u544a\u8b66\u4e8b\u4ef6\u4fe1\u606f"},{"location":"catalog/securety/","text":"","title":"Securety"},{"location":"catalog/security/","text":"\u4f7f\u7528TLS\u901a\u4fe1 \u7528\u6237\u901a\u8fc7\u7b80\u5355\u7684\u914d\u7f6e\u5373\u53ef\u542f\u7528TLS\u901a\u4fe1\uff0c\u4ee5\u4fdd\u969c\u6570\u636e\u7684\u4f20\u8f93\u5b89\u5168\u3002 \u4f7f\u7528RSA\u8ba4\u8bc1 \u7528\u6237\u901a\u8fc7\u7b80\u5355\u7684\u914d\u7f6e\u5373\u53ef\u542f\u7528\u670d\u52a1\u95f4RSA\u8ba4\u8bc1\uff0c\u4ee5\u4fdd\u969c\u670d\u52a1\u63a5\u53e3\u7684\u5b89\u5168\u6027\u3002\u8be6\u7ec6\u4ecb\u7ecd\u53c2\u8003\u516c\u94a5\u8ba4\u8bc1","title":"Security"},{"location":"catalog/security/#tls","text":"\u7528\u6237\u901a\u8fc7\u7b80\u5355\u7684\u914d\u7f6e\u5373\u53ef\u542f\u7528TLS\u901a\u4fe1\uff0c\u4ee5\u4fdd\u969c\u6570\u636e\u7684\u4f20\u8f93\u5b89\u5168\u3002","title":"\u4f7f\u7528TLS\u901a\u4fe1"},{"location":"catalog/security/#rsa","text":"\u7528\u6237\u901a\u8fc7\u7b80\u5355\u7684\u914d\u7f6e\u5373\u53ef\u542f\u7528\u670d\u52a1\u95f4RSA\u8ba4\u8bc1\uff0c\u4ee5\u4fdd\u969c\u670d\u52a1\u63a5\u53e3\u7684\u5b89\u5168\u6027\u3002\u8be6\u7ec6\u4ecb\u7ecd\u53c2\u8003\u516c\u94a5\u8ba4\u8bc1","title":"\u4f7f\u7528RSA\u8ba4\u8bc1"},{"location":"catalog/service-package-run/","text":"\u4ee5standalone\u6a21\u5f0f\u6253\u5305 \u4e00\u4e2aStandalone\u7684\u5bb9\u5668\uff0c\u4ee5\u7b80\u5355\u7684Main\u52a0\u8f7dSpring\u542f\u52a8\uff0c\u56e0\u4e3a\u670d\u52a1\u901a\u5e38\u4e0d\u9700\u8981Tomcat/JBoss\u7b49Web\u5bb9\u5668\u7684\u7279\u6027\uff0c\u6ca1\u5fc5\u8981\u7528Web\u5bb9\u5668\u53bb\u52a0\u8f7d\u670d\u52a1\u3002\u5fae\u6846\u67b6\u63d0\u4f9b\u4e86standalone\u90e8\u7f72\u8fd0\u884c\u6a21\u5f0f\uff0c\u670d\u52a1\u5bb9\u5668\u53ea\u662f\u4e00\u4e2a\u7b80\u5355\u7684Main\u65b9\u6cd5\uff0c\u5e76\u52a0\u8f7d\u4e00\u4e2a\u7b80\u5355\u7684Spring\u5bb9\u5668\uff0c\u7528\u4e8e\u66b4\u9732\u670d\u52a1\u3002 \u4ee5WEB\u5bb9\u5668\u6a21\u5f0f\u6253\u5305 \u5982\u679c\u9700\u8981\u5c06\u8be5\u5fae\u670d\u52a1\u52a0\u8f7d\u5230web\u5bb9\u5668\u4e2d\u542f\u52a8\u8fd0\u884c\u65f6\uff0c\u9700\u8981\u65b0\u5efa\u4e00\u4e2aservlet\u5de5\u7a0b\u5305\u88c5\u4e00\u4e0b\uff0c\u8be5servlet\u5de5\u7a0b\uff0c\u6839\u636e\u9700\u8981\uff0c\u53ef\u4ee5\u4e0d\u5199\u6216\u5199\u5c11\u91cf\u7684\u5f15\u5bfc\u4ee3\u7801\u5373\u53ef\u3002","title":"Service package run"},{"location":"catalog/service-package-run/#standalone","text":"\u4e00\u4e2aStandalone\u7684\u5bb9\u5668\uff0c\u4ee5\u7b80\u5355\u7684Main\u52a0\u8f7dSpring\u542f\u52a8\uff0c\u56e0\u4e3a\u670d\u52a1\u901a\u5e38\u4e0d\u9700\u8981Tomcat/JBoss\u7b49Web\u5bb9\u5668\u7684\u7279\u6027\uff0c\u6ca1\u5fc5\u8981\u7528Web\u5bb9\u5668\u53bb\u52a0\u8f7d\u670d\u52a1\u3002\u5fae\u6846\u67b6\u63d0\u4f9b\u4e86standalone\u90e8\u7f72\u8fd0\u884c\u6a21\u5f0f\uff0c\u670d\u52a1\u5bb9\u5668\u53ea\u662f\u4e00\u4e2a\u7b80\u5355\u7684Main\u65b9\u6cd5\uff0c\u5e76\u52a0\u8f7d\u4e00\u4e2a\u7b80\u5355\u7684Spring\u5bb9\u5668\uff0c\u7528\u4e8e\u66b4\u9732\u670d\u52a1\u3002","title":"\u4ee5standalone\u6a21\u5f0f\u6253\u5305"},{"location":"catalog/service-package-run/#web","text":"\u5982\u679c\u9700\u8981\u5c06\u8be5\u5fae\u670d\u52a1\u52a0\u8f7d\u5230web\u5bb9\u5668\u4e2d\u542f\u52a8\u8fd0\u884c\u65f6\uff0c\u9700\u8981\u65b0\u5efa\u4e00\u4e2aservlet\u5de5\u7a0b\u5305\u88c5\u4e00\u4e0b\uff0c\u8be5servlet\u5de5\u7a0b\uff0c\u6839\u636e\u9700\u8981\uff0c\u53ef\u4ee5\u4e0d\u5199\u6216\u5199\u5c11\u91cf\u7684\u5f15\u5bfc\u4ee3\u7801\u5373\u53ef\u3002","title":"\u4ee5WEB\u5bb9\u5668\u6a21\u5f0f\u6253\u5305"},{"location":"catalog/start/","text":"\u672f\u8bed\u8868 \u5fae\u670d\u52a1\u7cfb\u7edf\u67b6\u6784 \u5b89\u88c5\u672c\u5730\u5f00\u53d1\u73af\u5883 \u2022 \u670d\u52a1\u5b9a\u4e49\u4fe1\u606f\u662f\u5fae\u670d\u52a1\u7684\u8eab\u4efd\u6807\u8bc6\uff0c\u5b83\u5b9a\u4e49\u4e86\u670d\u52a1\u4ece\u5c5e\u4e8e\u54ea\u4e2a\u5e94\u7528\uff0c\u4ee5\u53ca\u540d\u5b57\u548c\u7248\u672c\u3002\u670d\u52a1\u5b9a\u4e49\u4fe1\u606f\u4e2d\u4e5f\u53ef\u4ee5\u6709\u6269\u5c55\u4fe1\u606f\uff0c\u7528\u4e8e\u5b9a\u4e49\u670d\u52a1\u7684\u5c5e\u6027\u5143\u6570\u636e\u3002 \u5f00\u53d1\u7b2c\u4e00\u4e2a\u5fae\u670d\u52a1 \u5f00\u53d1\u8005\u53ef\u4ee5\u901a\u8fc7\u4e24\u79cd\u65b9\u5f0f\u5feb\u901f\u6784\u5efa\u4e00\u4e2a\u9879\u76ee\uff1a \u2022 \u4e0b\u8f7dsamples\u9879\u76ee\u3002\u5efa\u8bae\u628a\u6574\u4e2a\u9879\u76ee\u90fd\u4e0b\u8f7d\u4e0b\u6765\uff0c\u6309\u7167\u4f8b\u5b50 SpringMVC \u6216\u8005 JAX RS\u8fdb\u884c\u521d\u59cb\u5316\u914d\u7f6e\u3002 \u2022 \u4f7f\u7528archetypes\u751f\u6210\u9879\u76ee","title":"Start"},{"location":"catalog/start/#_1","text":"","title":"\u672f\u8bed\u8868"},{"location":"catalog/start/#_2","text":"","title":"\u5fae\u670d\u52a1\u7cfb\u7edf\u67b6\u6784"},{"location":"catalog/start/#_3","text":"\u2022 \u670d\u52a1\u5b9a\u4e49\u4fe1\u606f\u662f\u5fae\u670d\u52a1\u7684\u8eab\u4efd\u6807\u8bc6\uff0c\u5b83\u5b9a\u4e49\u4e86\u670d\u52a1\u4ece\u5c5e\u4e8e\u54ea\u4e2a\u5e94\u7528\uff0c\u4ee5\u53ca\u540d\u5b57\u548c\u7248\u672c\u3002\u670d\u52a1\u5b9a\u4e49\u4fe1\u606f\u4e2d\u4e5f\u53ef\u4ee5\u6709\u6269\u5c55\u4fe1\u606f\uff0c\u7528\u4e8e\u5b9a\u4e49\u670d\u52a1\u7684\u5c5e\u6027\u5143\u6570\u636e\u3002","title":"\u5b89\u88c5\u672c\u5730\u5f00\u53d1\u73af\u5883"},{"location":"catalog/start/#_4","text":"\u5f00\u53d1\u8005\u53ef\u4ee5\u901a\u8fc7\u4e24\u79cd\u65b9\u5f0f\u5feb\u901f\u6784\u5efa\u4e00\u4e2a\u9879\u76ee\uff1a \u2022 \u4e0b\u8f7dsamples\u9879\u76ee\u3002\u5efa\u8bae\u628a\u6574\u4e2a\u9879\u76ee\u90fd\u4e0b\u8f7d\u4e0b\u6765\uff0c\u6309\u7167\u4f8b\u5b50 SpringMVC \u6216\u8005 JAX RS\u8fdb\u884c\u521d\u59cb\u5316\u914d\u7f6e\u3002 \u2022 \u4f7f\u7528archetypes\u751f\u6210\u9879\u76ee","title":"\u5f00\u53d1\u7b2c\u4e00\u4e2a\u5fae\u670d\u52a1"},{"location":"catalog/use-tool/","text":"","title":"Use tool"},{"location":"config/general-config/","text":"\u901a\u7528\u914d\u7f6e\u8bf4\u660e \u5e94\u7528\u7a0b\u5e8f\u4e00\u822c\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u3001\u73af\u5883\u53d8\u91cf\u7b49\u7ba1\u7406\u914d\u7f6e\u4fe1\u606f\u3002\u5fae\u670d\u52a1\u67b6\u6784\u5bf9\u7edf\u4e00\u914d\u7f6e\u63d0\u51fa\u4e86\u66f4\u9ad8\u7684\u8981\u6c42\uff0c\u5f88\u591a\u914d\u7f6e\u4fe1\u606f\u9700\u8981\u5728\u4e0d\u542f\u505c\u670d\u52a1\u7684 \u60c5\u51b5\u4e0b\u5b9e\u73b0\u52a8\u6001\u4fee\u6539\u3002 java-chassis \u5bf9\u4e0d\u540c\u7684\u914d\u7f6e\u6e90\u8fdb\u884c\u4e86\u62bd\u8c61\uff0c \u5f00\u53d1\u8005\u53ef\u4ee5\u4e0d\u5173\u5fc3\u914d\u7f6e\u9879\u5177\u4f53\u7684\u914d\u7f6e\u6e90\uff0c\u91c7\u7528\u7edf\u4e00\u7684\u63a5\u53e3\u8bfb\u53d6\u914d\u7f6e\u3002 \u914d\u7f6e\u6e90\u5c42\u7ea7 ServiceComb\u63d0\u4f9b\u4e86\u5206\u5c42\u6b21\u7684\u914d\u7f6e\u673a\u5236\u3002\u6309\u7167\u4f18\u5148\u7ea7\u4ece\u9ad8\u5230\u4f4e\uff0c\u5206\u4e3a\uff1a \u914d\u7f6e\u4e2d\u5fc3\uff08\u52a8\u6001\u914d\u7f6e\uff09 Java System Property\uff08-D\u53c2\u6570\uff09 \u73af\u5883\u53d8\u91cf \u914d\u7f6e\u6587\u4ef6 \u914d\u7f6e\u6587\u4ef6 \u914d\u7f6e\u6587\u4ef6\u9ed8\u8ba4\u662fclasspath\u4e0b\u7684microservice.yaml\u6587\u4ef6\u3002ServiceComb-Java-Chassis\u542f\u52a8\u65f6\u4f1a\u4ececlasspath\u7684\u5404\u4e2ajar\u5305\u3001\u78c1\u76d8 \u76ee\u5f55\u4e2d\u52a0\u8f7dmicroservice.yaml\u6587\u4ef6\uff0c\u5e76\u5c06\u8fd9\u4e9b\u6587\u4ef6\u5408\u5e76\u4e3a\u4e00\u4efdmicroservice.yaml\u914d\u7f6e\u3002\u4f4d\u4e8e\u78c1\u76d8\u4e0a\u7684microservice.yaml \u6587\u4ef6\u4f18\u5148\u7ea7\u9ad8\u4e8ejar\u5305\u4e2d\u7684microservice.yaml\u6587\u4ef6\u3002\u7528\u6237\u8fd8\u53ef\u4ee5\u901a\u8fc7\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u6307\u5b9a servicecomb-config-order \u6765\u6307\u5b9a\u4f18\u5148\u7ea7\uff0c \u5982\u679c\u4e0d\u540c\u8def\u5f84\u4e0b\u7684 microservice.yaml \u5305\u542b\u4e00\u6837\u7684\u914d\u7f6e\u9879\uff0c\u6587\u4ef6\u4e2d servicecomb-config-order \u503c\u5927\u7684\u914d\u7f6e\u9879\u4f1a\u8986\u76d6\u503c\u5c0f\u7684\u914d\u7f6e\u9879\u3002 Tips\uff1a\u7531\u4e8e\u78c1\u76d8\u4e0a\u7684microservice.yaml\u6587\u4ef6\u4f18\u5148\u7ea7\u8f83\u9ad8\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6253\u5305\u65f6\u5728\u670d\u52a1\u53ef\u6267\u884cjar\u5305\u7684classpath\u91cc\u52a0\u4e0a . \u76ee\u5f55\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u670d\u52a1jar\u5305\u6240\u5728\u7684\u76ee\u5f55\u91cc\u653e\u7f6e\u4e00\u4efdmicroservice.yaml\u6765\u8986\u76d6jar\u5305\u5185\u7684\u914d\u7f6e\u6587\u4ef6\u3002 \u9ed8\u8ba4\u7684\u914d\u7f6e\u6587\u4ef6\u540d\u4e3amicroservice.yaml\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6eJava System Property\u6765\u589e\u52a0\u5176\u4ed6\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u6216\u4fee\u6539\u9ed8\u8ba4\u7684\u914d\u7f6e\u6587\u4ef6\u540d\uff1a Java System Property\u53d8\u91cf\u540d \u63cf\u8ff0 servicecomb.configurationSource.additionalUrls \u914d\u7f6e\u6587\u4ef6\u7684\u5217\u8868\uff0c\u4ee5 , \u5206\u9694\u7684\u591a\u4e2a\u5305\u542b\u5177\u4f53\u4f4d\u7f6e\u7684\u5b8c\u6574\u6587\u4ef6\u540d servicecomb.configurationSource.defaultFileName \u9ed8\u8ba4\u914d\u7f6e\u6587\u4ef6\u540d \u73af\u5883\u53d8\u91cf Linux\u7684\u73af\u5883\u53d8\u91cf\u540d\u4e0d\u5141\u8bb8\u5e26 . \u7b26\u53f7\uff0c\u56e0\u6b64\u67d0\u4e9b\u914d\u7f6e\u9879\u65e0\u6cd5\u76f4\u63a5\u914d\u7f6e\u5728\u73af\u5883\u53d8\u91cf\u91cc\u3002\u53ef\u4ee5\u5c06\u914d\u7f6e\u9879key\u7684 . \u7b26\u53f7\u6539\u4e3a\u4e0b\u5212\u7ebf _ \uff0c\u5c06\u8f6c\u6362\u540e\u7684\u914d\u7f6e\u9879\u914d\u5728\u73af\u5883\u53d8\u91cf\u91cc\uff0cServiceComb-Java-Chassis\u53ef\u4ee5\u81ea\u52a8\u5c06\u73af\u5883\u53d8\u91cf\u5339\u914d\u5230\u539f\u914d\u7f6e\u9879\u4e0a\u3002 \u4f8b\u5982\uff1a\u5bf9\u4e8emicroservice.yaml\u4e2d\u914d\u7f6e\u7684 servicecomb: rest: address: 0.0.0.0:8080 \u53ef\u4ee5\u5728\u73af\u5883\u53d8\u91cf\u4e2d\u8bbe\u7f6e servicecomb_rest_address=0.0.0.0:9090 \u6765\u5c06\u670d\u52a1\u76d1\u542c\u7684\u7aef\u53e3\u8986\u5199\u4e3a9090\u3002\u8fd9\u79cd\u4e0b\u5212\u7ebf\u8f6c\u70b9\u53f7\u7684\u673a\u5236\u4e5f\u9002\u7528\u4e8e\u5176\u4ed6\u7684\u914d\u7f6e\u5c42\u7ea7\u3002 \u914d\u7f6e\u4e2d\u5fc3\uff08\u52a8\u6001\u914d\u7f6e\uff09 \u914d\u7f6e\u4e2d\u5fc3\u662f\u5fae\u670d\u52a1\u67b6\u6784\u4e0b\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u4e2d\u95f4\u4ef6\uff0c\u901a\u8fc7\u914d\u7f6e\u4e2d\u5fc3\u7528\u6237\u53ef\u4ee5\u589e\u52a0\u548c\u5220\u9664\u914d\u7f6e\u4fe1\u606f\uff0c\u914d\u7f6e\u4fe1\u606f\u4f1a\u901a\u8fc7\u4e0d\u540c\u7684\u901a\u77e5\u673a\u5236\uff08\u901a\u5e38\u5305\u62ec PULL \u548c PUSH\uff09\uff0c \u5c06\u914d\u7f6e\u7684\u53d8\u5316\u63a8\u9001\u5230\u5fae\u670d\u52a1\u5b9e\u4f8b\u3002 java-chassis \u5141\u8bb8\u7528\u6237\u4f7f\u7528\u4e0d\u540c\u7684\u914d\u7f6e\u4e2d\u5fc3\uff0c \u76ee\u524d\u652f\u6301\u7528\u6237\u4f7f\u7528\u5982\u4e0b\u51e0\u79cd\u914d\u7f6e\u4e2d\u5fc3\uff1a \u534e\u4e3a\u4e91\u914d\u7f6e\u4e2d\u5fc3 \u534e\u4e3a\u4e91\u914d\u7f6e\u4e2d\u5fc3\u662f\u534e\u4e3a\u4e91CSE\u4ea7\u54c1\u7684\u4e00\u4e2a\u90e8\u4ef6\uff0cjava-chassis \u6700\u65e9\u4f7f\u7528\u5b83\u4f5c\u4e3a\u914d\u7f6e\u4e2d\u5fc3\u3002 \u5bf9\u63a5\u8fd9\u4e2a\u914d\u7f6e\u4e2d\u5fc3\u7684\u4ee3\u7801\u5728 config-cc \u6a21\u5757\u5b9e\u73b0\u3002 \u53ef\u4ee5\u4ece \u8f7b\u91cf\u5316\u5fae\u670d\u52a1\u5f15\u64ce \u4e0b\u8f7d\u672c\u5730\u4f7f\u7528\u7684\u7248\u672c\u3002\u4e5f\u53ef\u4ee5 \u76f4\u63a5\u8bbf\u95ee\u534e\u4e3a\u4e91 ServiceStage \u4ea7\u54c1\uff0c\u4f7f\u7528\u5728\u7ebf\u7684\u7248\u672c\u3002 \u4f7f\u7528\u534e\u4e3a\u4e91\u914d\u7f6e\u4e2d\u5fc3\uff0c\u9700\u8981\u5728\u9879\u76ee\u4e2d\u5f15\u5165\u5982\u4e0b\u4f9d\u8d56\uff1a dependency groupId org.apache.servicecomb /groupId artifactId config-cc /artifactId /dependency \u7136\u540e\u5728\u914d\u7f6e\u6587\u4ef6 microservice.yaml \u4e2d\u589e\u52a0\u5982\u4e0b\u914d\u7f6e\u9879\uff1a servicecomb: config: client: serverUri: http://127.0.0.1:30113 refreshMode: 0 refresh_interval: 5000 refreshPort: 30114 \u534e\u4e3a\u4e91\u914d\u7f6e\u4e2d\u5fc3\u7684\u5176\u4ed6\u914d\u7f6e\u9879\u542b\u4e49\u5982\u4e0b\uff1a \u914d\u7f6e\u9879\u540d \u63cf\u8ff0 servicecomb.config.client.refreshMode \u5e94\u7528\u914d\u7f6e\u7684\u5237\u65b0\u65b9\u5f0f\uff0c 0 \u4e3aconfig-center\u4e3b\u52a8push\uff0c 1 \u4e3aclient\u5468\u671fpull\uff0c\u9ed8\u8ba4\u4e3a 0 servicecomb.config.client.refreshPort config-center\u63a8\u9001\u914d\u7f6e\u7684\u7aef\u53e3 servicecomb.config.client.tenantName \u5e94\u7528\u7684\u79df\u6237\u540d\u79f0 servicecomb.config.client.serverUri config-center\u8bbf\u95ee\u5730\u5740\uff0c\u683c\u5f0f\u4e3a http(s)://{ip}:{port} \uff0c\u4ee5 , \u5206\u9694\u591a\u4e2a\u5730\u5740 servicecomb.config.client.refresh_interval pull\u6a21\u5f0f\u4e0b\u5237\u65b0\u914d\u7f6e\u9879\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u5355\u4f4d\u4e3a\u6beb\u79d2\uff0c\u9ed8\u8ba4\u503c\u4e3a30000 \u4f7f\u7528 servicecomb-kie servicecomb-kie \u662f\u5168\u65b0\u8bbe\u8ba1\u7684\u914d\u7f6e\u4e2d\u5fc3\u3002 \u4ece 2.0.0 \u7248\u672c\u5f00\u59cb\uff0c java-chassis \u652f\u6301\u4f7f\u7528 servicecomb-kie\u3002 servicecomb-kie \u7684\u5b89\u88c5\u6307\u5bfc\u53ef\u4ee5\u53c2\u8003\u5b98\u7f51\u6587\u6863\u3002 \u5728 java-chassis \u4e2d\u4f7f\u7528 servicecomb-kie\uff0c \u9700\u8981\u5f15\u5165\u4e0b\u9762\u7684\u4f9d\u8d56\uff1a dependency groupId org.apache.servicecomb /groupId artifactId config-kie /artifactId /dependency \u7136\u540e\u5728\u914d\u7f6e\u6587\u4ef6 microservice.yaml \u4e2d\u589e\u52a0\u5982\u4e0b\u914d\u7f6e\u9879\uff1a servicecomb: kie: serverUri: http://127.0.0.1:30110 refresh_interval: 5000 firstRefreshInterval: 5000 enableLongPolling: true domainName: default servicecomb-kie \u7684\u914d\u7f6e\u9879\u53ca\u5176\u542b\u4e49\u5982\u4e0b\uff1a \u914d\u7f6e\u9879\u540d \u63cf\u8ff0 servicecomb.kie.domainName \u533a\u57df\u540d\u79f0\uff0c\u9ed8\u8ba4\u4e3adefault servicecomb.kie.serverUri servicecomb-kie\u8bbf\u95ee\u5730\u5740\uff0c\u683c\u5f0f\u4e3a http(s)://{ip}:{port} \uff0c\u4ee5 , \u5206\u9694\u591a\u4e2a\u5730\u5740 servicecomb.kie.refresh_interval interval pull\u6a21\u5f0f\u4e0b\u5237\u65b0\u914d\u7f6e\u9879\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u5355\u4f4d\u4e3a\u6beb\u79d2\uff0c\u9ed8\u8ba4\u503c\u4e3a3000 servicecomb.kie.firstRefreshInterval interval pull\u6a21\u5f0f\u4e0b\u542f\u52a8\u8fc7\u7a0b\u4e2d\u9996\u6b21\u5237\u65b0\u65f6\u95f4\u95f4\u9694\uff0c\u5355\u4f4d\u4e3a\u6beb\u79d2\uff0c\u9ed8\u8ba4\u503c\u4e3a3000 servicecomb.kie.enableLongPolling long pulling\u6a21\u5f0f\u662f\u5426\u5f00\u542f\uff0c\u9ed8\u8ba4\u503c\u4e3atrue \u4f7f\u7528 nacos nacos \u662f alibaba \u63d0\u4f9b\u7684\u914d\u7f6e\u4e2d\u5fc3\u3002 java-chassis \u4ece 2.0.0 \u7248\u672c\u652f\u6301 nacos\u3002 nacos\u7684\u4e0b\u8f7d\u5b89\u88c5\u8bf7\u53c2\u8003\u5b98\u7f51\u4ecb\u7ecd\u3002 \u4f7f\u7528nacos\uff0c\u9700\u8981\u5728\u9879\u76ee\u4e2d\u5f15\u5165\u5982\u4e0b\u4f9d\u8d56\uff1a dependency groupId org.apache.servicecomb /groupId artifactId config-nacos /artifactId /dependency \u7136\u540e\u5728\u914d\u7f6e\u6587\u4ef6 microservice.yaml \u4e2d\u589e\u52a0\u5982\u4e0b\u914d\u7f6e\u9879\uff1a servicecomb: nacos: serverUri: http://127.0.0.1:8848 group: DEFAULT_GROUP dataId: example \u4f7f\u7528 Apollo Apollo \u662f\u643a\u7a0b\u6846\u67b6\u90e8\u95e8\u7814\u53d1\u7684\u5206\u5e03\u5f0f\u914d\u7f6e\u4e2d\u5fc3\u3002 Apollo\u7684\u4e0b\u8f7d\u5b89\u88c5\u8bf7\u53c2\u8003\u5b98\u7f51\u4ecb\u7ecd\u3002 dependency groupId org.apache.servicecomb /groupId artifactId config-apollo /artifactId /dependency \u7136\u540e\u5728\u914d\u7f6e\u6587\u4ef6 microservice.yaml \u4e2d\u589e\u52a0\u5982\u4e0b\u914d\u7f6e\u9879\uff1a apollo: config: serverUri: http://127.0.0.1:8070 serviceName: apollo-test env: DEV clusters: test-cluster namespace: application token: xxx refreshInterval: 30 firstRefreshInterval: 0 \u5728\u7a0b\u5e8f\u4e2d\u8bfb\u53d6\u914d\u7f6e\u4fe1\u606f Java-Chassis\u652f\u6301\u4f7f\u7528\u4e00\u81f4\u7684API\u83b7\u53d6\u914d\u7f6e\uff0c\u4e0d\u5fc5\u5173\u6ce8\u914d\u7f6e\u7684\u6765\u6e90\u4f4d\u7f6e\uff1a DynamicDoubleProperty myprop = DynamicPropertyFactory.getInstance().getDoubleProperty( trace.handler.sampler.percent , 0.1); \u4ee5\u4e0a\u4f8b\u5b50\u8868\u793a\u58f0\u660e\u4e86\u4e00\u4e2akey\u4e3a trace.handler.sampler.percent \u7684\u52a8\u6001\u914d\u7f6e\u5bf9\u8c61\uff0c\u9ed8\u8ba4\u503c\u4e3a 0.1 \u3002\u7528\u6237\u53ef\u4ee5\u9009\u62e9\u5728microservice.yaml\u6587\u4ef6\u3001\u73af\u5883\u53d8\u91cf\u3001Java System Property\u6216\u914d\u7f6e\u4e2d\u5fc3\u91cc\u914d\u7f6e trace.handler.sampler.percent \u6765\u4fee\u6539\u914d\u7f6e\u9879\u7684\u503c\u3002 \u7528\u6237\u4e0d\u9700\u8981\u5173\u6ce8\u4ece\u54ea\u91cc\u8bfb\u53d6\u914d\u7f6e\u9879\u7684\u503c\uff0cJava-Chassis\u4f1a\u81ea\u52a8\u4ece\u5404\u5904\u8bfb\u53d6\u914d\u7f6e\uff0c\u5e76\u6309\u7167\u4e0a\u6587\u7684\u4f18\u5148\u7ea7\u987a\u5e8f\u8fdb\u884c\u5408\u5e76\u4ee5\u4fdd\u8bc1\u7528\u6237\u53d6\u5230\u7684\u662f\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u914d\u7f6e\u503c\u3002 \u5173\u4e8e\u914d\u7f6e\u9879API\u7684\u5177\u4f53\u65b9\u6cd5\u53ef\u53c2\u8003 API DOC \u3002 \u5f00\u53d1\u8005\u53ef\u4ee5\u6ce8\u518ccallback\u5904\u7406\u914d\u7f6e\u53d8\u66f4\uff1a myprop.addCallback(new Runnable() { public void run() { // \u5f53\u914d\u7f6e\u9879\u7684\u503c\u53d8\u5316\u65f6\uff0c\u8be5\u56de\u8c03\u65b9\u6cd5\u4f1a\u88ab\u8c03\u7528 System.out.println( trace.handler.sampler.percent is changed! ); } }); \u8fdb\u884c\u914d\u7f6e\u9879\u6620\u5c04 \u6709\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u8981\u5c4f\u853d\u6211\u4eec\u4f7f\u7528\u7684\u4e00\u4e9b\u5f00\u6e90\u7ec4\u4ef6\u7684\u914d\u7f6e\u5e76\u7ed9\u7528\u6237\u63d0\u4f9b\u6211\u4eec\u81ea\u5df1\u7684\u914d\u7f6e\u9879\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u901a\u8fc7classpath\u4e0b\u7684mapping.yaml\u8fdb\u884c\u6620\u5c04\u5b9a\u4e49\uff1a registry: client: serviceUrl: defaultZone: eureka.client.serviceUrl.defaultZone \u5b9a\u4e49\u6620\u5c04\u540e\uff0c\u5728\u914d\u7f6e\u88c5\u8f7d\u7684\u65f6\u5019\u6846\u67b6\u4f1a\u9ed8\u8ba4\u8fdb\u884c\u6620\u5c04\uff0c\u628a\u6211\u4eec\u5b9a\u4e49\u7684\u914d\u7f6e\u9879\u6620\u5c04\u4e3a\u5f00\u6e90\u7ec4\u4ef6\u53ef\u4ee5\u8ba4\u7684\u914d\u7f6e\u9879\u3002","title":"\u901a\u7528\u914d\u7f6e\u8bf4\u660e"},{"location":"config/general-config/#_1","text":"\u5e94\u7528\u7a0b\u5e8f\u4e00\u822c\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u3001\u73af\u5883\u53d8\u91cf\u7b49\u7ba1\u7406\u914d\u7f6e\u4fe1\u606f\u3002\u5fae\u670d\u52a1\u67b6\u6784\u5bf9\u7edf\u4e00\u914d\u7f6e\u63d0\u51fa\u4e86\u66f4\u9ad8\u7684\u8981\u6c42\uff0c\u5f88\u591a\u914d\u7f6e\u4fe1\u606f\u9700\u8981\u5728\u4e0d\u542f\u505c\u670d\u52a1\u7684 \u60c5\u51b5\u4e0b\u5b9e\u73b0\u52a8\u6001\u4fee\u6539\u3002 java-chassis \u5bf9\u4e0d\u540c\u7684\u914d\u7f6e\u6e90\u8fdb\u884c\u4e86\u62bd\u8c61\uff0c \u5f00\u53d1\u8005\u53ef\u4ee5\u4e0d\u5173\u5fc3\u914d\u7f6e\u9879\u5177\u4f53\u7684\u914d\u7f6e\u6e90\uff0c\u91c7\u7528\u7edf\u4e00\u7684\u63a5\u53e3\u8bfb\u53d6\u914d\u7f6e\u3002","title":"\u901a\u7528\u914d\u7f6e\u8bf4\u660e"},{"location":"config/general-config/#_2","text":"ServiceComb\u63d0\u4f9b\u4e86\u5206\u5c42\u6b21\u7684\u914d\u7f6e\u673a\u5236\u3002\u6309\u7167\u4f18\u5148\u7ea7\u4ece\u9ad8\u5230\u4f4e\uff0c\u5206\u4e3a\uff1a \u914d\u7f6e\u4e2d\u5fc3\uff08\u52a8\u6001\u914d\u7f6e\uff09 Java System Property\uff08-D\u53c2\u6570\uff09 \u73af\u5883\u53d8\u91cf \u914d\u7f6e\u6587\u4ef6","title":"\u914d\u7f6e\u6e90\u5c42\u7ea7"},{"location":"config/general-config/#_3","text":"\u914d\u7f6e\u6587\u4ef6\u9ed8\u8ba4\u662fclasspath\u4e0b\u7684microservice.yaml\u6587\u4ef6\u3002ServiceComb-Java-Chassis\u542f\u52a8\u65f6\u4f1a\u4ececlasspath\u7684\u5404\u4e2ajar\u5305\u3001\u78c1\u76d8 \u76ee\u5f55\u4e2d\u52a0\u8f7dmicroservice.yaml\u6587\u4ef6\uff0c\u5e76\u5c06\u8fd9\u4e9b\u6587\u4ef6\u5408\u5e76\u4e3a\u4e00\u4efdmicroservice.yaml\u914d\u7f6e\u3002\u4f4d\u4e8e\u78c1\u76d8\u4e0a\u7684microservice.yaml \u6587\u4ef6\u4f18\u5148\u7ea7\u9ad8\u4e8ejar\u5305\u4e2d\u7684microservice.yaml\u6587\u4ef6\u3002\u7528\u6237\u8fd8\u53ef\u4ee5\u901a\u8fc7\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u6307\u5b9a servicecomb-config-order \u6765\u6307\u5b9a\u4f18\u5148\u7ea7\uff0c \u5982\u679c\u4e0d\u540c\u8def\u5f84\u4e0b\u7684 microservice.yaml \u5305\u542b\u4e00\u6837\u7684\u914d\u7f6e\u9879\uff0c\u6587\u4ef6\u4e2d servicecomb-config-order \u503c\u5927\u7684\u914d\u7f6e\u9879\u4f1a\u8986\u76d6\u503c\u5c0f\u7684\u914d\u7f6e\u9879\u3002 Tips\uff1a\u7531\u4e8e\u78c1\u76d8\u4e0a\u7684microservice.yaml\u6587\u4ef6\u4f18\u5148\u7ea7\u8f83\u9ad8\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6253\u5305\u65f6\u5728\u670d\u52a1\u53ef\u6267\u884cjar\u5305\u7684classpath\u91cc\u52a0\u4e0a . \u76ee\u5f55\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u670d\u52a1jar\u5305\u6240\u5728\u7684\u76ee\u5f55\u91cc\u653e\u7f6e\u4e00\u4efdmicroservice.yaml\u6765\u8986\u76d6jar\u5305\u5185\u7684\u914d\u7f6e\u6587\u4ef6\u3002 \u9ed8\u8ba4\u7684\u914d\u7f6e\u6587\u4ef6\u540d\u4e3amicroservice.yaml\uff0c\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6eJava System Property\u6765\u589e\u52a0\u5176\u4ed6\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u6216\u4fee\u6539\u9ed8\u8ba4\u7684\u914d\u7f6e\u6587\u4ef6\u540d\uff1a Java System Property\u53d8\u91cf\u540d \u63cf\u8ff0 servicecomb.configurationSource.additionalUrls \u914d\u7f6e\u6587\u4ef6\u7684\u5217\u8868\uff0c\u4ee5 , \u5206\u9694\u7684\u591a\u4e2a\u5305\u542b\u5177\u4f53\u4f4d\u7f6e\u7684\u5b8c\u6574\u6587\u4ef6\u540d servicecomb.configurationSource.defaultFileName \u9ed8\u8ba4\u914d\u7f6e\u6587\u4ef6\u540d","title":"\u914d\u7f6e\u6587\u4ef6"},{"location":"config/general-config/#_4","text":"Linux\u7684\u73af\u5883\u53d8\u91cf\u540d\u4e0d\u5141\u8bb8\u5e26 . \u7b26\u53f7\uff0c\u56e0\u6b64\u67d0\u4e9b\u914d\u7f6e\u9879\u65e0\u6cd5\u76f4\u63a5\u914d\u7f6e\u5728\u73af\u5883\u53d8\u91cf\u91cc\u3002\u53ef\u4ee5\u5c06\u914d\u7f6e\u9879key\u7684 . \u7b26\u53f7\u6539\u4e3a\u4e0b\u5212\u7ebf _ \uff0c\u5c06\u8f6c\u6362\u540e\u7684\u914d\u7f6e\u9879\u914d\u5728\u73af\u5883\u53d8\u91cf\u91cc\uff0cServiceComb-Java-Chassis\u53ef\u4ee5\u81ea\u52a8\u5c06\u73af\u5883\u53d8\u91cf\u5339\u914d\u5230\u539f\u914d\u7f6e\u9879\u4e0a\u3002 \u4f8b\u5982\uff1a\u5bf9\u4e8emicroservice.yaml\u4e2d\u914d\u7f6e\u7684 servicecomb: rest: address: 0.0.0.0:8080 \u53ef\u4ee5\u5728\u73af\u5883\u53d8\u91cf\u4e2d\u8bbe\u7f6e servicecomb_rest_address=0.0.0.0:9090 \u6765\u5c06\u670d\u52a1\u76d1\u542c\u7684\u7aef\u53e3\u8986\u5199\u4e3a9090\u3002\u8fd9\u79cd\u4e0b\u5212\u7ebf\u8f6c\u70b9\u53f7\u7684\u673a\u5236\u4e5f\u9002\u7528\u4e8e\u5176\u4ed6\u7684\u914d\u7f6e\u5c42\u7ea7\u3002","title":"\u73af\u5883\u53d8\u91cf"},{"location":"config/general-config/#_5","text":"\u914d\u7f6e\u4e2d\u5fc3\u662f\u5fae\u670d\u52a1\u67b6\u6784\u4e0b\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u4e2d\u95f4\u4ef6\uff0c\u901a\u8fc7\u914d\u7f6e\u4e2d\u5fc3\u7528\u6237\u53ef\u4ee5\u589e\u52a0\u548c\u5220\u9664\u914d\u7f6e\u4fe1\u606f\uff0c\u914d\u7f6e\u4fe1\u606f\u4f1a\u901a\u8fc7\u4e0d\u540c\u7684\u901a\u77e5\u673a\u5236\uff08\u901a\u5e38\u5305\u62ec PULL \u548c PUSH\uff09\uff0c \u5c06\u914d\u7f6e\u7684\u53d8\u5316\u63a8\u9001\u5230\u5fae\u670d\u52a1\u5b9e\u4f8b\u3002 java-chassis \u5141\u8bb8\u7528\u6237\u4f7f\u7528\u4e0d\u540c\u7684\u914d\u7f6e\u4e2d\u5fc3\uff0c \u76ee\u524d\u652f\u6301\u7528\u6237\u4f7f\u7528\u5982\u4e0b\u51e0\u79cd\u914d\u7f6e\u4e2d\u5fc3\uff1a \u534e\u4e3a\u4e91\u914d\u7f6e\u4e2d\u5fc3 \u534e\u4e3a\u4e91\u914d\u7f6e\u4e2d\u5fc3\u662f\u534e\u4e3a\u4e91CSE\u4ea7\u54c1\u7684\u4e00\u4e2a\u90e8\u4ef6\uff0cjava-chassis \u6700\u65e9\u4f7f\u7528\u5b83\u4f5c\u4e3a\u914d\u7f6e\u4e2d\u5fc3\u3002 \u5bf9\u63a5\u8fd9\u4e2a\u914d\u7f6e\u4e2d\u5fc3\u7684\u4ee3\u7801\u5728 config-cc \u6a21\u5757\u5b9e\u73b0\u3002 \u53ef\u4ee5\u4ece \u8f7b\u91cf\u5316\u5fae\u670d\u52a1\u5f15\u64ce \u4e0b\u8f7d\u672c\u5730\u4f7f\u7528\u7684\u7248\u672c\u3002\u4e5f\u53ef\u4ee5 \u76f4\u63a5\u8bbf\u95ee\u534e\u4e3a\u4e91 ServiceStage \u4ea7\u54c1\uff0c\u4f7f\u7528\u5728\u7ebf\u7684\u7248\u672c\u3002 \u4f7f\u7528\u534e\u4e3a\u4e91\u914d\u7f6e\u4e2d\u5fc3\uff0c\u9700\u8981\u5728\u9879\u76ee\u4e2d\u5f15\u5165\u5982\u4e0b\u4f9d\u8d56\uff1a dependency groupId org.apache.servicecomb /groupId artifactId config-cc /artifactId /dependency \u7136\u540e\u5728\u914d\u7f6e\u6587\u4ef6 microservice.yaml \u4e2d\u589e\u52a0\u5982\u4e0b\u914d\u7f6e\u9879\uff1a servicecomb: config: client: serverUri: http://127.0.0.1:30113 refreshMode: 0 refresh_interval: 5000 refreshPort: 30114 \u534e\u4e3a\u4e91\u914d\u7f6e\u4e2d\u5fc3\u7684\u5176\u4ed6\u914d\u7f6e\u9879\u542b\u4e49\u5982\u4e0b\uff1a \u914d\u7f6e\u9879\u540d \u63cf\u8ff0 servicecomb.config.client.refreshMode \u5e94\u7528\u914d\u7f6e\u7684\u5237\u65b0\u65b9\u5f0f\uff0c 0 \u4e3aconfig-center\u4e3b\u52a8push\uff0c 1 \u4e3aclient\u5468\u671fpull\uff0c\u9ed8\u8ba4\u4e3a 0 servicecomb.config.client.refreshPort config-center\u63a8\u9001\u914d\u7f6e\u7684\u7aef\u53e3 servicecomb.config.client.tenantName \u5e94\u7528\u7684\u79df\u6237\u540d\u79f0 servicecomb.config.client.serverUri config-center\u8bbf\u95ee\u5730\u5740\uff0c\u683c\u5f0f\u4e3a http(s)://{ip}:{port} \uff0c\u4ee5 , \u5206\u9694\u591a\u4e2a\u5730\u5740 servicecomb.config.client.refresh_interval pull\u6a21\u5f0f\u4e0b\u5237\u65b0\u914d\u7f6e\u9879\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u5355\u4f4d\u4e3a\u6beb\u79d2\uff0c\u9ed8\u8ba4\u503c\u4e3a30000 \u4f7f\u7528 servicecomb-kie servicecomb-kie \u662f\u5168\u65b0\u8bbe\u8ba1\u7684\u914d\u7f6e\u4e2d\u5fc3\u3002 \u4ece 2.0.0 \u7248\u672c\u5f00\u59cb\uff0c java-chassis \u652f\u6301\u4f7f\u7528 servicecomb-kie\u3002 servicecomb-kie \u7684\u5b89\u88c5\u6307\u5bfc\u53ef\u4ee5\u53c2\u8003\u5b98\u7f51\u6587\u6863\u3002 \u5728 java-chassis \u4e2d\u4f7f\u7528 servicecomb-kie\uff0c \u9700\u8981\u5f15\u5165\u4e0b\u9762\u7684\u4f9d\u8d56\uff1a dependency groupId org.apache.servicecomb /groupId artifactId config-kie /artifactId /dependency \u7136\u540e\u5728\u914d\u7f6e\u6587\u4ef6 microservice.yaml \u4e2d\u589e\u52a0\u5982\u4e0b\u914d\u7f6e\u9879\uff1a servicecomb: kie: serverUri: http://127.0.0.1:30110 refresh_interval: 5000 firstRefreshInterval: 5000 enableLongPolling: true domainName: default servicecomb-kie \u7684\u914d\u7f6e\u9879\u53ca\u5176\u542b\u4e49\u5982\u4e0b\uff1a \u914d\u7f6e\u9879\u540d \u63cf\u8ff0 servicecomb.kie.domainName \u533a\u57df\u540d\u79f0\uff0c\u9ed8\u8ba4\u4e3adefault servicecomb.kie.serverUri servicecomb-kie\u8bbf\u95ee\u5730\u5740\uff0c\u683c\u5f0f\u4e3a http(s)://{ip}:{port} \uff0c\u4ee5 , \u5206\u9694\u591a\u4e2a\u5730\u5740 servicecomb.kie.refresh_interval interval pull\u6a21\u5f0f\u4e0b\u5237\u65b0\u914d\u7f6e\u9879\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u5355\u4f4d\u4e3a\u6beb\u79d2\uff0c\u9ed8\u8ba4\u503c\u4e3a3000 servicecomb.kie.firstRefreshInterval interval pull\u6a21\u5f0f\u4e0b\u542f\u52a8\u8fc7\u7a0b\u4e2d\u9996\u6b21\u5237\u65b0\u65f6\u95f4\u95f4\u9694\uff0c\u5355\u4f4d\u4e3a\u6beb\u79d2\uff0c\u9ed8\u8ba4\u503c\u4e3a3000 servicecomb.kie.enableLongPolling long pulling\u6a21\u5f0f\u662f\u5426\u5f00\u542f\uff0c\u9ed8\u8ba4\u503c\u4e3atrue \u4f7f\u7528 nacos nacos \u662f alibaba \u63d0\u4f9b\u7684\u914d\u7f6e\u4e2d\u5fc3\u3002 java-chassis \u4ece 2.0.0 \u7248\u672c\u652f\u6301 nacos\u3002 nacos\u7684\u4e0b\u8f7d\u5b89\u88c5\u8bf7\u53c2\u8003\u5b98\u7f51\u4ecb\u7ecd\u3002 \u4f7f\u7528nacos\uff0c\u9700\u8981\u5728\u9879\u76ee\u4e2d\u5f15\u5165\u5982\u4e0b\u4f9d\u8d56\uff1a dependency groupId org.apache.servicecomb /groupId artifactId config-nacos /artifactId /dependency \u7136\u540e\u5728\u914d\u7f6e\u6587\u4ef6 microservice.yaml \u4e2d\u589e\u52a0\u5982\u4e0b\u914d\u7f6e\u9879\uff1a servicecomb: nacos: serverUri: http://127.0.0.1:8848 group: DEFAULT_GROUP dataId: example \u4f7f\u7528 Apollo Apollo \u662f\u643a\u7a0b\u6846\u67b6\u90e8\u95e8\u7814\u53d1\u7684\u5206\u5e03\u5f0f\u914d\u7f6e\u4e2d\u5fc3\u3002 Apollo\u7684\u4e0b\u8f7d\u5b89\u88c5\u8bf7\u53c2\u8003\u5b98\u7f51\u4ecb\u7ecd\u3002 dependency groupId org.apache.servicecomb /groupId artifactId config-apollo /artifactId /dependency \u7136\u540e\u5728\u914d\u7f6e\u6587\u4ef6 microservice.yaml \u4e2d\u589e\u52a0\u5982\u4e0b\u914d\u7f6e\u9879\uff1a apollo: config: serverUri: http://127.0.0.1:8070 serviceName: apollo-test env: DEV clusters: test-cluster namespace: application token: xxx refreshInterval: 30 firstRefreshInterval: 0","title":"\u914d\u7f6e\u4e2d\u5fc3\uff08\u52a8\u6001\u914d\u7f6e\uff09"},{"location":"config/general-config/#_6","text":"Java-Chassis\u652f\u6301\u4f7f\u7528\u4e00\u81f4\u7684API\u83b7\u53d6\u914d\u7f6e\uff0c\u4e0d\u5fc5\u5173\u6ce8\u914d\u7f6e\u7684\u6765\u6e90\u4f4d\u7f6e\uff1a DynamicDoubleProperty myprop = DynamicPropertyFactory.getInstance().getDoubleProperty( trace.handler.sampler.percent , 0.1); \u4ee5\u4e0a\u4f8b\u5b50\u8868\u793a\u58f0\u660e\u4e86\u4e00\u4e2akey\u4e3a trace.handler.sampler.percent \u7684\u52a8\u6001\u914d\u7f6e\u5bf9\u8c61\uff0c\u9ed8\u8ba4\u503c\u4e3a 0.1 \u3002\u7528\u6237\u53ef\u4ee5\u9009\u62e9\u5728microservice.yaml\u6587\u4ef6\u3001\u73af\u5883\u53d8\u91cf\u3001Java System Property\u6216\u914d\u7f6e\u4e2d\u5fc3\u91cc\u914d\u7f6e trace.handler.sampler.percent \u6765\u4fee\u6539\u914d\u7f6e\u9879\u7684\u503c\u3002 \u7528\u6237\u4e0d\u9700\u8981\u5173\u6ce8\u4ece\u54ea\u91cc\u8bfb\u53d6\u914d\u7f6e\u9879\u7684\u503c\uff0cJava-Chassis\u4f1a\u81ea\u52a8\u4ece\u5404\u5904\u8bfb\u53d6\u914d\u7f6e\uff0c\u5e76\u6309\u7167\u4e0a\u6587\u7684\u4f18\u5148\u7ea7\u987a\u5e8f\u8fdb\u884c\u5408\u5e76\u4ee5\u4fdd\u8bc1\u7528\u6237\u53d6\u5230\u7684\u662f\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u914d\u7f6e\u503c\u3002 \u5173\u4e8e\u914d\u7f6e\u9879API\u7684\u5177\u4f53\u65b9\u6cd5\u53ef\u53c2\u8003 API DOC \u3002 \u5f00\u53d1\u8005\u53ef\u4ee5\u6ce8\u518ccallback\u5904\u7406\u914d\u7f6e\u53d8\u66f4\uff1a myprop.addCallback(new Runnable() { public void run() { // \u5f53\u914d\u7f6e\u9879\u7684\u503c\u53d8\u5316\u65f6\uff0c\u8be5\u56de\u8c03\u65b9\u6cd5\u4f1a\u88ab\u8c03\u7528 System.out.println( trace.handler.sampler.percent is changed! ); } });","title":"\u5728\u7a0b\u5e8f\u4e2d\u8bfb\u53d6\u914d\u7f6e\u4fe1\u606f"},{"location":"config/general-config/#_7","text":"\u6709\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u8981\u5c4f\u853d\u6211\u4eec\u4f7f\u7528\u7684\u4e00\u4e9b\u5f00\u6e90\u7ec4\u4ef6\u7684\u914d\u7f6e\u5e76\u7ed9\u7528\u6237\u63d0\u4f9b\u6211\u4eec\u81ea\u5df1\u7684\u914d\u7f6e\u9879\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u901a\u8fc7classpath\u4e0b\u7684mapping.yaml\u8fdb\u884c\u6620\u5c04\u5b9a\u4e49\uff1a registry: client: serviceUrl: defaultZone: eureka.client.serviceUrl.defaultZone \u5b9a\u4e49\u6620\u5c04\u540e\uff0c\u5728\u914d\u7f6e\u88c5\u8f7d\u7684\u65f6\u5019\u6846\u67b6\u4f1a\u9ed8\u8ba4\u8fdb\u884c\u6620\u5c04\uff0c\u628a\u6211\u4eec\u5b9a\u4e49\u7684\u914d\u7f6e\u9879\u6620\u5c04\u4e3a\u5f00\u6e90\u7ec4\u4ef6\u53ef\u4ee5\u8ba4\u7684\u914d\u7f6e\u9879\u3002","title":"\u8fdb\u884c\u914d\u7f6e\u9879\u6620\u5c04"},{"location":"config/inject-config/","text":"\u914d\u7f6e\u6ce8\u5165\u673a\u5236 \u914d\u7f6e\u6ce8\u5165\u63d0\u4f9b\u4e86\u4e00\u79cd\u7b80\u5355\u7684\u7ba1\u7406\u5927\u91cf\u590d\u6742\u914d\u7f6e\u7684\u673a\u5236\uff0c\u5f00\u53d1\u8005\u4e0d\u9700\u8981\u4f7f\u7528 DynamicPropertyFactory \u9010\u4e2a\u8bfb\u53d6\u914d\u7f6e\u9879\uff0c\u589e\u52a0\u914d\u7f6e\u76d1\u542c\uff0c \u800c\u662f\u5b9a\u4e49\u4e00\u4e2a\u7b80\u5355\u7684 JAVA Bean\uff0c \u5b9a\u4e49\u8fd9\u4e2a Bean \u7684\u5c5e\u6027\u5bf9\u5e94\u7684\u914d\u7f6e\u9879\uff0c \u5f53\u914d\u7f6e\u4fe1\u606f\u53d8\u5316\u7684\u65f6\u5019\uff0c Bean \u7684\u5c5e\u6027\u4f1a\u81ea\u52a8\u5237\u65b0\uff0c\u6781\u5927 \u7684\u7b80\u5316\u4e86\u7528\u6237\u7ba1\u7406\u5927\u91cf\u590d\u6742\u914d\u7f6e\u7684\u590d\u6742\u5ea6\u3002 Bean \u5c5e\u6027\u5bf9\u5e94\u7684\u914d\u7f6e\u9879\u540d\u79f0\u652f\u6301\u901a\u914d\u7b26\uff0c \u4e00\u4e2a\u5c5e\u6027\u53ef\u4ee5\u5173\u8054\u82e5\u5e72\u914d\u7f6e\u9879\uff0c\u53ef\u4ee5\u58f0\u660e\u8fd9\u4e9b\u914d\u7f6e\u9879\u7684\u4f18\u5148\u7ea7\u3002 Java\u5bf9\u8c61\u53ef\u4ee5\u662f\u4e00\u4e2a Java Bean\uff0c\u6216\u662f\u4e00\u4e2a\u62e5\u6709public\u5b57\u6bb5\u7684\u7c7b\u3002 \u914d\u7f6e\u6ce8\u5165\u5bf9\u8c61 \u6211\u4eec\u9996\u5148\u8bbe\u8ba1\u4e24\u4e2aJava\u7c7b\u7528\u4e8e\u6ce8\u5165\u914d\u7f6e\u5c5e\u6027\uff0c\u5206\u522b\u7528\u6765\u6f14\u793a\u4e0d\u4f7f\u7528\u6ce8\u89e3\u548c\u4f7f\u7528\u6ce8\u89e3\u7684\u573a\u666f\u3002 /* \u4f7f\u7528ServiceComb\u6ce8\u89e3 */ @InjectProperties(prefix = root ) //\u6307\u5b9a\u8be5model\u5173\u8054\u7684\u914d\u7f6e\u5c5e\u6027\u7684\u524d\u7f00 public class ConfigWithAnnotation { /* \u6b64\u5904\u7684prefix\u5c5e\u6027\u503c override \u4f1a\u8986\u76d6\u6807\u6ce8\u5728\u7c7b\u5b9a\u4e49\u7684@InjectProperties\u6ce8\u89e3\u7684prefix\u5c5e\u6027\u503c root \uff0ckeys\u5c5e\u6027\u53ef\u4ee5\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4\u5e76\u4e14\u6570\u7ec4\u5143\u7d20\u4e0b\u6807\u8d8a\u5c0f\u4f18\u5148\u7ea7\u8d8a\u9ad8 \u8fd9\u91cc\u4f1a\u6309\u7167\u5982\u4e0b\u987a\u5e8f\u7684\u5c5e\u6027\u540d\u79f0\u67e5\u627e\u914d\u7f6e\u5c5e\u6027\uff0c\u76f4\u5230\u627e\u5230\u5df2\u88ab\u914d\u7f6e\u7684\u914d\u7f6e\u5c5e\u6027\uff0c\u5219\u505c\u6b62\u67e5\u627e\uff1a 1)override.high 2)override.low */ @InjectProperty(prefix = override , keys = { high , low }) public String strValue; //keys\u652f\u6301\u901a\u914d\u7b26\uff0c\u5e76\u5728\u53ef\u4ee5\u5728\u5c06\u914d\u7f6e\u5c5e\u6027\u6ce8\u5165\u7684\u65f6\u5019\u6307\u5b9a\u901a\u914d\u7b26\u7684\u4ee3\u5165\u5bf9\u8c61\u3002 @InjectProperty(keys = ${key}.value ) public int intValue; //\u901a\u914d\u7b26\u7684\u4ee3\u5165\u5bf9\u8c61\u53ef\u4ee5\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32List\uff0c\u4f18\u5148\u7ea7\u9075\u5faa\u6570\u7ec4\u5143\u7d20\u4e0b\u6807\u8d8a\u5c0f\u4f18\u5148\u7ea7\u8d8a\u9ad8\u7b56\u7565 @InjectProperty(keys = ${full-list} ) public float floatValue; //keys\u5c5e\u6027\u4e5f\u652f\u6301\u591a\u4e2a\u901a\u914d\u7b26\uff0c\u4f18\u5148\u7ea7\u5982\u4e0b\uff1a\u9996\u5148\u901a\u914d\u7b26\u7684\u4f18\u5148\u7ea7\u4ece\u5de6\u5230\u53f3\u9012\u51cf\uff0c\u7136\u540e\u5982\u679c\u901a\u914d\u7b26\u88ab\u4ee3\u5165List\uff0c\u9075\u5faaList\u4e2d\u5143\u7d20index\u8d8a\u5c0f\u4f18\u5148\u7ea7\u8d8a\u9ad8\u7b56\u7565\u3002 @InjectProperty(keys = ${low-list}.a.${high-list}.b ) public long longValue; //\u53ef\u4ee5\u901a\u8fc7\u6ce8\u89e3\u7684defaultValue\u5c5e\u6027\u6307\u5b9a\u9ed8\u8ba4\u503c\u3002\u5982\u679c\u5b57\u6bb5\u672a\u5173\u8054\u4efb\u4f55\u914d\u7f6e\u5c5e\u6027\uff0c\u5b9a\u4e49\u7684\u9ed8\u8ba4\u503c\u4f1a\u751f\u6548\uff0c\u5426\u5219\u9ed8\u8ba4\u503c\u4f1a\u88ab\u8986\u76d6 @InjectProperty(defaultValue = abc ) public String strDef; } /* \u4e0d\u4f7f\u7528ServiceComb\u6ce8\u89e3 */ public class ConfigNoAnnotation { /* \u5982\u679c\u672a\u63d0\u4f9b@InjectProperties\u548c@InjectProperty\u6ce8\u89e3\uff0c\u4f1a\u9ed8\u8ba4\u4f7f\u7528\u5b57\u6bb5\u540d\u4f5c\u4e3a\u914d\u7f6e\u5c5e\u6027\u540d\u3002\u6ce8\u610f\u7c7b\u540d\u4e0d\u4f5c\u4e3a\u524d\u7f00\u8d77\u4f5c\u7528\u3002 \u6b64\u5904\u5c06\u914d\u7f6e\u5c5e\u6027 strValue \u7ed1\u5b9a\u5230\u8be5\u5b57\u6bb5 */ public String strValue; } \u6267\u884c\u6ce8\u5165 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u793a\u4f8b\u4ee3\u7801\u6765\u6267\u884c\u6ce8\u5165\uff1a \u5c06\u914d\u7f6e\u5c5e\u6027\u6ce8\u5165\u5230\u65e0 @InjectProperties \u548c @InjectProperty \u6ce8\u89e3\u7684\u5bf9\u8c61\u4e0a: ConfigNoAnnotation config = SCBEngine.getInstance().getPriorityPropertyManager().createConfigObject(ConfigNoAnnotation.class); \u5c06\u914d\u7f6e\u5c5e\u6027\u6ce8\u5165\u5230\u6709 @InjectProperties \u548c @InjectProperty \u6ce8\u89e3\u7684\u5bf9\u8c61\u4e0a\uff1a \u5c06\u540d\u79f0\u4e3aroot.k.value\u7684\u914d\u7f6e\u5c5e\u6027\u6ce8\u5165\u5230\u4e00\u4e2aConfigWithAnnotation\u5bf9\u8c61\u7684intValue\u5b57\u6bb5 ConfigWithAnnotation\u5bf9\u8c61\u7684longValue\u5b57\u6bb5\u6309\u4ee5\u4e0b\u987a\u5e8f\u67e5\u627e\u5df2\u914d\u7f6e\u7684\u914d\u7f6e\u5c5e\u6027\u8fdb\u884c\u6ce8\u5165: root.low-1.a.high-1.b root.low-1.a.high-2.b root.low-2.a.high-1.b root.low-2.a.high-2.b ConfigWithAnnotation\u5bf9\u8c61\u7684floatValue\u5b57\u6bb5\u6309\u4ee5\u4e0b\u987a\u5e8f\u67e5\u627e\u5df2\u914d\u7f6e\u7684\u914d\u7f6e\u5c5e\u6027\u8fdb\u884c\u6ce8\u5165: root.l1-1 root.l1-2 ConfigWithAnnotation config = SCBEngine.getInstance().getPriorityPropertyManager() .createConfigObject(ConfigWithAnnotation.class, key , k , low-list , Arrays.asList( low-1 , low-2 ), high-list , Arrays.asList( high-1 , high-2 ), full-list , Arrays.asList( l1-1 , l1-2 ) ); \u5982\u679c\u914d\u7f6e\u5b9e\u4f8b\u662f\u4e34\u65f6\u7684\uff0c\u9700\u8981\u663e\u5f0f\u5730\u56de\u6536\u914d\u7f6e\u6ce8\u5165\u5bf9\u8c61\u3002 priorityPropertyManager.unregisterConfigObject(config) \u66f4\u591a\u5173\u4e8e\u914d\u7f6e\u6ce8\u5165\u7684\u7528\u6cd5\uff0c\u5efa\u8bae\u4e0b\u8f7d java-chassis \u7684\u6e90\u7801\uff0c \u67e5\u770b TestConfigObjectFactory \u7c7b\u91cc\u9762\u7684\u793a\u4f8b\u3002","title":"\u914d\u7f6e\u6ce8\u5165\u673a\u5236"},{"location":"config/inject-config/#_1","text":"\u914d\u7f6e\u6ce8\u5165\u63d0\u4f9b\u4e86\u4e00\u79cd\u7b80\u5355\u7684\u7ba1\u7406\u5927\u91cf\u590d\u6742\u914d\u7f6e\u7684\u673a\u5236\uff0c\u5f00\u53d1\u8005\u4e0d\u9700\u8981\u4f7f\u7528 DynamicPropertyFactory \u9010\u4e2a\u8bfb\u53d6\u914d\u7f6e\u9879\uff0c\u589e\u52a0\u914d\u7f6e\u76d1\u542c\uff0c \u800c\u662f\u5b9a\u4e49\u4e00\u4e2a\u7b80\u5355\u7684 JAVA Bean\uff0c \u5b9a\u4e49\u8fd9\u4e2a Bean \u7684\u5c5e\u6027\u5bf9\u5e94\u7684\u914d\u7f6e\u9879\uff0c \u5f53\u914d\u7f6e\u4fe1\u606f\u53d8\u5316\u7684\u65f6\u5019\uff0c Bean \u7684\u5c5e\u6027\u4f1a\u81ea\u52a8\u5237\u65b0\uff0c\u6781\u5927 \u7684\u7b80\u5316\u4e86\u7528\u6237\u7ba1\u7406\u5927\u91cf\u590d\u6742\u914d\u7f6e\u7684\u590d\u6742\u5ea6\u3002 Bean \u5c5e\u6027\u5bf9\u5e94\u7684\u914d\u7f6e\u9879\u540d\u79f0\u652f\u6301\u901a\u914d\u7b26\uff0c \u4e00\u4e2a\u5c5e\u6027\u53ef\u4ee5\u5173\u8054\u82e5\u5e72\u914d\u7f6e\u9879\uff0c\u53ef\u4ee5\u58f0\u660e\u8fd9\u4e9b\u914d\u7f6e\u9879\u7684\u4f18\u5148\u7ea7\u3002 Java\u5bf9\u8c61\u53ef\u4ee5\u662f\u4e00\u4e2a Java Bean\uff0c\u6216\u662f\u4e00\u4e2a\u62e5\u6709public\u5b57\u6bb5\u7684\u7c7b\u3002","title":"\u914d\u7f6e\u6ce8\u5165\u673a\u5236"},{"location":"config/inject-config/#_2","text":"\u6211\u4eec\u9996\u5148\u8bbe\u8ba1\u4e24\u4e2aJava\u7c7b\u7528\u4e8e\u6ce8\u5165\u914d\u7f6e\u5c5e\u6027\uff0c\u5206\u522b\u7528\u6765\u6f14\u793a\u4e0d\u4f7f\u7528\u6ce8\u89e3\u548c\u4f7f\u7528\u6ce8\u89e3\u7684\u573a\u666f\u3002 /* \u4f7f\u7528ServiceComb\u6ce8\u89e3 */ @InjectProperties(prefix = root ) //\u6307\u5b9a\u8be5model\u5173\u8054\u7684\u914d\u7f6e\u5c5e\u6027\u7684\u524d\u7f00 public class ConfigWithAnnotation { /* \u6b64\u5904\u7684prefix\u5c5e\u6027\u503c override \u4f1a\u8986\u76d6\u6807\u6ce8\u5728\u7c7b\u5b9a\u4e49\u7684@InjectProperties\u6ce8\u89e3\u7684prefix\u5c5e\u6027\u503c root \uff0ckeys\u5c5e\u6027\u53ef\u4ee5\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4\u5e76\u4e14\u6570\u7ec4\u5143\u7d20\u4e0b\u6807\u8d8a\u5c0f\u4f18\u5148\u7ea7\u8d8a\u9ad8 \u8fd9\u91cc\u4f1a\u6309\u7167\u5982\u4e0b\u987a\u5e8f\u7684\u5c5e\u6027\u540d\u79f0\u67e5\u627e\u914d\u7f6e\u5c5e\u6027\uff0c\u76f4\u5230\u627e\u5230\u5df2\u88ab\u914d\u7f6e\u7684\u914d\u7f6e\u5c5e\u6027\uff0c\u5219\u505c\u6b62\u67e5\u627e\uff1a 1)override.high 2)override.low */ @InjectProperty(prefix = override , keys = { high , low }) public String strValue; //keys\u652f\u6301\u901a\u914d\u7b26\uff0c\u5e76\u5728\u53ef\u4ee5\u5728\u5c06\u914d\u7f6e\u5c5e\u6027\u6ce8\u5165\u7684\u65f6\u5019\u6307\u5b9a\u901a\u914d\u7b26\u7684\u4ee3\u5165\u5bf9\u8c61\u3002 @InjectProperty(keys = ${key}.value ) public int intValue; //\u901a\u914d\u7b26\u7684\u4ee3\u5165\u5bf9\u8c61\u53ef\u4ee5\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32List\uff0c\u4f18\u5148\u7ea7\u9075\u5faa\u6570\u7ec4\u5143\u7d20\u4e0b\u6807\u8d8a\u5c0f\u4f18\u5148\u7ea7\u8d8a\u9ad8\u7b56\u7565 @InjectProperty(keys = ${full-list} ) public float floatValue; //keys\u5c5e\u6027\u4e5f\u652f\u6301\u591a\u4e2a\u901a\u914d\u7b26\uff0c\u4f18\u5148\u7ea7\u5982\u4e0b\uff1a\u9996\u5148\u901a\u914d\u7b26\u7684\u4f18\u5148\u7ea7\u4ece\u5de6\u5230\u53f3\u9012\u51cf\uff0c\u7136\u540e\u5982\u679c\u901a\u914d\u7b26\u88ab\u4ee3\u5165List\uff0c\u9075\u5faaList\u4e2d\u5143\u7d20index\u8d8a\u5c0f\u4f18\u5148\u7ea7\u8d8a\u9ad8\u7b56\u7565\u3002 @InjectProperty(keys = ${low-list}.a.${high-list}.b ) public long longValue; //\u53ef\u4ee5\u901a\u8fc7\u6ce8\u89e3\u7684defaultValue\u5c5e\u6027\u6307\u5b9a\u9ed8\u8ba4\u503c\u3002\u5982\u679c\u5b57\u6bb5\u672a\u5173\u8054\u4efb\u4f55\u914d\u7f6e\u5c5e\u6027\uff0c\u5b9a\u4e49\u7684\u9ed8\u8ba4\u503c\u4f1a\u751f\u6548\uff0c\u5426\u5219\u9ed8\u8ba4\u503c\u4f1a\u88ab\u8986\u76d6 @InjectProperty(defaultValue = abc ) public String strDef; } /* \u4e0d\u4f7f\u7528ServiceComb\u6ce8\u89e3 */ public class ConfigNoAnnotation { /* \u5982\u679c\u672a\u63d0\u4f9b@InjectProperties\u548c@InjectProperty\u6ce8\u89e3\uff0c\u4f1a\u9ed8\u8ba4\u4f7f\u7528\u5b57\u6bb5\u540d\u4f5c\u4e3a\u914d\u7f6e\u5c5e\u6027\u540d\u3002\u6ce8\u610f\u7c7b\u540d\u4e0d\u4f5c\u4e3a\u524d\u7f00\u8d77\u4f5c\u7528\u3002 \u6b64\u5904\u5c06\u914d\u7f6e\u5c5e\u6027 strValue \u7ed1\u5b9a\u5230\u8be5\u5b57\u6bb5 */ public String strValue; }","title":"\u914d\u7f6e\u6ce8\u5165\u5bf9\u8c61"},{"location":"config/inject-config/#_3","text":"\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u793a\u4f8b\u4ee3\u7801\u6765\u6267\u884c\u6ce8\u5165\uff1a \u5c06\u914d\u7f6e\u5c5e\u6027\u6ce8\u5165\u5230\u65e0 @InjectProperties \u548c @InjectProperty \u6ce8\u89e3\u7684\u5bf9\u8c61\u4e0a: ConfigNoAnnotation config = SCBEngine.getInstance().getPriorityPropertyManager().createConfigObject(ConfigNoAnnotation.class); \u5c06\u914d\u7f6e\u5c5e\u6027\u6ce8\u5165\u5230\u6709 @InjectProperties \u548c @InjectProperty \u6ce8\u89e3\u7684\u5bf9\u8c61\u4e0a\uff1a \u5c06\u540d\u79f0\u4e3aroot.k.value\u7684\u914d\u7f6e\u5c5e\u6027\u6ce8\u5165\u5230\u4e00\u4e2aConfigWithAnnotation\u5bf9\u8c61\u7684intValue\u5b57\u6bb5 ConfigWithAnnotation\u5bf9\u8c61\u7684longValue\u5b57\u6bb5\u6309\u4ee5\u4e0b\u987a\u5e8f\u67e5\u627e\u5df2\u914d\u7f6e\u7684\u914d\u7f6e\u5c5e\u6027\u8fdb\u884c\u6ce8\u5165: root.low-1.a.high-1.b root.low-1.a.high-2.b root.low-2.a.high-1.b root.low-2.a.high-2.b ConfigWithAnnotation\u5bf9\u8c61\u7684floatValue\u5b57\u6bb5\u6309\u4ee5\u4e0b\u987a\u5e8f\u67e5\u627e\u5df2\u914d\u7f6e\u7684\u914d\u7f6e\u5c5e\u6027\u8fdb\u884c\u6ce8\u5165: root.l1-1 root.l1-2 ConfigWithAnnotation config = SCBEngine.getInstance().getPriorityPropertyManager() .createConfigObject(ConfigWithAnnotation.class, key , k , low-list , Arrays.asList( low-1 , low-2 ), high-list , Arrays.asList( high-1 , high-2 ), full-list , Arrays.asList( l1-1 , l1-2 ) ); \u5982\u679c\u914d\u7f6e\u5b9e\u4f8b\u662f\u4e34\u65f6\u7684\uff0c\u9700\u8981\u663e\u5f0f\u5730\u56de\u6536\u914d\u7f6e\u6ce8\u5165\u5bf9\u8c61\u3002 priorityPropertyManager.unregisterConfigObject(config) \u66f4\u591a\u5173\u4e8e\u914d\u7f6e\u6ce8\u5165\u7684\u7528\u6cd5\uff0c\u5efa\u8bae\u4e0b\u8f7d java-chassis \u7684\u6e90\u7801\uff0c \u67e5\u770b TestConfigObjectFactory \u7c7b\u91cc\u9762\u7684\u793a\u4f8b\u3002","title":"\u6267\u884c\u6ce8\u5165"},{"location":"config-reference/config-center-client/","text":"Config Center Client \u914d\u7f6e\u9879 \u57fa\u672c\u914d\u7f6e \u914d\u7f6e\u9879\u540d\u79f0 \u7248\u672c \u7f3a\u7701\u503c \u529f\u80fd\u63cf\u8ff0 servicecomb.config.client.eventLoopSize 2.0.2 2 event loop \u7ebf\u7a0b\u6570 servicecomb.config.client.verticalInstanceCount 2.0.2 1 verticle instances \u6570\u91cf servicecomb.config.client.timeout.connection 2.0.2 1000 \u8fde\u63a5\u8d85\u65f6\u65f6\u95f4 servicecomb.config.client.idleTimeoutInSeconds 2.0.2 60 HTTP \u8fde\u63a5\u95f2\u7f6e\u8d85\u65f6\u65f6\u95f4 \u8bf7\u6c42\u8d85\u65f6\u914d\u7f6e \u4e0d\u652f\u6301\u3002 SSL \u914d\u7f6e \u53c2\u8003 \u4f7f\u7528TLS\u901a\u4fe1 \u3002 tag \u4e3a cc.consumer \u3002 Proxy \u914d\u7f6e \u53c2\u8003 \u4ee3\u7406\u8bbe\u7f6e","title":"Config Center Client \u914d\u7f6e\u9879"},{"location":"config-reference/config-center-client/#config-center-client","text":"\u57fa\u672c\u914d\u7f6e \u914d\u7f6e\u9879\u540d\u79f0 \u7248\u672c \u7f3a\u7701\u503c \u529f\u80fd\u63cf\u8ff0 servicecomb.config.client.eventLoopSize 2.0.2 2 event loop \u7ebf\u7a0b\u6570 servicecomb.config.client.verticalInstanceCount 2.0.2 1 verticle instances \u6570\u91cf servicecomb.config.client.timeout.connection 2.0.2 1000 \u8fde\u63a5\u8d85\u65f6\u65f6\u95f4 servicecomb.config.client.idleTimeoutInSeconds 2.0.2 60 HTTP \u8fde\u63a5\u95f2\u7f6e\u8d85\u65f6\u65f6\u95f4 \u8bf7\u6c42\u8d85\u65f6\u914d\u7f6e \u4e0d\u652f\u6301\u3002 SSL \u914d\u7f6e \u53c2\u8003 \u4f7f\u7528TLS\u901a\u4fe1 \u3002 tag \u4e3a cc.consumer \u3002 Proxy \u914d\u7f6e \u53c2\u8003 \u4ee3\u7406\u8bbe\u7f6e","title":"Config Center Client \u914d\u7f6e\u9879"},{"location":"config-reference/kie-client/","text":"ServiceComb Kie Client \u914d\u7f6e\u9879 \u57fa\u672c\u914d\u7f6e \u914d\u7f6e\u9879\u540d\u79f0 \u7248\u672c \u7f3a\u7701\u503c \u529f\u80fd\u63cf\u8ff0 servicecomb.kie.client.eventLoopSize 2 event loop \u7ebf\u7a0b\u6570 servicecomb.kie.client.verticalInstanceCount 1 verticle instances \u6570\u91cf servicecomb.kie.client.timeout.connection 1000 \u8fde\u63a5\u8d85\u65f6\u65f6\u95f4 servicecomb.kie.client.idleTimeoutInSeconds 60 HTTP \u8fde\u63a5\u95f2\u7f6e\u8d85\u65f6\u65f6\u95f4 \u8bf7\u6c42\u8d85\u65f6\u914d\u7f6e \u4e0d\u652f\u6301\u3002 SSL \u914d\u7f6e \u53c2\u8003 \u4f7f\u7528TLS\u901a\u4fe1 \u3002 tag \u4e3a kie.consumer \u3002 Proxy \u914d\u7f6e \u53c2\u8003 \u4ee3\u7406\u8bbe\u7f6e","title":"ServiceComb Kie Client \u914d\u7f6e\u9879"},{"location":"config-reference/kie-client/#servicecomb-kie-client","text":"\u57fa\u672c\u914d\u7f6e \u914d\u7f6e\u9879\u540d\u79f0 \u7248\u672c \u7f3a\u7701\u503c \u529f\u80fd\u63cf\u8ff0 servicecomb.kie.client.eventLoopSize 2 event loop \u7ebf\u7a0b\u6570 servicecomb.kie.client.verticalInstanceCount 1 verticle instances \u6570\u91cf servicecomb.kie.client.timeout.connection 1000 \u8fde\u63a5\u8d85\u65f6\u65f6\u95f4 servicecomb.kie.client.idleTimeoutInSeconds 60 HTTP \u8fde\u63a5\u95f2\u7f6e\u8d85\u65f6\u65f6\u95f4 \u8bf7\u6c42\u8d85\u65f6\u914d\u7f6e \u4e0d\u652f\u6301\u3002 SSL \u914d\u7f6e \u53c2\u8003 \u4f7f\u7528TLS\u901a\u4fe1 \u3002 tag \u4e3a kie.consumer \u3002 Proxy \u914d\u7f6e \u53c2\u8003 \u4ee3\u7406\u8bbe\u7f6e","title":"ServiceComb Kie Client \u914d\u7f6e\u9879"},{"location":"config-reference/rest-transport-client/","text":"REST Transport Client \u914d\u7f6e\u9879 \u57fa\u672c\u914d\u7f6e REST Trasnport Client \u5206\u4e3a HTTP \u548c HTTP 2, \u5b83\u4eec\u5171\u4eab\u5f88\u591a\u914d\u7f6e\u9879\u3002\u5305\u542b http2 \u7684\u914d\u7f6e\u9879\uff0c \u662f HTTP 2 \u72ec\u6709\u7684\u3002 \u914d\u7f6e\u9879\u540d\u79f0 \u7248\u672c \u7f3a\u7701\u503c \u529f\u80fd\u63cf\u8ff0 servicecomb.rest.client.enabled 2.0.2 true \u662f\u5426\u542f\u7528Rest Transport Client, HTTP 1 servicecomb.rest.client.verticle-count \u5907\u6ce81 \u5907\u6ce82 servicecomb.rest.client.thread-count \u5e9f\u5f03 \u540cverticle-count servicecomb.rest.client.connection.timeoutInMillis 2.0.2 1000 \u8fde\u63a5\u8d85\u65f6\u65f6\u95f4 servicecomb.rest.client.connection.idleTimeoutInSeconds 60 HTTP \u8fde\u63a5\u95f2\u7f6e\u8d85\u65f6\u65f6\u95f4 servicecomb.rest.client.connection.compression false \u662f\u5426\u542f\u7528\u538b\u7f29 servicecomb.rest.client.maxWaitQueueSize -1 HTTP HTTP2 \u7b49\u5f85\u961f\u5217\u5927\u5c0f servicecomb.rest.client.connection.maxPoolSize 5 HTTP \u5ba2\u6237\u7aef\u8fde\u63a5\u6c60\u5927\u5c0f servicecomb.rest.client.connection.keepAlive true HTTP \u8fde\u63a5\u662f\u5426\u4fdd\u6d3b servicecomb.rest.client.maxHeaderSize 8192 HTTP \u6700\u5927\u5934\u90e8\u9650\u5236 servicecomb.rest.client.http2.enabled 2.0.2 true \u662f\u5426\u542f\u7528Rest Transport Client\uff0cHTTP 2 servicecomb.rest.client.http2.useAlpnEnabled true servicecomb.rest.client.http2.multiplexingLimit 1 servicecomb.rest.client.http2.maxPoolSize 1 HTTP2 \u5ba2\u6237\u7aef\u8fde\u63a5\u6c60\u5927\u5c0f servicecomb.rest.client.http2.idleTimeoutInSeconds 2.0.1 0 HTTP2 \u8fde\u63a5\u95f2\u7f6e\u8d85\u65f6\u65f6\u95f4 \u8bf7\u6c42\u8d85\u65f6\u914d\u7f6e \u53ef\u4ee5\u9488\u5bf9\u6bcf\u4e2a\u5177\u4f53\u7684\u63a5\u53e3\u8bbe\u7f6e\u8d85\u65f6\uff0c\u914d\u7f6e\u9879 request.${op-any-priority}.timeout \uff0c \u5355\u4f4d\u662f\u6beb\u79d2\uff0c\u9ed8\u8ba4 30000\u3002 \u4e3e\u4f8b\uff1a servicecomb.request.timeout=30000 servicecomb.request.MyService.timeout=40000 servicecomb.request.MyService.MySchema.MyOperation.timeout=50000 SSL \u914d\u7f6e \u53c2\u8003 \u4f7f\u7528TLS\u901a\u4fe1 \u3002 tag \u4e3a rest.consumer \u3002 Proxy \u914d\u7f6e \u4e0d\u652f\u6301\u3002 \u5907\u6ce8 : \u5982\u679cCPU\u6570\u5c0f\u4e8e8\uff0c\u5219\u53d6CPU\u6570\u3002\u5982\u679cCPU\u6570\u5927\u4e8e\u7b49\u4e8e8\uff0c\u5219\u4e3a8\u3002 java-chassis \u9ed8\u8ba4\u91c7\u7528 vert.x \u7684 HTTP Client \u529f\u80fd\uff0c\u8fd9\u4e2a\u914d\u7f6e\u9879\u5bf9\u5e94\u7684\u662f verticle instances \u6570\u91cf\u3002 verticle instances \u6570\u91cf \u4f1a\u5f71\u54cd\u5e76\u53d1\u8d44\u6e90\u5206\u914d\u3002\u6bd4\u5982\uff1a \u5982\u679c verticle instances \u4e3a 2\uff0c maxPoolSize \u4e3a 5\uff0c \u90a3\u4e48\u5b9e\u9645\u521b\u5efa\u7684\u8fde\u63a5\u6570\u4e3a 2*5=10\u3002","title":"REST Transport Client \u914d\u7f6e\u9879"},{"location":"config-reference/rest-transport-client/#rest-transport-client","text":"\u57fa\u672c\u914d\u7f6e REST Trasnport Client \u5206\u4e3a HTTP \u548c HTTP 2, \u5b83\u4eec\u5171\u4eab\u5f88\u591a\u914d\u7f6e\u9879\u3002\u5305\u542b http2 \u7684\u914d\u7f6e\u9879\uff0c \u662f HTTP 2 \u72ec\u6709\u7684\u3002 \u914d\u7f6e\u9879\u540d\u79f0 \u7248\u672c \u7f3a\u7701\u503c \u529f\u80fd\u63cf\u8ff0 servicecomb.rest.client.enabled 2.0.2 true \u662f\u5426\u542f\u7528Rest Transport Client, HTTP 1 servicecomb.rest.client.verticle-count \u5907\u6ce81 \u5907\u6ce82 servicecomb.rest.client.thread-count \u5e9f\u5f03 \u540cverticle-count servicecomb.rest.client.connection.timeoutInMillis 2.0.2 1000 \u8fde\u63a5\u8d85\u65f6\u65f6\u95f4 servicecomb.rest.client.connection.idleTimeoutInSeconds 60 HTTP \u8fde\u63a5\u95f2\u7f6e\u8d85\u65f6\u65f6\u95f4 servicecomb.rest.client.connection.compression false \u662f\u5426\u542f\u7528\u538b\u7f29 servicecomb.rest.client.maxWaitQueueSize -1 HTTP HTTP2 \u7b49\u5f85\u961f\u5217\u5927\u5c0f servicecomb.rest.client.connection.maxPoolSize 5 HTTP \u5ba2\u6237\u7aef\u8fde\u63a5\u6c60\u5927\u5c0f servicecomb.rest.client.connection.keepAlive true HTTP \u8fde\u63a5\u662f\u5426\u4fdd\u6d3b servicecomb.rest.client.maxHeaderSize 8192 HTTP \u6700\u5927\u5934\u90e8\u9650\u5236 servicecomb.rest.client.http2.enabled 2.0.2 true \u662f\u5426\u542f\u7528Rest Transport Client\uff0cHTTP 2 servicecomb.rest.client.http2.useAlpnEnabled true servicecomb.rest.client.http2.multiplexingLimit 1 servicecomb.rest.client.http2.maxPoolSize 1 HTTP2 \u5ba2\u6237\u7aef\u8fde\u63a5\u6c60\u5927\u5c0f servicecomb.rest.client.http2.idleTimeoutInSeconds 2.0.1 0 HTTP2 \u8fde\u63a5\u95f2\u7f6e\u8d85\u65f6\u65f6\u95f4 \u8bf7\u6c42\u8d85\u65f6\u914d\u7f6e \u53ef\u4ee5\u9488\u5bf9\u6bcf\u4e2a\u5177\u4f53\u7684\u63a5\u53e3\u8bbe\u7f6e\u8d85\u65f6\uff0c\u914d\u7f6e\u9879 request.${op-any-priority}.timeout \uff0c \u5355\u4f4d\u662f\u6beb\u79d2\uff0c\u9ed8\u8ba4 30000\u3002 \u4e3e\u4f8b\uff1a servicecomb.request.timeout=30000 servicecomb.request.MyService.timeout=40000 servicecomb.request.MyService.MySchema.MyOperation.timeout=50000 SSL \u914d\u7f6e \u53c2\u8003 \u4f7f\u7528TLS\u901a\u4fe1 \u3002 tag \u4e3a rest.consumer \u3002 Proxy \u914d\u7f6e \u4e0d\u652f\u6301\u3002 \u5907\u6ce8 : \u5982\u679cCPU\u6570\u5c0f\u4e8e8\uff0c\u5219\u53d6CPU\u6570\u3002\u5982\u679cCPU\u6570\u5927\u4e8e\u7b49\u4e8e8\uff0c\u5219\u4e3a8\u3002 java-chassis \u9ed8\u8ba4\u91c7\u7528 vert.x \u7684 HTTP Client \u529f\u80fd\uff0c\u8fd9\u4e2a\u914d\u7f6e\u9879\u5bf9\u5e94\u7684\u662f verticle instances \u6570\u91cf\u3002 verticle instances \u6570\u91cf \u4f1a\u5f71\u54cd\u5e76\u53d1\u8d44\u6e90\u5206\u914d\u3002\u6bd4\u5982\uff1a \u5982\u679c verticle instances \u4e3a 2\uff0c maxPoolSize \u4e3a 5\uff0c \u90a3\u4e48\u5b9e\u9645\u521b\u5efa\u7684\u8fde\u63a5\u6570\u4e3a 2*5=10\u3002","title":"REST Transport Client \u914d\u7f6e\u9879"},{"location":"config-reference/service-center-client/","text":"Service Center Client \u914d\u7f6e\u9879 \u57fa\u672c\u914d\u7f6e \u914d\u7f6e\u9879\u540d\u79f0 \u7248\u672c \u7f3a\u7701\u503c \u529f\u80fd\u63cf\u8ff0 servicecomb.service.registry.client.eventLoopPoolSize 4 event loop \u7ebf\u7a0b\u6570 servicecomb.service.registry.client.instances 1 verticle instances \u6570\u91cf servicecomb.service.registry.client.httpVersion 1.1 HTTP\u534f\u8bae\u7248\u672c servicecomb.service.registry.client.timeout.connection 1000 \u8fde\u63a5\u8d85\u65f6\u65f6\u95f4 servicecomb.service.registry.client.timeout.idle 60 HTTP \u8fde\u63a5\u95f2\u7f6e\u8d85\u65f6\u65f6\u95f4 servicecomb.service.registry.client.workerPoolSize 4 work\u7ebf\u7a0b\u6c60\u5927\u5c0f\uff0c\u4ec5\u4f9b web socket \u4f7f\u7528 \u8bf7\u6c42\u8d85\u65f6\u914d\u7f6e servicecomb.service.registry.client.timeout.heartbeat \u8bbe\u7f6e\u5fc3\u8df3\u8bf7\u6c42\u8d85\u65f6\u65f6\u95f4\uff0c\u9ed8\u8ba4\u4e3a 3, 000 \u6beb\u79d2\uff1b servicecomb.service.registry.client.timeout.request \u8bbe\u7f6e\u5176\u4ed6\u8bf7\u6c42\u8d85\u65f6\u65f6\u95f4\uff0c\u9ed8\u8ba4\u4e3a 30, 000 \u6beb\u79d2\u3002 SSL \u914d\u7f6e \u53c2\u8003 \u4f7f\u7528TLS\u901a\u4fe1 \u3002 tag \u4e3a sc.consumer \u3002 Proxy \u914d\u7f6e \u53c2\u8003 \u4ee3\u7406\u8bbe\u7f6e","title":"Service Center Client \u914d\u7f6e\u9879"},{"location":"config-reference/service-center-client/#service-center-client","text":"\u57fa\u672c\u914d\u7f6e \u914d\u7f6e\u9879\u540d\u79f0 \u7248\u672c \u7f3a\u7701\u503c \u529f\u80fd\u63cf\u8ff0 servicecomb.service.registry.client.eventLoopPoolSize 4 event loop \u7ebf\u7a0b\u6570 servicecomb.service.registry.client.instances 1 verticle instances \u6570\u91cf servicecomb.service.registry.client.httpVersion 1.1 HTTP\u534f\u8bae\u7248\u672c servicecomb.service.registry.client.timeout.connection 1000 \u8fde\u63a5\u8d85\u65f6\u65f6\u95f4 servicecomb.service.registry.client.timeout.idle 60 HTTP \u8fde\u63a5\u95f2\u7f6e\u8d85\u65f6\u65f6\u95f4 servicecomb.service.registry.client.workerPoolSize 4 work\u7ebf\u7a0b\u6c60\u5927\u5c0f\uff0c\u4ec5\u4f9b web socket \u4f7f\u7528 \u8bf7\u6c42\u8d85\u65f6\u914d\u7f6e servicecomb.service.registry.client.timeout.heartbeat \u8bbe\u7f6e\u5fc3\u8df3\u8bf7\u6c42\u8d85\u65f6\u65f6\u95f4\uff0c\u9ed8\u8ba4\u4e3a 3, 000 \u6beb\u79d2\uff1b servicecomb.service.registry.client.timeout.request \u8bbe\u7f6e\u5176\u4ed6\u8bf7\u6c42\u8d85\u65f6\u65f6\u95f4\uff0c\u9ed8\u8ba4\u4e3a 30, 000 \u6beb\u79d2\u3002 SSL \u914d\u7f6e \u53c2\u8003 \u4f7f\u7528TLS\u901a\u4fe1 \u3002 tag \u4e3a sc.consumer \u3002 Proxy \u914d\u7f6e \u53c2\u8003 \u4ee3\u7406\u8bbe\u7f6e","title":"Service Center Client \u914d\u7f6e\u9879"},{"location":"edge/by-servicecomb-sdk/","text":"\u4f7f\u7528 Edge Service \u505a\u8fb9\u7f18\u670d\u52a1 Edge Service \u662fServiceComb \u63d0\u4f9b\u7684JAVA\u7f51\u5173\u670d\u52a1\u5f00\u53d1\u6846\u67b6\u3002Edge Service\u4f5c\u4e3a\u6574\u4e2a\u5fae\u670d\u52a1\u7cfb\u7edf\u5bf9\u5916\u7684\u63a5\u53e3\uff0c\u5411\u6700\u7ec8\u7528\u6237\u63d0\u4f9b\u670d\u52a1\uff0c\u63a5\u5165RESTful\u8bf7\u6c42\uff0c\u8f6c\u53d1\u7ed9\u5185\u90e8\u5fae\u670d\u52a1\u3002Edge Service\u4ee5\u5f00\u53d1\u6846\u67b6\u7684\u5f62\u5f0f\u63d0\u4f9b\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u975e\u5e38\u7b80\u5355\u7684\u642d\u5efa\u4e00\u4e2aEdge Service\u670d\u52a1\uff0c\u901a\u8fc7\u7b80\u5355\u7684\u914d\u7f6e\u5c31\u53ef\u4ee5\u5b9a\u4e49\u8def\u7531\u8f6c\u53d1\u89c4\u5219\u3002\u540c\u65f6Edge Service\u652f\u6301\u5f3a\u5927\u7684\u6269\u5c55\u80fd\u529b\uff0c\u670d\u52a1\u6620\u5c04\u3001\u8bf7\u6c42\u89e3\u6790\u3001\u52a0\u5bc6\u89e3\u5bc6\u3001\u9274\u6743\u7b49\u903b\u8f91\u90fd\u53ef\u4ee5\u901a\u8fc7\u6269\u5c55\u5b9e\u73b0\u3002 Edge Service \u672c\u8eab\u4e5f\u662f\u4e00\u4e2a\u5fae\u670d\u52a1\uff0c\u9700\u9075\u5b88\u6240\u6709\u5fae\u670d\u52a1\u5f00\u53d1\u7684\u89c4\u5219\u3002\u5176\u672c\u8eab\u53ef\u4ee5\u90e8\u7f72\u4e3a\u591a\u5b9e\u4f8b\uff0c\u524d\u7aef\u4f7f\u7528\u8d1f\u8f7d\u5747\u8861\u88c5\u7f6e\u8fdb\u884c\u8d1f\u8f7d\u5206\u53d1\uff1b\u4e5f\u53ef\u4ee5\u90e8\u7f72\u4e3a\u4e3b\u5907\uff0c\u76f4\u63a5\u63a5\u5165\u7528\u6237\u8bf7\u6c42\u3002\u5f00\u53d1\u8005\u53ef\u4ee5\u6839\u636eEdge Service\u627f\u8f7d\u7684\u903b\u8f91\u548c\u4e1a\u52a1\u8bbf\u95ee\u91cf\u3001\u7ec4\u7f51\u60c5\u51b5\u6765\u89c4\u5212\u3002 \u5f00\u53d1 Edge Service \u670d\u52a1 \u5f00\u53d1 Edge Service \u548c\u5f00\u53d1\u4e00\u4e2a\u666e\u901a\u7684\u5fae\u670d\u52a1\u6b65\u9aa4\u5dee\u4e0d\u591a\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u4ece\u5bfc\u5165 ServiceComb Edge Service Demo \u5165\u624b\u3002\u4ece\u5934\u642d\u5efa\u9879\u76ee\u5305\u542b\u5982\u4e0b\u51e0\u4e2a\u6b65\u9aa4\uff1a \u914d\u7f6e\u4f9d\u8d56\u5173\u7cfb \u5728\u9879\u76ee\u4e2d\u52a0\u5165edge-core\u7684\u4f9d\u8d56\uff0c\u5c31\u53ef\u4ee5\u542f\u52a8Edge Service\u7684\u529f\u80fd\u3002Edge Service\u5728\u8bf7\u6c42\u8f6c\u53d1\u7684\u65f6\u5019\uff0c\u4f1a\u7ecf\u8fc7\u5904\u7406\u94fe\uff0c\u56e0\u6b64\u8fd8\u53ef\u4ee5\u52a0\u5165\u76f8\u5173\u7684\u5904\u7406\u94fe\u7684\u6a21\u5757\u7684\u4f9d\u8d56\uff0c\u4e0b\u9762\u7684\u5b9e\u4f8b\u589e\u52a0\u7684\u8d1f\u8f7d\u5747\u8861\u7684\u5904\u7406\u94fe\uff0c\u8fd9\u4e2a\u662f\u5fc5\u987b\u7684\u3002 dependency groupId org.apache.servicecomb /groupId artifactId edge-core /artifactId /dependency dependency groupId org.apache.servicecomb /groupId artifactId handler-loadbalance /artifactId /dependency \u5b9a\u4e49\u542f\u52a8\u7c7b \u548c\u5f00\u53d1\u666e\u901a\u5fae\u670d\u52a1\u4e00\u6837\uff0c\u53ef\u4ee5\u901a\u8fc7\u52a0\u8f7dSpring\u7684\u65b9\u5f0f\u5c06\u670d\u52a1\u62c9\u8d77\u6765\u3002 public class EdgeMain { public static void main(String[] args) throws Exception { Log4jUtils.init(); BeanUtils.init(); } } \u589e\u52a0\u914d\u7f6e\u6587\u4ef6microservie.yaml Edge Service\u672c\u8eab\u4e5f\u662f\u4e00\u4e2a\u5fae\u670d\u52a1\uff0c\u9075\u5faa\u5fae\u670d\u52a1\u67e5\u627e\u7684\u89c4\u5219\uff0c\u81ea\u5df1\u4e5f\u4f1a\u8fdb\u884c\u6ce8\u518c\u3002\u6ce8\u610fAPPLICAIONT_ID\u4e0e\u9700\u8981\u8f6c\u53d1\u7684\u5fae\u670d\u52a1\u76f8\u540c\u3002\u5728\u4e0b\u9762\u7684\u914d\u7f6e\u4e2d\uff0c\u6307\u5b9a\u4e86Edge Service\u76d1\u542c\u7684\u5730\u5740\uff0c\u5904\u7406\u94fe\u7b49\u4fe1\u606f\u3002\u5176\u4e2dauth\u5904\u7406\u94fe\u662fDEMO\u9879\u76ee\u4e2d\u81ea\u5b9a\u4e49\u7684\u5904\u7406\u94fe\uff0c\u7528\u4e8e\u5b9e\u73b0\u8ba4\u8bc1\u3002\u540c\u65f6auth\u670d\u52a1\u672c\u8eab\uff0c\u4e0d\u7ecf\u8fc7\u8fd9\u4e2a\u5904\u7406\u94fe\uff0c\u76f8\u5f53\u4e8e\u4e0d\u9274\u6743\u3002 APPLICATION_ID: edge service_description: name: edge version: 0.0.1 servicecomb: service: registry: address: http://127.0.0.1:30100 rest: address: 127.0.0.1:18080 handler: chain: Consumer: default: auth,loadbalance service: auth: loadbalance \u5de5\u4f5c\u6d41\u7a0b Edge Service\u7684\u5de5\u4f5c\u6d41\u7a0b\u5982\u4e0b\uff0c\u84dd\u8272\u80cc\u666f\u90e8\u5206\u5728Eventloop\u7ebf\u7a0b\u4e2d\u6267\u884c\uff0c\u9ec4\u8272\u80cc\u666f\u90e8\u5206\uff1a * \u5982\u679c\u5de5\u4f5c\u4e8ereactive\u6a21\u5f0f\uff0c\u5219\u76f4\u63a5\u5728Eventloop\u7ebf\u7a0b\u6267\u884c * \u5982\u679c\u5de5\u4f5c\u4e8e\u7ebf\u7a0b\u6c60\u6a21\u5f0f\uff0c\u5219\u5728\u7ebf\u7a0b\u6c60\u7684\u7ebf\u7a0b\u4e2d\u6267\u884c \u5b9a\u5236\u516c\u5171\u8f6c\u53d1 Header Edge Service \u5728\u8f6c\u53d1\u8bf7\u6c42\u7684\u65f6\u5019, \u4f1a\u9ed8\u8ba4\u8fc7\u6ee4\u6389 \u516c\u5171\u8bf7\u6c42\u5934 \u3002 \u4e5f\u5c31\u662f\u9664\u4e86 Provider \u7aef\u663e\u793a \u58f0\u660e\u9700\u8981\u7684 HEADER \u5916\uff0c \u5176\u4ed6\u7684 header \u5728\u8f6c\u53d1\u7684\u65f6\u5019\u90fd\u4f1a\u4e22\u5931\u3002\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u76f8\u5173\u53c2\u6570\u4fdd\u7559 \u516c\u5171\u8bf7\u6c42\u5934\u3002 servicecomb: edge: filter: addHeader: # \u5f00\u542f \u516c\u5171\u8bf7\u6c42\u5934\u4fdd\u7559\u529f\u80fd\u3002\u9ed8\u8ba4 false enabled: true # \u8981\u4fdd\u7559\u7684\u516c\u5171\u8bf7\u6c42\u5934\uff0c\u4ee5\u9017\u53f7\u9694\u5f00 allowedHeaders: external_1,external_2 \u5982\u679c\u5bf9\u63a5\u4e86\u914d\u7f6e\u4e2d\u5fc3\uff0c \u53ef\u4ee5\u5728\u914d\u7f6e\u4e2d\u5fc3\u52a8\u6001\u4fee\u6539 \u914d\u7f6e servicecomb.edge.filter.addHeader.enabled \u548c servicecomb.edge.filter.addHeader.allowedHeaders \uff0c \u914d\u7f6e\u52a8\u6001\u751f\u6548\u3002 \u5b9a\u5236\u8def\u7531\u89c4\u5219 \u4f7f\u7528Edge Service\u7684\u6838\u5fc3\u5de5\u4f5c\u662f\u914d\u7f6e\u8def\u7531\u89c4\u5219\u3002\u573a\u666f\u4e0d\u540c\uff0c\u89c4\u5219\u4e5f\u4e0d\u540c\u3002 \u8def\u7531\u89c4\u5219\u7531\u4e00\u7cfb\u5217AbstractEdgeDispatcher\u7ec4\u6210\u3002Edge Service\u63d0\u4f9b\u4e86\u51e0\u4e2a\u5e38\u89c1\u7684Dispatcher\uff0c\u901a\u8fc7\u914d\u7f6e\u5373\u53ef\u542f\u7528\uff0c\u5982\u679c\u8fd9\u4e9bDispatcher\u4e0d\u6ee1\u8db3\u4e1a\u52a1\u573a\u666f\u9700\u8981\uff0c\u8fd8\u53ef\u4ee5\u81ea\u5b9a\u4e49\u3002 \u4f7f\u7528 DefaultEdgeDispatcher DefaultEdgeDispatcher\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u3001\u5bb9\u6613\u7ba1\u7406\u7684Dispatcher\uff0c\u4f7f\u7528\u8fd9\u4e2aDispatcher\uff0c\u7528\u6237\u4e0d\u7528\u52a8\u6001\u7ba1\u7406\u8f6c\u53d1\u89c4\u5219\uff0c\u5e94\u7528\u4e8e\u5b9e\u9645\u7684\u4e1a\u52a1\u573a\u666f\u975e\u5e38\u65b9\u4fbf\uff0c\u8fd9\u4e2a\u4e5f\u662f\u63a8\u8350\u7684\u4e00\u79cd\u7ba1\u7406\u673a\u5236\u3002\u5b83\u5305\u542b\u5982\u4e0b\u51e0\u4e2a\u914d\u7f6e\u9879\uff1a servicecomb: http: dispatcher: edge: default: enabled: true prefix: rest withVersion: true prefixSegmentCount: 1 \u5e38\u89c1\u7684\u8fd9\u4e9b\u914d\u7f6e\u9879\u7684\u793a\u4f8b\u53ca\u542b\u4e49\u5982\u4e0b: * [prefix=rest;withVersion=true;prefixSegmentCount=1]\u5fae\u670d\u52a1xService\u63d0\u4f9b\u7684URL\u4e3a: /xService/v1/abc\uff0c\u901a\u8fc7Edge\u8bbf\u95ee\u7684\u5730\u5740\u4e3a/rest/xService/v1/abc\uff0c\u8bf7\u6c42\u53ea\u8f6c\u53d1\u5230[1.0.0-2.0.0)\u7248\u672c\u7684\u5fae\u670d\u52a1\u5b9e\u4f8b\u3002 * [prefix=rest;withVersion=true;prefixSegmentCount=2]\u5fae\u670d\u52a1xService\u63d0\u4f9b\u7684URL\u4e3a: /v1/abc\uff0c\u901a\u8fc7Edge\u8bbf\u95ee\u7684\u5730\u5740\u4e3a/rest/xService/v1/abc\uff0c\u8bf7\u6c42\u53ea\u8f6c\u53d1\u5230[1.0.0-2.0.0)\u7248\u672c\u7684\u5fae\u670d\u52a1\u5b9e\u4f8b\u3002 * [prefix=rest;withVersion=true;prefixSegmentCount=3]\u5fae\u670d\u52a1xService\u63d0\u4f9b\u7684URL\u4e3a: /abc\uff0c\u901a\u8fc7Edge\u8bbf\u95ee\u7684\u5730\u5740\u4e3a/rest/xService/v1/abc\uff0c\u8bf7\u6c42\u53ea\u8f6c\u53d1\u5230[1.0.0-2.0.0)\u7248\u672c\u7684\u5fae\u670d\u52a1\u5b9e\u4f8b\u3002 * [prefix=rest;withVersion=false;prefixSegmentCount=1]\u5fae\u670d\u52a1xService\u63d0\u4f9b\u7684URL\u4e3a: /xService/v1/abc\uff0c\u901a\u8fc7Edge\u8bbf\u95ee\u7684\u5730\u5740\u4e3a/rest/xService/v1/abc\uff0c\u8bf7\u6c42\u53ef\u80fd\u8f6c\u53d1\u5230\u4efb\u610f\u5fae\u670d\u52a1\u5b9e\u4f8b\u3002 * [prefix=rest;withVersion=false;prefixSegmentCount=2]\u5fae\u670d\u52a1xService\u63d0\u4f9b\u7684URL\u4e3a: /v1/abc\uff0c\u901a\u8fc7Edge\u8bbf\u95ee\u7684\u5730\u5740\u4e3a/rest/xService/v1/abc\uff0c\uff0c\u8bf7\u6c42\u53ef\u80fd\u8f6c\u53d1\u5230\u4efb\u610f\u5fae\u670d\u52a1\u5b9e\u4f8b\u3002 * [prefix=rest;withVersion=false;prefixSegmentCount=2]\u5fae\u670d\u52a1xService\u63d0\u4f9b\u7684URL\u4e3a: /abc\uff0c\u901a\u8fc7Edge\u8bbf\u95ee\u7684\u5730\u5740\u4e3a/rest/xService/abc\uff0c\uff0c\u8bf7\u6c42\u53ef\u80fd\u8f6c\u53d1\u5230\u4efb\u610f\u5fae\u670d\u52a1\u5b9e\u4f8b\u3002 withVersion\u914d\u7f6e\u9879\u63d0\u4f9b\u4e86\u5ba2\u6237\u7aef\u7070\u5ea6\u89c4\u5219\uff0c\u53ef\u4ee5\u8ba9\u5ba2\u6237\u7aef\u6307\u5b9a\u8bbf\u95ee\u7684\u670d\u52a1\u7aef\u7248\u672c\u3002Edge Service\u8fd8\u5305\u542b\u6839\u636e\u63a5\u53e3\u517c\u5bb9\u6027\u81ea\u52a8\u8def\u7531\u7684\u529f\u80fd\uff0c\u8bf7\u6c42\u4f1a\u8f6c\u53d1\u5230\u5305\u542b\u4e86\u8be5\u63a5\u53e3\u7684\u5b9e\u4f8b\u3002\u5047\u8bbe\u67d0\u5fae\u670d\u52a1\uff0c\u517c\u5bb9\u89c4\u5212\u4e3a\u6240\u6709\u9ad8\u7248\u672c\u5fc5\u987b\u517c\u5bb9\u4f4e\u7248\u672c\uff0c\u90e8\u7f72\u4e86\u4ee5\u4e0b\u7248\u672c\u5b9e\u4f8b\uff1a 1.0.0\uff0c\u63d0\u4f9b\u4e86operation1 1.1.0\uff0c\u63d0\u4f9b\u4e86operation1\u3001operation2 Edge Service\u5728\u8f6c\u53d1operation1\u65f6\uff0c\u4f1a\u81ea\u52a8\u4f7f\u75281.0.0+\u7684\u89c4\u5219\u6765\u8fc7\u6ee4\u5b9e\u4f8b Edge Service\u5728\u8f6c\u53d1operation2\u65f6\uff0c\u4f1a\u81ea\u52a8\u4f7f\u75281.1.0+\u7684\u89c4\u5219\u6765\u8fc7\u6ee4\u5b9e\u4f8b \u4ee5\u4e0a\u8fc7\u7a0b\u7528\u6237\u4e0d\u5fc5\u505a\u4efb\u4f55\u5e72\u9884\uff0c\u5168\u81ea\u52a8\u5b8c\u6210\uff0c\u4ee5\u907f\u514d\u5c06\u65b0\u7248\u672c\u7684operation\u8f6c\u53d1\u5230\u65e7\u7248\u672c\u7684\u5b9e\u4f8b\u4e2d\u53bb\u3002 \u4f7f\u7528 URLMappedEdgeDispatcher URLMappedEdgeDispatcher \u5141\u8bb8\u7528\u6237\u914d\u7f6eURL\u548c\u5fae\u670d\u52a1\u7684\u6620\u5c04\u5173\u7cfb\u3002\u4f7f\u7528\u5b83\u53ef\u4ee5\u975e\u5e38\u7075\u6d3b\u7684\u5b9a\u4e49\u54ea\u4e9bURL\u8f6c\u53d1\u5230\u54ea\u4e9b\u5fae\u670d\u52a1\u3002\u5b83\u5305\u542b\u5982\u4e0b\u51e0\u4e2a\u914d\u7f6e\u9879\uff1a servicecomb: http: dispatcher: edge: url: enabled: true pattern: /(.*) ## \u9ed8\u8ba4\u503c\uff0c\u4e00\u822c\u4e0d\u9700\u8981\u914d\u7f6e mappings: businessV1: prefixSegmentCount: 1 path: /url/business/v1/.* microserviceName: business versionRule: 1.0.0-2.0.0 businessV2: prefixSegmentCount: 1 path: /url/business/v2/.* microserviceName: business versionRule: 2.0.0-3.0.0 businessV1\u914d\u7f6e\u9879\u8868\u793a\u7684\u542b\u4e49\u662f\u5c06\u8bf7\u6c42\u8def\u5f84\u4e3a/usr/business/v1/. \u7684\u8bf7\u6c42\uff0c\u8f6c\u53d1\u5230business\u8fd9\u4e2a\u5fae\u670d\u52a1\uff0c\u5e76\u4e14\u53ea\u8f6c\u53d1\u5230\u7248\u672c\u53f7\u4e3a1.0.0-2.0.0\u7684\u5b9e\u4f8b\uff08\u4e0d\u542b2.0.0\uff09\u3002\u8f6c\u53d1\u7684\u65f6\u5019URL\u4e3a/business/v1/. \u3002path\u4f7f\u7528\u7684\u662fJDK\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u53ef\u4ee5\u67e5\u770bPattern\u7c7b\u7684\u8bf4\u660e\u3002prefixSegmentCount\u8868\u793a\u524d\u7f00\u7684URL Segment\u6570\u91cf\uff0c\u524d\u7f00\u4e0d\u5305\u542b\u5728\u8f6c\u53d1\u7684URL\u8def\u5f84\u4e2d\u3002\u6709\u4e09\u79cd\u5f62\u5f0f\u7684versionRule\u53ef\u4ee5\u6307\u5b9a\u30022.0.0-3.0.0\u8868\u793a\u7248\u672c\u8303\u56f4\uff0c\u542b2.0.0\uff0c\u4f46\u4e0d\u542b3.0.0\uff1b2.0.0+\u8868\u793a\u5927\u4e8e2.0.0\u7684\u7248\u672c\uff0c\u542b2.0.0\uff1b2.0.0\u8868\u793a\u53ea\u8f6c\u53d1\u52302.0.0\u7248\u672c\u30022\uff0c2.0\u7b49\u4ef7\u4e8e2.0.0\u3002 \u4ece\u4e0a\u9762\u7684\u914d\u7f6e\u53ef\u4ee5\u770b\u51fa\uff0cURLMappedEdgeDispatcher\u4e5f\u652f\u6301\u5ba2\u6237\u7aef\u7070\u5ea6\u3002\u5f53\u7136\u914d\u7f6e\u9879\u4f1a\u6bd4DefaultEdgeDispatcher\u591a\u3002URLMappedEdgeDispatcher\u652f\u6301\u901a\u8fc7\u914d\u7f6e\u4e2d\u5fc3\u52a8\u6001\u7684\u4fee\u6539\u914d\u7f6e\uff0c\u8c03\u6574\u8def\u7531\u89c4\u5219\u3002 \u4f7f\u7528 CommonHttpEdgeDispatcher CommonHttpEdgeDispatcher \u80fd\u591f\u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230\u76d1\u542c HTTP \u6216\u8005 HTTP 2 \u534f\u8bae\u7684 Provider\uff0c \u5bf9\u4e8e Provider \u7684\u5f00\u53d1\u6846\u67b6\u6ca1\u6709\u9650\u5236\uff0c\u4e5f\u4e0d \u8981\u6c42 Provider \u6ce8\u518c\u5951\u7ea6\u4fe1\u606f\u3002 servicecomb: http: dispatcher: http: enabled: true pattern: /(.*) ## \u9ed8\u8ba4\u503c\uff0c\u4e00\u822c\u4e0d\u9700\u8981\u914d\u7f6e mappings: businessV2: prefixSegmentCount: 1 path: /http/business/v2/.* microserviceName: business versionRule: 2.0.0 CommonHttpEdgeDispatcher \u914d\u7f6e\u9879\u7684\u542b\u4e49\u548c URLMappedEdgeDispatcher \u7c7b\u4f3c\u3002 \u81ea\u5b9a\u4e49 Dispatcher \u81ea\u5b9a\u4e49Dispatcher\u5305\u542b\u4e24\u4e2a\u6b65\u9aa4\uff1a \u5b9e\u73b0AbstractEdgeDispatcher \u901a\u8fc7SPI\u53d1\u5e03\uff1a\u589e\u52a0\u6587\u4ef6META-INF/services/org.apache.servicecomb.transport.rest.vertx.VertxHttpDispatcher\uff0c\u5e76\u5199\u5165\u5b9e\u73b0\u7c7b \u8be6\u7ec6\u7684\u4ee3\u7801\u7ec6\u8282\u53ef\u4ee5\u53c2\u8003\u4e0b\u9762\u7684\u7ae0\u8282\"DEMO\u529f\u80fd\u8bf4\u660e\"\u3002\u5f00\u53d1\u8005\u4e5f\u53ef\u4ee5\u53c2\u8003DefaultEdgeDispatcher\u7b49\u4ee3\u7801\u6765\u5b9a\u4e49\u81ea\u5df1\u7684Dispatcher\u3002 \u8fdb\u884c\u8ba4\u8bc1\u9274\u6743\u548c\u5176\u4ed6\u4e1a\u52a1\u5904\u7406 \u901a\u8fc7Edge Servie\u5de5\u4f5c\u6d41\u7a0b\u53ef\u4ee5\u770b\u51fa\uff0c\u53ef\u4ee5\u901a\u8fc7\u591a\u79cd\u65b9\u5f0f\u6765\u6269\u5c55Edge Service\u7684\u529f\u80fd\uff0c\u5305\u62ecDispatcher\u3001HttpServerFilter\u3001Handler\u3001HttpClientFilter\u7b49\u3002\u6bd4\u8f83\u5e38\u7528\u548c\u7b80\u5355\u7684\u662f\u901a\u8fc7Handler\u6765\u6269\u5c55\u3002DEMO\u91cc\u9762\u5c55\u793a\u4e86\u5982\u4f55\u901a\u8fc7Handler\u6269\u5c55\u6765\u5b9e\u73b0\u9274\u6743\u3002\u8be6\u7ec6\u7684\u4ee3\u7801\u7ec6\u8282\u53ef\u4ee5\u53c2\u8003\u4e0b\u9762\u7684\u7ae0\u8282\"DEMO\u529f\u80fd\u8bf4\u660e\"\u3002 \u90e8\u7f72\u793a\u4f8b \u5de5\u4f5c\u6a21\u5f0f reactive (\u9ed8\u8ba4) Edge Service\u9ed8\u8ba4\u5de5\u4f5c\u4e8e\u9ad8\u6027\u80fd\u7684reactive\u6a21\u5f0f\uff0c\u6b64\u6a21\u5f0f\u8981\u6c42\u5de5\u4f5c\u4e8eEdge Service\u8f6c\u53d1\u6d41\u7a0b\u4e2d\u7684\u4e1a\u52a1\u4ee3\u7801\u4e0d\u80fd\u6709\u4efb\u4f55\u7684\u963b\u585e\u64cd\u4f5c\uff0c\u5305\u62ec\u4e0d\u9650\u4e8e\uff1a \u8fdc\u7a0b\u540c\u6b65\u8c03\u7528\uff0c\u6bd4\u5982\u540c\u6b65\u67e5\u8be2\u6570\u636e\u5e93\u3001\u540c\u6b65\u8c03\u7528\u5fae\u670d\u52a1\uff0c\u6216\u662f\u540c\u6b65\u67e5\u8be2\u8fdc\u7a0b\u7f13\u5b58\u7b49\u7b49 \u4efb\u4f55\u7684sleep\u8c03\u7528 \u4efb\u4f55\u7684wait\u8c03\u7528 \u8d85\u5927\u7684\u5faa\u73af Edge Service\u7684\u5e95\u5c42\u662f\u57fa\u4e8enetty\u7684vertx\uff0c\u4ee5\u4e0a\u7ea6\u675f\u5373\u662fnetty\u7684reactive\u6a21\u5f0f\u7ea6\u675f\u3002 \u7ebf\u7a0b\u6c60 \u5982\u679c\u4e1a\u52a1\u6a21\u578b\u65e0\u6cd5\u6ee1\u8db3reactive\u8981\u6c42\uff0c\u5219\u9700\u8981\u4f7f\u7528\u7ebf\u7a0b\u6c60\u6a21\u5f0f\u3002 \u6b64\u65f6\u9700\u8981\u5728Edge Service\u7684microservice.yaml\u4e2d\u914d\u7f6e\uff1a servicecomb: executors: default: servicecomb.executor.groupThreadPool \u8fd9\u91cc\u7684servicecomb.executor.groupThreadPool\u662fServiceComb\u5185\u7f6e\u7684\u9ed8\u8ba4\u7ebf\u7a0b\u6c60\u5bf9\u5e94\u7684spring bean\u7684beanId\uff1b\u4e1a\u52a1\u53ef\u4ee5\u5b9a\u5236\u81ea\u5df1\u7684\u7ebf\u7a0b\u6c60\uff0c\u5e76\u58f0\u660e\u4e3a\u4e00\u4e2abean\uff0c\u5176beanId\u4e5f\u53ef\u4ee5\u914d\u7f6e\u5230\u8fd9\u91cc\u3002 DEMO\u529f\u80fd\u8bf4\u660e DEMO \u6e90\u7801\u8bf7\u53c2\u8003 edge service demo \u8be5demo\u5305\u542b\u4ee5\u4e0b\u5de5\u7a0b\uff1a authentication\uff1a\u5fae\u670d\u52a1\uff1a\u9274\u6743\u670d\u52a1\u5668 edge-service hiboard-business-1.0.0\u5fae\u670d\u52a1\uff1abusiness\uff0c1.0.0\u7248\u672c\uff0coperation add hiboard-business-1.1.0\u5fae\u670d\u52a1\uff1abusiness\uff0c1.1.0\u7248\u672c\uff0coperation add/dec hiboard-business-2.0.0\u5fae\u670d\u52a1\uff1abusiness\uff0c2.0.0\u7248\u672c\uff0coperation add/dec hiboard-consumer\u4f5c\u4e3a\u4e00\u4e2a\u666e\u901a\u7684httpclient\uff0c\u800c\u4e0d\u662fservicecomb consumer hiboard-model\u975e\u5fae\u670d\u52a1\uff0c\u4ec5\u4ec5\u662f\u4e00\u4e9b\u516c\u5171\u7684model \u901a\u8fc7edge-service\u8bbf\u95ee\u5fae\u670d\u52a1business\u7684\u4e0d\u540c\u7248\u672c\uff0c\u5e76\u786e\u8ba4\u662f\u7531\u6b63\u786e\u7684\u5b9e\u4f8b\u5904\u7406\u7684\u3002 1.\u6ce8\u518cDispatcher \u5b9e\u73b0\u63a5\u53e3org.apache.servicecomb.transport.rest.vertx.VertxHttpDispatcher\uff0c\u6216\u4eceorg.apache.servicecomb.edge.core.AbstractEdgeDispatcher\u7ee7\u627f\uff0c\u5b9e\u73b0\u81ea\u5df1\u7684dispatcher\u529f\u80fd\u3002 \u5b9e\u73b0\u7c7b\u901a\u8fc7java\u6807\u51c6\u7684SPI\u673a\u5236\u6ce8\u518c\u5230\u7cfb\u7edf\u4e2d\u53bb\u3002 Dispatcher\u9700\u8981\u5b9e\u73b02\u4e2a\u65b9\u6cd5\uff1a getOrder Dispatcher\u9700\u8981\u5411vertx\u6ce8\u5165\u8def\u7531\u89c4\u5219\uff0c\u8def\u7531\u89c4\u5219\u4e4b\u95f4\u662f\u6709\u4f18\u5148\u7ea7\u987a\u5e8f\u5173\u7cfb\u7684\u3002 \u7cfb\u7edf\u4e2d\u6240\u6709\u7684Dispatcher\u6309\u7167getOrder\u7684\u8fd4\u56de\u503c\u6309\u4ece\u5c0f\u5230\u5927\u7684\u65b9\u5f0f\u6392\u5e8f\uff0c\u6309\u987a\u5e8f\u521d\u59cb\u5316\u3002 \u5982\u679c2\u4e2aDispatcher\u7684getOrder\u8fd4\u56de\u503c\u76f8\u540c\uff0c\u52192\u8005\u7684\u987a\u5e8f\u4e0d\u53ef\u9884\u77e5\u3002 init init\u65b9\u6cd5\u5165\u53c2\u4e3avertx\u6846\u67b6\u4e2d\u7684io.vertx.ext.web.Router\uff0c\u9700\u8981\u901a\u8fc7\u8be5\u5bf9\u8c61\u5b9e\u73b0\u8def\u7531\u89c4\u5219\u7684\u5b9a\u5236\u3002 \u53ef\u4ee5\u6307\u5b9a\u6ee1\u8db3\u8981\u6c42\u7684url\uff0c\u662f\u5426\u9700\u8981\u5904\u7406cookie\u3001\u662f\u5426\u9700\u8981\u5904\u7406body\u3001\u4f7f\u7528\u54ea\u4e2a\u81ea\u5b9a\u4e49\u65b9\u6cd5\u5904\u7406\u6536\u5230\u7684\u8bf7\u6c42\u7b49\u7b49 \u66f4\u591a\u8def\u7531\u89c4\u5219\u7ec6\u8282\u8bf7\u53c2\u8003vertx\u5b98\u65b9\u6587\u6863\uff1a vertx\u8def\u7531\u673a\u5236 \u63d0\u793a\uff1a \u591a\u4e2aDispatcher\u53ef\u4ee5\u8bbe\u7f6e\u8def\u7531\u89c4\u5219\uff0c\u8986\u76d6\u5230\u76f8\u540c\u7684url\u3002 \u5047\u8bbeDispatcher A\u548cB\u90fd\u53ef\u4ee5\u5904\u7406\u540c\u4e00\u4e2aurl\uff0c\u5e76\u4e14A\u4f18\u5148\u7ea7\u66f4\u9ad8\uff0c\u5219\uff1a \u5982\u679cA\u5904\u7406\u5b8c\uff0c\u65e2\u6ca1\u5e94\u7b54\uff0c\u4e5f\u6ca1\u6709\u8c03\u7528RoutingContext.next()\uff0c\u5219\u5c5e\u4e8ebug\uff0c\u672c\u6b21\u8bf7\u6c42\u6302\u6b7b\u4e86 \u5982\u679cA\u5904\u7406\u5b8c\uff0c\u7136\u540e\u8c03\u7528\u4e86RoutingContext.next()\uff0c\u5219\u4f1a\u5c06\u8bf7\u6c42\u8f6c\u79fb\u7ed9B\u5904\u7406 2.\u8f6c\u53d1\u8bf7\u6c42 \u6ce8\u518c\u8def\u7531\u65f6\uff0c\u6307\u5b9a\u4e86\u4f7f\u7528\u54ea\u4e2a\u65b9\u6cd5\u6765\u5904\u7406\u8bf7\u6c42\uff08\u4e0b\u9762\u4f7f\u7528onRequest\u6765\u6307\u4ee3\u8be5\u65b9\u6cd5\uff09\uff0c\u5728onRequest\u4e2d\u5b9e\u73b0\u8f6c\u53d1\u903b\u8f91\u3002 \u65b9\u6cd5\u539f\u578b\u4e3a\uff1a void onRequest(RoutingContext context) \u7cfb\u7edf\u5c01\u88c5\u4e86org.apache.servicecomb.edge.core.EdgeInvocation\u6765\u5b9e\u73b0\u8f6c\u53d1\u529f\u80fd\uff0c\u81f3\u5c11\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u53c2\u6570\uff1a microserviceName\uff0c\u4e1a\u52a1\u81ea\u884c\u5236\u5b9a\u89c4\u5219\uff0c\u53ef\u4ee5\u5728url\u4f20\u5165\uff0c\u6216\u662f\u6839\u636eurl\u67e5\u627e\u7b49\u7b49 context\uff0c\u5373onRequest\u7684\u5165\u53c2 path\uff0c\u8f6c\u53d1\u76ee\u6807\u7684url httpServerFilters\uff0cDispatcher\u7236\u7c7b\u5df2\u7ecf\u521d\u59cb\u5316\u597d\u7684\u6210\u5458\u53d8\u91cf EdgeInvocation edgeInvocation = new EdgeInvocation(); edgeInvocation.init(microserviceName, context, path, httpServerFilters); edgeInvocation.edgeInvoke(); edgeInvoke\u8c03\u7528\u5185\u90e8\uff0c\u4f1a\u4f5c\u4e3aServiceComb\u6807\u51c6consumer\u53bb\u8f6c\u53d1\u8c03\u7528\u3002 \u4f5c\u4e3a\u6807\u51c6consumer\uff0c\u610f\u5473\u7740ServiceComb\u6240\u6709\u6807\u51c6\u7684\u6cbb\u7406\u80fd\u529b\u5728\u8fd9\u91cc\u90fd\u662f\u751f\u6548\u7684\u3002 3.\u8bbe\u7f6e\u517c\u5bb9\u89c4\u5219 \u4e0d\u540c\u7684\u4e1a\u52a1\u53ef\u80fd\u6709\u4e0d\u540c\u7684\u517c\u5bb9\u89c4\u5212\uff0cservicecomb\u9ed8\u8ba4\u7684\u517c\u5bb9\u89c4\u5219\uff0c\u8981\u6c42\u6240\u6709\u65b0\u7248\u672c\u517c\u5bb9\u65e7\u7248\u672c\u3002\u5982\u679c\u6ee1\u8db3\u8fd9\u4e2a\u8981\u6c42\uff0c\u5219\u4e0d\u5fc5\u505a\u4efb\u4f55\u7279\u6b8a\u7684\u8bbe\u7f6e\u3002 \u8fd8\u6709\u4e00\u79cd\u5178\u578b\u7684\u89c4\u5212\uff1a 1.0.0-2.0.0\u5185\u90e8\u517c\u5bb9\uff0curl\u4e3a/microserviceName/v1/\u2026.\u7684\u5f62\u5f0f 2.0.0-3.0.0\u5185\u90e8\u517c\u5bb9\uff0curl\u4e3a/microserviceName/v2/\u2026.\u7684\u5f62\u5f0f \u2026\u2026 \u5404\u5927\u7248\u672c\u4e4b\u95f4\u4e0d\u517c\u5bb9 \u6b64\u65f6\uff0c\u5f00\u53d1\u4eba\u5458\u9700\u8981\u9488\u5bf9EdgeInvocation\u8bbe\u7f6e\u517c\u5bb9\u89c4\u5219\uff1a private CompatiblePathVersionMapper versionMapper = new CompatiblePathVersionMapper(); \u2026\u2026 edgeInvocation.setVersionRule(versionMapper.getOrCreate(pathVersion).getVersionRule()); versionMapper\u7684\u4f5c\u7528\u662f\u5c06v1\u6216\u662fv2\u8fd9\u6837\u7684\u4e32\uff0c\u8f6c\u4e3a1.0.0-2.0.0\u62162.0.0-3.0.0\u8fd9\u6837\u7684\u517c\u5bb9\u89c4\u5219\u3002 \u6ce8\u610f\uff1a \u63a5\u53e3\u4e0d\u517c\u5bb9\u4f1a\u5bfc\u81f4\u975e\u5e38\u591a\u7684\u95ee\u9898\u3002java chassis\u8981\u6c42\u9ad8\u7248\u672c\u670d\u52a1\u517c\u5bb9\u4f4e\u7248\u672c\u670d\u52a1\uff0c\u53ea\u5141\u8bb8\u589e\u52a0\u63a5\u53e3\u4e0d\u5141\u8bb8\u5220\u9664\u63a5\u53e3\u3002\u5728\u589e\u52a0\u63a5\u53e3\u540e\uff0c\u5fc5\u987b\u589e\u52a0\u5fae\u670d\u52a1\u7684\u7248\u672c\u53f7\u3002\u5728\u5f00\u53d1\u9636\u6bb5\uff0c\u63a5\u53e3\u53d8\u66f4\u9891\u7e41\uff0c\u5f00\u53d1\u8005\u5f80\u5f80\u5fd8\u8bb0\u8fd9\u4e2a\u89c4\u5219\u3002\u5f53\u8fd9\u4e2a\u7ea6\u675f\u88ab\u6253\u7834\u7684\u65f6\u5019\uff0c\u9700\u8981\u6e05\u7406\u670d\u52a1\u4e2d\u5fc3\u5fae\u670d\u52a1\u7684\u4fe1\u606f\uff0c\u5e76\u91cd\u542f\u5fae\u670d\u52a1\u548cEdge Service(\u4ee5\u53ca\u4f9d\u8d56\u4e8e\u8be5\u5fae\u670d\u52a1\u7684\u5176\u4ed6\u670d\u52a1)\u3002\u5426\u5219\u53ef\u80fd\u51fa\u73b0\u8bf7\u6c42\u8f6c\u53d1\u5931\u8d25\u7b49\u60c5\u51b5\u3002 4.\u9274\u6743 Edge Service\u662f\u7cfb\u7edf\u7684\u8fb9\u754c\uff0c\u5bf9\u4e8e\u5f88\u591a\u8bf7\u6c42\u9700\u8981\u6267\u884c\u9274\u6743\u903b\u8f91\u3002 \u57fa\u4e8e\u6807\u51c6\u7684ServiceComb\u673a\u5236\uff0c\u53ef\u4ee5\u901a\u8fc7handler\u6765\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\u3002 \u6700\u7b80\u5355\u7684\u793a\u610f\u4ee3\u7801\u5982\u4e0b\uff1a public class AuthHandler implements Handler { private Auth auth; public AuthHandler() { auth = Invoker.createProxy( auth , auth , Auth.class); } \u2026\u2026 @Override public void handle(Invocation invocation, AsyncResponse asyncResp) throws Exception { if (!auth.auth( )) { asyncResp.consumerFail(new InvocationException(Status.UNAUTHORIZED, (Object) auth failed )); return; } LOGGER.debug( auth success. ); invocation.next(asyncResp); } } Auth\u8868\u793a\u662f\u9274\u6743\u5fae\u670d\u52a1\u63d0\u4f9b\u7684\u63a5\u53e3\uff0cInvoker.createProxy(\"auth\", \"auth\", Auth.class)\u662f\u900f\u660eRPC\u5f00\u53d1\u6a21\u5f0f\u4e2dconsumer\u7684\u5e95\u5c42api\uff0c\u4e0e@ReferenceRpc\u662f\u7b49\u6548\uff0c\u53ea\u4e0d\u8fc7\u4e0d\u9700\u8981\u4f9d\u8d56spring bean\u673a\u5236\u3002 Auth\u63a5\u53e3\u5b8c\u5168\u7531\u4e1a\u52a1\u5b9a\u4e49\uff0c\u8fd9\u91cc\u53ea\u662f\u4e00\u4e2a\u793a\u4f8b\u3002 Handler\u5f00\u53d1\u5b8c\u6210\u540e\uff0c\u914d\u7f6e\u5230edge service\u7684microservice.yaml\u4e2d\uff1a servicecomb: handler: chain: Consumer: default: auth,\u2026\u2026 service: auth: \u2026\u2026 \u8fd9\u4e2a\u4f8b\u5b50\uff0c\u8868\u793a\u8f6c\u53d1\u8bf7\u6c42\u7ed9\u6240\u6709\u7684\u5fae\u670d\u52a1\u90fd\u5fc5\u987b\u7ecf\u8fc7\u9274\u6743\uff0c\u4f46\u662f\u8c03\u7528\u9274\u6743\u5fae\u670d\u52a1\u65f6\u4e0d\u9700\u8981\u9274\u6743\u3002","title":"\u4f7f\u7528Edge Service\u505a\u8fb9\u7f18\u670d\u52a1"},{"location":"edge/by-servicecomb-sdk/#edge-service","text":"Edge Service \u662fServiceComb \u63d0\u4f9b\u7684JAVA\u7f51\u5173\u670d\u52a1\u5f00\u53d1\u6846\u67b6\u3002Edge Service\u4f5c\u4e3a\u6574\u4e2a\u5fae\u670d\u52a1\u7cfb\u7edf\u5bf9\u5916\u7684\u63a5\u53e3\uff0c\u5411\u6700\u7ec8\u7528\u6237\u63d0\u4f9b\u670d\u52a1\uff0c\u63a5\u5165RESTful\u8bf7\u6c42\uff0c\u8f6c\u53d1\u7ed9\u5185\u90e8\u5fae\u670d\u52a1\u3002Edge Service\u4ee5\u5f00\u53d1\u6846\u67b6\u7684\u5f62\u5f0f\u63d0\u4f9b\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u975e\u5e38\u7b80\u5355\u7684\u642d\u5efa\u4e00\u4e2aEdge Service\u670d\u52a1\uff0c\u901a\u8fc7\u7b80\u5355\u7684\u914d\u7f6e\u5c31\u53ef\u4ee5\u5b9a\u4e49\u8def\u7531\u8f6c\u53d1\u89c4\u5219\u3002\u540c\u65f6Edge Service\u652f\u6301\u5f3a\u5927\u7684\u6269\u5c55\u80fd\u529b\uff0c\u670d\u52a1\u6620\u5c04\u3001\u8bf7\u6c42\u89e3\u6790\u3001\u52a0\u5bc6\u89e3\u5bc6\u3001\u9274\u6743\u7b49\u903b\u8f91\u90fd\u53ef\u4ee5\u901a\u8fc7\u6269\u5c55\u5b9e\u73b0\u3002 Edge Service \u672c\u8eab\u4e5f\u662f\u4e00\u4e2a\u5fae\u670d\u52a1\uff0c\u9700\u9075\u5b88\u6240\u6709\u5fae\u670d\u52a1\u5f00\u53d1\u7684\u89c4\u5219\u3002\u5176\u672c\u8eab\u53ef\u4ee5\u90e8\u7f72\u4e3a\u591a\u5b9e\u4f8b\uff0c\u524d\u7aef\u4f7f\u7528\u8d1f\u8f7d\u5747\u8861\u88c5\u7f6e\u8fdb\u884c\u8d1f\u8f7d\u5206\u53d1\uff1b\u4e5f\u53ef\u4ee5\u90e8\u7f72\u4e3a\u4e3b\u5907\uff0c\u76f4\u63a5\u63a5\u5165\u7528\u6237\u8bf7\u6c42\u3002\u5f00\u53d1\u8005\u53ef\u4ee5\u6839\u636eEdge Service\u627f\u8f7d\u7684\u903b\u8f91\u548c\u4e1a\u52a1\u8bbf\u95ee\u91cf\u3001\u7ec4\u7f51\u60c5\u51b5\u6765\u89c4\u5212\u3002","title":"\u4f7f\u7528 Edge Service \u505a\u8fb9\u7f18\u670d\u52a1"},{"location":"edge/by-servicecomb-sdk/#edge-service_1","text":"\u5f00\u53d1 Edge Service \u548c\u5f00\u53d1\u4e00\u4e2a\u666e\u901a\u7684\u5fae\u670d\u52a1\u6b65\u9aa4\u5dee\u4e0d\u591a\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u4ece\u5bfc\u5165 ServiceComb Edge Service Demo \u5165\u624b\u3002\u4ece\u5934\u642d\u5efa\u9879\u76ee\u5305\u542b\u5982\u4e0b\u51e0\u4e2a\u6b65\u9aa4\uff1a \u914d\u7f6e\u4f9d\u8d56\u5173\u7cfb \u5728\u9879\u76ee\u4e2d\u52a0\u5165edge-core\u7684\u4f9d\u8d56\uff0c\u5c31\u53ef\u4ee5\u542f\u52a8Edge Service\u7684\u529f\u80fd\u3002Edge Service\u5728\u8bf7\u6c42\u8f6c\u53d1\u7684\u65f6\u5019\uff0c\u4f1a\u7ecf\u8fc7\u5904\u7406\u94fe\uff0c\u56e0\u6b64\u8fd8\u53ef\u4ee5\u52a0\u5165\u76f8\u5173\u7684\u5904\u7406\u94fe\u7684\u6a21\u5757\u7684\u4f9d\u8d56\uff0c\u4e0b\u9762\u7684\u5b9e\u4f8b\u589e\u52a0\u7684\u8d1f\u8f7d\u5747\u8861\u7684\u5904\u7406\u94fe\uff0c\u8fd9\u4e2a\u662f\u5fc5\u987b\u7684\u3002 dependency groupId org.apache.servicecomb /groupId artifactId edge-core /artifactId /dependency dependency groupId org.apache.servicecomb /groupId artifactId handler-loadbalance /artifactId /dependency \u5b9a\u4e49\u542f\u52a8\u7c7b \u548c\u5f00\u53d1\u666e\u901a\u5fae\u670d\u52a1\u4e00\u6837\uff0c\u53ef\u4ee5\u901a\u8fc7\u52a0\u8f7dSpring\u7684\u65b9\u5f0f\u5c06\u670d\u52a1\u62c9\u8d77\u6765\u3002 public class EdgeMain { public static void main(String[] args) throws Exception { Log4jUtils.init(); BeanUtils.init(); } } \u589e\u52a0\u914d\u7f6e\u6587\u4ef6microservie.yaml Edge Service\u672c\u8eab\u4e5f\u662f\u4e00\u4e2a\u5fae\u670d\u52a1\uff0c\u9075\u5faa\u5fae\u670d\u52a1\u67e5\u627e\u7684\u89c4\u5219\uff0c\u81ea\u5df1\u4e5f\u4f1a\u8fdb\u884c\u6ce8\u518c\u3002\u6ce8\u610fAPPLICAIONT_ID\u4e0e\u9700\u8981\u8f6c\u53d1\u7684\u5fae\u670d\u52a1\u76f8\u540c\u3002\u5728\u4e0b\u9762\u7684\u914d\u7f6e\u4e2d\uff0c\u6307\u5b9a\u4e86Edge Service\u76d1\u542c\u7684\u5730\u5740\uff0c\u5904\u7406\u94fe\u7b49\u4fe1\u606f\u3002\u5176\u4e2dauth\u5904\u7406\u94fe\u662fDEMO\u9879\u76ee\u4e2d\u81ea\u5b9a\u4e49\u7684\u5904\u7406\u94fe\uff0c\u7528\u4e8e\u5b9e\u73b0\u8ba4\u8bc1\u3002\u540c\u65f6auth\u670d\u52a1\u672c\u8eab\uff0c\u4e0d\u7ecf\u8fc7\u8fd9\u4e2a\u5904\u7406\u94fe\uff0c\u76f8\u5f53\u4e8e\u4e0d\u9274\u6743\u3002 APPLICATION_ID: edge service_description: name: edge version: 0.0.1 servicecomb: service: registry: address: http://127.0.0.1:30100 rest: address: 127.0.0.1:18080 handler: chain: Consumer: default: auth,loadbalance service: auth: loadbalance","title":"\u5f00\u53d1 Edge Service \u670d\u52a1"},{"location":"edge/by-servicecomb-sdk/#_1","text":"Edge Service\u7684\u5de5\u4f5c\u6d41\u7a0b\u5982\u4e0b\uff0c\u84dd\u8272\u80cc\u666f\u90e8\u5206\u5728Eventloop\u7ebf\u7a0b\u4e2d\u6267\u884c\uff0c\u9ec4\u8272\u80cc\u666f\u90e8\u5206\uff1a * \u5982\u679c\u5de5\u4f5c\u4e8ereactive\u6a21\u5f0f\uff0c\u5219\u76f4\u63a5\u5728Eventloop\u7ebf\u7a0b\u6267\u884c * \u5982\u679c\u5de5\u4f5c\u4e8e\u7ebf\u7a0b\u6c60\u6a21\u5f0f\uff0c\u5219\u5728\u7ebf\u7a0b\u6c60\u7684\u7ebf\u7a0b\u4e2d\u6267\u884c","title":"\u5de5\u4f5c\u6d41\u7a0b"},{"location":"edge/by-servicecomb-sdk/#header","text":"Edge Service \u5728\u8f6c\u53d1\u8bf7\u6c42\u7684\u65f6\u5019, \u4f1a\u9ed8\u8ba4\u8fc7\u6ee4\u6389 \u516c\u5171\u8bf7\u6c42\u5934 \u3002 \u4e5f\u5c31\u662f\u9664\u4e86 Provider \u7aef\u663e\u793a \u58f0\u660e\u9700\u8981\u7684 HEADER \u5916\uff0c \u5176\u4ed6\u7684 header \u5728\u8f6c\u53d1\u7684\u65f6\u5019\u90fd\u4f1a\u4e22\u5931\u3002\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u76f8\u5173\u53c2\u6570\u4fdd\u7559 \u516c\u5171\u8bf7\u6c42\u5934\u3002 servicecomb: edge: filter: addHeader: # \u5f00\u542f \u516c\u5171\u8bf7\u6c42\u5934\u4fdd\u7559\u529f\u80fd\u3002\u9ed8\u8ba4 false enabled: true # \u8981\u4fdd\u7559\u7684\u516c\u5171\u8bf7\u6c42\u5934\uff0c\u4ee5\u9017\u53f7\u9694\u5f00 allowedHeaders: external_1,external_2 \u5982\u679c\u5bf9\u63a5\u4e86\u914d\u7f6e\u4e2d\u5fc3\uff0c \u53ef\u4ee5\u5728\u914d\u7f6e\u4e2d\u5fc3\u52a8\u6001\u4fee\u6539 \u914d\u7f6e servicecomb.edge.filter.addHeader.enabled \u548c servicecomb.edge.filter.addHeader.allowedHeaders \uff0c \u914d\u7f6e\u52a8\u6001\u751f\u6548\u3002","title":"\u5b9a\u5236\u516c\u5171\u8f6c\u53d1 Header"},{"location":"edge/by-servicecomb-sdk/#_2","text":"\u4f7f\u7528Edge Service\u7684\u6838\u5fc3\u5de5\u4f5c\u662f\u914d\u7f6e\u8def\u7531\u89c4\u5219\u3002\u573a\u666f\u4e0d\u540c\uff0c\u89c4\u5219\u4e5f\u4e0d\u540c\u3002 \u8def\u7531\u89c4\u5219\u7531\u4e00\u7cfb\u5217AbstractEdgeDispatcher\u7ec4\u6210\u3002Edge Service\u63d0\u4f9b\u4e86\u51e0\u4e2a\u5e38\u89c1\u7684Dispatcher\uff0c\u901a\u8fc7\u914d\u7f6e\u5373\u53ef\u542f\u7528\uff0c\u5982\u679c\u8fd9\u4e9bDispatcher\u4e0d\u6ee1\u8db3\u4e1a\u52a1\u573a\u666f\u9700\u8981\uff0c\u8fd8\u53ef\u4ee5\u81ea\u5b9a\u4e49\u3002","title":"\u5b9a\u5236\u8def\u7531\u89c4\u5219"},{"location":"edge/by-servicecomb-sdk/#defaultedgedispatcher","text":"DefaultEdgeDispatcher\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u3001\u5bb9\u6613\u7ba1\u7406\u7684Dispatcher\uff0c\u4f7f\u7528\u8fd9\u4e2aDispatcher\uff0c\u7528\u6237\u4e0d\u7528\u52a8\u6001\u7ba1\u7406\u8f6c\u53d1\u89c4\u5219\uff0c\u5e94\u7528\u4e8e\u5b9e\u9645\u7684\u4e1a\u52a1\u573a\u666f\u975e\u5e38\u65b9\u4fbf\uff0c\u8fd9\u4e2a\u4e5f\u662f\u63a8\u8350\u7684\u4e00\u79cd\u7ba1\u7406\u673a\u5236\u3002\u5b83\u5305\u542b\u5982\u4e0b\u51e0\u4e2a\u914d\u7f6e\u9879\uff1a servicecomb: http: dispatcher: edge: default: enabled: true prefix: rest withVersion: true prefixSegmentCount: 1 \u5e38\u89c1\u7684\u8fd9\u4e9b\u914d\u7f6e\u9879\u7684\u793a\u4f8b\u53ca\u542b\u4e49\u5982\u4e0b: * [prefix=rest;withVersion=true;prefixSegmentCount=1]\u5fae\u670d\u52a1xService\u63d0\u4f9b\u7684URL\u4e3a: /xService/v1/abc\uff0c\u901a\u8fc7Edge\u8bbf\u95ee\u7684\u5730\u5740\u4e3a/rest/xService/v1/abc\uff0c\u8bf7\u6c42\u53ea\u8f6c\u53d1\u5230[1.0.0-2.0.0)\u7248\u672c\u7684\u5fae\u670d\u52a1\u5b9e\u4f8b\u3002 * [prefix=rest;withVersion=true;prefixSegmentCount=2]\u5fae\u670d\u52a1xService\u63d0\u4f9b\u7684URL\u4e3a: /v1/abc\uff0c\u901a\u8fc7Edge\u8bbf\u95ee\u7684\u5730\u5740\u4e3a/rest/xService/v1/abc\uff0c\u8bf7\u6c42\u53ea\u8f6c\u53d1\u5230[1.0.0-2.0.0)\u7248\u672c\u7684\u5fae\u670d\u52a1\u5b9e\u4f8b\u3002 * [prefix=rest;withVersion=true;prefixSegmentCount=3]\u5fae\u670d\u52a1xService\u63d0\u4f9b\u7684URL\u4e3a: /abc\uff0c\u901a\u8fc7Edge\u8bbf\u95ee\u7684\u5730\u5740\u4e3a/rest/xService/v1/abc\uff0c\u8bf7\u6c42\u53ea\u8f6c\u53d1\u5230[1.0.0-2.0.0)\u7248\u672c\u7684\u5fae\u670d\u52a1\u5b9e\u4f8b\u3002 * [prefix=rest;withVersion=false;prefixSegmentCount=1]\u5fae\u670d\u52a1xService\u63d0\u4f9b\u7684URL\u4e3a: /xService/v1/abc\uff0c\u901a\u8fc7Edge\u8bbf\u95ee\u7684\u5730\u5740\u4e3a/rest/xService/v1/abc\uff0c\u8bf7\u6c42\u53ef\u80fd\u8f6c\u53d1\u5230\u4efb\u610f\u5fae\u670d\u52a1\u5b9e\u4f8b\u3002 * [prefix=rest;withVersion=false;prefixSegmentCount=2]\u5fae\u670d\u52a1xService\u63d0\u4f9b\u7684URL\u4e3a: /v1/abc\uff0c\u901a\u8fc7Edge\u8bbf\u95ee\u7684\u5730\u5740\u4e3a/rest/xService/v1/abc\uff0c\uff0c\u8bf7\u6c42\u53ef\u80fd\u8f6c\u53d1\u5230\u4efb\u610f\u5fae\u670d\u52a1\u5b9e\u4f8b\u3002 * [prefix=rest;withVersion=false;prefixSegmentCount=2]\u5fae\u670d\u52a1xService\u63d0\u4f9b\u7684URL\u4e3a: /abc\uff0c\u901a\u8fc7Edge\u8bbf\u95ee\u7684\u5730\u5740\u4e3a/rest/xService/abc\uff0c\uff0c\u8bf7\u6c42\u53ef\u80fd\u8f6c\u53d1\u5230\u4efb\u610f\u5fae\u670d\u52a1\u5b9e\u4f8b\u3002 withVersion\u914d\u7f6e\u9879\u63d0\u4f9b\u4e86\u5ba2\u6237\u7aef\u7070\u5ea6\u89c4\u5219\uff0c\u53ef\u4ee5\u8ba9\u5ba2\u6237\u7aef\u6307\u5b9a\u8bbf\u95ee\u7684\u670d\u52a1\u7aef\u7248\u672c\u3002Edge Service\u8fd8\u5305\u542b\u6839\u636e\u63a5\u53e3\u517c\u5bb9\u6027\u81ea\u52a8\u8def\u7531\u7684\u529f\u80fd\uff0c\u8bf7\u6c42\u4f1a\u8f6c\u53d1\u5230\u5305\u542b\u4e86\u8be5\u63a5\u53e3\u7684\u5b9e\u4f8b\u3002\u5047\u8bbe\u67d0\u5fae\u670d\u52a1\uff0c\u517c\u5bb9\u89c4\u5212\u4e3a\u6240\u6709\u9ad8\u7248\u672c\u5fc5\u987b\u517c\u5bb9\u4f4e\u7248\u672c\uff0c\u90e8\u7f72\u4e86\u4ee5\u4e0b\u7248\u672c\u5b9e\u4f8b\uff1a 1.0.0\uff0c\u63d0\u4f9b\u4e86operation1 1.1.0\uff0c\u63d0\u4f9b\u4e86operation1\u3001operation2 Edge Service\u5728\u8f6c\u53d1operation1\u65f6\uff0c\u4f1a\u81ea\u52a8\u4f7f\u75281.0.0+\u7684\u89c4\u5219\u6765\u8fc7\u6ee4\u5b9e\u4f8b Edge Service\u5728\u8f6c\u53d1operation2\u65f6\uff0c\u4f1a\u81ea\u52a8\u4f7f\u75281.1.0+\u7684\u89c4\u5219\u6765\u8fc7\u6ee4\u5b9e\u4f8b \u4ee5\u4e0a\u8fc7\u7a0b\u7528\u6237\u4e0d\u5fc5\u505a\u4efb\u4f55\u5e72\u9884\uff0c\u5168\u81ea\u52a8\u5b8c\u6210\uff0c\u4ee5\u907f\u514d\u5c06\u65b0\u7248\u672c\u7684operation\u8f6c\u53d1\u5230\u65e7\u7248\u672c\u7684\u5b9e\u4f8b\u4e2d\u53bb\u3002","title":"\u4f7f\u7528 DefaultEdgeDispatcher"},{"location":"edge/by-servicecomb-sdk/#urlmappededgedispatcher","text":"URLMappedEdgeDispatcher \u5141\u8bb8\u7528\u6237\u914d\u7f6eURL\u548c\u5fae\u670d\u52a1\u7684\u6620\u5c04\u5173\u7cfb\u3002\u4f7f\u7528\u5b83\u53ef\u4ee5\u975e\u5e38\u7075\u6d3b\u7684\u5b9a\u4e49\u54ea\u4e9bURL\u8f6c\u53d1\u5230\u54ea\u4e9b\u5fae\u670d\u52a1\u3002\u5b83\u5305\u542b\u5982\u4e0b\u51e0\u4e2a\u914d\u7f6e\u9879\uff1a servicecomb: http: dispatcher: edge: url: enabled: true pattern: /(.*) ## \u9ed8\u8ba4\u503c\uff0c\u4e00\u822c\u4e0d\u9700\u8981\u914d\u7f6e mappings: businessV1: prefixSegmentCount: 1 path: /url/business/v1/.* microserviceName: business versionRule: 1.0.0-2.0.0 businessV2: prefixSegmentCount: 1 path: /url/business/v2/.* microserviceName: business versionRule: 2.0.0-3.0.0 businessV1\u914d\u7f6e\u9879\u8868\u793a\u7684\u542b\u4e49\u662f\u5c06\u8bf7\u6c42\u8def\u5f84\u4e3a/usr/business/v1/. \u7684\u8bf7\u6c42\uff0c\u8f6c\u53d1\u5230business\u8fd9\u4e2a\u5fae\u670d\u52a1\uff0c\u5e76\u4e14\u53ea\u8f6c\u53d1\u5230\u7248\u672c\u53f7\u4e3a1.0.0-2.0.0\u7684\u5b9e\u4f8b\uff08\u4e0d\u542b2.0.0\uff09\u3002\u8f6c\u53d1\u7684\u65f6\u5019URL\u4e3a/business/v1/. \u3002path\u4f7f\u7528\u7684\u662fJDK\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u53ef\u4ee5\u67e5\u770bPattern\u7c7b\u7684\u8bf4\u660e\u3002prefixSegmentCount\u8868\u793a\u524d\u7f00\u7684URL Segment\u6570\u91cf\uff0c\u524d\u7f00\u4e0d\u5305\u542b\u5728\u8f6c\u53d1\u7684URL\u8def\u5f84\u4e2d\u3002\u6709\u4e09\u79cd\u5f62\u5f0f\u7684versionRule\u53ef\u4ee5\u6307\u5b9a\u30022.0.0-3.0.0\u8868\u793a\u7248\u672c\u8303\u56f4\uff0c\u542b2.0.0\uff0c\u4f46\u4e0d\u542b3.0.0\uff1b2.0.0+\u8868\u793a\u5927\u4e8e2.0.0\u7684\u7248\u672c\uff0c\u542b2.0.0\uff1b2.0.0\u8868\u793a\u53ea\u8f6c\u53d1\u52302.0.0\u7248\u672c\u30022\uff0c2.0\u7b49\u4ef7\u4e8e2.0.0\u3002 \u4ece\u4e0a\u9762\u7684\u914d\u7f6e\u53ef\u4ee5\u770b\u51fa\uff0cURLMappedEdgeDispatcher\u4e5f\u652f\u6301\u5ba2\u6237\u7aef\u7070\u5ea6\u3002\u5f53\u7136\u914d\u7f6e\u9879\u4f1a\u6bd4DefaultEdgeDispatcher\u591a\u3002URLMappedEdgeDispatcher\u652f\u6301\u901a\u8fc7\u914d\u7f6e\u4e2d\u5fc3\u52a8\u6001\u7684\u4fee\u6539\u914d\u7f6e\uff0c\u8c03\u6574\u8def\u7531\u89c4\u5219\u3002","title":"\u4f7f\u7528 URLMappedEdgeDispatcher"},{"location":"edge/by-servicecomb-sdk/#commonhttpedgedispatcher","text":"CommonHttpEdgeDispatcher \u80fd\u591f\u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230\u76d1\u542c HTTP \u6216\u8005 HTTP 2 \u534f\u8bae\u7684 Provider\uff0c \u5bf9\u4e8e Provider \u7684\u5f00\u53d1\u6846\u67b6\u6ca1\u6709\u9650\u5236\uff0c\u4e5f\u4e0d \u8981\u6c42 Provider \u6ce8\u518c\u5951\u7ea6\u4fe1\u606f\u3002 servicecomb: http: dispatcher: http: enabled: true pattern: /(.*) ## \u9ed8\u8ba4\u503c\uff0c\u4e00\u822c\u4e0d\u9700\u8981\u914d\u7f6e mappings: businessV2: prefixSegmentCount: 1 path: /http/business/v2/.* microserviceName: business versionRule: 2.0.0 CommonHttpEdgeDispatcher \u914d\u7f6e\u9879\u7684\u542b\u4e49\u548c URLMappedEdgeDispatcher \u7c7b\u4f3c\u3002","title":"\u4f7f\u7528 CommonHttpEdgeDispatcher"},{"location":"edge/by-servicecomb-sdk/#dispatcher","text":"\u81ea\u5b9a\u4e49Dispatcher\u5305\u542b\u4e24\u4e2a\u6b65\u9aa4\uff1a \u5b9e\u73b0AbstractEdgeDispatcher \u901a\u8fc7SPI\u53d1\u5e03\uff1a\u589e\u52a0\u6587\u4ef6META-INF/services/org.apache.servicecomb.transport.rest.vertx.VertxHttpDispatcher\uff0c\u5e76\u5199\u5165\u5b9e\u73b0\u7c7b \u8be6\u7ec6\u7684\u4ee3\u7801\u7ec6\u8282\u53ef\u4ee5\u53c2\u8003\u4e0b\u9762\u7684\u7ae0\u8282\"DEMO\u529f\u80fd\u8bf4\u660e\"\u3002\u5f00\u53d1\u8005\u4e5f\u53ef\u4ee5\u53c2\u8003DefaultEdgeDispatcher\u7b49\u4ee3\u7801\u6765\u5b9a\u4e49\u81ea\u5df1\u7684Dispatcher\u3002","title":"\u81ea\u5b9a\u4e49 Dispatcher"},{"location":"edge/by-servicecomb-sdk/#_3","text":"\u901a\u8fc7Edge Servie\u5de5\u4f5c\u6d41\u7a0b\u53ef\u4ee5\u770b\u51fa\uff0c\u53ef\u4ee5\u901a\u8fc7\u591a\u79cd\u65b9\u5f0f\u6765\u6269\u5c55Edge Service\u7684\u529f\u80fd\uff0c\u5305\u62ecDispatcher\u3001HttpServerFilter\u3001Handler\u3001HttpClientFilter\u7b49\u3002\u6bd4\u8f83\u5e38\u7528\u548c\u7b80\u5355\u7684\u662f\u901a\u8fc7Handler\u6765\u6269\u5c55\u3002DEMO\u91cc\u9762\u5c55\u793a\u4e86\u5982\u4f55\u901a\u8fc7Handler\u6269\u5c55\u6765\u5b9e\u73b0\u9274\u6743\u3002\u8be6\u7ec6\u7684\u4ee3\u7801\u7ec6\u8282\u53ef\u4ee5\u53c2\u8003\u4e0b\u9762\u7684\u7ae0\u8282\"DEMO\u529f\u80fd\u8bf4\u660e\"\u3002","title":"\u8fdb\u884c\u8ba4\u8bc1\u9274\u6743\u548c\u5176\u4ed6\u4e1a\u52a1\u5904\u7406"},{"location":"edge/by-servicecomb-sdk/#_4","text":"","title":"\u90e8\u7f72\u793a\u4f8b"},{"location":"edge/by-servicecomb-sdk/#_5","text":"","title":"\u5de5\u4f5c\u6a21\u5f0f"},{"location":"edge/by-servicecomb-sdk/#reactive-4041","text":"Edge Service\u9ed8\u8ba4\u5de5\u4f5c\u4e8e\u9ad8\u6027\u80fd\u7684reactive\u6a21\u5f0f\uff0c\u6b64\u6a21\u5f0f\u8981\u6c42\u5de5\u4f5c\u4e8eEdge Service\u8f6c\u53d1\u6d41\u7a0b\u4e2d\u7684\u4e1a\u52a1\u4ee3\u7801\u4e0d\u80fd\u6709\u4efb\u4f55\u7684\u963b\u585e\u64cd\u4f5c\uff0c\u5305\u62ec\u4e0d\u9650\u4e8e\uff1a \u8fdc\u7a0b\u540c\u6b65\u8c03\u7528\uff0c\u6bd4\u5982\u540c\u6b65\u67e5\u8be2\u6570\u636e\u5e93\u3001\u540c\u6b65\u8c03\u7528\u5fae\u670d\u52a1\uff0c\u6216\u662f\u540c\u6b65\u67e5\u8be2\u8fdc\u7a0b\u7f13\u5b58\u7b49\u7b49 \u4efb\u4f55\u7684sleep\u8c03\u7528 \u4efb\u4f55\u7684wait\u8c03\u7528 \u8d85\u5927\u7684\u5faa\u73af Edge Service\u7684\u5e95\u5c42\u662f\u57fa\u4e8enetty\u7684vertx\uff0c\u4ee5\u4e0a\u7ea6\u675f\u5373\u662fnetty\u7684reactive\u6a21\u5f0f\u7ea6\u675f\u3002","title":"reactive (\u9ed8\u8ba4)"},{"location":"edge/by-servicecomb-sdk/#_6","text":"\u5982\u679c\u4e1a\u52a1\u6a21\u578b\u65e0\u6cd5\u6ee1\u8db3reactive\u8981\u6c42\uff0c\u5219\u9700\u8981\u4f7f\u7528\u7ebf\u7a0b\u6c60\u6a21\u5f0f\u3002 \u6b64\u65f6\u9700\u8981\u5728Edge Service\u7684microservice.yaml\u4e2d\u914d\u7f6e\uff1a servicecomb: executors: default: servicecomb.executor.groupThreadPool \u8fd9\u91cc\u7684servicecomb.executor.groupThreadPool\u662fServiceComb\u5185\u7f6e\u7684\u9ed8\u8ba4\u7ebf\u7a0b\u6c60\u5bf9\u5e94\u7684spring bean\u7684beanId\uff1b\u4e1a\u52a1\u53ef\u4ee5\u5b9a\u5236\u81ea\u5df1\u7684\u7ebf\u7a0b\u6c60\uff0c\u5e76\u58f0\u660e\u4e3a\u4e00\u4e2abean\uff0c\u5176beanId\u4e5f\u53ef\u4ee5\u914d\u7f6e\u5230\u8fd9\u91cc\u3002","title":"\u7ebf\u7a0b\u6c60"},{"location":"edge/by-servicecomb-sdk/#demo","text":"DEMO \u6e90\u7801\u8bf7\u53c2\u8003 edge service demo \u8be5demo\u5305\u542b\u4ee5\u4e0b\u5de5\u7a0b\uff1a authentication\uff1a\u5fae\u670d\u52a1\uff1a\u9274\u6743\u670d\u52a1\u5668 edge-service hiboard-business-1.0.0\u5fae\u670d\u52a1\uff1abusiness\uff0c1.0.0\u7248\u672c\uff0coperation add hiboard-business-1.1.0\u5fae\u670d\u52a1\uff1abusiness\uff0c1.1.0\u7248\u672c\uff0coperation add/dec hiboard-business-2.0.0\u5fae\u670d\u52a1\uff1abusiness\uff0c2.0.0\u7248\u672c\uff0coperation add/dec hiboard-consumer\u4f5c\u4e3a\u4e00\u4e2a\u666e\u901a\u7684httpclient\uff0c\u800c\u4e0d\u662fservicecomb consumer hiboard-model\u975e\u5fae\u670d\u52a1\uff0c\u4ec5\u4ec5\u662f\u4e00\u4e9b\u516c\u5171\u7684model \u901a\u8fc7edge-service\u8bbf\u95ee\u5fae\u670d\u52a1business\u7684\u4e0d\u540c\u7248\u672c\uff0c\u5e76\u786e\u8ba4\u662f\u7531\u6b63\u786e\u7684\u5b9e\u4f8b\u5904\u7406\u7684\u3002","title":"DEMO\u529f\u80fd\u8bf4\u660e"},{"location":"edge/by-servicecomb-sdk/#1dispatcher","text":"\u5b9e\u73b0\u63a5\u53e3org.apache.servicecomb.transport.rest.vertx.VertxHttpDispatcher\uff0c\u6216\u4eceorg.apache.servicecomb.edge.core.AbstractEdgeDispatcher\u7ee7\u627f\uff0c\u5b9e\u73b0\u81ea\u5df1\u7684dispatcher\u529f\u80fd\u3002 \u5b9e\u73b0\u7c7b\u901a\u8fc7java\u6807\u51c6\u7684SPI\u673a\u5236\u6ce8\u518c\u5230\u7cfb\u7edf\u4e2d\u53bb\u3002 Dispatcher\u9700\u8981\u5b9e\u73b02\u4e2a\u65b9\u6cd5\uff1a","title":"1.\u6ce8\u518cDispatcher"},{"location":"edge/by-servicecomb-sdk/#getorder","text":"Dispatcher\u9700\u8981\u5411vertx\u6ce8\u5165\u8def\u7531\u89c4\u5219\uff0c\u8def\u7531\u89c4\u5219\u4e4b\u95f4\u662f\u6709\u4f18\u5148\u7ea7\u987a\u5e8f\u5173\u7cfb\u7684\u3002 \u7cfb\u7edf\u4e2d\u6240\u6709\u7684Dispatcher\u6309\u7167getOrder\u7684\u8fd4\u56de\u503c\u6309\u4ece\u5c0f\u5230\u5927\u7684\u65b9\u5f0f\u6392\u5e8f\uff0c\u6309\u987a\u5e8f\u521d\u59cb\u5316\u3002 \u5982\u679c2\u4e2aDispatcher\u7684getOrder\u8fd4\u56de\u503c\u76f8\u540c\uff0c\u52192\u8005\u7684\u987a\u5e8f\u4e0d\u53ef\u9884\u77e5\u3002","title":"getOrder"},{"location":"edge/by-servicecomb-sdk/#init","text":"init\u65b9\u6cd5\u5165\u53c2\u4e3avertx\u6846\u67b6\u4e2d\u7684io.vertx.ext.web.Router\uff0c\u9700\u8981\u901a\u8fc7\u8be5\u5bf9\u8c61\u5b9e\u73b0\u8def\u7531\u89c4\u5219\u7684\u5b9a\u5236\u3002 \u53ef\u4ee5\u6307\u5b9a\u6ee1\u8db3\u8981\u6c42\u7684url\uff0c\u662f\u5426\u9700\u8981\u5904\u7406cookie\u3001\u662f\u5426\u9700\u8981\u5904\u7406body\u3001\u4f7f\u7528\u54ea\u4e2a\u81ea\u5b9a\u4e49\u65b9\u6cd5\u5904\u7406\u6536\u5230\u7684\u8bf7\u6c42\u7b49\u7b49 \u66f4\u591a\u8def\u7531\u89c4\u5219\u7ec6\u8282\u8bf7\u53c2\u8003vertx\u5b98\u65b9\u6587\u6863\uff1a vertx\u8def\u7531\u673a\u5236 \u63d0\u793a\uff1a \u591a\u4e2aDispatcher\u53ef\u4ee5\u8bbe\u7f6e\u8def\u7531\u89c4\u5219\uff0c\u8986\u76d6\u5230\u76f8\u540c\u7684url\u3002 \u5047\u8bbeDispatcher A\u548cB\u90fd\u53ef\u4ee5\u5904\u7406\u540c\u4e00\u4e2aurl\uff0c\u5e76\u4e14A\u4f18\u5148\u7ea7\u66f4\u9ad8\uff0c\u5219\uff1a \u5982\u679cA\u5904\u7406\u5b8c\uff0c\u65e2\u6ca1\u5e94\u7b54\uff0c\u4e5f\u6ca1\u6709\u8c03\u7528RoutingContext.next()\uff0c\u5219\u5c5e\u4e8ebug\uff0c\u672c\u6b21\u8bf7\u6c42\u6302\u6b7b\u4e86 \u5982\u679cA\u5904\u7406\u5b8c\uff0c\u7136\u540e\u8c03\u7528\u4e86RoutingContext.next()\uff0c\u5219\u4f1a\u5c06\u8bf7\u6c42\u8f6c\u79fb\u7ed9B\u5904\u7406","title":"init"},{"location":"edge/by-servicecomb-sdk/#2","text":"\u6ce8\u518c\u8def\u7531\u65f6\uff0c\u6307\u5b9a\u4e86\u4f7f\u7528\u54ea\u4e2a\u65b9\u6cd5\u6765\u5904\u7406\u8bf7\u6c42\uff08\u4e0b\u9762\u4f7f\u7528onRequest\u6765\u6307\u4ee3\u8be5\u65b9\u6cd5\uff09\uff0c\u5728onRequest\u4e2d\u5b9e\u73b0\u8f6c\u53d1\u903b\u8f91\u3002 \u65b9\u6cd5\u539f\u578b\u4e3a\uff1a void onRequest(RoutingContext context) \u7cfb\u7edf\u5c01\u88c5\u4e86org.apache.servicecomb.edge.core.EdgeInvocation\u6765\u5b9e\u73b0\u8f6c\u53d1\u529f\u80fd\uff0c\u81f3\u5c11\u9700\u8981\u51c6\u5907\u4ee5\u4e0b\u53c2\u6570\uff1a microserviceName\uff0c\u4e1a\u52a1\u81ea\u884c\u5236\u5b9a\u89c4\u5219\uff0c\u53ef\u4ee5\u5728url\u4f20\u5165\uff0c\u6216\u662f\u6839\u636eurl\u67e5\u627e\u7b49\u7b49 context\uff0c\u5373onRequest\u7684\u5165\u53c2 path\uff0c\u8f6c\u53d1\u76ee\u6807\u7684url httpServerFilters\uff0cDispatcher\u7236\u7c7b\u5df2\u7ecf\u521d\u59cb\u5316\u597d\u7684\u6210\u5458\u53d8\u91cf EdgeInvocation edgeInvocation = new EdgeInvocation(); edgeInvocation.init(microserviceName, context, path, httpServerFilters); edgeInvocation.edgeInvoke(); edgeInvoke\u8c03\u7528\u5185\u90e8\uff0c\u4f1a\u4f5c\u4e3aServiceComb\u6807\u51c6consumer\u53bb\u8f6c\u53d1\u8c03\u7528\u3002 \u4f5c\u4e3a\u6807\u51c6consumer\uff0c\u610f\u5473\u7740ServiceComb\u6240\u6709\u6807\u51c6\u7684\u6cbb\u7406\u80fd\u529b\u5728\u8fd9\u91cc\u90fd\u662f\u751f\u6548\u7684\u3002","title":"2.\u8f6c\u53d1\u8bf7\u6c42"},{"location":"edge/by-servicecomb-sdk/#3","text":"\u4e0d\u540c\u7684\u4e1a\u52a1\u53ef\u80fd\u6709\u4e0d\u540c\u7684\u517c\u5bb9\u89c4\u5212\uff0cservicecomb\u9ed8\u8ba4\u7684\u517c\u5bb9\u89c4\u5219\uff0c\u8981\u6c42\u6240\u6709\u65b0\u7248\u672c\u517c\u5bb9\u65e7\u7248\u672c\u3002\u5982\u679c\u6ee1\u8db3\u8fd9\u4e2a\u8981\u6c42\uff0c\u5219\u4e0d\u5fc5\u505a\u4efb\u4f55\u7279\u6b8a\u7684\u8bbe\u7f6e\u3002 \u8fd8\u6709\u4e00\u79cd\u5178\u578b\u7684\u89c4\u5212\uff1a 1.0.0-2.0.0\u5185\u90e8\u517c\u5bb9\uff0curl\u4e3a/microserviceName/v1/\u2026.\u7684\u5f62\u5f0f 2.0.0-3.0.0\u5185\u90e8\u517c\u5bb9\uff0curl\u4e3a/microserviceName/v2/\u2026.\u7684\u5f62\u5f0f \u2026\u2026 \u5404\u5927\u7248\u672c\u4e4b\u95f4\u4e0d\u517c\u5bb9 \u6b64\u65f6\uff0c\u5f00\u53d1\u4eba\u5458\u9700\u8981\u9488\u5bf9EdgeInvocation\u8bbe\u7f6e\u517c\u5bb9\u89c4\u5219\uff1a private CompatiblePathVersionMapper versionMapper = new CompatiblePathVersionMapper(); \u2026\u2026 edgeInvocation.setVersionRule(versionMapper.getOrCreate(pathVersion).getVersionRule()); versionMapper\u7684\u4f5c\u7528\u662f\u5c06v1\u6216\u662fv2\u8fd9\u6837\u7684\u4e32\uff0c\u8f6c\u4e3a1.0.0-2.0.0\u62162.0.0-3.0.0\u8fd9\u6837\u7684\u517c\u5bb9\u89c4\u5219\u3002 \u6ce8\u610f\uff1a \u63a5\u53e3\u4e0d\u517c\u5bb9\u4f1a\u5bfc\u81f4\u975e\u5e38\u591a\u7684\u95ee\u9898\u3002java chassis\u8981\u6c42\u9ad8\u7248\u672c\u670d\u52a1\u517c\u5bb9\u4f4e\u7248\u672c\u670d\u52a1\uff0c\u53ea\u5141\u8bb8\u589e\u52a0\u63a5\u53e3\u4e0d\u5141\u8bb8\u5220\u9664\u63a5\u53e3\u3002\u5728\u589e\u52a0\u63a5\u53e3\u540e\uff0c\u5fc5\u987b\u589e\u52a0\u5fae\u670d\u52a1\u7684\u7248\u672c\u53f7\u3002\u5728\u5f00\u53d1\u9636\u6bb5\uff0c\u63a5\u53e3\u53d8\u66f4\u9891\u7e41\uff0c\u5f00\u53d1\u8005\u5f80\u5f80\u5fd8\u8bb0\u8fd9\u4e2a\u89c4\u5219\u3002\u5f53\u8fd9\u4e2a\u7ea6\u675f\u88ab\u6253\u7834\u7684\u65f6\u5019\uff0c\u9700\u8981\u6e05\u7406\u670d\u52a1\u4e2d\u5fc3\u5fae\u670d\u52a1\u7684\u4fe1\u606f\uff0c\u5e76\u91cd\u542f\u5fae\u670d\u52a1\u548cEdge Service(\u4ee5\u53ca\u4f9d\u8d56\u4e8e\u8be5\u5fae\u670d\u52a1\u7684\u5176\u4ed6\u670d\u52a1)\u3002\u5426\u5219\u53ef\u80fd\u51fa\u73b0\u8bf7\u6c42\u8f6c\u53d1\u5931\u8d25\u7b49\u60c5\u51b5\u3002","title":"3.\u8bbe\u7f6e\u517c\u5bb9\u89c4\u5219"},{"location":"edge/by-servicecomb-sdk/#4","text":"Edge Service\u662f\u7cfb\u7edf\u7684\u8fb9\u754c\uff0c\u5bf9\u4e8e\u5f88\u591a\u8bf7\u6c42\u9700\u8981\u6267\u884c\u9274\u6743\u903b\u8f91\u3002 \u57fa\u4e8e\u6807\u51c6\u7684ServiceComb\u673a\u5236\uff0c\u53ef\u4ee5\u901a\u8fc7handler\u6765\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\u3002 \u6700\u7b80\u5355\u7684\u793a\u610f\u4ee3\u7801\u5982\u4e0b\uff1a public class AuthHandler implements Handler { private Auth auth; public AuthHandler() { auth = Invoker.createProxy( auth , auth , Auth.class); } \u2026\u2026 @Override public void handle(Invocation invocation, AsyncResponse asyncResp) throws Exception { if (!auth.auth( )) { asyncResp.consumerFail(new InvocationException(Status.UNAUTHORIZED, (Object) auth failed )); return; } LOGGER.debug( auth success. ); invocation.next(asyncResp); } } Auth\u8868\u793a\u662f\u9274\u6743\u5fae\u670d\u52a1\u63d0\u4f9b\u7684\u63a5\u53e3\uff0cInvoker.createProxy(\"auth\", \"auth\", Auth.class)\u662f\u900f\u660eRPC\u5f00\u53d1\u6a21\u5f0f\u4e2dconsumer\u7684\u5e95\u5c42api\uff0c\u4e0e@ReferenceRpc\u662f\u7b49\u6548\uff0c\u53ea\u4e0d\u8fc7\u4e0d\u9700\u8981\u4f9d\u8d56spring bean\u673a\u5236\u3002 Auth\u63a5\u53e3\u5b8c\u5168\u7531\u4e1a\u52a1\u5b9a\u4e49\uff0c\u8fd9\u91cc\u53ea\u662f\u4e00\u4e2a\u793a\u4f8b\u3002 Handler\u5f00\u53d1\u5b8c\u6210\u540e\uff0c\u914d\u7f6e\u5230edge service\u7684microservice.yaml\u4e2d\uff1a servicecomb: handler: chain: Consumer: default: auth,\u2026\u2026 service: auth: \u2026\u2026 \u8fd9\u4e2a\u4f8b\u5b50\uff0c\u8868\u793a\u8f6c\u53d1\u8bf7\u6c42\u7ed9\u6240\u6709\u7684\u5fae\u670d\u52a1\u90fd\u5fc5\u987b\u7ecf\u8fc7\u9274\u6743\uff0c\u4f46\u662f\u8c03\u7528\u9274\u6743\u5fae\u670d\u52a1\u65f6\u4e0d\u9700\u8981\u9274\u6743\u3002","title":"4.\u9274\u6743"},{"location":"edge/nginx/","text":"\u4f7f\u7528confd\u548cNginx\u505a\u8fb9\u7f18\u670d\u52a1 \u6982\u5ff5\u9610\u8ff0 confd confd\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u914d\u7f6e\u7ba1\u7406\u5de5\u5177\uff0c\u6e90\u7801\u5730\u5740\uff1a https://github.com/kelseyhightower/confd \uff0c\u5b83\u53ef\u4ee5\u5c06\u914d\u7f6e\u4fe1\u606f\u5b58\u50a8\u5728etcd\u3001consul\u3001dynamodb\u3001redis\u4ee5\u53cazookeeper\u7b49\u3002confd\u5b9a\u671f\u4f1a\u4ece\u8fd9\u4e9b\u5b58\u50a8\u8282\u70b9pull\u6700\u65b0\u7684\u914d\u7f6e\uff0c\u7136\u540e\u91cd\u65b0\u52a0\u8f7d\u670d\u52a1\uff0c\u5b8c\u6210\u914d\u7f6e\u6587\u4ef6\u7684\u66f4\u65b0\u3002 Nginx Nginx (engine x)\u662f\u4e00\u4e2a\u9ad8\u6027\u80fd\u7684HTTP\u548c\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u5668\uff0c\u5177\u6709\u8d1f\u8f7d\u5747\u8861\u7684\u529f\u80fd\u3002\u8be6\u60c5\u8bf7\u53c2\u8003 http://www.nginx.cn/doc/ \u3002\u672c\u5c0f\u8282\u4ecb\u7ecd\u7684\u670d\u52a1\u4e3b\u8981\u4f7f\u7528\u5230\u7684\u662fNginx\u7684http\u4ee3\u7406\u529f\u80fd\u3002 \u573a\u666f\u63cf\u8ff0 \u672c\u5c0f\u8282\u4ecb\u7ecd\u7684\u6280\u672f\u662f\u4f7f\u7528nginx+confd\u505a\u8fb9\u7f18\u670d\u52a1\uff0c\u540c\u65f6\u53ef\u4ee5\u5bf9\u63a5Java Chassis\u5fae\u670d\u52a1\u6846\u67b6\u4e2d\u7684\u670d\u52a1\u4e2d\u5fc3\uff0c\u4ece\u670d\u52a1\u4e2d\u5fc3\u4e2d\u62c9\u53bb\u670d\u52a1\u4fe1\u606f\u901a\u8fc7confd\u52a8\u6001\u66f4\u65b0nginx\u7684\u914d\u7f6e\u3002 \u4f7f\u7528nginx+confd\u52a8\u6001\u53cd\u5411\u4ee3\u7406\u7684\u5b9e\u73b0\u6b65\u9aa4\u53ef\u53c2\u8003\u6587\u7ae0 http://www.cnblogs.com/Anker/p/6112022.html \uff0c\u672c\u8282\u4e3b\u8981\u4ecb\u7ecdconfd\u5982\u4f55\u5bf9\u63a5Java Chassis\u6846\u67b6\u7684\u670d\u52a1\u4e2d\u5fc3\u3002 \u5bf9\u63a5\u670d\u52a1\u4e2d\u5fc3 \u672c\u8282\u4ecb\u7ecd\u7684\u6280\u672f\u6838\u5fc3\u5728\u4e8e\u5982\u4f55\u4f7f\u5f97confd\u83b7\u53d6\u5230\u670d\u52a1\u4e2d\u5fc3\u7684\u670d\u52a1\u4fe1\u606f\uff0c\u670d\u52a1\u4e2d\u5fc3\u5f00\u653e\u4e86\u4ee5\u4e0b\u63a5\u53e3\u4f9b\u5916\u90e8\u8c03\u7528\uff1a \u65b9\u6cd5\u4e00\uff1ahttp\u8c03\u7528 \u670d\u52a1\u4e2d\u5fc3\u5f00\u653ehttp\u63a5\u53e3\u5747\u9700\u8981\u6dfb\u52a0\u79df\u6237\u5934\u90e8\u4fe1\u606f\uff1a\u201cX-Tenant-Name:tenantName\u201d\uff0ctenameName\u4e3a\u79df\u6237\u540d\uff0c\u9ed8\u8ba4\u4e3adefault\uff0c\u4f8b\u5982\"X-Tenant-Name:default\"\u3002 \u68c0\u67e5\u670d\u52a1\u4e2d\u5fc3\u5065\u5eb7\u72b6\u6001 GET 127.0.0.1:30100/health \u83b7\u53d6\u6240\u6709\u5fae\u670d\u52a1\u4fe1\u606f GET 127.0.0.1:30100/registry/v3/microservices \u83b7\u53d6\u6307\u5b9aid\u7684\u5fae\u670d\u52a1\u4fe1\u606f \u9996\u5148\u6839\u636e\u5fae\u670d\u52a1\u4fe1\u606f\u83b7\u53d6serviceId GET 127.0.0.1:30100/registry/v3/existence?type=microservice appId={appId} serviceName={serviceName} version={version} \u6839\u636e\u4e0a\u8ff0\u63a5\u53e3\u8fd4\u56de\u7684serviceId\u83b7\u53d6\u5fae\u670d\u52a1\u5b8c\u6574\u4fe1\u606f GET 127.0.0.1:30100/registry/v3/microservices/{serviceId} \u83b7\u53d6\u6307\u5b9a\u5fae\u670d\u52a1\u7684\u6240\u6709\u5b9e\u4f8b\u4fe1\u606f GET 127.0.0.1:30100/registry/v3/microservices/{serviceId}/instances \u9700\u8981\u5728header\u4e2d\u6dfb\u52a0\uff1a\"X-ConsumerId:{serviceId}\"\u3002 \u67e5\u627e\u5fae\u670d\u52a1\u5b9e\u4f8b\u4fe1\u606f GET 127.0.0.1:30100/registry/v3/instances?appId={appId} serviceName={serviceName} version={version} \u9700\u8981\u5728header\u4e2d\u6dfb\u52a0: \"X-ConsumerId:{serviceId}\"\u3002 \u6ce8\u610f\uff1a\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\u8bf7\u8bbf\u95ee\u5b9e\u9645\u7684service-center\u8bbf\u95ee\u5730\u5740\uff0c\u5e76\u5c06\u4e0a\u8ff0url\u4e2d{}\u7684\u53d8\u91cf\u66ff\u6362\u6210\u5177\u4f53\u503c\uff0chttp\u8fd4\u56de\u7684\u6570\u636e\u5747\u4e3ajson\u683c\u5f0f \u65b9\u6cd5\u4e8c\uff1a\u4f7f\u7528servicecomb\u5f00\u6e90\u4ee3\u7801\u63a5\u53e3 \u5728\u5f00\u53d1\u5fae\u670d\u52a1\u5e94\u7528\uff0c\u53ea\u9700\u8981\u8c03\u7528servicecomb\u6846\u67b6\u4ee3\u7801\u4e2d\u7684\u5de5\u5177\u7c7bRegistryUtil.java\u4e2d\u63d0\u4f9b\u7684\u63a5\u53e3\uff0c\u5373\u53ef\u83b7\u53d6\u670d\u52a1\u4e2d\u5fc3\u7684\u4fe1\u606f\uff0c\u63a5\u53e3\u63cf\u8ff0\u5982\u4e0b\uff1a \u83b7\u53d6\u6240\u6709\u5fae\u670d\u52a1\u4fe1\u606f List Microservice getAllMicroservices(); \u83b7\u53d6\u5fae\u670d\u52a1\u552f\u4e00\u6807\u8bc6 String getMicroserviceId(String appId, String microserviceName, String versionRule); \u6839\u636e\u5fae\u670d\u52a1\u552f\u4e00\u6807\u8bc6\u67e5\u8be2\u5fae\u670d\u52a1\u9759\u6001\u4fe1\u606f Microservice getMicroservice(String microserviceId); \u6839\u636e\u591a\u4e2a\u5fae\u670d\u52a1\u552f\u4e00\u6807\u8bc6\u67e5\u8be2\u6240\u6709\u5fae\u670d\u52a1\u5b9e\u4f8b\u4fe1\u606f List MicroserviceInstance getMicroserviceInstance(String consumerId, String providerId); \u6309\u7167app+interface+version\u67e5\u8be2\u5b9e\u4f8bendpoints\u4fe1\u606f List MicroserviceInstance findServiceInstance(String consumerId, String appId, String serviceName,String versionRule); \u901a\u8fc7\u4e0a\u8ff0http\u63a5\u53e3\u53ef\u83b7\u53d6\u5230\u670d\u52a1\u4e2d\u5fc3\u7684\u5fae\u670d\u52a1\u548c\u5176\u5b9e\u4f8b\u7684\u4fe1\u606f\uff0c\u4ece\u800c\u901a\u8fc7confd\u52a8\u6001\u66f4\u65b0nginx\u914d\u7f6e\u3002","title":"\u4f7f\u7528confd\u548cNginx\u505a\u8fb9\u7f18\u670d\u52a1"},{"location":"edge/nginx/#confdnginx","text":"","title":"\u4f7f\u7528confd\u548cNginx\u505a\u8fb9\u7f18\u670d\u52a1"},{"location":"edge/nginx/#_1","text":"","title":"\u6982\u5ff5\u9610\u8ff0"},{"location":"edge/nginx/#confd","text":"confd\u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u914d\u7f6e\u7ba1\u7406\u5de5\u5177\uff0c\u6e90\u7801\u5730\u5740\uff1a https://github.com/kelseyhightower/confd \uff0c\u5b83\u53ef\u4ee5\u5c06\u914d\u7f6e\u4fe1\u606f\u5b58\u50a8\u5728etcd\u3001consul\u3001dynamodb\u3001redis\u4ee5\u53cazookeeper\u7b49\u3002confd\u5b9a\u671f\u4f1a\u4ece\u8fd9\u4e9b\u5b58\u50a8\u8282\u70b9pull\u6700\u65b0\u7684\u914d\u7f6e\uff0c\u7136\u540e\u91cd\u65b0\u52a0\u8f7d\u670d\u52a1\uff0c\u5b8c\u6210\u914d\u7f6e\u6587\u4ef6\u7684\u66f4\u65b0\u3002","title":"confd"},{"location":"edge/nginx/#nginx","text":"Nginx (engine x)\u662f\u4e00\u4e2a\u9ad8\u6027\u80fd\u7684HTTP\u548c\u53cd\u5411\u4ee3\u7406\u670d\u52a1\u5668\uff0c\u5177\u6709\u8d1f\u8f7d\u5747\u8861\u7684\u529f\u80fd\u3002\u8be6\u60c5\u8bf7\u53c2\u8003 http://www.nginx.cn/doc/ \u3002\u672c\u5c0f\u8282\u4ecb\u7ecd\u7684\u670d\u52a1\u4e3b\u8981\u4f7f\u7528\u5230\u7684\u662fNginx\u7684http\u4ee3\u7406\u529f\u80fd\u3002","title":"Nginx"},{"location":"edge/nginx/#_2","text":"\u672c\u5c0f\u8282\u4ecb\u7ecd\u7684\u6280\u672f\u662f\u4f7f\u7528nginx+confd\u505a\u8fb9\u7f18\u670d\u52a1\uff0c\u540c\u65f6\u53ef\u4ee5\u5bf9\u63a5Java Chassis\u5fae\u670d\u52a1\u6846\u67b6\u4e2d\u7684\u670d\u52a1\u4e2d\u5fc3\uff0c\u4ece\u670d\u52a1\u4e2d\u5fc3\u4e2d\u62c9\u53bb\u670d\u52a1\u4fe1\u606f\u901a\u8fc7confd\u52a8\u6001\u66f4\u65b0nginx\u7684\u914d\u7f6e\u3002 \u4f7f\u7528nginx+confd\u52a8\u6001\u53cd\u5411\u4ee3\u7406\u7684\u5b9e\u73b0\u6b65\u9aa4\u53ef\u53c2\u8003\u6587\u7ae0 http://www.cnblogs.com/Anker/p/6112022.html \uff0c\u672c\u8282\u4e3b\u8981\u4ecb\u7ecdconfd\u5982\u4f55\u5bf9\u63a5Java Chassis\u6846\u67b6\u7684\u670d\u52a1\u4e2d\u5fc3\u3002","title":"\u573a\u666f\u63cf\u8ff0"},{"location":"edge/nginx/#_3","text":"\u672c\u8282\u4ecb\u7ecd\u7684\u6280\u672f\u6838\u5fc3\u5728\u4e8e\u5982\u4f55\u4f7f\u5f97confd\u83b7\u53d6\u5230\u670d\u52a1\u4e2d\u5fc3\u7684\u670d\u52a1\u4fe1\u606f\uff0c\u670d\u52a1\u4e2d\u5fc3\u5f00\u653e\u4e86\u4ee5\u4e0b\u63a5\u53e3\u4f9b\u5916\u90e8\u8c03\u7528\uff1a","title":"\u5bf9\u63a5\u670d\u52a1\u4e2d\u5fc3"},{"location":"edge/nginx/#http","text":"\u670d\u52a1\u4e2d\u5fc3\u5f00\u653ehttp\u63a5\u53e3\u5747\u9700\u8981\u6dfb\u52a0\u79df\u6237\u5934\u90e8\u4fe1\u606f\uff1a\u201cX-Tenant-Name:tenantName\u201d\uff0ctenameName\u4e3a\u79df\u6237\u540d\uff0c\u9ed8\u8ba4\u4e3adefault\uff0c\u4f8b\u5982\"X-Tenant-Name:default\"\u3002 \u68c0\u67e5\u670d\u52a1\u4e2d\u5fc3\u5065\u5eb7\u72b6\u6001 GET 127.0.0.1:30100/health \u83b7\u53d6\u6240\u6709\u5fae\u670d\u52a1\u4fe1\u606f GET 127.0.0.1:30100/registry/v3/microservices \u83b7\u53d6\u6307\u5b9aid\u7684\u5fae\u670d\u52a1\u4fe1\u606f \u9996\u5148\u6839\u636e\u5fae\u670d\u52a1\u4fe1\u606f\u83b7\u53d6serviceId GET 127.0.0.1:30100/registry/v3/existence?type=microservice appId={appId} serviceName={serviceName} version={version} \u6839\u636e\u4e0a\u8ff0\u63a5\u53e3\u8fd4\u56de\u7684serviceId\u83b7\u53d6\u5fae\u670d\u52a1\u5b8c\u6574\u4fe1\u606f GET 127.0.0.1:30100/registry/v3/microservices/{serviceId} \u83b7\u53d6\u6307\u5b9a\u5fae\u670d\u52a1\u7684\u6240\u6709\u5b9e\u4f8b\u4fe1\u606f GET 127.0.0.1:30100/registry/v3/microservices/{serviceId}/instances \u9700\u8981\u5728header\u4e2d\u6dfb\u52a0\uff1a\"X-ConsumerId:{serviceId}\"\u3002 \u67e5\u627e\u5fae\u670d\u52a1\u5b9e\u4f8b\u4fe1\u606f GET 127.0.0.1:30100/registry/v3/instances?appId={appId} serviceName={serviceName} version={version} \u9700\u8981\u5728header\u4e2d\u6dfb\u52a0: \"X-ConsumerId:{serviceId}\"\u3002","title":"\u65b9\u6cd5\u4e00\uff1ahttp\u8c03\u7528"},{"location":"edge/nginx/#service-centerurlhttpjson","text":"","title":"\u6ce8\u610f\uff1a\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\u8bf7\u8bbf\u95ee\u5b9e\u9645\u7684service-center\u8bbf\u95ee\u5730\u5740\uff0c\u5e76\u5c06\u4e0a\u8ff0url\u4e2d{}\u7684\u53d8\u91cf\u66ff\u6362\u6210\u5177\u4f53\u503c\uff0chttp\u8fd4\u56de\u7684\u6570\u636e\u5747\u4e3ajson\u683c\u5f0f"},{"location":"edge/nginx/#servicecomb","text":"\u5728\u5f00\u53d1\u5fae\u670d\u52a1\u5e94\u7528\uff0c\u53ea\u9700\u8981\u8c03\u7528servicecomb\u6846\u67b6\u4ee3\u7801\u4e2d\u7684\u5de5\u5177\u7c7bRegistryUtil.java\u4e2d\u63d0\u4f9b\u7684\u63a5\u53e3\uff0c\u5373\u53ef\u83b7\u53d6\u670d\u52a1\u4e2d\u5fc3\u7684\u4fe1\u606f\uff0c\u63a5\u53e3\u63cf\u8ff0\u5982\u4e0b\uff1a \u83b7\u53d6\u6240\u6709\u5fae\u670d\u52a1\u4fe1\u606f List Microservice getAllMicroservices(); \u83b7\u53d6\u5fae\u670d\u52a1\u552f\u4e00\u6807\u8bc6 String getMicroserviceId(String appId, String microserviceName, String versionRule); \u6839\u636e\u5fae\u670d\u52a1\u552f\u4e00\u6807\u8bc6\u67e5\u8be2\u5fae\u670d\u52a1\u9759\u6001\u4fe1\u606f Microservice getMicroservice(String microserviceId); \u6839\u636e\u591a\u4e2a\u5fae\u670d\u52a1\u552f\u4e00\u6807\u8bc6\u67e5\u8be2\u6240\u6709\u5fae\u670d\u52a1\u5b9e\u4f8b\u4fe1\u606f List MicroserviceInstance getMicroserviceInstance(String consumerId, String providerId); \u6309\u7167app+interface+version\u67e5\u8be2\u5b9e\u4f8bendpoints\u4fe1\u606f List MicroserviceInstance findServiceInstance(String consumerId, String appId, String serviceName,String versionRule); \u901a\u8fc7\u4e0a\u8ff0http\u63a5\u53e3\u53ef\u83b7\u53d6\u5230\u670d\u52a1\u4e2d\u5fc3\u7684\u5fae\u670d\u52a1\u548c\u5176\u5b9e\u4f8b\u7684\u4fe1\u606f\uff0c\u4ece\u800c\u901a\u8fc7confd\u52a8\u6001\u66f4\u65b0nginx\u914d\u7f6e\u3002","title":"\u65b9\u6cd5\u4e8c\uff1a\u4f7f\u7528servicecomb\u5f00\u6e90\u4ee3\u7801\u63a5\u53e3"},{"location":"edge/open-service/","text":"\u670d\u52a1\u80fd\u529b\u5f00\u653e \u5927\u91cf\u7684\u5fae\u670d\u52a1\u80fd\u529b\u9700\u8981\u901a\u8fc7\u7f51\u5173\u5f00\u653e\u7ed9\u7528\u6237\u3001\u5176\u4ed6\u5916\u90e8\u7cfb\u7edf\u8bbf\u95ee\u3002\u7f51\u5173\u4e00\u65b9\u9762\u626e\u6f14\u7740\u6c47\u96c6\u7528\u6237\u8bf7\u6c42\u7684\u4f5c\u7528\uff0c\u540c\u65f6\u8fd8\u4f1a\u626e\u6f14\u8ba4\u8bc1\u3001\u9274\u6743\u3001\u6d41\u91cf\u63a7\u5236\u3001\u9632\u653b\u51fb\u7684\u7528\u9014\u3002\u540c\u65f6\uff0c\u7531\u4e8e\u7f51\u5173\u662f\u4e00\u4e2a\u6c47\u805a\u70b9\uff0c\u5bb9\u6613\u5f62\u6210\u4e1a\u52a1\u7684\u74f6\u9888\uff0c\u901a\u5e38\u8fd8\u4f1a\u91c7\u7528\u591a\u7ea7\u7f51\u5173\u673a\u5236\uff0c\u6700\u5916\u5c42\u7684\u7f51\u5173\u63d0\u4f9b\u4e3b\u5907\u4ee5\u53ca\u7b80\u5355\u7684\u8bf7\u6c42\u8f6c\u53d1\u529f\u80fd\uff0c\u4e2d\u95f4\u5c42\u7684\u5b9e\u73b0\u9274\u6743\u7b49\u529f\u80fd\uff0c\u591a\u5b9e\u4f8b\u90e8\u7f72\u3002\u5e38\u89c1\u7684\u53ef\u4ee5\u7528\u4e8e\u7f51\u5173\u7684\u6280\u672f\u548c\u670d\u52a1\u5305\u62ecLVS\u3001Nginx\u3001Zuul\u7b49\u3002 ServiceComb \u4e5f\u63d0\u4f9b\u4e86\u81ea\u5df1\u7684\u7f51\u5173\u670d\u52a1Edge Service\u3002Edge Service\u5185\u5efa\u4e86\u5f3a\u5927\u7684\u8def\u7531\u7b56\u7565\uff0c\u652f\u6301\u63a5\u53e3\u7ea7\u522b\u7684\u517c\u5bb9\u6027\u8f6c\u53d1\uff08\u7070\u5ea6\u53d1\u5e03\uff09\uff0c\u5185\u5d4cServiceComb\u6cbb\u7406\u80fd\u529b\uff0c\u5e76\u652f\u6301\u975e\u5e38\u7075\u6d3b\u7684\u6269\u5c55\u673a\u5236\u3002","title":"\u4ecb\u7ecd"},{"location":"edge/open-service/#_1","text":"\u5927\u91cf\u7684\u5fae\u670d\u52a1\u80fd\u529b\u9700\u8981\u901a\u8fc7\u7f51\u5173\u5f00\u653e\u7ed9\u7528\u6237\u3001\u5176\u4ed6\u5916\u90e8\u7cfb\u7edf\u8bbf\u95ee\u3002\u7f51\u5173\u4e00\u65b9\u9762\u626e\u6f14\u7740\u6c47\u96c6\u7528\u6237\u8bf7\u6c42\u7684\u4f5c\u7528\uff0c\u540c\u65f6\u8fd8\u4f1a\u626e\u6f14\u8ba4\u8bc1\u3001\u9274\u6743\u3001\u6d41\u91cf\u63a7\u5236\u3001\u9632\u653b\u51fb\u7684\u7528\u9014\u3002\u540c\u65f6\uff0c\u7531\u4e8e\u7f51\u5173\u662f\u4e00\u4e2a\u6c47\u805a\u70b9\uff0c\u5bb9\u6613\u5f62\u6210\u4e1a\u52a1\u7684\u74f6\u9888\uff0c\u901a\u5e38\u8fd8\u4f1a\u91c7\u7528\u591a\u7ea7\u7f51\u5173\u673a\u5236\uff0c\u6700\u5916\u5c42\u7684\u7f51\u5173\u63d0\u4f9b\u4e3b\u5907\u4ee5\u53ca\u7b80\u5355\u7684\u8bf7\u6c42\u8f6c\u53d1\u529f\u80fd\uff0c\u4e2d\u95f4\u5c42\u7684\u5b9e\u73b0\u9274\u6743\u7b49\u529f\u80fd\uff0c\u591a\u5b9e\u4f8b\u90e8\u7f72\u3002\u5e38\u89c1\u7684\u53ef\u4ee5\u7528\u4e8e\u7f51\u5173\u7684\u6280\u672f\u548c\u670d\u52a1\u5305\u62ecLVS\u3001Nginx\u3001Zuul\u7b49\u3002 ServiceComb \u4e5f\u63d0\u4f9b\u4e86\u81ea\u5df1\u7684\u7f51\u5173\u670d\u52a1Edge Service\u3002Edge Service\u5185\u5efa\u4e86\u5f3a\u5927\u7684\u8def\u7531\u7b56\u7565\uff0c\u652f\u6301\u63a5\u53e3\u7ea7\u522b\u7684\u517c\u5bb9\u6027\u8f6c\u53d1\uff08\u7070\u5ea6\u53d1\u5e03\uff09\uff0c\u5185\u5d4cServiceComb\u6cbb\u7406\u80fd\u529b\uff0c\u5e76\u652f\u6301\u975e\u5e38\u7075\u6d3b\u7684\u6269\u5c55\u673a\u5236\u3002","title":"\u670d\u52a1\u80fd\u529b\u5f00\u653e"},{"location":"edge/zuul/","text":"\u4f7f\u7528zuul\u505a\u8fb9\u7f18\u670d\u52a1 \u6982\u5ff5\u9610\u8ff0 API Gateway\uff1a API Gateway\u662f\u4e00\u4e2a\u670d\u52a1\u5668\uff0c\u4e5f\u53ef\u4ee5\u8bf4\u662f\u8fdb\u5165\u7cfb\u7edf\u7684\u552f\u4e00\u8282\u70b9\u3002API Gateway\u5c01\u88c5\u5185\u90e8\u7cfb\u7edf\u7684\u67b6\u6784\uff0c\u5e76\u4e14\u63d0\u4f9bAPI\u7ed9\u5404\u4e2a\u5ba2\u6237\u7aef\u3002 Zuul Zuul\u662fNetflix\u7684\u57fa\u4e8eJVM\u7684\u8def\u7531\u5668\u548c\u670d\u52a1\u5668\u7aef\u8d1f\u8f7d\u5747\u8861\u5668\uff0c\u53ef\u4ee5\u4f7f\u7528Zuul\u8fdb\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a \u8ba4\u8bc1 \u6d1e\u5bdf \u538b\u529b\u6d4b\u8bd5 \u91d1\u4e1d\u96c0\u6d4b\u8bd5 \u52a8\u6001\u8def\u7531 \u670d\u52a1\u8fc1\u79fb \u8d1f\u8f7d\u8131\u843d \u5b89\u5168 \u9759\u6001\u76f8\u54cd\u5e94\u5904\u7406 \u4e3b\u52a8/\u88ab\u52a8\u6d41\u91cf\u7ba1\u7406 \u672c\u5c0f\u8282\u4e3b\u8981\u4ecb\u7ecd\u5728SpringBoot\u5e94\u7528\u4e2d\u4f7f\u7528Zuul\u505aAPI Gateway\u3002\u5173\u4e8eZuul\u7684\u8be6\u7ec6\u529f\u80fd\u4ecb\u7ecd\u8bf7\u53c2\u8003\u6587\u6863 \u8def\u7531\u5668\u548c\u8fc7\u6ee4\u5668\uff1aZuul \u3002 \u573a\u666f\u63cf\u8ff0 Zuul\u505aAPI Gateway\uff0c\u5373\u5efa\u7acb\u4e00\u4e2aZuul Proxy\u5e94\u7528\uff0c\u5728\u8be5Proxy\u5e94\u7528\u4e2d\u7edf\u4e00\u5b9a\u4e49\u6240\u6709\u7684\u5fae\u670d\u52a1\u8bbf\u95ee\u5165\u53e3\uff0c\u901a\u8fc7\u4f7f\u7528\u4e0d\u540c\u7684\u524d\u7f00(stripped)\u6765\u533a\u5206\u5404\u4e2a\u5fae\u670d\u52a1\u3002\u672c\u5c0f\u8282\u901a\u8fc7\u5efa\u7acb\u4e00\u4e2aZuulProxy SpringBoot\u5e94\u7528\u6765\u6f14\u793aZuul\u7684API Gateway\u529f\u80fd\u3002 \u6ce8\u610f\u4e8b\u9879 \u672c\u5c0f\u8282\u4ecb\u7ecd\u7684ZuulProxy\u548cZuulServer\u7b49demo\u90fd\u662f\u57fa\u4e8eSpringBoot\u548cServiceComb\u6846\u67b6\u7684\u5e94\u7528\uff0c\u5177\u4f53\u8bf7\u53c2\u8003 \u5728Spring Boot\u4e2d\u4f7f\u7528java chassis \u3002 \u542f\u52a8Zuul Proxy \u672c\u8282\u4ecb\u7ecd\u5982\u4f55\u542f\u52a8\u4e00\u4e2azuul proxy\u5e94\u7528\u4f5c\u4e3aAPI Gateway\u3002\u6b65\u9aa4\u5982\u4e0b\uff1a \u6b65\u9aa4 1 \u5728pom\u6587\u4ef6\u4e2d\u6dfb\u52a0\u4f9d\u8d56\uff1a dependency groupId org.springframework.cloud /groupId artifactId spring-cloud-starter-zuul /artifactId /dependency dependency groupId org.springframework.cloud /groupId artifactId spring-cloud-starter-ribbon /artifactId /dependency dependency groupId org.springframework.cloud /groupId artifactId spring-cloud-starter-hystrix /artifactId /dependency dependency groupId org.apache.servicecomb /groupId artifactId spring-boot-starter-discovery /artifactId /dependency \u6b65\u9aa4 2 \u5728SpringBoot\u4e3b\u7c7b\u6dfb\u52a0\u6ce8\u89e3\uff1a @SpringBootApplication @EnableServiceComb @EnableZuulProxy//\u65b0\u589e\u6ce8\u89e3 public class ZuulMain{ public static void main(String[] args) throws Exception{ \u3000\u3000 SpringApplication.run(ZuulMain.class, args); } } \u6b65\u9aa4 3 \u5728application.yml\u6587\u4ef6\u4e2d\u5b9a\u4e49\u8def\u7531\u7b56\u7565\uff1a server: port: 8754 #api gateway\u670d\u52a1\u7aef\u53e3 zuul: routes: #\u8def\u7531\u7b56\u7565 discoveryServer: /myServer/** #\u8def\u7531\u89c4\u5219 \u7ea2\u8272\u7684\u914d\u7f6e\u9879\u8868\u793a\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u5f00\u53d1\u73af\u5883\u8fdb\u884c\u914d\u7f6e\u3002\u5173\u4e8ezuul.routers\u7684\u8def\u7531\u7b56\u7565\u7684\u8be6\u7ec6\u5b9a\u4e49\u89c4\u5219\uff0c\u8bf7\u53c2\u8003\u5b98\u65b9\u6587\u732e\uff1a \u8def\u7531\u5668\u548c\u8fc7\u6ee4\u5668\uff1aZuul \uff0c\u53ef\u66f4\u7ec6\u7c92\u5ea6\u5730\u5bf9\u8def\u7531\u8fdb\u884c\u63a7\u5236\u3002 \u6b65\u9aa4 4 \u5728microservice.yaml\u5b9a\u4e49\u5fae\u670d\u52a1\u5c5e\u6027\uff1a APPLICATION_ID: discoverytest #\u670d\u52a1ID service_description: name: discoveryGateway #\u670d\u52a1\u540d\u79f0 version: 0.0.2 #\u670d\u52a1\u7248\u672c\u53f7 servicecomb: service: registry: address: http://127.0.0.1:30100 #\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\u5730\u5740 rest: address: 0.0.0.0:8082 #\u5fae\u670d\u52a1\u7aef\u53e3\uff0c\u53ef\u4e0d\u5199 \u6b65\u9aa4 5\u3000 Run ZuulMain Application \u4f7f\u7528Zuul Proxy \u5728\u4f7f\u7528zuul\u505a\u7684API Gateway\u524d\uff0c\u9996\u5148\u8981\u542f\u52a8\u5728zuul.routers\u4e2d\u5b9a\u4e49\u7684\u5fae\u670d\u52a1\u63d0\u4f9b\u8005\u3002 \u5f00\u53d1\u670d\u52a1\u63d0\u4f9b\u8005\uff0c\u5f00\u6309\u6d41\u7a0b\u8bf7\u53c2\u80033 \u5f00\u53d1\u670d\u52a1\u63d0\u4f9b\u8005\u3002\u5728\u5fae\u670d\u52a1microservice.yaml\u6587\u4ef6\u4e2d\u9700\u6ce8\u610f\u4ee5\u4e0b\u4e24\u70b9\uff1a APPLICATION_ID\u9700\u8981\u4e8ezuul proxy\u4e2d\u5b9a\u4e49\u7684\u4fdd\u6301\u4e00\u81f4\u3002 service_description.name\u9700\u8981\u4e8ezuul.routers\u4e2d\u76f8\u5bf9\u5e94\u3002 \u793a\u4f8b\u5982\u4e0b\uff1a APPLICATION_ID: discoverytest #\u4e0ezuul proxy\u4e00\u81f4 service_description: name: discoveryServer #\u670d\u52a1\u540d\u79f0\uff0c\u4e0ezuul.routers\u5bf9\u5e94 version: 0.0.2 servicecomb: service: registry: address: http://127.0.0.1:30100 #\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\u5730\u5740 rest: address: 0.0.0.0:8080 API Gateway\u7684\u8bbf\u95ee\u5165\u53e3\u4e3a\uff1a http://127.0.0.1:8754 \uff0c\u6240\u6709\u5728zuul.routers\u4e2d\u5b9a\u4e49\u7684\u670d\u52a1\u90fd\u53ef\u901a\u8fc7\u8fd9\u4e2a\u8bbf\u95ee\u5165\u53e3\u8fdb\u884c\u4ee3\u7406\u8bbf\u95ee\uff0c\u8bbf\u95ee\u89c4\u5219\u5982\u4e0b\uff1a http://127.0.0.1:8754/myServer/*** \u8fd9\u8868\u793a\uff0cHttp\u8c03\u7528 http://127.0.0.1:8754/myServer/*** \uff0c\u4f1a\u8f6c\u5230discoveryServer\u670d\u52a1\uff08\u4f8b\u5982\uff1a\"/myServer/101\"\u8df3\u8f6c\u5230discoveryServer \u670d\u52a1\u4e0b\u7684\"/101\"\uff09 \u5982\u679c\u5728\u670d\u52a1\u4e2d\u5fc3\u540c\u65f6\u5b58\u5728\u591a\u4e2adiscoveryServer\u670d\u52a1(\u7248\u672c\u4e0d\u540c),zuul\u9ed8\u8ba4\u91c7\u7528Ribbon\u7b56\u7565\u5bf9\u8bf7\u6c42\u8fdb\u884c\u8f6c\u53d1\u3002","title":"\u4f7f\u7528zuul\u505a\u8fb9\u7f18\u670d\u52a1"},{"location":"edge/zuul/#zuul","text":"","title":"\u4f7f\u7528zuul\u505a\u8fb9\u7f18\u670d\u52a1"},{"location":"edge/zuul/#_1","text":"","title":"\u6982\u5ff5\u9610\u8ff0"},{"location":"edge/zuul/#api-gateway","text":"API Gateway\u662f\u4e00\u4e2a\u670d\u52a1\u5668\uff0c\u4e5f\u53ef\u4ee5\u8bf4\u662f\u8fdb\u5165\u7cfb\u7edf\u7684\u552f\u4e00\u8282\u70b9\u3002API Gateway\u5c01\u88c5\u5185\u90e8\u7cfb\u7edf\u7684\u67b6\u6784\uff0c\u5e76\u4e14\u63d0\u4f9bAPI\u7ed9\u5404\u4e2a\u5ba2\u6237\u7aef\u3002","title":"API Gateway\uff1a"},{"location":"edge/zuul/#zuul_1","text":"Zuul\u662fNetflix\u7684\u57fa\u4e8eJVM\u7684\u8def\u7531\u5668\u548c\u670d\u52a1\u5668\u7aef\u8d1f\u8f7d\u5747\u8861\u5668\uff0c\u53ef\u4ee5\u4f7f\u7528Zuul\u8fdb\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a \u8ba4\u8bc1 \u6d1e\u5bdf \u538b\u529b\u6d4b\u8bd5 \u91d1\u4e1d\u96c0\u6d4b\u8bd5 \u52a8\u6001\u8def\u7531 \u670d\u52a1\u8fc1\u79fb \u8d1f\u8f7d\u8131\u843d \u5b89\u5168 \u9759\u6001\u76f8\u54cd\u5e94\u5904\u7406 \u4e3b\u52a8/\u88ab\u52a8\u6d41\u91cf\u7ba1\u7406 \u672c\u5c0f\u8282\u4e3b\u8981\u4ecb\u7ecd\u5728SpringBoot\u5e94\u7528\u4e2d\u4f7f\u7528Zuul\u505aAPI Gateway\u3002\u5173\u4e8eZuul\u7684\u8be6\u7ec6\u529f\u80fd\u4ecb\u7ecd\u8bf7\u53c2\u8003\u6587\u6863 \u8def\u7531\u5668\u548c\u8fc7\u6ee4\u5668\uff1aZuul \u3002","title":"Zuul"},{"location":"edge/zuul/#_2","text":"Zuul\u505aAPI Gateway\uff0c\u5373\u5efa\u7acb\u4e00\u4e2aZuul Proxy\u5e94\u7528\uff0c\u5728\u8be5Proxy\u5e94\u7528\u4e2d\u7edf\u4e00\u5b9a\u4e49\u6240\u6709\u7684\u5fae\u670d\u52a1\u8bbf\u95ee\u5165\u53e3\uff0c\u901a\u8fc7\u4f7f\u7528\u4e0d\u540c\u7684\u524d\u7f00(stripped)\u6765\u533a\u5206\u5404\u4e2a\u5fae\u670d\u52a1\u3002\u672c\u5c0f\u8282\u901a\u8fc7\u5efa\u7acb\u4e00\u4e2aZuulProxy SpringBoot\u5e94\u7528\u6765\u6f14\u793aZuul\u7684API Gateway\u529f\u80fd\u3002","title":"\u573a\u666f\u63cf\u8ff0"},{"location":"edge/zuul/#_3","text":"\u672c\u5c0f\u8282\u4ecb\u7ecd\u7684ZuulProxy\u548cZuulServer\u7b49demo\u90fd\u662f\u57fa\u4e8eSpringBoot\u548cServiceComb\u6846\u67b6\u7684\u5e94\u7528\uff0c\u5177\u4f53\u8bf7\u53c2\u8003 \u5728Spring Boot\u4e2d\u4f7f\u7528java chassis \u3002","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"edge/zuul/#zuul-proxy","text":"\u672c\u8282\u4ecb\u7ecd\u5982\u4f55\u542f\u52a8\u4e00\u4e2azuul proxy\u5e94\u7528\u4f5c\u4e3aAPI Gateway\u3002\u6b65\u9aa4\u5982\u4e0b\uff1a \u6b65\u9aa4 1 \u5728pom\u6587\u4ef6\u4e2d\u6dfb\u52a0\u4f9d\u8d56\uff1a dependency groupId org.springframework.cloud /groupId artifactId spring-cloud-starter-zuul /artifactId /dependency dependency groupId org.springframework.cloud /groupId artifactId spring-cloud-starter-ribbon /artifactId /dependency dependency groupId org.springframework.cloud /groupId artifactId spring-cloud-starter-hystrix /artifactId /dependency dependency groupId org.apache.servicecomb /groupId artifactId spring-boot-starter-discovery /artifactId /dependency \u6b65\u9aa4 2 \u5728SpringBoot\u4e3b\u7c7b\u6dfb\u52a0\u6ce8\u89e3\uff1a @SpringBootApplication @EnableServiceComb @EnableZuulProxy//\u65b0\u589e\u6ce8\u89e3 public class ZuulMain{ public static void main(String[] args) throws Exception{ \u3000\u3000 SpringApplication.run(ZuulMain.class, args); } } \u6b65\u9aa4 3 \u5728application.yml\u6587\u4ef6\u4e2d\u5b9a\u4e49\u8def\u7531\u7b56\u7565\uff1a server: port: 8754 #api gateway\u670d\u52a1\u7aef\u53e3 zuul: routes: #\u8def\u7531\u7b56\u7565 discoveryServer: /myServer/** #\u8def\u7531\u89c4\u5219 \u7ea2\u8272\u7684\u914d\u7f6e\u9879\u8868\u793a\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u5f00\u53d1\u73af\u5883\u8fdb\u884c\u914d\u7f6e\u3002\u5173\u4e8ezuul.routers\u7684\u8def\u7531\u7b56\u7565\u7684\u8be6\u7ec6\u5b9a\u4e49\u89c4\u5219\uff0c\u8bf7\u53c2\u8003\u5b98\u65b9\u6587\u732e\uff1a \u8def\u7531\u5668\u548c\u8fc7\u6ee4\u5668\uff1aZuul \uff0c\u53ef\u66f4\u7ec6\u7c92\u5ea6\u5730\u5bf9\u8def\u7531\u8fdb\u884c\u63a7\u5236\u3002 \u6b65\u9aa4 4 \u5728microservice.yaml\u5b9a\u4e49\u5fae\u670d\u52a1\u5c5e\u6027\uff1a APPLICATION_ID: discoverytest #\u670d\u52a1ID service_description: name: discoveryGateway #\u670d\u52a1\u540d\u79f0 version: 0.0.2 #\u670d\u52a1\u7248\u672c\u53f7 servicecomb: service: registry: address: http://127.0.0.1:30100 #\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\u5730\u5740 rest: address: 0.0.0.0:8082 #\u5fae\u670d\u52a1\u7aef\u53e3\uff0c\u53ef\u4e0d\u5199 \u6b65\u9aa4 5\u3000 Run ZuulMain Application","title":"\u542f\u52a8Zuul Proxy"},{"location":"edge/zuul/#zuul-proxy_1","text":"\u5728\u4f7f\u7528zuul\u505a\u7684API Gateway\u524d\uff0c\u9996\u5148\u8981\u542f\u52a8\u5728zuul.routers\u4e2d\u5b9a\u4e49\u7684\u5fae\u670d\u52a1\u63d0\u4f9b\u8005\u3002 \u5f00\u53d1\u670d\u52a1\u63d0\u4f9b\u8005\uff0c\u5f00\u6309\u6d41\u7a0b\u8bf7\u53c2\u80033 \u5f00\u53d1\u670d\u52a1\u63d0\u4f9b\u8005\u3002\u5728\u5fae\u670d\u52a1microservice.yaml\u6587\u4ef6\u4e2d\u9700\u6ce8\u610f\u4ee5\u4e0b\u4e24\u70b9\uff1a APPLICATION_ID\u9700\u8981\u4e8ezuul proxy\u4e2d\u5b9a\u4e49\u7684\u4fdd\u6301\u4e00\u81f4\u3002 service_description.name\u9700\u8981\u4e8ezuul.routers\u4e2d\u76f8\u5bf9\u5e94\u3002 \u793a\u4f8b\u5982\u4e0b\uff1a APPLICATION_ID: discoverytest #\u4e0ezuul proxy\u4e00\u81f4 service_description: name: discoveryServer #\u670d\u52a1\u540d\u79f0\uff0c\u4e0ezuul.routers\u5bf9\u5e94 version: 0.0.2 servicecomb: service: registry: address: http://127.0.0.1:30100 #\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\u5730\u5740 rest: address: 0.0.0.0:8080 API Gateway\u7684\u8bbf\u95ee\u5165\u53e3\u4e3a\uff1a http://127.0.0.1:8754 \uff0c\u6240\u6709\u5728zuul.routers\u4e2d\u5b9a\u4e49\u7684\u670d\u52a1\u90fd\u53ef\u901a\u8fc7\u8fd9\u4e2a\u8bbf\u95ee\u5165\u53e3\u8fdb\u884c\u4ee3\u7406\u8bbf\u95ee\uff0c\u8bbf\u95ee\u89c4\u5219\u5982\u4e0b\uff1a http://127.0.0.1:8754/myServer/*** \u8fd9\u8868\u793a\uff0cHttp\u8c03\u7528 http://127.0.0.1:8754/myServer/*** \uff0c\u4f1a\u8f6c\u5230discoveryServer\u670d\u52a1\uff08\u4f8b\u5982\uff1a\"/myServer/101\"\u8df3\u8f6c\u5230discoveryServer \u670d\u52a1\u4e0b\u7684\"/101\"\uff09 \u5982\u679c\u5728\u670d\u52a1\u4e2d\u5fc3\u540c\u65f6\u5b58\u5728\u591a\u4e2adiscoveryServer\u670d\u52a1(\u7248\u672c\u4e0d\u540c),zuul\u9ed8\u8ba4\u91c7\u7528Ribbon\u7b56\u7565\u5bf9\u8bf7\u6c42\u8fdb\u884c\u8f6c\u53d1\u3002","title":"\u4f7f\u7528Zuul Proxy"},{"location":"featured-topics/application-bmi/","text":"Java-Chassis \u5165\u95e8\u6307\u5357 - \u5f00\u53d1BMI\u5e94\u7528 \u672c\u6307\u5357\u5c06\u4ee5\u4e00\u4e2a\u7b80\u5355\u7684 \u4f53\u8d28\u6307\u6570(BMI) \u5e94\u7528\u5f00\u5c55\u5fae\u670d\u52a1\u4e4b\u65c5\u3002 \u4f53\u8d28\u6307\u6570 \u4e3b\u8981\u7528\u4e8e\u8861\u91cf\u4eba\u4f53\u80d6\u7626\u7a0b\u5ea6\u3002\u8be5\u5e94\u7528\u4e3b\u8981\u5305\u542b\u4e24\u4e2a\u5fae\u670d\u52a1\uff1a \u4f53\u8d28\u6307\u6570\u8ba1\u7b97\u5668 \uff1a\u8d1f\u8d23\u5904\u7406\u8fd0\u7b97\u4e8b\u52a1\u3002 \u4f53\u8d28\u6307\u6570\u754c\u9762 \uff1a\u63d0\u4f9b\u7528\u6237\u754c\u9762\u53ca\u7f51\u5173\u670d\u52a1\u3002 \u5176\u8fd0\u884c\u6d41\u7a0b\u4e3a\uff1a \u5176\u4e2d\uff0c\u865a\u7ebf\u8868\u793a\u670d\u52a1\u6ce8\u518c\u53ca\u670d\u52a1\u53d1\u73b0\u7684\u8fc7\u7a0b\u3002 \u672c\u6307\u5357\u5305\u542b\u5982\u4e0b\u5185\u5bb9\uff1a \u5feb\u901f\u5165\u95e8 \u4f53\u8d28\u6307\u6570\u5fae\u670d\u52a1\u5e94\u7528\u5f00\u53d1 \u5fae\u670d\u52a1\u5f00\u53d1\u8fdb\u9636 \u4ecb\u7ecd\u6587\u6863\u7684\u6e90\u4ee3\u7801\u6258\u7ba1\u5728 github","title":"Java-Chassis \u5165\u95e8\u6307\u5357 - \u5f00\u53d1BMI\u5e94\u7528"},{"location":"featured-topics/application-bmi/#java-chassis-bmi","text":"\u672c\u6307\u5357\u5c06\u4ee5\u4e00\u4e2a\u7b80\u5355\u7684 \u4f53\u8d28\u6307\u6570(BMI) \u5e94\u7528\u5f00\u5c55\u5fae\u670d\u52a1\u4e4b\u65c5\u3002 \u4f53\u8d28\u6307\u6570 \u4e3b\u8981\u7528\u4e8e\u8861\u91cf\u4eba\u4f53\u80d6\u7626\u7a0b\u5ea6\u3002\u8be5\u5e94\u7528\u4e3b\u8981\u5305\u542b\u4e24\u4e2a\u5fae\u670d\u52a1\uff1a \u4f53\u8d28\u6307\u6570\u8ba1\u7b97\u5668 \uff1a\u8d1f\u8d23\u5904\u7406\u8fd0\u7b97\u4e8b\u52a1\u3002 \u4f53\u8d28\u6307\u6570\u754c\u9762 \uff1a\u63d0\u4f9b\u7528\u6237\u754c\u9762\u53ca\u7f51\u5173\u670d\u52a1\u3002 \u5176\u8fd0\u884c\u6d41\u7a0b\u4e3a\uff1a \u5176\u4e2d\uff0c\u865a\u7ebf\u8868\u793a\u670d\u52a1\u6ce8\u518c\u53ca\u670d\u52a1\u53d1\u73b0\u7684\u8fc7\u7a0b\u3002 \u672c\u6307\u5357\u5305\u542b\u5982\u4e0b\u5185\u5bb9\uff1a \u5feb\u901f\u5165\u95e8 \u4f53\u8d28\u6307\u6570\u5fae\u670d\u52a1\u5e94\u7528\u5f00\u53d1 \u5fae\u670d\u52a1\u5f00\u53d1\u8fdb\u9636 \u4ecb\u7ecd\u6587\u6863\u7684\u6e90\u4ee3\u7801\u6258\u7ba1\u5728 github","title":"Java-Chassis \u5165\u95e8\u6307\u5357 - \u5f00\u53d1BMI\u5e94\u7528"},{"location":"featured-topics/application-porter/","text":"Java-Chassis \u5165\u95e8\u6307\u5357 - \u5f00\u53d1 porter \u5e94\u7528 \u793a\u4f8b\u9879\u76ee\u5305\u542b\u5982\u4e0b\u7ae0\u8282\uff1a User Story \u8bbe\u8ba1\u5fae\u670d\u52a1 \u5f00\u53d1\u754c\u9762(porter-website) \u5f00\u53d1\u6587\u4ef6\u4e0a\u4f20\u529f\u80fd(file-service) \u5f00\u53d1\u7f51\u5173(gateway-service) \u4f7f\u7528MyBatis\u8bbf\u95ee\u6570\u636e\u5e93(user-service) \u8fdb\u884c\u8ba4\u8bc1\u548c\u9274\u6743\u8bbe\u8ba1 \u7f51\u5173HTTPS\u5b89\u5168\u914d\u7f6e \u793a\u4f8b\u9879\u76ee\u7684\u51fa\u53d1\u70b9\u662f\u5e2e\u52a9\u5f00\u53d1\u8005\u5f00\u53d1\u4e00\u4e2a\u5b8c\u6574\u7684\u5fae\u670d\u52a1\u5e94\u7528\u3002\u901a\u8fc7\u4e00\u4e2a\u5178\u578b\u7684\u5e94\u7528\u573a\u666f\uff0c\u5c55\u73b0\u4e00\u4e2a\u5fae\u670d\u52a1\u5e94\u7528\u9700\u8981\u89e3\u51b3\u90a3\u4e9b\u95ee\u9898\uff0c\u5728\u4e0d\u540c\u7684\u7ae0\u8282\u91cc\u9762\uff0c\u4f1a\u8be6\u7ec6\u89e3\u91ca\u89e3\u51b3\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u7684\u6280\u672f\u539f\u7406\u548c\u5b9e\u73b0\u8fc7\u7a0b\u3002 \u8fd9\u4e2a\u5e94\u7528\u573a\u666f\uff0c\u662f\u901a\u8fc7\u6536\u96c6\u4e86\u4e00\u4e9b\u7528\u6237\u7684\u771f\u5b9e\u4e1a\u52a1\u573a\u666f\u63d0\u53d6\u51fa\u6765\u7684\u3002\u5177\u4f53\u5305\u62ec\uff1a \u4e00\u4e2a\u63a8\u8350\u7684\u5fae\u670d\u52a1\u8bbe\u8ba1\u65b9\u6848\uff1b \u8ba4\u8bc1\u9274\u6743\uff1b \u4f7f\u7528mybatis\u8bbf\u95ee\u6570\u636e\u5e93\uff1b \u4f7f\u7528html+js\u63d0\u4f9b\u754c\u9762\u670d\u52a1\uff1b \u4e0a\u4f20\u6587\u4ef6\uff1b \u4f7f\u7528\u7f51\u5173\u548c\u914d\u7f6eHTTPS\uff1b \u5728\u8fd9\u4e2a\u5e94\u7528\u4e2d\uff0c\u5c3d\u53ef\u80fd\u8ba9\u670d\u52a1\u5c0f\u3001\u6bcf\u4e2a\u5fae\u670d\u52a1\u5b8c\u5168\u72ec\u7acb\uff0c\u6ca1\u6709\u4ee3\u7801\u4e0a\u7684\u4f9d\u8d56\uff0c\u670d\u52a1\u4e4b\u95f4\u901a\u8fc7REST\u63a5\u53e3\u76f8\u4e92\u8bbf\u95ee\u3002\u4e3a\u4e86\u8fbe\u5230\u8fd9\u4e2a\u76ee\u7684\uff0c\u53ef\u80fd\u4f1a\u6709\u4e9b\u91cd\u590d\u4ee3\u7801\uff08\u5305\u62ec\u914d\u7f6e\u7c7b\u6587\u4ef6\u5982pom.xml\u3001\u6570\u636e\u6a21\u578b\u7c7b\u6587\u4ef6\u7b49\uff09\u3002\u5f00\u53d1\u8005\u53ef\u4ee5\u7ed3\u5408\u5b9e\u9645\u60c5\u51b5\u9009\u62e9\u662f\u5426\u63d0\u4f9b\u516c\u5171\u6a21\u5757\uff0c\u6765\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\u3002\u5728\u8fd9\u4e2a\u9879\u76ee\u4e2d\u9009\u62e9\u7684\u662f\u7528\u91cd\u590d\u4ee3\u7801\u6765\u6362\u53d6\u81ea\u7531\u5ea6\u7684\u65b9\u6848\u3002 \u5728\u5b9e\u9645\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u8fd8\u4f1a\u9075\u5faa\u5176\u4ed6\u4e00\u4e9b\u548c\u5fae\u670d\u52a1\u5f00\u53d1\u6709\u5173\u7684\u539f\u5219\uff0c\u5305\u62ec\u65e0\u72b6\u6001\u8bbe\u8ba1\u7b49\u3002\u8fd9\u91cc\u7684\u4f8b\u5b50\u7684\u76ee\u7684\u662f\u642d\u5efa\u4e00\u4e2a\u5546\u4e1a\u53ef\u7528\u7684\u5fae\u670d\u52a1\uff0c\u56e0\u6b64\u6211\u4eec\u4f1a\u5728\u67b6\u6784\u8bbe\u8ba1\u3001\u65b9\u6848\u8bbe\u8ba1\u4e0a\u4e5f\u7ed9\u51fa\u4e00\u5b9a\u7684\u5efa\u8bae\u4ee5\u53ca\u8bf4\u660e\u8fd9\u6837\u5904\u7406\u7684\u76ee\u7684\u3002 \u672c\u4e13\u9898\u7684\u6d89\u53ca\u7684\u4ee3\u7801\u5747\u6258\u7ba1\u5728github\uff0c\u53c2\u8003 Porter\u5e94\u7528 \u3002\u5f00\u53d1\u8005\u53ef\u4ee5clone\u4e00\u4efd\u4f9b\u5b66\u4e60\u4f7f\u7528\uff0c\u6216\u8005\u4f5c\u4e3a\u6b63\u5f0f\u9879\u76ee\u7684\u6a21\u677f\u3002","title":"Java-Chassis \u5165\u95e8\u6307\u5357 - \u5f00\u53d1 porter \u5e94\u7528"},{"location":"featured-topics/application-porter/#java-chassis-porter","text":"\u793a\u4f8b\u9879\u76ee\u5305\u542b\u5982\u4e0b\u7ae0\u8282\uff1a User Story \u8bbe\u8ba1\u5fae\u670d\u52a1 \u5f00\u53d1\u754c\u9762(porter-website) \u5f00\u53d1\u6587\u4ef6\u4e0a\u4f20\u529f\u80fd(file-service) \u5f00\u53d1\u7f51\u5173(gateway-service) \u4f7f\u7528MyBatis\u8bbf\u95ee\u6570\u636e\u5e93(user-service) \u8fdb\u884c\u8ba4\u8bc1\u548c\u9274\u6743\u8bbe\u8ba1 \u7f51\u5173HTTPS\u5b89\u5168\u914d\u7f6e \u793a\u4f8b\u9879\u76ee\u7684\u51fa\u53d1\u70b9\u662f\u5e2e\u52a9\u5f00\u53d1\u8005\u5f00\u53d1\u4e00\u4e2a\u5b8c\u6574\u7684\u5fae\u670d\u52a1\u5e94\u7528\u3002\u901a\u8fc7\u4e00\u4e2a\u5178\u578b\u7684\u5e94\u7528\u573a\u666f\uff0c\u5c55\u73b0\u4e00\u4e2a\u5fae\u670d\u52a1\u5e94\u7528\u9700\u8981\u89e3\u51b3\u90a3\u4e9b\u95ee\u9898\uff0c\u5728\u4e0d\u540c\u7684\u7ae0\u8282\u91cc\u9762\uff0c\u4f1a\u8be6\u7ec6\u89e3\u91ca\u89e3\u51b3\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u7684\u6280\u672f\u539f\u7406\u548c\u5b9e\u73b0\u8fc7\u7a0b\u3002 \u8fd9\u4e2a\u5e94\u7528\u573a\u666f\uff0c\u662f\u901a\u8fc7\u6536\u96c6\u4e86\u4e00\u4e9b\u7528\u6237\u7684\u771f\u5b9e\u4e1a\u52a1\u573a\u666f\u63d0\u53d6\u51fa\u6765\u7684\u3002\u5177\u4f53\u5305\u62ec\uff1a \u4e00\u4e2a\u63a8\u8350\u7684\u5fae\u670d\u52a1\u8bbe\u8ba1\u65b9\u6848\uff1b \u8ba4\u8bc1\u9274\u6743\uff1b \u4f7f\u7528mybatis\u8bbf\u95ee\u6570\u636e\u5e93\uff1b \u4f7f\u7528html+js\u63d0\u4f9b\u754c\u9762\u670d\u52a1\uff1b \u4e0a\u4f20\u6587\u4ef6\uff1b \u4f7f\u7528\u7f51\u5173\u548c\u914d\u7f6eHTTPS\uff1b \u5728\u8fd9\u4e2a\u5e94\u7528\u4e2d\uff0c\u5c3d\u53ef\u80fd\u8ba9\u670d\u52a1\u5c0f\u3001\u6bcf\u4e2a\u5fae\u670d\u52a1\u5b8c\u5168\u72ec\u7acb\uff0c\u6ca1\u6709\u4ee3\u7801\u4e0a\u7684\u4f9d\u8d56\uff0c\u670d\u52a1\u4e4b\u95f4\u901a\u8fc7REST\u63a5\u53e3\u76f8\u4e92\u8bbf\u95ee\u3002\u4e3a\u4e86\u8fbe\u5230\u8fd9\u4e2a\u76ee\u7684\uff0c\u53ef\u80fd\u4f1a\u6709\u4e9b\u91cd\u590d\u4ee3\u7801\uff08\u5305\u62ec\u914d\u7f6e\u7c7b\u6587\u4ef6\u5982pom.xml\u3001\u6570\u636e\u6a21\u578b\u7c7b\u6587\u4ef6\u7b49\uff09\u3002\u5f00\u53d1\u8005\u53ef\u4ee5\u7ed3\u5408\u5b9e\u9645\u60c5\u51b5\u9009\u62e9\u662f\u5426\u63d0\u4f9b\u516c\u5171\u6a21\u5757\uff0c\u6765\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\u3002\u5728\u8fd9\u4e2a\u9879\u76ee\u4e2d\u9009\u62e9\u7684\u662f\u7528\u91cd\u590d\u4ee3\u7801\u6765\u6362\u53d6\u81ea\u7531\u5ea6\u7684\u65b9\u6848\u3002 \u5728\u5b9e\u9645\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u8fd8\u4f1a\u9075\u5faa\u5176\u4ed6\u4e00\u4e9b\u548c\u5fae\u670d\u52a1\u5f00\u53d1\u6709\u5173\u7684\u539f\u5219\uff0c\u5305\u62ec\u65e0\u72b6\u6001\u8bbe\u8ba1\u7b49\u3002\u8fd9\u91cc\u7684\u4f8b\u5b50\u7684\u76ee\u7684\u662f\u642d\u5efa\u4e00\u4e2a\u5546\u4e1a\u53ef\u7528\u7684\u5fae\u670d\u52a1\uff0c\u56e0\u6b64\u6211\u4eec\u4f1a\u5728\u67b6\u6784\u8bbe\u8ba1\u3001\u65b9\u6848\u8bbe\u8ba1\u4e0a\u4e5f\u7ed9\u51fa\u4e00\u5b9a\u7684\u5efa\u8bae\u4ee5\u53ca\u8bf4\u660e\u8fd9\u6837\u5904\u7406\u7684\u76ee\u7684\u3002 \u672c\u4e13\u9898\u7684\u6d89\u53ca\u7684\u4ee3\u7801\u5747\u6258\u7ba1\u5728github\uff0c\u53c2\u8003 Porter\u5e94\u7528 \u3002\u5f00\u53d1\u8005\u53ef\u4ee5clone\u4e00\u4efd\u4f9b\u5b66\u4e60\u4f7f\u7528\uff0c\u6216\u8005\u4f5c\u4e3a\u6b63\u5f0f\u9879\u76ee\u7684\u6a21\u677f\u3002","title":"Java-Chassis \u5165\u95e8\u6307\u5357 - \u5f00\u53d1 porter \u5e94\u7528"},{"location":"featured-topics/features/","text":"\u65b0\u529f\u80fd\u4ecb\u7ecd\u7cfb\u5217\u6587\u7ae0 2.0.0 \u65b0\u7279\u6027\u4ecb\u7ecd\uff1a \u5f31\u7c7b\u578b\u5951\u7ea6 2.0.0 \u65b0\u7279\u6027\u4ecb\u7ecd\uff1a \u591a\u914d\u7f6e\u4e2d\u5fc3\u652f\u6301 2.0.1 \u65b0\u7279\u6027\u4ecb\u7ecd\uff1a date\u548cdate-time 2.0.1 \u65b0\u7279\u6027\u4ecb\u7ecd\uff1a \u5728\u65e5\u5fd7\u4e2d\u8bb0\u5f55trace id 2.0.1 \u65b0\u7279\u6027\u4ecb\u7ecd\uff1a \u6cdb\u5316\u8c03\u7528 2.0.2 \u65b0\u7279\u6027\u4ecb\u7ecd\uff1a Edge Service \u901a\u7528\u7684 HTTP \u8f6c\u53d1\u5668 CommonHttpEdgeDispatcher","title":"\u65b0\u529f\u80fd\u4ecb\u7ecd\u7cfb\u5217\u6587\u7ae0"},{"location":"featured-topics/features/#_1","text":"2.0.0 \u65b0\u7279\u6027\u4ecb\u7ecd\uff1a \u5f31\u7c7b\u578b\u5951\u7ea6 2.0.0 \u65b0\u7279\u6027\u4ecb\u7ecd\uff1a \u591a\u914d\u7f6e\u4e2d\u5fc3\u652f\u6301 2.0.1 \u65b0\u7279\u6027\u4ecb\u7ecd\uff1a date\u548cdate-time 2.0.1 \u65b0\u7279\u6027\u4ecb\u7ecd\uff1a \u5728\u65e5\u5fd7\u4e2d\u8bb0\u5f55trace id 2.0.1 \u65b0\u7279\u6027\u4ecb\u7ecd\uff1a \u6cdb\u5316\u8c03\u7528 2.0.2 \u65b0\u7279\u6027\u4ecb\u7ecd\uff1a Edge Service \u901a\u7528\u7684 HTTP \u8f6c\u53d1\u5668 CommonHttpEdgeDispatcher","title":"\u65b0\u529f\u80fd\u4ecb\u7ecd\u7cfb\u5217\u6587\u7ae0"},{"location":"featured-topics/upgrading/","text":"\u5347\u7ea7\u6307\u5bfc\u7cfb\u5217\u6587\u7ae0 1.3.0 \u5347\u7ea7 2.0.0\u6307\u5bfc 2.0.0 \u5347\u7ea7 2.0.1\u6307\u5bfc","title":"\u5347\u7ea7\u6307\u5bfc\u7cfb\u5217\u6587\u7ae0"},{"location":"featured-topics/upgrading/#_1","text":"1.3.0 \u5347\u7ea7 2.0.0\u6307\u5bfc 2.0.0 \u5347\u7ea7 2.0.1\u6307\u5bfc","title":"\u5347\u7ea7\u6307\u5bfc\u7cfb\u5217\u6587\u7ae0"},{"location":"featured-topics/using-inspector/","text":"\u4f7f\u7528 inspector \u6a21\u5757\u67e5\u770b\u5951\u7ea6 inspector \u63d0\u4f9b\u4e86\u7528\u6237\u67e5\u770b\u3001\u4e0b\u8f7d\u5951\u7ea6\uff0c\u751f\u6210\u6587\u6863\u548c\u5bf9API\u63a5\u53e3\u8fdb\u884c\u6d4b\u8bd5\u7684\u529f\u80fd\u3002\u8fd9\u4e2a\u529f\u80fd\u76f4\u63a5\u5728\u5fae\u670d\u52a1\u63d0\u4f9b\uff0c\u7528\u4e8e\u5f25\u8865\u901a\u8fc7\u670d\u52a1\u4e2d\u5fc3\u67e5\u770b\u5951\u7ea6\u548c\u5bf9\u63a5\u53e3\u8fdb\u884c\u6d4b\u8bd5\u7684\u4e0d\u8db3\u3002inspector\u529f\u80fd\u540e\u7eed\u4f1a\u505a\u8fdb\u4e00\u6b65\u589e\u5f3a\uff0c\u9664\u4e86\u7ba1\u7406\u5951\u7ea6\uff0c\u8fd8\u53ef\u4ee5\u89c2\u5bdf\u5fae\u670d\u52a1\u7684\u5185\u90e8\u72b6\u6001\uff0c\u5e2e\u52a9\u5b9a\u4f4d\u4e00\u4e9b\u5e38\u89c1\u95ee\u9898\u3002 \u542f\u7528inspector \u5728\u9879\u76ee\u4e2d\u542f\u7528inspector\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u5728pom\u4e2d\u589e\u52a0\u5982\u4e0b\u4f9d\u8d56\u5373\u53ef\u3002 dependency groupId org.apache.servicecomb /groupId artifactId inspector /artifactId /dependency \u5982\u679c\u9879\u76ee\u4e2d\u4f9d\u8d56\u4e86 solution-basic , \u8fd9\u4e2a\u6a21\u5757\u4f1a\u81ea\u52a8\u5305\u542b\u8fdb\u6765\u3002 \u5f15\u5165\u4f9d\u7136\u540e\u542f\u52a8\u5fae\u670d\u52a1\u5373\u53ef\u4f7f\u7528\u76f8\u5173\u5951\u7ea6\u7ba1\u7406\u529f\u80fd\u3002\u4e0b\u9762\u5047\u8bbe\u5fae\u670d\u52a1\u76d1\u542c\u7684\u7aef\u53e3\u4e3a8080\u3002 \u4f7f\u7528inspector\u529f\u80fd inspector\u63d0\u4f9b\u4e86\u7ba1\u7406\u754c\u9762\uff0c\u96c6\u6210\u4e86swagger\u7f16\u8f91\u5668\u3002\u8f93\u5165 http://localhost:8080/inspector/index.html \u540e\uff0c\u51fa\u73b0\u5982\u4e0b\u754c\u9762\u3002 SWAGER\u7f16\u8f91\u754c\u9762 \u5728SWAGGER\u7f16\u8f91\u754c\u9762\uff0c\u53ef\u4ee5\u5bf9\u63a5\u53e3\u8fdb\u884c\u6d4b\u8bd5\u3002 HTML\u754c\u9762 HTML\u9875\u9762\u63d0\u4f9b\u4e86\u66f4\u5bb9\u6613\u8bfb\u5199\u7684\u683c\u5f0f\uff0c\u65b9\u4fbf\u5f00\u53d1\u8005\u67e5\u770b\u63a5\u53e3\u8bf4\u660e\u3002 \u8f93\u5165 http://localhost:8080/inspector/schemas \u53ef\u4ee5\u67e5\u8be2\u6240\u6709\u7684schema\u5217\u8868 [ goodsRepositoryApi , goodsService , onlineMallApi , stockApi , goodsCategoryApi , goodsPriceApi ] \u8f93\u5165 http://localhost:8080/inspector/download/schemas?format=HTML \u53ef\u4ee5\u4e0b\u8f7d\u6587\u6863\u3002format\u652f\u6301HTML\u548cSWAGGER\u4e24\u79cd\u683c\u5f0f\u3002\u8fd9\u4e2a\u63a5\u53e3\u4f1a\u4e0b\u8f7d\u6240\u6709\u5951\u7ea6\u6587\u4ef6\uff0c\u6253\u5305\u4e3azip\u683c\u5f0f\u3002 \u8f93\u5165 http://localhost:8080/inspector/schemas/goodsService?download=false format=HTML \u53ef\u4ee5\u67e5\u770b\u3001\u4e0b\u8f7d\u5355\u4e2a\u5951\u7ea6\u6587\u4ef6\u3002 \u4fdd\u62a4 inspector \u63a5\u53e3\u7684\u8bbf\u95ee\u63a7\u5236 \u8be5\u529f\u80fd\u88ab\u8bbe\u8ba1\u4e3a\u8f85\u52a9\u5f00\u53d1\u3001\u8bbe\u8ba1\u3001\u8fd0\u7ef4\uff0c\u7b2c\u4e00\u6b21\u8bbf\u95ee\u7684\u65f6\u5019\u52a0\u8f7d\u5f88\u6162\uff0c\u4e0d\u5efa\u8bae\u5f00\u653e\u7ed9\u6700\u7ec8\u7528\u6237\u5927\u89c4\u6a21\u5e76\u53d1\u8bbf\u95ee\u4f7f\u7528\u3002 \u5982\u679c\u5728\u751f\u4ea7\u73af\u5883\u5e26\u5165 \u8fd9\u4e2a\u529f\u80fd\uff0c\u53ef\u4ee5\u901a\u8fc7\u5fc5\u8981\u7684\u9694\u79bb\u63aa\u65bd\u548c\u8bbf\u95ee\u63a7\u5236\uff0c\u9650\u5236\u6700\u7ec8\u7528\u6237\u5bf9\u4e8e\u8fd9\u4e2a\u63a5\u53e3\u7684\u8bbf\u95ee\u3002 \u53ef\u4ee5\u4f7f\u7528 java-chassis \u63d0\u4f9b\u7684\u7ebf\u7a0b\u6c60\u9694\u79bb\u529f\u80fd\uff0c \u5c06\u8fd9\u4e2a\u670d\u52a1\u653e\u5230\u72ec\u7acb\u7684\u7ebf\u7a0b\u6c60\uff0c\u907f\u514d\u5bf9\u5176\u4ed6\u670d\u52a1\u7684\u8bbf\u95ee\u4ea7\u751f\u5f71\u54cd\u3002\u5177\u4f53\u64cd\u4f5c\u6b65\u9aa4\u5305\u62ec\uff0c \u5b9a\u4e49\u7ebf\u7a0b\u6c60\uff1a bean id= servicecomb.samples.executor.groupThreadPool class= org.apache.servicecomb.core.executor.GroupExecutor init-method= init / \u542f\u7528\u7ebf\u7a0b\u6c60: servicecomb: executors: Provider: inspector: servicecomb.samples.executor.groupThreadPool","title":"\u4f7f\u7528 inspector \u6a21\u5757\u67e5\u770b\u5951\u7ea6"},{"location":"featured-topics/using-inspector/#inspector","text":"inspector \u63d0\u4f9b\u4e86\u7528\u6237\u67e5\u770b\u3001\u4e0b\u8f7d\u5951\u7ea6\uff0c\u751f\u6210\u6587\u6863\u548c\u5bf9API\u63a5\u53e3\u8fdb\u884c\u6d4b\u8bd5\u7684\u529f\u80fd\u3002\u8fd9\u4e2a\u529f\u80fd\u76f4\u63a5\u5728\u5fae\u670d\u52a1\u63d0\u4f9b\uff0c\u7528\u4e8e\u5f25\u8865\u901a\u8fc7\u670d\u52a1\u4e2d\u5fc3\u67e5\u770b\u5951\u7ea6\u548c\u5bf9\u63a5\u53e3\u8fdb\u884c\u6d4b\u8bd5\u7684\u4e0d\u8db3\u3002inspector\u529f\u80fd\u540e\u7eed\u4f1a\u505a\u8fdb\u4e00\u6b65\u589e\u5f3a\uff0c\u9664\u4e86\u7ba1\u7406\u5951\u7ea6\uff0c\u8fd8\u53ef\u4ee5\u89c2\u5bdf\u5fae\u670d\u52a1\u7684\u5185\u90e8\u72b6\u6001\uff0c\u5e2e\u52a9\u5b9a\u4f4d\u4e00\u4e9b\u5e38\u89c1\u95ee\u9898\u3002","title":"\u4f7f\u7528 inspector \u6a21\u5757\u67e5\u770b\u5951\u7ea6"},{"location":"featured-topics/using-inspector/#inspector_1","text":"\u5728\u9879\u76ee\u4e2d\u542f\u7528inspector\u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u5728pom\u4e2d\u589e\u52a0\u5982\u4e0b\u4f9d\u8d56\u5373\u53ef\u3002 dependency groupId org.apache.servicecomb /groupId artifactId inspector /artifactId /dependency \u5982\u679c\u9879\u76ee\u4e2d\u4f9d\u8d56\u4e86 solution-basic , \u8fd9\u4e2a\u6a21\u5757\u4f1a\u81ea\u52a8\u5305\u542b\u8fdb\u6765\u3002 \u5f15\u5165\u4f9d\u7136\u540e\u542f\u52a8\u5fae\u670d\u52a1\u5373\u53ef\u4f7f\u7528\u76f8\u5173\u5951\u7ea6\u7ba1\u7406\u529f\u80fd\u3002\u4e0b\u9762\u5047\u8bbe\u5fae\u670d\u52a1\u76d1\u542c\u7684\u7aef\u53e3\u4e3a8080\u3002","title":"\u542f\u7528inspector"},{"location":"featured-topics/using-inspector/#inspector_2","text":"inspector\u63d0\u4f9b\u4e86\u7ba1\u7406\u754c\u9762\uff0c\u96c6\u6210\u4e86swagger\u7f16\u8f91\u5668\u3002\u8f93\u5165 http://localhost:8080/inspector/index.html \u540e\uff0c\u51fa\u73b0\u5982\u4e0b\u754c\u9762\u3002 SWAGER\u7f16\u8f91\u754c\u9762 \u5728SWAGGER\u7f16\u8f91\u754c\u9762\uff0c\u53ef\u4ee5\u5bf9\u63a5\u53e3\u8fdb\u884c\u6d4b\u8bd5\u3002 HTML\u754c\u9762 HTML\u9875\u9762\u63d0\u4f9b\u4e86\u66f4\u5bb9\u6613\u8bfb\u5199\u7684\u683c\u5f0f\uff0c\u65b9\u4fbf\u5f00\u53d1\u8005\u67e5\u770b\u63a5\u53e3\u8bf4\u660e\u3002 \u8f93\u5165 http://localhost:8080/inspector/schemas \u53ef\u4ee5\u67e5\u8be2\u6240\u6709\u7684schema\u5217\u8868 [ goodsRepositoryApi , goodsService , onlineMallApi , stockApi , goodsCategoryApi , goodsPriceApi ] \u8f93\u5165 http://localhost:8080/inspector/download/schemas?format=HTML \u53ef\u4ee5\u4e0b\u8f7d\u6587\u6863\u3002format\u652f\u6301HTML\u548cSWAGGER\u4e24\u79cd\u683c\u5f0f\u3002\u8fd9\u4e2a\u63a5\u53e3\u4f1a\u4e0b\u8f7d\u6240\u6709\u5951\u7ea6\u6587\u4ef6\uff0c\u6253\u5305\u4e3azip\u683c\u5f0f\u3002 \u8f93\u5165 http://localhost:8080/inspector/schemas/goodsService?download=false format=HTML \u53ef\u4ee5\u67e5\u770b\u3001\u4e0b\u8f7d\u5355\u4e2a\u5951\u7ea6\u6587\u4ef6\u3002","title":"\u4f7f\u7528inspector\u529f\u80fd"},{"location":"featured-topics/using-inspector/#inspector_3","text":"\u8be5\u529f\u80fd\u88ab\u8bbe\u8ba1\u4e3a\u8f85\u52a9\u5f00\u53d1\u3001\u8bbe\u8ba1\u3001\u8fd0\u7ef4\uff0c\u7b2c\u4e00\u6b21\u8bbf\u95ee\u7684\u65f6\u5019\u52a0\u8f7d\u5f88\u6162\uff0c\u4e0d\u5efa\u8bae\u5f00\u653e\u7ed9\u6700\u7ec8\u7528\u6237\u5927\u89c4\u6a21\u5e76\u53d1\u8bbf\u95ee\u4f7f\u7528\u3002 \u5982\u679c\u5728\u751f\u4ea7\u73af\u5883\u5e26\u5165 \u8fd9\u4e2a\u529f\u80fd\uff0c\u53ef\u4ee5\u901a\u8fc7\u5fc5\u8981\u7684\u9694\u79bb\u63aa\u65bd\u548c\u8bbf\u95ee\u63a7\u5236\uff0c\u9650\u5236\u6700\u7ec8\u7528\u6237\u5bf9\u4e8e\u8fd9\u4e2a\u63a5\u53e3\u7684\u8bbf\u95ee\u3002 \u53ef\u4ee5\u4f7f\u7528 java-chassis \u63d0\u4f9b\u7684\u7ebf\u7a0b\u6c60\u9694\u79bb\u529f\u80fd\uff0c \u5c06\u8fd9\u4e2a\u670d\u52a1\u653e\u5230\u72ec\u7acb\u7684\u7ebf\u7a0b\u6c60\uff0c\u907f\u514d\u5bf9\u5176\u4ed6\u670d\u52a1\u7684\u8bbf\u95ee\u4ea7\u751f\u5f71\u54cd\u3002\u5177\u4f53\u64cd\u4f5c\u6b65\u9aa4\u5305\u62ec\uff0c \u5b9a\u4e49\u7ebf\u7a0b\u6c60\uff1a bean id= servicecomb.samples.executor.groupThreadPool class= org.apache.servicecomb.core.executor.GroupExecutor init-method= init / \u542f\u7528\u7ebf\u7a0b\u6c60: servicecomb: executors: Provider: inspector: servicecomb.samples.executor.groupThreadPool","title":"\u4fdd\u62a4 inspector \u63a5\u53e3\u7684\u8bbf\u95ee\u63a7\u5236"},{"location":"featured-topics/application-bmi/distributed-tracing/","text":"\u5206\u5e03\u5f0f\u8c03\u7528\u94fe\u8ffd\u8e2a \u5206\u5e03\u5f0f\u8c03\u7528\u94fe\u8ffd\u8e2a\u7528\u4e8e\u6709\u6548\u5730\u76d1\u63a7\u5fae\u670d\u52a1\u7684\u7f51\u7edc\u5ef6\u65f6\u5e76\u53ef\u89c6\u5316\u5fae\u670d\u52a1\u4e2d\u7684\u6570\u636e\u6d41\u8f6c\u3002\u672c\u6307\u5357\u5c06\u5c55\u793a\u5982\u4f55\u5728 \u4f53\u8d28\u6307\u6570 \u5e94\u7528\u4e2d\u4f7f\u7528 ServiceComb \u63d0\u4f9b\u7684\u5206\u5e03\u5f0f\u8c03\u7528\u94fe\u8ffd\u8e2a\u80fd\u529b\u3002 \u524d\u8a00 \u5728\u60a8\u8fdb\u4e00\u6b65\u9605\u8bfb\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u60a8\u5df2\u9605\u8bfb\u4e86 \u4f53\u8d28\u6307\u6570\u5fae\u670d\u52a1\u5e94\u7528\u5f00\u53d1 \uff0c\u5e76\u5df2\u6210\u529f\u8fd0\u884c\u4f53\u8d28\u6307\u6570\u5fae\u670d\u52a1\u3002 \u542f\u7528 \u5728 \u4f53\u8d28\u6307\u6570\u8ba1\u7b97\u5668 \u7684 pom.xml \u6587\u4ef6\u4e2d\u6dfb\u52a0\u4f9d\u8d56\u9879\uff1a dependency groupId org.apache.servicecomb /groupId artifactId handler-tracing-zipkin /artifactId /dependency \u5728 \u4f53\u8d28\u6307\u6570\u8ba1\u7b97\u5668 \u7684 application.yml \u6587\u4ef6\u4e2d\u6dfb\u52a0\u5206\u5e03\u5f0f\u8ffd\u8e2a\u7684\u5904\u7406\u94fe\uff1a servicecomb: handler: chain: Provider: default: tracing-provider \u5728 \u4f53\u8d28\u6307\u6570\u754c\u9762 \u7684 pom.xml \u6587\u4ef6\u4e2d\u6dfb\u52a0\u4f9d\u8d56\u9879\uff1a dependency groupId org.apache.servicecomb /groupId artifactId handler-tracing-zipkin /artifactId /dependency \u4f53\u8d28\u6307\u6570\u5e94\u7528\u4e2d\u5df2\u914d\u7f6e\u597d\u4e86\u4e0a\u8ff0\u914d\u7f6e\u9879\uff0c\u60a8\u53ea\u9700\u6267\u884c\u4ee5\u4e0b\u51e0\u6b65\u5373\u53ef\uff1a \u4f7f\u7528 Docker \u8fd0\u884c Zipkin \u5206\u5e03\u5f0f\u8ffd\u8e2a\u670d\u52a1\uff1a docker run -d -p 9411:9411 openzipkin/zipkin \u91cd\u542f \u4f53\u8d28\u6307\u6570\u8ba1\u7b97\u5668 \u5fae\u670d\u52a1\uff1a mvn spring-boot:run -Dspring-boot.run.jvmArguments= -Dservicecomb.handler.chain.Provider.default=tracing-provider \u91cd\u542f \u4f53\u8d28\u6307\u6570\u754c\u9762 \u5fae\u670d\u52a1\uff1a mvn spring-boot:run -Dspring-boot.run.jvmArguments= -Dservicecomb.handler.chain.Consumer.default=loadbalance,tracing-consumer \u9a8c\u8bc1 \u8bbf\u95ee http://localhost:8889 \uff0c\u5728\u8eab\u9ad8\u548c\u4f53\u91cd\u680f\u5904\u8f93\u5165\u6b63\u6570\uff0c\u5e76\u70b9\u51fb Submit \u6309\u94ae\u3002 \u8bbf\u95ee http://localhost:9411 \uff0c\u67e5\u770b\u5206\u5e03\u5f0f\u8c03\u7528\u8ffd\u8e2a\u60c5\u51b5\uff0c\u53ef\u5f97\u4e0b\u65b9\u754c\u9762\u3002","title":"\u5206\u5e03\u5f0f\u8c03\u7528\u94fe\u8ffd\u8e2a"},{"location":"featured-topics/application-bmi/distributed-tracing/#_1","text":"\u5206\u5e03\u5f0f\u8c03\u7528\u94fe\u8ffd\u8e2a\u7528\u4e8e\u6709\u6548\u5730\u76d1\u63a7\u5fae\u670d\u52a1\u7684\u7f51\u7edc\u5ef6\u65f6\u5e76\u53ef\u89c6\u5316\u5fae\u670d\u52a1\u4e2d\u7684\u6570\u636e\u6d41\u8f6c\u3002\u672c\u6307\u5357\u5c06\u5c55\u793a\u5982\u4f55\u5728 \u4f53\u8d28\u6307\u6570 \u5e94\u7528\u4e2d\u4f7f\u7528 ServiceComb \u63d0\u4f9b\u7684\u5206\u5e03\u5f0f\u8c03\u7528\u94fe\u8ffd\u8e2a\u80fd\u529b\u3002","title":"\u5206\u5e03\u5f0f\u8c03\u7528\u94fe\u8ffd\u8e2a"},{"location":"featured-topics/application-bmi/distributed-tracing/#_2","text":"\u5728\u60a8\u8fdb\u4e00\u6b65\u9605\u8bfb\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u60a8\u5df2\u9605\u8bfb\u4e86 \u4f53\u8d28\u6307\u6570\u5fae\u670d\u52a1\u5e94\u7528\u5f00\u53d1 \uff0c\u5e76\u5df2\u6210\u529f\u8fd0\u884c\u4f53\u8d28\u6307\u6570\u5fae\u670d\u52a1\u3002","title":"\u524d\u8a00"},{"location":"featured-topics/application-bmi/distributed-tracing/#_3","text":"\u5728 \u4f53\u8d28\u6307\u6570\u8ba1\u7b97\u5668 \u7684 pom.xml \u6587\u4ef6\u4e2d\u6dfb\u52a0\u4f9d\u8d56\u9879\uff1a dependency groupId org.apache.servicecomb /groupId artifactId handler-tracing-zipkin /artifactId /dependency \u5728 \u4f53\u8d28\u6307\u6570\u8ba1\u7b97\u5668 \u7684 application.yml \u6587\u4ef6\u4e2d\u6dfb\u52a0\u5206\u5e03\u5f0f\u8ffd\u8e2a\u7684\u5904\u7406\u94fe\uff1a servicecomb: handler: chain: Provider: default: tracing-provider \u5728 \u4f53\u8d28\u6307\u6570\u754c\u9762 \u7684 pom.xml \u6587\u4ef6\u4e2d\u6dfb\u52a0\u4f9d\u8d56\u9879\uff1a dependency groupId org.apache.servicecomb /groupId artifactId handler-tracing-zipkin /artifactId /dependency \u4f53\u8d28\u6307\u6570\u5e94\u7528\u4e2d\u5df2\u914d\u7f6e\u597d\u4e86\u4e0a\u8ff0\u914d\u7f6e\u9879\uff0c\u60a8\u53ea\u9700\u6267\u884c\u4ee5\u4e0b\u51e0\u6b65\u5373\u53ef\uff1a \u4f7f\u7528 Docker \u8fd0\u884c Zipkin \u5206\u5e03\u5f0f\u8ffd\u8e2a\u670d\u52a1\uff1a docker run -d -p 9411:9411 openzipkin/zipkin \u91cd\u542f \u4f53\u8d28\u6307\u6570\u8ba1\u7b97\u5668 \u5fae\u670d\u52a1\uff1a mvn spring-boot:run -Dspring-boot.run.jvmArguments= -Dservicecomb.handler.chain.Provider.default=tracing-provider \u91cd\u542f \u4f53\u8d28\u6307\u6570\u754c\u9762 \u5fae\u670d\u52a1\uff1a mvn spring-boot:run -Dspring-boot.run.jvmArguments= -Dservicecomb.handler.chain.Consumer.default=loadbalance,tracing-consumer","title":"\u542f\u7528"},{"location":"featured-topics/application-bmi/distributed-tracing/#_4","text":"\u8bbf\u95ee http://localhost:8889 \uff0c\u5728\u8eab\u9ad8\u548c\u4f53\u91cd\u680f\u5904\u8f93\u5165\u6b63\u6570\uff0c\u5e76\u70b9\u51fb Submit \u6309\u94ae\u3002 \u8bbf\u95ee http://localhost:9411 \uff0c\u67e5\u770b\u5206\u5e03\u5f0f\u8c03\u7528\u8ffd\u8e2a\u60c5\u51b5\uff0c\u53ef\u5f97\u4e0b\u65b9\u754c\u9762\u3002","title":"\u9a8c\u8bc1"},{"location":"featured-topics/application-bmi/flow-control/","text":"\u6d41\u91cf\u63a7\u5236 \u6d41\u91cf\u63a7\u5236\u673a\u5236\u901a\u8fc7\u63a7\u5236\u6570\u636e\u4f20\u8f93\u901f\u7387\u6765\u907f\u514d\u5fae\u670d\u52a1\u8fc7\u8f7d\u8fd0\u884c\u3002\u672c\u6307\u5357\u5c06\u5c55\u793a\u5982\u4f55\u5728 \u4f53\u8d28\u6307\u6570 \u5e94\u7528\u4e2d\u4f7f\u7528 ServiceComb \u63d0\u4f9b\u7684\u6d41\u91cf\u63a7\u5236\u80fd\u529b\u3002 \u524d\u8a00 \u5728\u60a8\u8fdb\u4e00\u6b65\u9605\u8bfb\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u60a8\u5df2\u9605\u8bfb\u4e86 \u4f53\u8d28\u6307\u6570\u5fae\u670d\u52a1\u5e94\u7528\u5f00\u53d1 \uff0c\u5e76\u5df2\u6210\u529f\u8fd0\u884c\u4f53\u8d28\u6307\u6570\u5fae\u670d\u52a1\u3002 \u5f00\u542f \u5728 \u4f53\u8d28\u6307\u6570\u8ba1\u7b97\u5668 \u7684 pom.xml \u6587\u4ef6\u4e2d\u6dfb\u52a0\u4f9d\u8d56\u9879\uff1a dependency groupId org.apache.servicecomb /groupId artifactId handler-flowcontrol-qps /artifactId /dependency \u5728 \u4f53\u8d28\u6307\u6570\u8ba1\u7b97\u5668 \u7684 application.yml \u6587\u4ef6\u4e2d\u6307\u660e\u4f7f\u7528\u6d41\u91cf\u63a7\u5236\u7684\u5904\u7406\u94fe\u53ca\u6307\u5b9a\u6d41\u63a7\u7b56\u7565\uff1a servicecomb: handler: chain: Provider: default: qps-flowcontrol-provider flowcontrol: Provider: qps: limit: gateway: 1 \u4e5f\u53ef\u4ee5\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u7684\u65b9\u5f0f\u52a8\u6001\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u7684\u503c\uff0c\u6bd4\u5982\u91c7\u7528\u4ee5\u4e0b\u6307\u4ee4\u91cd\u65b0\u8fd0\u884c\u5373\u53ef\uff1a mvn spring-boot:run -Dspring-boot.run.jvmArguments= -Dservicecomb.handler.chain.Provider.default=qps-flowcontrol-provider -Dservicecomb.flowcontrol.Provider.qps.limit.gateway=1 \u9a8c\u8bc1 \u8bbf\u95ee http://localhost:8889 \uff0c\u5728\u8eab\u9ad8\u548c\u4f53\u91cd\u7684\u8f93\u5165\u6846\u4e2d\u8f93\u5165\u6b63\u6570\uff0c\u5c1d\u8bd5\u57281\u79d2\u5185\u591a\u6b21\u70b9\u51fb Submit \u6309\u94ae\uff0c\u6b64\u65f6\u5c31\u80fd\u770b\u5230\u7f51\u9875\u7531\u5de6\u4fa7\u7684\u6b63\u5e38\u7684\u754c\u9762\u53d8\u6210\u4e86\u53f3\u4fa7\u63d0\u793a\u7531\u4e8e\u6d41\u63a7\u53d7\u9650\u800c\u8bf7\u6c42\u88ab\u62d2\u7684\u754c\u9762\u3002","title":"\u6d41\u91cf\u63a7\u5236"},{"location":"featured-topics/application-bmi/flow-control/#_1","text":"\u6d41\u91cf\u63a7\u5236\u673a\u5236\u901a\u8fc7\u63a7\u5236\u6570\u636e\u4f20\u8f93\u901f\u7387\u6765\u907f\u514d\u5fae\u670d\u52a1\u8fc7\u8f7d\u8fd0\u884c\u3002\u672c\u6307\u5357\u5c06\u5c55\u793a\u5982\u4f55\u5728 \u4f53\u8d28\u6307\u6570 \u5e94\u7528\u4e2d\u4f7f\u7528 ServiceComb \u63d0\u4f9b\u7684\u6d41\u91cf\u63a7\u5236\u80fd\u529b\u3002","title":"\u6d41\u91cf\u63a7\u5236"},{"location":"featured-topics/application-bmi/flow-control/#_2","text":"\u5728\u60a8\u8fdb\u4e00\u6b65\u9605\u8bfb\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u60a8\u5df2\u9605\u8bfb\u4e86 \u4f53\u8d28\u6307\u6570\u5fae\u670d\u52a1\u5e94\u7528\u5f00\u53d1 \uff0c\u5e76\u5df2\u6210\u529f\u8fd0\u884c\u4f53\u8d28\u6307\u6570\u5fae\u670d\u52a1\u3002","title":"\u524d\u8a00"},{"location":"featured-topics/application-bmi/flow-control/#_3","text":"\u5728 \u4f53\u8d28\u6307\u6570\u8ba1\u7b97\u5668 \u7684 pom.xml \u6587\u4ef6\u4e2d\u6dfb\u52a0\u4f9d\u8d56\u9879\uff1a dependency groupId org.apache.servicecomb /groupId artifactId handler-flowcontrol-qps /artifactId /dependency \u5728 \u4f53\u8d28\u6307\u6570\u8ba1\u7b97\u5668 \u7684 application.yml \u6587\u4ef6\u4e2d\u6307\u660e\u4f7f\u7528\u6d41\u91cf\u63a7\u5236\u7684\u5904\u7406\u94fe\u53ca\u6307\u5b9a\u6d41\u63a7\u7b56\u7565\uff1a servicecomb: handler: chain: Provider: default: qps-flowcontrol-provider flowcontrol: Provider: qps: limit: gateway: 1 \u4e5f\u53ef\u4ee5\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u7684\u65b9\u5f0f\u52a8\u6001\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u7684\u503c\uff0c\u6bd4\u5982\u91c7\u7528\u4ee5\u4e0b\u6307\u4ee4\u91cd\u65b0\u8fd0\u884c\u5373\u53ef\uff1a mvn spring-boot:run -Dspring-boot.run.jvmArguments= -Dservicecomb.handler.chain.Provider.default=qps-flowcontrol-provider -Dservicecomb.flowcontrol.Provider.qps.limit.gateway=1","title":"\u5f00\u542f"},{"location":"featured-topics/application-bmi/flow-control/#_4","text":"\u8bbf\u95ee http://localhost:8889 \uff0c\u5728\u8eab\u9ad8\u548c\u4f53\u91cd\u7684\u8f93\u5165\u6846\u4e2d\u8f93\u5165\u6b63\u6570\uff0c\u5c1d\u8bd5\u57281\u79d2\u5185\u591a\u6b21\u70b9\u51fb Submit \u6309\u94ae\uff0c\u6b64\u65f6\u5c31\u80fd\u770b\u5230\u7f51\u9875\u7531\u5de6\u4fa7\u7684\u6b63\u5e38\u7684\u754c\u9762\u53d8\u6210\u4e86\u53f3\u4fa7\u63d0\u793a\u7531\u4e8e\u6d41\u63a7\u53d7\u9650\u800c\u8bf7\u6c42\u88ab\u62d2\u7684\u754c\u9762\u3002","title":"\u9a8c\u8bc1"},{"location":"featured-topics/application-bmi/load-balance/","text":"\u8d1f\u8f7d\u5747\u8861 \u5f53\u5bf9\u4f53\u8d28\u6307\u6570\u8ba1\u7b97\u5668\u8fdb\u884c\u6c34\u5e73\u6269\u5c55\u65f6\uff0c\u9700\u8981\u5c06\u8bf7\u6c42\u5747\u8861\u5730\u5206\u53d1\u5230\u591a\u4e2a\u4f53\u8d28\u6307\u6570\u8ba1\u7b97\u5668\u4e0a\u3002\u672c\u6307\u5357\u5c06\u5c55\u793a\u5982\u4f55\u5728 \u4f53\u8d28\u6307\u6570 \u5e94\u7528\u4e2d\u4f7f\u7528 ServiceComb \u63d0\u4f9b\u7684\u8d1f\u8f7d\u5747\u8861\u80fd\u529b\u3002 \u524d\u8a00 \u5728\u60a8\u8fdb\u4e00\u6b65\u9605\u8bfb\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u60a8\u5df2\u9605\u8bfb\u4e86 \u4f53\u8d28\u6307\u6570\u5fae\u670d\u52a1\u5e94\u7528\u5f00\u53d1 \uff0c\u5e76\u5df2\u6210\u529f\u8fd0\u884c\u4f53\u8d28\u6307\u6570\u5fae\u670d\u52a1\u3002 \u5f00\u542f \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f1a\u4f7f\u7528\u5185\u7f6e\u7684\u4e00\u4e2a\u7b80\u5355\u7684\u8d1f\u8f7d\u5747\u8861\u7684\u5b9e\u73b0\uff0c\u4e0d\u9700\u8981\u989d\u5916\u7684\u914d\u7f6e\u3002 \u9a8c\u8bc1 \u5bf9 \u4f53\u8d28\u6307\u6570\u8ba1\u7b97\u5668 \u5fae\u670d\u52a1\u8fdb\u884c\u6c34\u5e73\u6269\u5c55\uff0c\u4f7f\u5176\u8fd0\u884c\u5b9e\u4f8b\u6570\u4e3a2\uff0c\u5373\u65b0\u589e\u4e00\u4e2a\u8fd0\u884c\u5b9e\u4f8b\uff1a mvn spring-boot:run -Dspring-boot.run.jvmArguments= -Dserver.port=7779 -Dservicecomb.rest.address=0.0.0.0:7779 \u4e3a\u4e86\u4fbf\u4e8e\u533a\u5206\u4e0d\u540c\u7684\u8fd0\u884c\u5b9e\u4f8b\uff0c\u5728\u4f53\u8d28\u6307\u6570\u8ba1\u7b97\u5668\u7684\u5b9e\u73b0\u4e2d\u65b0\u589e\u4e86\u8fd4\u56de\u5b9e\u4f8bID\u548c\u8fd0\u884c\u65f6\u95f4\u7684\u63a5\u53e3\uff0c\u8be6\u60c5\u53ef\u67e5\u770b \u4f53\u8d28\u6307\u6570\u8ba1\u7b97\u5668\u7684\u5b8c\u6574\u5b9e\u73b0\u4ee3\u7801 \u3002\u800c\u4e3a\u4e86\u907f\u514d\u7aef\u53e3\u51b2\u7a81\uff0c\u65b0\u7684\u5b9e\u4f8b\u5728\u53e6\u4e00\u4e2a\u7aef\u53e3\u4e0a\u8fd0\u884c\u3002 \u6b64\u65f6\u70b9\u51fb Submit \u6309\u94ae\u5c31\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u4e24\u4e2a\u754c\u9762\u4e2d\u7684\u5b9e\u4f8bID\u4ea4\u66ff\u51fa\u73b0\u3002","title":"\u8d1f\u8f7d\u5747\u8861"},{"location":"featured-topics/application-bmi/load-balance/#_1","text":"\u5f53\u5bf9\u4f53\u8d28\u6307\u6570\u8ba1\u7b97\u5668\u8fdb\u884c\u6c34\u5e73\u6269\u5c55\u65f6\uff0c\u9700\u8981\u5c06\u8bf7\u6c42\u5747\u8861\u5730\u5206\u53d1\u5230\u591a\u4e2a\u4f53\u8d28\u6307\u6570\u8ba1\u7b97\u5668\u4e0a\u3002\u672c\u6307\u5357\u5c06\u5c55\u793a\u5982\u4f55\u5728 \u4f53\u8d28\u6307\u6570 \u5e94\u7528\u4e2d\u4f7f\u7528 ServiceComb \u63d0\u4f9b\u7684\u8d1f\u8f7d\u5747\u8861\u80fd\u529b\u3002","title":"\u8d1f\u8f7d\u5747\u8861"},{"location":"featured-topics/application-bmi/load-balance/#_2","text":"\u5728\u60a8\u8fdb\u4e00\u6b65\u9605\u8bfb\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u60a8\u5df2\u9605\u8bfb\u4e86 \u4f53\u8d28\u6307\u6570\u5fae\u670d\u52a1\u5e94\u7528\u5f00\u53d1 \uff0c\u5e76\u5df2\u6210\u529f\u8fd0\u884c\u4f53\u8d28\u6307\u6570\u5fae\u670d\u52a1\u3002","title":"\u524d\u8a00"},{"location":"featured-topics/application-bmi/load-balance/#_3","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f1a\u4f7f\u7528\u5185\u7f6e\u7684\u4e00\u4e2a\u7b80\u5355\u7684\u8d1f\u8f7d\u5747\u8861\u7684\u5b9e\u73b0\uff0c\u4e0d\u9700\u8981\u989d\u5916\u7684\u914d\u7f6e\u3002","title":"\u5f00\u542f"},{"location":"featured-topics/application-bmi/load-balance/#_4","text":"\u5bf9 \u4f53\u8d28\u6307\u6570\u8ba1\u7b97\u5668 \u5fae\u670d\u52a1\u8fdb\u884c\u6c34\u5e73\u6269\u5c55\uff0c\u4f7f\u5176\u8fd0\u884c\u5b9e\u4f8b\u6570\u4e3a2\uff0c\u5373\u65b0\u589e\u4e00\u4e2a\u8fd0\u884c\u5b9e\u4f8b\uff1a mvn spring-boot:run -Dspring-boot.run.jvmArguments= -Dserver.port=7779 -Dservicecomb.rest.address=0.0.0.0:7779 \u4e3a\u4e86\u4fbf\u4e8e\u533a\u5206\u4e0d\u540c\u7684\u8fd0\u884c\u5b9e\u4f8b\uff0c\u5728\u4f53\u8d28\u6307\u6570\u8ba1\u7b97\u5668\u7684\u5b9e\u73b0\u4e2d\u65b0\u589e\u4e86\u8fd4\u56de\u5b9e\u4f8bID\u548c\u8fd0\u884c\u65f6\u95f4\u7684\u63a5\u53e3\uff0c\u8be6\u60c5\u53ef\u67e5\u770b \u4f53\u8d28\u6307\u6570\u8ba1\u7b97\u5668\u7684\u5b8c\u6574\u5b9e\u73b0\u4ee3\u7801 \u3002\u800c\u4e3a\u4e86\u907f\u514d\u7aef\u53e3\u51b2\u7a81\uff0c\u65b0\u7684\u5b9e\u4f8b\u5728\u53e6\u4e00\u4e2a\u7aef\u53e3\u4e0a\u8fd0\u884c\u3002 \u6b64\u65f6\u70b9\u51fb Submit \u6309\u94ae\u5c31\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u4e24\u4e2a\u754c\u9762\u4e2d\u7684\u5b9e\u4f8bID\u4ea4\u66ff\u51fa\u73b0\u3002","title":"\u9a8c\u8bc1"},{"location":"featured-topics/application-bmi/quick-start-advance/","text":"\u5fae\u670d\u52a1\u5f00\u53d1\u8fdb\u9636 \u672c\u6307\u5357\u5c06\u5e26\u60a8\u8fdb\u5165 \u4f53\u8d28\u6307\u6570 \u5fae\u670d\u52a1\u5e94\u7528\u5f00\u53d1\u7684\u8fdb\u9636\u4e4b\u65c5\u3002\u5728\u6b64\u65c5\u7a0b\uff0c\u60a8\u5c06\u80fd\u5b66\u5230 ServiceComb \u6846\u67b6\u5982\u4f55\u901a\u8fc7\u5904\u7406\u94fe\u4fdd\u8bc1\u5fae\u670d\u52a1\u7684\u53ef\u9760\u6027\uff1a \u8d1f\u8f7d\u5747\u8861 \u3002\u5747\u8861\u5730\u5c06\u8bf7\u6c42\u5206\u53d1\u81f3\u591a\u4e2a\u670d\u52a1\u5b9e\u4f8b\u4e2d\u5904\u7406\u3002 \u6d41\u91cf\u63a7\u5236 \u3002\u9650\u5236\u5355\u4f4d\u65f6\u95f4\u5185\u8bbf\u95ee\u67d0\u4e2a\u5fae\u670d\u52a1\u7684\u8bf7\u6c42\u6570\u91cf\u3002 \u670d\u52a1\u6cbb\u7406 \u3002\u5728\u5fae\u670d\u52a1\u5e94\u7528\u4e2d\u9694\u79bb\u5f02\u5e38\u670d\u52a1\u5e76\u963b\u6b62\u5f02\u5e38\u4f20\u9012\u3002 \u5206\u5e03\u5f0f\u8ffd\u8e2a \u3002\u53ef\u89c6\u5316\u5fae\u670d\u52a1\u95f4\u7684\u6570\u636e\u6d41\u8f6c\u3002","title":"\u5fae\u670d\u52a1\u5f00\u53d1\u8fdb\u9636"},{"location":"featured-topics/application-bmi/quick-start-advance/#_1","text":"\u672c\u6307\u5357\u5c06\u5e26\u60a8\u8fdb\u5165 \u4f53\u8d28\u6307\u6570 \u5fae\u670d\u52a1\u5e94\u7528\u5f00\u53d1\u7684\u8fdb\u9636\u4e4b\u65c5\u3002\u5728\u6b64\u65c5\u7a0b\uff0c\u60a8\u5c06\u80fd\u5b66\u5230 ServiceComb \u6846\u67b6\u5982\u4f55\u901a\u8fc7\u5904\u7406\u94fe\u4fdd\u8bc1\u5fae\u670d\u52a1\u7684\u53ef\u9760\u6027\uff1a \u8d1f\u8f7d\u5747\u8861 \u3002\u5747\u8861\u5730\u5c06\u8bf7\u6c42\u5206\u53d1\u81f3\u591a\u4e2a\u670d\u52a1\u5b9e\u4f8b\u4e2d\u5904\u7406\u3002 \u6d41\u91cf\u63a7\u5236 \u3002\u9650\u5236\u5355\u4f4d\u65f6\u95f4\u5185\u8bbf\u95ee\u67d0\u4e2a\u5fae\u670d\u52a1\u7684\u8bf7\u6c42\u6570\u91cf\u3002 \u670d\u52a1\u6cbb\u7406 \u3002\u5728\u5fae\u670d\u52a1\u5e94\u7528\u4e2d\u9694\u79bb\u5f02\u5e38\u670d\u52a1\u5e76\u963b\u6b62\u5f02\u5e38\u4f20\u9012\u3002 \u5206\u5e03\u5f0f\u8ffd\u8e2a \u3002\u53ef\u89c6\u5316\u5fae\u670d\u52a1\u95f4\u7684\u6570\u636e\u6d41\u8f6c\u3002","title":"\u5fae\u670d\u52a1\u5f00\u53d1\u8fdb\u9636"},{"location":"featured-topics/application-bmi/quick-start-bmi/","text":"\u4f53\u8d28\u6307\u6570\u5fae\u670d\u52a1\u5e94\u7528\u5f00\u53d1 \u5728\u60a8\u8fdb\u4e00\u6b65\u9605\u8bfb\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u60a8\u5df2\u9605\u8bfb\u4e86 \u5feb\u901f\u5165\u95e8 \uff0c\u5e76\u5df2\u6210\u529f\u8fd0\u884c \u4f53\u8d28\u6307\u6570 \u5fae\u670d\u52a1\u3002\u63a5\u4e0b\u6765\u5c06\u8fdb\u5165 \u4f53\u8d28\u6307\u6570 \u5fae\u670d\u52a1\u5e94\u7528\u7684\u5f00\u53d1\u4e4b\u65c5\u3002 \u5feb\u901f\u5f00\u53d1\u5fae\u670d\u52a1\u5e94\u7528 BMI\u4e3b\u8981\u7531\u4e24\u4e2a\u5fae\u670d\u52a1\u7ec4\u6210\uff1a \u4f53\u8d28\u6307\u6570\u8ba1\u7b97\u5668 \uff1a\u8d1f\u8d23\u5904\u7406\u8fd0\u7b97\u4e8b\u52a1\u3002 \u4f53\u8d28\u6307\u6570\u754c\u9762 \uff1a\u63d0\u4f9b\u7528\u6237\u754c\u9762\u53ca\u7f51\u5173\u670d\u52a1\u3002 \u5728\u5f00\u59cb\u524d\uff0c\u9700\u8981\u5148\u5728\u670d\u52a1\u7684\u7236\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u4f9d\u8d56\u9879\uff1a dependencyManagement dependencies dependency groupId org.apache.servicecomb /groupId artifactId java-chassis-dependencies /artifactId version ${project.version} /version type pom /type scope import /scope /dependency /dependencies /dependencyManagement \u6ce8\u610f : java-chassis-dependencies \u8fd9\u4e2a\u4f9d\u8d56\u662f\u4ee5pom\u7684\u5f62\u5f0f\u5bfc\u5165\u6765\u7edf\u4e00\u9879\u76ee\u4e2d\u7684\u4f9d\u8d56\u9879\u7684\u7248\u672c\u7ba1\u7406\u3002 \u4e0b\u9762\u5c06\u5bf9\u8fd9\u4e24\u4e2a\u5fae\u670d\u52a1\u7684\u5b9e\u73b0\u8fdb\u884c\u4ecb\u7ecd\uff0c\u5176\u4ee3\u7801\u5df2\u6258\u7ba1\u4e8e github \u4e0a\u3002 \u4f53\u8d28\u6307\u6570\u8ba1\u7b97\u5668\u5b9e\u73b0 \u4f53\u8d28\u6307\u6570\u8ba1\u7b97\u5668\u63d0\u4f9b\u8fd0\u7b97\u670d\u52a1\uff0c\u5176\u5b9e\u73b0\u5206\u4e3a\u4e09\u90e8\u5206\uff1a \u5177\u4f53\u8fd0\u7b97\u5b9e\u73b0 \u670d\u52a1\u7aef\u70b9\u5b9a\u4e49 \u670d\u52a1\u542f\u52a8\u5165\u53e3 \u5177\u4f53\u8fd0\u7b97\u5b9e\u73b0 \u672c\u6a21\u5757\u8d1f\u8d23\u8ba1\u7b97\u4f53\u8d28\u6307\u6570\uff0c\u6839\u636e\u516c\u5f0f \u4f53\u8d28\u6307\u6570=\u4f53\u91cd / \u8eab\u9ad8^2 \u8fdb\u884c\u5b9e\u73b0\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a public interface CalculatorService { double calculate(double height, double weight); } @Service public class CalculatorServiceImpl implements CalculatorService { @Override public double calculate(double height, double weight) { if (height = 0 || weight = 0) { throw new IllegalArgumentException( Arguments must be above 0 ); } double heightInMeter = height / 100; return weight / (heightInMeter * heightInMeter); } } \u670d\u52a1\u7aef\u70b9\u5b9a\u4e49 \u670d\u52a1\u7aef\u70b9\u7528\u4e8e\u751f\u6210\u670d\u52a1\u5951\u7ea6\uff0c\u4f7f\u5f97\u670d\u52a1\u95f4\u80fd\u65e0\u7f1d\u8fdb\u884c\u901a\u4fe1\u3002\u9996\u5148\u5b9a\u4e49\u7aef\u70b9\u63a5\u53e3\uff1a public interface CalculatorEndpoint { double calculate(double height, double weight); } \u5f15\u5165 ServiceComb \u4f9d\u8d56\uff1a dependency groupId org.apache.servicecomb /groupId artifactId java-chassis-spring-boot-starter-servlet /artifactId /dependency \u66b4\u9732\u8fd0\u7b97\u670d\u52a1\u7684Restful\u7aef\u70b9\uff1a @RestSchema(schemaId = calculatorRestEndpoint ) @RequestMapping( / ) public class CalculatorRestEndpoint implements CalculatorEndpoint { private final CalculatorService calculatorService; @Autowired public CalculatorRestEndpoint(CalculatorService calculatorService) { this.calculatorService = calculatorService; } @Override @GetMapping( /bmi ) public double calculate(double height, double weight) { return calculatorService.calculate(height, weight); } } \u8fd9\u91cc\u7528 @RestSchema \u6ce8\u91ca\u7aef\u70b9\u540e\uff0c ServiceComb \u5fae\u670d\u52a1\u6846\u67b6\u4f1a\u81ea\u52a8\u751f\u6210\u5bf9\u5e94\u7684\u670d\u52a1\u7aef\u70b9\u5951\u7ea6\uff0c\u5e76\u6839\u636e \u5982\u4e0b\u7684 application.yml \u6587\u4ef6\u4e2d\u7684\u5b9a\u4e49\u6765\u914d\u7f6e\u7aef\u70b9\u7aef\u53e3\uff0c\u5c06\u5951\u7ea6\u548c\u670d\u52a1\u4e00\u8d77\u6ce8\u518c\u5230\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\u3002 APPLICATION_ID: bmi service_description: name: calculator version: 0.0.1 servicecomb: service: registry: address: http://127.0.0.1:30100 rest: address: 0.0.0.0:7777 \u6ce8\u610f : ServiceComb \u9ed8\u8ba4\u7684\u914d\u7f6e\u6587\u4ef6\u540d\u79f0\u662f microservice.yaml \u3002 \u672c\u5e94\u7528\u91c7\u7528 spring boot\u4f5c\u4e3a\u8fd0\u884c\u73af\u5883\uff0c\u56e0\u6b64\u9075\u5faa spring boot\u7684\u89c4\u8303\uff0c\u914d\u7f6e\u6587\u4ef6\u540d\u79f0\u4f7f\u7528 application.yml \u3002 \u670d\u52a1\u542f\u52a8\u5165\u53e3 \u670d\u52a1\u542f\u52a8\u5165\u53e3\u4e2d\u53ea\u9700\u6dfb\u52a0 @EnableServiceComb \u7684\u6ce8\u89e3\u5373\u53ef\u542f\u7528 ServiceComb \u5fae\u670d\u52a1\u6846\u67b6\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a @SpringBootApplication @EnableServiceComb public class CalculatorApplication { public static void main(String[] args) { SpringApplication.run(CalculatorApplication.class, args); } } \u4f53\u8d28\u6307\u6570\u754c\u9762\u5b9e\u73b0 \u672c\u6a21\u5757\u8d1f\u8d23\u63d0\u4f9b\u7528\u6237\u754c\u9762\u53ca\u7f51\u5173\u670d\u52a1\u3002\u5176\u5b9e\u73b0\u4e3b\u8981\u5206\u4e3a\u4e09\u90e8\u5206\uff1a \u524d\u7aef\u754c\u9762 \u7f51\u5173\u53ca\u8def\u7531\u89c4\u5219 \u670d\u52a1\u542f\u52a8\u5165\u53e3 \u5176\u4e2d\uff0c\u524d\u7aef\u754c\u9762\u7684\u7ec4\u4ef6\u4f7f\u7528\u4e86 Bootstrap \u6765\u5f00\u53d1\u3002 \u7f51\u5173\u53ca\u8def\u7531\u89c4\u5219 \u7f51\u5173\u670d\u52a1\u4f7f\u7528 ServiceComb \u63d0\u4f9b\u7684 Edge Service \u6765\u5b9e\u73b0\u3002 \u5f15\u5165\u4f9d\u8d56\uff1a dependency groupId org.apache.servicecomb /groupId artifactId java-chassis-spring-boot-starter-standalone /artifactId /dependency dependency groupId org.apache.servicecomb /groupId artifactId edge-core /artifactId /dependency \u5728 application.yml \u6587\u4ef6\u4e2d\u914d\u7f6e\u8def\u7531\u89c4\u5219\u53ca\u670d\u52a1\u7aef\u53e3\u4fe1\u606f\uff1a ervicecomb: service: registry: address: http://127.0.0.1:30100 rest: address: 0.0.0.0:8889 tracing: enabled: false http: dispatcher: edge: default: enabled: false prefix: api withVersion: false prefixSegmentCount: 1 url: enabled: true mappings: calculator: prefixSegmentCount: 1 path: /calculator/.* microserviceName: calculator versionRule: 0.0.0+ # This is web root for windows server, change this path according to where you put your source code gateway: webroot: /code/servicecomb-samples/java-chassis-samples/bmi/webapp/src/main/resources/static \u5176\u4e2d servicecomb.http.dispatcher.edge.default.enabled \u7981\u7528\u4e86\u9ed8\u8ba4\u7684\u8def\u7531\u89c4\u5219\uff0c servicecomb.http.dispatcher.edge.url.enabled \u542f\u7528\u4e86\u57fa\u4e8eURL\u6620\u5c04\u7684\u8def\u7531\u89c4\u5219\u3002 \u89c4\u5219\u7684\u542b\u4e49\u8868\u793a\u5c06URL\u4e3a /calculator/.* \u7684\u8bf7\u6c42\u8f6c\u53d1\u5230 calculator \u670d\u52a1\u3002 gateway.webroot \u914d\u7f6e\u4e86\u9759\u6001\u9875\u9762\u6240\u5728\u7684\u76ee\u5f55\u4f4d\u7f6e\u3002 \u793a\u4f8b\u91cc\u9762\u91c7\u7528\u7684\u662f Windows \u76ee\u5f55\u73af\u5883\uff0c\u5982\u679c\u91c7\u7528 Linux \u73af\u5883\uff0c\u9700\u8981\u914d\u7f6e\u76f8\u5bf9\u8def\u5f84\u3002 StaticWebpageDispatcher \u6269\u5c55\u4e86 Edge Service \u7684\u8f6c\u53d1\u89c4\u5219\uff0c \u4f7f\u7528\u4e86 vert.x \u63d0\u4f9b\u7684 StaticHandler \u53d1\u5e03\u9759\u6001\u9875\u9762\u3002 Edge Service \u91c7\u7528 SPI \u7684\u65b9\u5f0f\u6269\u5c55 Dispatcher\uff0c \u9700\u8981\u521b\u5efa\u6587\u4ef6 org.apache.servicecomb.transport.rest.vertx.VertxHttpDispatcher \u3002 \u670d\u52a1\u542f\u52a8\u5165\u53e3 \u670d\u52a1\u542f\u52a8\u5165\u53e3\u4e5f\u53ea\u9700\u8981\u58f0\u660e\u542f\u7528 ServiceComb \u5373\u53ef\u3002 @SpringBootApplication @EnableServiceComb public class GatewayApplication { public static void main(String[] args) { new SpringApplicationBuilder().web(WebApplicationType.NONE).sources(GatewayApplication.class).run(args); } } \u81f3\u6b64\uff0c \u4f53\u8d28\u6307\u6570 \u5e94\u7528\u5df2\u5f00\u53d1\u5b8c\u6bd5\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7 \u5feb\u901f\u5165\u95e8 \u4e2d\u7684\u6b65\u9aa4\u5bf9\u5176\u8fdb\u884c\u9a8c\u8bc1\u3002 \u4e0b\u4e00\u6b65 \u9605\u8bfb \u5fae\u670d\u52a1\u5f00\u53d1\u8fdb\u9636","title":"\u4f53\u8d28\u6307\u6570\u5fae\u670d\u52a1\u5e94\u7528\u5f00\u53d1"},{"location":"featured-topics/application-bmi/quick-start-bmi/#_1","text":"\u5728\u60a8\u8fdb\u4e00\u6b65\u9605\u8bfb\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u60a8\u5df2\u9605\u8bfb\u4e86 \u5feb\u901f\u5165\u95e8 \uff0c\u5e76\u5df2\u6210\u529f\u8fd0\u884c \u4f53\u8d28\u6307\u6570 \u5fae\u670d\u52a1\u3002\u63a5\u4e0b\u6765\u5c06\u8fdb\u5165 \u4f53\u8d28\u6307\u6570 \u5fae\u670d\u52a1\u5e94\u7528\u7684\u5f00\u53d1\u4e4b\u65c5\u3002","title":"\u4f53\u8d28\u6307\u6570\u5fae\u670d\u52a1\u5e94\u7528\u5f00\u53d1"},{"location":"featured-topics/application-bmi/quick-start-bmi/#_2","text":"BMI\u4e3b\u8981\u7531\u4e24\u4e2a\u5fae\u670d\u52a1\u7ec4\u6210\uff1a \u4f53\u8d28\u6307\u6570\u8ba1\u7b97\u5668 \uff1a\u8d1f\u8d23\u5904\u7406\u8fd0\u7b97\u4e8b\u52a1\u3002 \u4f53\u8d28\u6307\u6570\u754c\u9762 \uff1a\u63d0\u4f9b\u7528\u6237\u754c\u9762\u53ca\u7f51\u5173\u670d\u52a1\u3002 \u5728\u5f00\u59cb\u524d\uff0c\u9700\u8981\u5148\u5728\u670d\u52a1\u7684\u7236\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u4f9d\u8d56\u9879\uff1a dependencyManagement dependencies dependency groupId org.apache.servicecomb /groupId artifactId java-chassis-dependencies /artifactId version ${project.version} /version type pom /type scope import /scope /dependency /dependencies /dependencyManagement \u6ce8\u610f : java-chassis-dependencies \u8fd9\u4e2a\u4f9d\u8d56\u662f\u4ee5pom\u7684\u5f62\u5f0f\u5bfc\u5165\u6765\u7edf\u4e00\u9879\u76ee\u4e2d\u7684\u4f9d\u8d56\u9879\u7684\u7248\u672c\u7ba1\u7406\u3002 \u4e0b\u9762\u5c06\u5bf9\u8fd9\u4e24\u4e2a\u5fae\u670d\u52a1\u7684\u5b9e\u73b0\u8fdb\u884c\u4ecb\u7ecd\uff0c\u5176\u4ee3\u7801\u5df2\u6258\u7ba1\u4e8e github \u4e0a\u3002","title":"\u5feb\u901f\u5f00\u53d1\u5fae\u670d\u52a1\u5e94\u7528"},{"location":"featured-topics/application-bmi/quick-start-bmi/#_3","text":"\u4f53\u8d28\u6307\u6570\u8ba1\u7b97\u5668\u63d0\u4f9b\u8fd0\u7b97\u670d\u52a1\uff0c\u5176\u5b9e\u73b0\u5206\u4e3a\u4e09\u90e8\u5206\uff1a \u5177\u4f53\u8fd0\u7b97\u5b9e\u73b0 \u670d\u52a1\u7aef\u70b9\u5b9a\u4e49 \u670d\u52a1\u542f\u52a8\u5165\u53e3","title":"\u4f53\u8d28\u6307\u6570\u8ba1\u7b97\u5668\u5b9e\u73b0"},{"location":"featured-topics/application-bmi/quick-start-bmi/#_4","text":"\u672c\u6a21\u5757\u8d1f\u8d23\u8ba1\u7b97\u4f53\u8d28\u6307\u6570\uff0c\u6839\u636e\u516c\u5f0f \u4f53\u8d28\u6307\u6570=\u4f53\u91cd / \u8eab\u9ad8^2 \u8fdb\u884c\u5b9e\u73b0\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a public interface CalculatorService { double calculate(double height, double weight); } @Service public class CalculatorServiceImpl implements CalculatorService { @Override public double calculate(double height, double weight) { if (height = 0 || weight = 0) { throw new IllegalArgumentException( Arguments must be above 0 ); } double heightInMeter = height / 100; return weight / (heightInMeter * heightInMeter); } }","title":"\u5177\u4f53\u8fd0\u7b97\u5b9e\u73b0"},{"location":"featured-topics/application-bmi/quick-start-bmi/#_5","text":"\u670d\u52a1\u7aef\u70b9\u7528\u4e8e\u751f\u6210\u670d\u52a1\u5951\u7ea6\uff0c\u4f7f\u5f97\u670d\u52a1\u95f4\u80fd\u65e0\u7f1d\u8fdb\u884c\u901a\u4fe1\u3002\u9996\u5148\u5b9a\u4e49\u7aef\u70b9\u63a5\u53e3\uff1a public interface CalculatorEndpoint { double calculate(double height, double weight); } \u5f15\u5165 ServiceComb \u4f9d\u8d56\uff1a dependency groupId org.apache.servicecomb /groupId artifactId java-chassis-spring-boot-starter-servlet /artifactId /dependency \u66b4\u9732\u8fd0\u7b97\u670d\u52a1\u7684Restful\u7aef\u70b9\uff1a @RestSchema(schemaId = calculatorRestEndpoint ) @RequestMapping( / ) public class CalculatorRestEndpoint implements CalculatorEndpoint { private final CalculatorService calculatorService; @Autowired public CalculatorRestEndpoint(CalculatorService calculatorService) { this.calculatorService = calculatorService; } @Override @GetMapping( /bmi ) public double calculate(double height, double weight) { return calculatorService.calculate(height, weight); } } \u8fd9\u91cc\u7528 @RestSchema \u6ce8\u91ca\u7aef\u70b9\u540e\uff0c ServiceComb \u5fae\u670d\u52a1\u6846\u67b6\u4f1a\u81ea\u52a8\u751f\u6210\u5bf9\u5e94\u7684\u670d\u52a1\u7aef\u70b9\u5951\u7ea6\uff0c\u5e76\u6839\u636e \u5982\u4e0b\u7684 application.yml \u6587\u4ef6\u4e2d\u7684\u5b9a\u4e49\u6765\u914d\u7f6e\u7aef\u70b9\u7aef\u53e3\uff0c\u5c06\u5951\u7ea6\u548c\u670d\u52a1\u4e00\u8d77\u6ce8\u518c\u5230\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\u3002 APPLICATION_ID: bmi service_description: name: calculator version: 0.0.1 servicecomb: service: registry: address: http://127.0.0.1:30100 rest: address: 0.0.0.0:7777 \u6ce8\u610f : ServiceComb \u9ed8\u8ba4\u7684\u914d\u7f6e\u6587\u4ef6\u540d\u79f0\u662f microservice.yaml \u3002 \u672c\u5e94\u7528\u91c7\u7528 spring boot\u4f5c\u4e3a\u8fd0\u884c\u73af\u5883\uff0c\u56e0\u6b64\u9075\u5faa spring boot\u7684\u89c4\u8303\uff0c\u914d\u7f6e\u6587\u4ef6\u540d\u79f0\u4f7f\u7528 application.yml \u3002","title":"\u670d\u52a1\u7aef\u70b9\u5b9a\u4e49"},{"location":"featured-topics/application-bmi/quick-start-bmi/#_6","text":"\u670d\u52a1\u542f\u52a8\u5165\u53e3\u4e2d\u53ea\u9700\u6dfb\u52a0 @EnableServiceComb \u7684\u6ce8\u89e3\u5373\u53ef\u542f\u7528 ServiceComb \u5fae\u670d\u52a1\u6846\u67b6\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a @SpringBootApplication @EnableServiceComb public class CalculatorApplication { public static void main(String[] args) { SpringApplication.run(CalculatorApplication.class, args); } }","title":"\u670d\u52a1\u542f\u52a8\u5165\u53e3"},{"location":"featured-topics/application-bmi/quick-start-bmi/#_7","text":"\u672c\u6a21\u5757\u8d1f\u8d23\u63d0\u4f9b\u7528\u6237\u754c\u9762\u53ca\u7f51\u5173\u670d\u52a1\u3002\u5176\u5b9e\u73b0\u4e3b\u8981\u5206\u4e3a\u4e09\u90e8\u5206\uff1a \u524d\u7aef\u754c\u9762 \u7f51\u5173\u53ca\u8def\u7531\u89c4\u5219 \u670d\u52a1\u542f\u52a8\u5165\u53e3 \u5176\u4e2d\uff0c\u524d\u7aef\u754c\u9762\u7684\u7ec4\u4ef6\u4f7f\u7528\u4e86 Bootstrap \u6765\u5f00\u53d1\u3002","title":"\u4f53\u8d28\u6307\u6570\u754c\u9762\u5b9e\u73b0"},{"location":"featured-topics/application-bmi/quick-start-bmi/#_8","text":"\u7f51\u5173\u670d\u52a1\u4f7f\u7528 ServiceComb \u63d0\u4f9b\u7684 Edge Service \u6765\u5b9e\u73b0\u3002 \u5f15\u5165\u4f9d\u8d56\uff1a dependency groupId org.apache.servicecomb /groupId artifactId java-chassis-spring-boot-starter-standalone /artifactId /dependency dependency groupId org.apache.servicecomb /groupId artifactId edge-core /artifactId /dependency \u5728 application.yml \u6587\u4ef6\u4e2d\u914d\u7f6e\u8def\u7531\u89c4\u5219\u53ca\u670d\u52a1\u7aef\u53e3\u4fe1\u606f\uff1a ervicecomb: service: registry: address: http://127.0.0.1:30100 rest: address: 0.0.0.0:8889 tracing: enabled: false http: dispatcher: edge: default: enabled: false prefix: api withVersion: false prefixSegmentCount: 1 url: enabled: true mappings: calculator: prefixSegmentCount: 1 path: /calculator/.* microserviceName: calculator versionRule: 0.0.0+ # This is web root for windows server, change this path according to where you put your source code gateway: webroot: /code/servicecomb-samples/java-chassis-samples/bmi/webapp/src/main/resources/static \u5176\u4e2d servicecomb.http.dispatcher.edge.default.enabled \u7981\u7528\u4e86\u9ed8\u8ba4\u7684\u8def\u7531\u89c4\u5219\uff0c servicecomb.http.dispatcher.edge.url.enabled \u542f\u7528\u4e86\u57fa\u4e8eURL\u6620\u5c04\u7684\u8def\u7531\u89c4\u5219\u3002 \u89c4\u5219\u7684\u542b\u4e49\u8868\u793a\u5c06URL\u4e3a /calculator/.* \u7684\u8bf7\u6c42\u8f6c\u53d1\u5230 calculator \u670d\u52a1\u3002 gateway.webroot \u914d\u7f6e\u4e86\u9759\u6001\u9875\u9762\u6240\u5728\u7684\u76ee\u5f55\u4f4d\u7f6e\u3002 \u793a\u4f8b\u91cc\u9762\u91c7\u7528\u7684\u662f Windows \u76ee\u5f55\u73af\u5883\uff0c\u5982\u679c\u91c7\u7528 Linux \u73af\u5883\uff0c\u9700\u8981\u914d\u7f6e\u76f8\u5bf9\u8def\u5f84\u3002 StaticWebpageDispatcher \u6269\u5c55\u4e86 Edge Service \u7684\u8f6c\u53d1\u89c4\u5219\uff0c \u4f7f\u7528\u4e86 vert.x \u63d0\u4f9b\u7684 StaticHandler \u53d1\u5e03\u9759\u6001\u9875\u9762\u3002 Edge Service \u91c7\u7528 SPI \u7684\u65b9\u5f0f\u6269\u5c55 Dispatcher\uff0c \u9700\u8981\u521b\u5efa\u6587\u4ef6 org.apache.servicecomb.transport.rest.vertx.VertxHttpDispatcher \u3002","title":"\u7f51\u5173\u53ca\u8def\u7531\u89c4\u5219"},{"location":"featured-topics/application-bmi/quick-start-bmi/#_9","text":"\u670d\u52a1\u542f\u52a8\u5165\u53e3\u4e5f\u53ea\u9700\u8981\u58f0\u660e\u542f\u7528 ServiceComb \u5373\u53ef\u3002 @SpringBootApplication @EnableServiceComb public class GatewayApplication { public static void main(String[] args) { new SpringApplicationBuilder().web(WebApplicationType.NONE).sources(GatewayApplication.class).run(args); } } \u81f3\u6b64\uff0c \u4f53\u8d28\u6307\u6570 \u5e94\u7528\u5df2\u5f00\u53d1\u5b8c\u6bd5\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7 \u5feb\u901f\u5165\u95e8 \u4e2d\u7684\u6b65\u9aa4\u5bf9\u5176\u8fdb\u884c\u9a8c\u8bc1\u3002","title":"\u670d\u52a1\u542f\u52a8\u5165\u53e3"},{"location":"featured-topics/application-bmi/quick-start-bmi/#_10","text":"\u9605\u8bfb \u5fae\u670d\u52a1\u5f00\u53d1\u8fdb\u9636","title":"\u4e0b\u4e00\u6b65"},{"location":"featured-topics/application-bmi/quick-start/","text":"\u5feb\u901f\u5165\u95e8 \u5b89\u88c5 Java \u5f00\u53d1\u73af\u5883 \u5b89\u88c5 git \uff0c\u8be6\u60c5\u53ef\u53c2\u8003 git\u5b89\u88c5\u6559\u7a0b \u3002 \u5b89\u88c5JDK 1.8\uff0c\u8be6\u60c5\u53ef\u53c2\u8003 JDK\u5b89\u88c5\u6559\u7a0b \u3002 \u5b89\u88c5Maven 3.x\uff0c\u8be6\u60c5\u53ef\u53c2\u8003 Maven\u5b89\u88c5\u6559\u7a0b \u3002 \u4e0b\u8f7dServiceComb-Sample git clone https://github.com/apache/servicecomb-samples.git cd servicecomb-samples/java-chassis-samples/bmi mvn clean install \u8fd0\u884c Service Center \u5728 ServiceComb \u5fae\u670d\u52a1\u6846\u67b6\u4e2d\uff0c Service Center \u63d0\u4f9b\u670d\u52a1\u6ce8\u518c\u53ca\u670d\u52a1\u53d1\u73b0\u529f\u80fd\uff0c\u53ef\u76f4\u63a5\u4f7f\u7528 Docker \u8fd0\u884c\u3002 docker pull servicecomb/service-center docker run -d -p 30100:30100 servicecomb/service-center:latest \u60a8\u53ef\u4ee5\u901a\u8fc7\u9605\u8bfb \u73af\u5883\u5b89\u88c5 \u83b7\u53d6\u5728\u672c\u5730\u4ee5\u4e8c\u8fdb\u5236\u65b9\u5f0f\u8fd0\u884cService Center\u7684\u65b9\u6cd5\u3002 \u8fd0\u884c\u5fae\u670d\u52a1\u5e94\u7528 \u8fdb\u5165 \u4f53\u8d28\u6307\u6570 \u5e94\u7528\u4ee3\u7801\u76ee\u5f55\u3002 cd servicecomb-samples/java-chassis-samples/bmi \u6ce8\u610f \uff1a\u5728windows\u5f00\u53d1\u73af\u5883\u4e0b\uff0cdocker\u662f\u5728\u865a\u62df\u673a\u4e2d\u542f\u52a8\uff0c\u56e0\u6b64\u9700\u8981\u4fee\u6539\u5fae\u670d\u52a1\u7684 Service Center IP\u5730\u5740\u4e3a\u865a\u62df\u673aIP\u5730\u5740\u3002\u4fee\u65392\u4e2a\u914d\u7f6e\u6587\u4ef6[calculator|webapp]/src/main/resources/application.yml\uff0c\u5c06\u5176\u4e2d http://127.0.0.1:30100 \u4fee\u6539\u4e3a http://192.168.99.100:30100 \uff0c\u5176\u4e2d192.168.99.100\u662f\u865a\u62df\u673aIP\uff0c\u9700\u8981\u4e0e\u5f00\u53d1\u73af\u5883\u4e2d\u7684\u865a\u62df\u673aIP\u4fdd\u6301\u4e00\u81f4\u3002 \u542f\u52a8 \u4f53\u8d28\u6307\u6570\u8ba1\u7b97\u5668 \u548c \u4f53\u8d28\u6307\u6570\u754c\u9762 \u5fae\u670d\u52a1\uff0c\u5206\u522b\u6267\u884c\u4ee5\u4e0b\u6307\u4ee4\uff1a cd calculator; mvn spring-boot:run cd webapp; mvn spring-boot:run \u9a8c\u8bc1\u670d\u52a1\u3002\u5fae\u670d\u52a1\u542f\u52a8\u5b8c\u6bd5\u540e\uff0c\u5373\u53ef\u901a\u8fc7 http://localhost:8889 \u8bbf\u95ee \u4f53\u8d28\u6307\u6570 \u5e94\u7528\uff0c\u5c4a\u65f6\u5c06\u80fd\u770b\u5230\u5982\u4e0b\u754c\u9762\uff0c\u5e76\u53ef\u8f93\u5165\u60a8\u7684\u8eab\u9ad8\u548c\u4f53\u91cd\u4fe1\u606f\u9a8c\u8bc1\u670d\u52a1\u662f\u5426\u6b63\u5e38\u8fd0\u884c\u3002","title":"\u5feb\u901f\u5165\u95e8"},{"location":"featured-topics/application-bmi/quick-start/#_1","text":"","title":"\u5feb\u901f\u5165\u95e8"},{"location":"featured-topics/application-bmi/quick-start/#java","text":"\u5b89\u88c5 git \uff0c\u8be6\u60c5\u53ef\u53c2\u8003 git\u5b89\u88c5\u6559\u7a0b \u3002 \u5b89\u88c5JDK 1.8\uff0c\u8be6\u60c5\u53ef\u53c2\u8003 JDK\u5b89\u88c5\u6559\u7a0b \u3002 \u5b89\u88c5Maven 3.x\uff0c\u8be6\u60c5\u53ef\u53c2\u8003 Maven\u5b89\u88c5\u6559\u7a0b \u3002 \u4e0b\u8f7dServiceComb-Sample git clone https://github.com/apache/servicecomb-samples.git cd servicecomb-samples/java-chassis-samples/bmi mvn clean install","title":"\u5b89\u88c5 Java \u5f00\u53d1\u73af\u5883"},{"location":"featured-topics/application-bmi/quick-start/#service-center","text":"\u5728 ServiceComb \u5fae\u670d\u52a1\u6846\u67b6\u4e2d\uff0c Service Center \u63d0\u4f9b\u670d\u52a1\u6ce8\u518c\u53ca\u670d\u52a1\u53d1\u73b0\u529f\u80fd\uff0c\u53ef\u76f4\u63a5\u4f7f\u7528 Docker \u8fd0\u884c\u3002 docker pull servicecomb/service-center docker run -d -p 30100:30100 servicecomb/service-center:latest \u60a8\u53ef\u4ee5\u901a\u8fc7\u9605\u8bfb \u73af\u5883\u5b89\u88c5 \u83b7\u53d6\u5728\u672c\u5730\u4ee5\u4e8c\u8fdb\u5236\u65b9\u5f0f\u8fd0\u884cService Center\u7684\u65b9\u6cd5\u3002","title":"\u8fd0\u884c Service Center"},{"location":"featured-topics/application-bmi/quick-start/#_2","text":"\u8fdb\u5165 \u4f53\u8d28\u6307\u6570 \u5e94\u7528\u4ee3\u7801\u76ee\u5f55\u3002 cd servicecomb-samples/java-chassis-samples/bmi \u6ce8\u610f \uff1a\u5728windows\u5f00\u53d1\u73af\u5883\u4e0b\uff0cdocker\u662f\u5728\u865a\u62df\u673a\u4e2d\u542f\u52a8\uff0c\u56e0\u6b64\u9700\u8981\u4fee\u6539\u5fae\u670d\u52a1\u7684 Service Center IP\u5730\u5740\u4e3a\u865a\u62df\u673aIP\u5730\u5740\u3002\u4fee\u65392\u4e2a\u914d\u7f6e\u6587\u4ef6[calculator|webapp]/src/main/resources/application.yml\uff0c\u5c06\u5176\u4e2d http://127.0.0.1:30100 \u4fee\u6539\u4e3a http://192.168.99.100:30100 \uff0c\u5176\u4e2d192.168.99.100\u662f\u865a\u62df\u673aIP\uff0c\u9700\u8981\u4e0e\u5f00\u53d1\u73af\u5883\u4e2d\u7684\u865a\u62df\u673aIP\u4fdd\u6301\u4e00\u81f4\u3002 \u542f\u52a8 \u4f53\u8d28\u6307\u6570\u8ba1\u7b97\u5668 \u548c \u4f53\u8d28\u6307\u6570\u754c\u9762 \u5fae\u670d\u52a1\uff0c\u5206\u522b\u6267\u884c\u4ee5\u4e0b\u6307\u4ee4\uff1a cd calculator; mvn spring-boot:run cd webapp; mvn spring-boot:run \u9a8c\u8bc1\u670d\u52a1\u3002\u5fae\u670d\u52a1\u542f\u52a8\u5b8c\u6bd5\u540e\uff0c\u5373\u53ef\u901a\u8fc7 http://localhost:8889 \u8bbf\u95ee \u4f53\u8d28\u6307\u6570 \u5e94\u7528\uff0c\u5c4a\u65f6\u5c06\u80fd\u770b\u5230\u5982\u4e0b\u754c\u9762\uff0c\u5e76\u53ef\u8f93\u5165\u60a8\u7684\u8eab\u9ad8\u548c\u4f53\u91cd\u4fe1\u606f\u9a8c\u8bc1\u670d\u52a1\u662f\u5426\u6b63\u5e38\u8fd0\u884c\u3002","title":"\u8fd0\u884c\u5fae\u670d\u52a1\u5e94\u7528"},{"location":"featured-topics/application-bmi/service-management/","text":"\u670d\u52a1\u6cbb\u7406 \u670d\u52a1\u6cbb\u7406\u4e3b\u8981\u7528\u4e8e\u89e3\u51b3\u6216\u7f13\u89e3\u670d\u52a1\u96ea\u5d29\u7684\u60c5\u51b5\uff0c\u5373\u4e2a\u522b\u5fae\u670d\u52a1\u8868\u73b0\u5f02\u5e38\u65f6\uff0c\u7cfb\u7edf\u80fd\u5bf9\u5176\u8fdb\u884c\u5bb9\u9519\u5904\u7406\uff0c\u4ece\u800c\u907f\u514d\u8d44\u6e90\u7684\u8017\u5c3d\u3002\u672c\u6307\u5357\u5c06\u4f1a\u5c55\u793a\u5982\u4f55\u5728 \u4f53\u8d28\u6307\u6570 \u5e94\u7528\u4e2d\u4f7f\u7528 ServiceComb \u63d0\u4f9b\u7684\u670d\u52a1\u6cbb\u7406\u80fd\u529b\u3002 \u524d\u8a00 \u5728\u60a8\u8fdb\u4e00\u6b65\u9605\u8bfb\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u60a8\u5df2\u9605\u8bfb\u4e86 \u4f53\u8d28\u6307\u6570\u5fae\u670d\u52a1\u5e94\u7528\u5f00\u53d1 \uff0c\u5e76\u5df2\u6210\u529f\u8fd0\u884c\u4f53\u8d28\u6307\u6570\u5fae\u670d\u52a1\u3002 \u542f\u7528 \u5728 \u4f53\u8d28\u6307\u6570\u8ba1\u7b97\u5668 \u7684 pom.xml \u6587\u4ef6\u4e2d\u6dfb\u52a0\u4f9d\u8d56\u9879\uff1a dependency groupId org.apache.servicecomb /groupId artifactId handler-bizkeeper /artifactId /dependency \u5728 \u4f53\u8d28\u6307\u6570\u8ba1\u7b97\u5668 \u7684 application.yml \u6587\u4ef6\u4e2d\u6307\u660e\u4f7f\u7528\u670d\u52a1\u6cbb\u7406\u7684\u5904\u7406\u94fe\u53ca\u6307\u5b9a\u7194\u65ad\u548c\u5bb9\u9519\u7b56\u7565\uff1a servicecomb: handler: chain: Provider: default: bizkeeper-provider circuitBreaker: Provider: calculator: requestVolumeThreshold: 3 fallbackpolicy: Provider: policy: returnnull \u4e5f\u53ef\u4ee5\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u7684\u65b9\u5f0f\u52a8\u6001\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u7684\u503c\uff0c\u6bd4\u5982\u91c7\u7528\u4ee5\u4e0b\u6307\u4ee4\u91cd\u65b0\u8fd0\u884c\u5373\u53ef\uff1a mvn spring-boot:run -Dspring-boot.run.jvmArguments= -Dservicecomb.handler.chain.Provider.default=bizkeeper-provider -Dservicecomb.circuitBreaker.Provider.calculator.requestVolumeThreshold=3 -Dservicecomb.fallbackpolicy.Provider.policy=returnnull \u9a8c\u8bc1 \u4f7f\u670d\u52a1\u8fdb\u5165\u7194\u65ad\u72b6\u6001\u3002\u8bbf\u95ee http://localhost:8889 \uff0c\u5728\u8eab\u9ad8\u6216\u4f53\u91cd\u7684\u8f93\u5165\u6846\u4e2d\u8f93\u5165\u4e00\u4e2a\u8d1f\u6570\uff0c\u8fde\u7eed\u70b9\u51fb\u4e09\u6b21\u6216\u4ee5\u4e0a Submit \u6309\u94ae\uff0c\u6b64\u65f6\u5728\u7f51\u9875\u4e0b\u65b9\u80fd\u770b\u5230\u7c7b\u4f3c\u5de6\u56fe\u7684\u754c\u9762\u3002 \u9a8c\u8bc1\u670d\u52a1\u5904\u4e8e\u7194\u65ad\u72b6\u6001\u3002\u5728\u8eab\u9ad8\u548c\u4f53\u91cd\u7684\u8f93\u5165\u6846\u4e2d\u8f93\u5165\u6b63\u6570\uff0c\u518d\u6b21\u70b9\u51fb Submit \u6309\u94ae\uff0c\u6b64\u65f6\u770b\u5230\u7684\u754c\u9762\u4f9d\u7136\u662f\u7c7b\u4f3c\u5de6\u56fe\u7684\u754c\u9762\u3002\u540c\u65f6\u5728 \u4f53\u8d28\u6307\u6570\u8ba1\u7b97\u5668 \u8fd0\u884c\u65e5\u5fd7\u4e5f\u80fd\u770b\u5230\u8c03\u7528\u4e0d\u518d\u629b\u51fa\u5f02\u5e38\uff0c\u800c\u662f\u51fa\u73b0\u7c7b\u4f3c fallback called \u7684\u65e5\u5fd7\u3002 \u9a8c\u8bc1\u670d\u52a1\u6062\u590d\u6b63\u5e38\u3002\u7ea615\u79d2\u540e\uff0c\u5728\u8eab\u9ad8\u548c\u4f53\u91cd\u7684\u8f93\u5165\u6846\u4e2d\u8f93\u5165\u6b63\u6570\uff0c\u70b9\u51fb Submit \u6309\u94ae\uff0c\u6b64\u65f6\u754c\u9762\u663e\u793a\u6b63\u5e38\u3002","title":"\u670d\u52a1\u6cbb\u7406"},{"location":"featured-topics/application-bmi/service-management/#_1","text":"\u670d\u52a1\u6cbb\u7406\u4e3b\u8981\u7528\u4e8e\u89e3\u51b3\u6216\u7f13\u89e3\u670d\u52a1\u96ea\u5d29\u7684\u60c5\u51b5\uff0c\u5373\u4e2a\u522b\u5fae\u670d\u52a1\u8868\u73b0\u5f02\u5e38\u65f6\uff0c\u7cfb\u7edf\u80fd\u5bf9\u5176\u8fdb\u884c\u5bb9\u9519\u5904\u7406\uff0c\u4ece\u800c\u907f\u514d\u8d44\u6e90\u7684\u8017\u5c3d\u3002\u672c\u6307\u5357\u5c06\u4f1a\u5c55\u793a\u5982\u4f55\u5728 \u4f53\u8d28\u6307\u6570 \u5e94\u7528\u4e2d\u4f7f\u7528 ServiceComb \u63d0\u4f9b\u7684\u670d\u52a1\u6cbb\u7406\u80fd\u529b\u3002","title":"\u670d\u52a1\u6cbb\u7406"},{"location":"featured-topics/application-bmi/service-management/#_2","text":"\u5728\u60a8\u8fdb\u4e00\u6b65\u9605\u8bfb\u4e4b\u524d\uff0c\u8bf7\u786e\u4fdd\u60a8\u5df2\u9605\u8bfb\u4e86 \u4f53\u8d28\u6307\u6570\u5fae\u670d\u52a1\u5e94\u7528\u5f00\u53d1 \uff0c\u5e76\u5df2\u6210\u529f\u8fd0\u884c\u4f53\u8d28\u6307\u6570\u5fae\u670d\u52a1\u3002","title":"\u524d\u8a00"},{"location":"featured-topics/application-bmi/service-management/#_3","text":"\u5728 \u4f53\u8d28\u6307\u6570\u8ba1\u7b97\u5668 \u7684 pom.xml \u6587\u4ef6\u4e2d\u6dfb\u52a0\u4f9d\u8d56\u9879\uff1a dependency groupId org.apache.servicecomb /groupId artifactId handler-bizkeeper /artifactId /dependency \u5728 \u4f53\u8d28\u6307\u6570\u8ba1\u7b97\u5668 \u7684 application.yml \u6587\u4ef6\u4e2d\u6307\u660e\u4f7f\u7528\u670d\u52a1\u6cbb\u7406\u7684\u5904\u7406\u94fe\u53ca\u6307\u5b9a\u7194\u65ad\u548c\u5bb9\u9519\u7b56\u7565\uff1a servicecomb: handler: chain: Provider: default: bizkeeper-provider circuitBreaker: Provider: calculator: requestVolumeThreshold: 3 fallbackpolicy: Provider: policy: returnnull \u4e5f\u53ef\u4ee5\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u7684\u65b9\u5f0f\u52a8\u6001\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u7684\u503c\uff0c\u6bd4\u5982\u91c7\u7528\u4ee5\u4e0b\u6307\u4ee4\u91cd\u65b0\u8fd0\u884c\u5373\u53ef\uff1a mvn spring-boot:run -Dspring-boot.run.jvmArguments= -Dservicecomb.handler.chain.Provider.default=bizkeeper-provider -Dservicecomb.circuitBreaker.Provider.calculator.requestVolumeThreshold=3 -Dservicecomb.fallbackpolicy.Provider.policy=returnnull","title":"\u542f\u7528"},{"location":"featured-topics/application-bmi/service-management/#_4","text":"\u4f7f\u670d\u52a1\u8fdb\u5165\u7194\u65ad\u72b6\u6001\u3002\u8bbf\u95ee http://localhost:8889 \uff0c\u5728\u8eab\u9ad8\u6216\u4f53\u91cd\u7684\u8f93\u5165\u6846\u4e2d\u8f93\u5165\u4e00\u4e2a\u8d1f\u6570\uff0c\u8fde\u7eed\u70b9\u51fb\u4e09\u6b21\u6216\u4ee5\u4e0a Submit \u6309\u94ae\uff0c\u6b64\u65f6\u5728\u7f51\u9875\u4e0b\u65b9\u80fd\u770b\u5230\u7c7b\u4f3c\u5de6\u56fe\u7684\u754c\u9762\u3002 \u9a8c\u8bc1\u670d\u52a1\u5904\u4e8e\u7194\u65ad\u72b6\u6001\u3002\u5728\u8eab\u9ad8\u548c\u4f53\u91cd\u7684\u8f93\u5165\u6846\u4e2d\u8f93\u5165\u6b63\u6570\uff0c\u518d\u6b21\u70b9\u51fb Submit \u6309\u94ae\uff0c\u6b64\u65f6\u770b\u5230\u7684\u754c\u9762\u4f9d\u7136\u662f\u7c7b\u4f3c\u5de6\u56fe\u7684\u754c\u9762\u3002\u540c\u65f6\u5728 \u4f53\u8d28\u6307\u6570\u8ba1\u7b97\u5668 \u8fd0\u884c\u65e5\u5fd7\u4e5f\u80fd\u770b\u5230\u8c03\u7528\u4e0d\u518d\u629b\u51fa\u5f02\u5e38\uff0c\u800c\u662f\u51fa\u73b0\u7c7b\u4f3c fallback called \u7684\u65e5\u5fd7\u3002 \u9a8c\u8bc1\u670d\u52a1\u6062\u590d\u6b63\u5e38\u3002\u7ea615\u79d2\u540e\uff0c\u5728\u8eab\u9ad8\u548c\u4f53\u91cd\u7684\u8f93\u5165\u6846\u4e2d\u8f93\u5165\u6b63\u6570\uff0c\u70b9\u51fb Submit \u6309\u94ae\uff0c\u6b64\u65f6\u754c\u9762\u663e\u793a\u6b63\u5e38\u3002","title":"\u9a8c\u8bc1"},{"location":"featured-topics/application-porter/authentication/","text":"\u4f20\u7edf\u7684WEB\u5bb9\u5668\u90fd\u63d0\u4f9b\u4e86\u4f1a\u8bdd\u7ba1\u7406\uff0c\u5728\u5fae\u670d\u52a1\u67b6\u6784\u4e0b\uff0c\u8fd9\u4e9b\u4f1a\u8bdd\u7ba1\u7406\u5b58\u5728\u5f88\u591a\u7684\u9650\u5236\uff0c\u5982\u679c\u9700\u8981\u505a\u5230\u5f39\u6027\u6269\u7f29\u5bb9\uff0c\u5219\u9700\u8981\u505a\u5927\u91cf\u7684\u5b9a\u5236\u3002 \u5728porter\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528user-service\u505a\u4f1a\u8bdd\u7ba1\u7406\uff0c\u53ef\u4ee5\u901a\u8fc7login\u548csession\u4e24\u4e2a\u63a5\u53e3\u521b\u5efa\u548c\u83b7\u53d6\u4f1a\u8bdd\u4fe1\u606f\u3002\u4f1a\u8bdd\u4fe1\u606f\u6301\u4e45\u5316\u5230\u6570\u636e\u5e93\u4e2d\uff0c\u4ece\u800c\u5b9e\u73b0\u5fae\u670d\u52a1\u672c\u8eab\u7684\u65e0\u72b6\u6001\uff0c\u5fae\u670d\u52a1\u53ef\u4ee5\u5f39\u6027\u6269\u7f29\u5bb9\u3002\u5728\u66f4\u5927\u89c4\u6a21\u5e76\u53d1\u6216\u8005\u9ad8\u6027\u80fd\u8981\u6c42\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u8003\u8651\u5c06\u4f1a\u8bdd\u4fe1\u606f\u5b58\u50a8\u5230\u9ad8\u901f\u7f13\u5b58\u3002 @PostMapping(path = /login , produces = MediaType.APPLICATION_JSON_VALUE) public SessionInfo login(@RequestParam(name = userName ) String userName, @RequestParam(name = password ) String password) @GetMapping(path = /session , produces = MediaType.APPLICATION_JSON_VALUE) public SessionInfo getSession(@RequestParam(name = sessionId ) String sessionId) \u540c\u65f6\u65b0\u589e\u4e86\u4f1a\u8bdd\u7ba1\u7406\u7684\u6570\u636e\u8868\u8bbe\u8ba1\uff1a CREATE TABLE `T_SESSION` ( `ID` INTEGER(8) NOT NULL AUTO_INCREMENT COMMENT '\u552f\u4e00\u6807\u8bc6', `SESSION_ID` VARCHAR(64) NOT NULL COMMENT '\u4e34\u65f6\u4f1a\u8bddID', `USER_NAME` VARCHAR(64) NOT NULL COMMENT '\u7528\u6237\u540d\u79f0', `ROLE_NAME` VARCHAR(64) NOT NULL COMMENT '\u89d2\u8272\u540d\u79f0', `CREATION_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '\u521b\u5efa\u65f6\u95f4', `ACTIVE_TIME` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '\u6700\u8fd1\u6d3b\u8dc3\u65f6\u95f4', PRIMARY KEY (`ID`) ); \u4f1a\u8bdd\u7ba1\u7406\u548c\u8ba4\u8bc1\u90fd\u5728gateway-service\u8fdb\u884c\uff0c\u9274\u6743\u5219\u9700\u8981\u4f7f\u7528\u5230\u7528\u6237\u4fe1\u606f\u3002\u4e3a\u4e86\u8ba9\u5fae\u670d\u52a1\u83b7\u53d6\u7528\u6237\u4fe1\u606f\u7684\u65f6\u5019\uff0c\u4e0d\u81f3\u4e8e\u518d\u67e5\u8be2user-service\uff0c\u6211\u4eec\u5229\u7528\u4e86Context\u673a\u5236\uff0c\u5728Context\u91cc\u9762\u5b58\u50a8\u4e86session\u4fe1\u606f\uff0c\u6240\u6709\u7684\u5fae\u670d\u52a1\u90fd\u53ef\u4ee5\u76f4\u63a5\u4eceContext\u91cc\u9762\u53d6\u5230session\u4fe1\u606f\uff0c\u975e\u5e38\u65b9\u4fbf\u548c\u7075\u6d3b\u3002\u5b8c\u6210\u8fd9\u4e2a\u529f\u80fd\u6709\u5982\u4e0b\u51e0\u4e2a\u5173\u952e\u6b65\u9aa4\uff1a gateway-service\u8fdb\u884cHTTP\u534f\u8bae\u5230Invocation\u7684\u8f6c\u6362 \u8fd9\u4e2a\u901a\u8fc7\u91cd\u8f7dEdgeInvocation\u7684createInvocation\u5b9e\u73b0\u3002\u5c06\u4f1a\u8bddID\u901a\u8fc7Context\u4f20\u9012\u7ed9handler\u3002\u5982\u679c\u5f00\u53d1\u8005\u9700\u8981\u5b9e\u73b0\u8bf8\u5982\u589e\u52a0\u54cd\u5e94\u5934\uff0c\u8bbe\u8ba1Cookie\u7b49\u64cd\u4f5c\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7\u91cd\u8f7dsendResponse\u6765\u5b9e\u73b0\u3002 EdgeInvocation invoker = new EdgeInvocation() { // \u8ba4\u8bc1\u9274\u6743\uff1a\u6784\u9020Invocation\u7684\u65f6\u5019\uff0c\u8bbe\u7f6e\u4f1a\u8bdd\u4fe1\u606f\u3002\u5982\u679c\u662f\u8ba4\u8bc1\u8bf7\u6c42\uff0c\u5219\u6dfb\u52a0Cookie\u3002 protected void createInvocation(Object[] args) { super.createInvocation(args); // \u65e2\u4ececookie\u91cc\u9762\u8bfb\u53d6\u4f1a\u8bddID\uff0c\u4e5f\u4eceheader\u91cc\u9762\u8bfb\u53d6\uff0c\u65b9\u4fbf\u5404\u79cd\u72ec\u7acb\u7684\u6d4b\u8bd5\u5de5\u5177\u8054\u8c03 String sessionId = context.request().getHeader( session-id ); if (sessionId != null) { this.invocation.addContext( session-id , sessionId); } else { Cookie sessionCookie = context.getCookie( session-id ); if (sessionCookie != null) { this.invocation.addContext( session-id , sessionCookie.getValue()); } } } }; \u901a\u8fc7handler\u6765\u8fdb\u884c\u8ba4\u8bc1\u548c\u4f1a\u8bdd\u7ba1\u7406 \u5bf9\u4e8eui\u754c\u9762\uff0c\u4e0d\u63d0\u4f9b\u8ba4\u8bc1\uff0c\u7528\u6237\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u3002\u5bf9\u4e8eREST\u63a5\u53e3\u9700\u8981\u8fdb\u884c\u8ba4\u8bc1\uff0c\u56e0\u6b64\u6211\u4eec\u5c06\u8ba4\u8bc1\u548c\u4f1a\u8bdd\u7ba1\u7406\u7684\u529f\u80fd\u5728Hanlder\u4e2d\u5b9e\u73b0\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u5bf9user-service\u7684login\u63a5\u53e3\u76f4\u63a5\u8f6c\u53d1\u8bf7\u6c42\uff0c\u5176\u4ed6\u8bf7\u6c42\u5148\u7ecf\u8fc7\u4f1a\u8bdd\u6821\u9a8c\uff0c\u518d\u8fdb\u884c\u8f6c\u53d1\u3002 \u6ce8\u610f : \u5728\u7f51\u5173\u6267\u884c\u7684Hanlder\u903b\u8f91\uff0c\u662freactive\u6a21\u5f0f\u7684\uff0c\u4e0d\u80fd\u4f7f\u7528\u963b\u585e\u8c03\u7528\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4\u7ebf\u7a0b\u963b\u585e\u3002 public class AuthHandler implements Handler { private UserServiceClient userServiceClient = BeanUtils.getBean( UserServiceClient ); // session expires in 10 minutes, cache for 1 seconds to get rid of concurrent scenarios. private Cache String, String sessionCache = CacheBuilder.newBuilder() .expireAfterAccess(30, TimeUnit.SECONDS) .build(); @Override public void handle(Invocation invocation, AsyncResponse asyncResponse) throws Exception { if (invocation.getMicroserviceName().equals( user-service ) (invocation.getOperationName().equals( login ) || (invocation.getOperationName().equals( getSession )))) { // login\uff1areturn session id, set cookie by javascript invocation.next(asyncResponse); } else { // check session String sessionId = invocation.getContext( session-id ); if (sessionId == null) { throw new InvocationException(403, , session is not valid. ); } String sessionInfo = sessionCache.getIfPresent(sessionId); if (sessionInfo != null) { try { // session info stored in InvocationContext. Microservices can get it. invocation.addContext( session-id , sessionId); invocation.addContext( session-info , sessionInfo); invocation.next(asyncResponse); } catch (Exception e) { asyncResponse.complete(Response.failResp(new InvocationException(500, , e.getMessage()))); } return; } // In edge, handler is executed in reactively. Must have no blocking logic. CompletableFuture SessionInfo result = userServiceClient.getGetSessionOperation().getSession(sessionId); result.whenComplete((info, e) - { if (result.isCompletedExceptionally()) { asyncResponse.complete(Response.failResp(new InvocationException(403, , session is not valid. ))); } else { if (info == null) { asyncResponse.complete(Response.failResp(new InvocationException(403, , session is not valid. ))); return; } try { // session info stored in InvocationContext. Microservices can get it. invocation.addContext( session-id , sessionId); String sessionInfoStr = JsonUtils.writeValueAsString(info); invocation.addContext( session-info , sessionInfoStr); invocation.next(asyncResponse); sessionCache.put(sessionId, sessionInfoStr); } catch (Exception ee) { asyncResponse.complete(Response.failResp(new InvocationException(500, , ee.getMessage()))); } } }); } } } \u542f\u7528\u8be5Hanlder\uff0c\u9700\u8981\u589e\u52a0cse.handler.xml\u6587\u4ef6 config handler id= auth class= org.apache.servicecomb.samples.porter.gateway.AuthHandler / /config \u5e76\u4e14\u5728microservice.yaml\u4e2d\u542f\u7528auth\uff0c\u5c06\u65b0\u589e\u52a0\u7684auth\u5904\u7406\u94fe\u653e\u5230\u6d41\u63a7\u4e4b\u540e\u3002 servicecomb: handler: chain: Consumer: default: internalAccess,auth,qps-flowcontrol-consumer,loadbalance \u7ed9\u5220\u9664\u6587\u4ef6\u589e\u52a0\u9274\u6743 \u5728\u4e0a\u9762\u7684\u6b65\u9aa4\u4e2d\uff0c\u5df2\u7ecf\u5c06\u4f1a\u8bdd\u4fe1\u606f\u8bbe\u7f6e\u5230Context\u91cc\u9762\uff0cfile-service\u53ef\u4ee5\u65b9\u4fbf\u7684\u4f7f\u7528\u8fd9\u4e9b\u4fe1\u606f\u8fdb\u884c\u9274\u6743\u64cd\u4f5c\u3002 @DeleteMapping(path = /delete , produces = MediaType.APPLICATION_JSON_VALUE) public boolean deleteFile(@RequestParam(name = id ) String id) { String session = ContextUtils.getInvocationContext().getContext( session-info ); if (session == null) { throw new InvocationException(403, , not allowed ); } else { SessionInfo sessionInfo = null; try { sessionInfo = JsonUtils.readValue(session.getBytes( UTF-8 ), SessionInfo.class); } catch (Exception e) { throw new InvocationException(403, , session not allowed ); } if (sessionInfo == null || !sessionInfo.getRoleName().equals( admin )) { throw new InvocationException(403, , not allowed ); } } return fileService.deleteFile(id); } \u5230\u8fd9\u91cc\u4e3a\u6b62\uff0c\u8ba4\u8bc1\u3001\u4f1a\u8bdd\u7ba1\u7406\u548c\u9274\u6743\u7684\u903b\u8f91\u57fa\u672c\u5df2\u7ecf\u5b8c\u6210\u4e86\u3002\u53ef\u4ee5\u901a\u8fc7Postman\u7b49\u5de5\u5177\u8fdb\u884c\u6d41\u7a0b\u76f8\u5173\u7684\u6d4b\u8bd5\u3002 #### \u4f1a\u8bdd\u7ba1\u7406\u63a5\u53e3\u8c03\u7528\u793a\u4f8b\uff0c\u8c03\u7528\u5220\u9664\u6587\u4ef6\u63a5\u53e3\u3002\u4f7f\u7528guest\u7528\u6237\u7684\u4f1a\u8bdd\u7684\u60c5\u51b5\u3002 #Request DELETE http://localhost:9090/api/file-service/delete?id=ba6bd8a2-d31a-42cd-a1be-9fb3d6ab4c82 session-id: 1be646c0-50cb-4c0a-968d-2a512775f5e8 #Response { message : not allowed } \u5f00\u53d1JS\u811a\u672c\u7ba1\u7406\u4f1a\u8bdd \u9996\u5148\u9700\u8981\u63d0\u4f9b\u767b\u9646\u6846\uff0c\u8ba9\u7528\u6237\u8f93\u5165\u7528\u6237\u540d\u5bc6\u7801\uff1a div class= form h2 \u767b\u5f55 /h2 input id= username type= text name= Username placeholder= Username input id= paasword type= password name= Password placeholder= Password input type= button value= Login onclick= loginAction() /div \u5b9e\u73b0\u767b\u9646\u903b\u8f91\u3002\u767b\u9646\u9996\u5148\u8c03\u7528\u540e\u53f0\u767b\u9646\u63a5\u53e3\uff0c\u767b\u9646\u6210\u529f\u540e\u8bbe\u7f6e\u4f1a\u8bddcookie: function loginAction() { var username = document.getElementById( username ).value; var password = document.getElementById( paasword ).value; var formData = {}; formData.userName = username; formData.password = password; $.ajax({ type: 'POST', url: /api/user-service/login , data: formData, success: function (data) { setCookie( session-id , data.sessiondId, false); window.alert('\u767b\u9646\u6210\u529f\uff01'); }, error: function(data) { console.log(data); window.alert('\u767b\u9646\u5931\u8d25\uff01' + data); }, async: true }); }","title":"Authentication"},{"location":"featured-topics/application-porter/authentication/#js","text":"\u9996\u5148\u9700\u8981\u63d0\u4f9b\u767b\u9646\u6846\uff0c\u8ba9\u7528\u6237\u8f93\u5165\u7528\u6237\u540d\u5bc6\u7801\uff1a div class= form h2 \u767b\u5f55 /h2 input id= username type= text name= Username placeholder= Username input id= paasword type= password name= Password placeholder= Password input type= button value= Login onclick= loginAction() /div \u5b9e\u73b0\u767b\u9646\u903b\u8f91\u3002\u767b\u9646\u9996\u5148\u8c03\u7528\u540e\u53f0\u767b\u9646\u63a5\u53e3\uff0c\u767b\u9646\u6210\u529f\u540e\u8bbe\u7f6e\u4f1a\u8bddcookie: function loginAction() { var username = document.getElementById( username ).value; var password = document.getElementById( paasword ).value; var formData = {}; formData.userName = username; formData.password = password; $.ajax({ type: 'POST', url: /api/user-service/login , data: formData, success: function (data) { setCookie( session-id , data.sessiondId, false); window.alert('\u767b\u9646\u6210\u529f\uff01'); }, error: function(data) { console.log(data); window.alert('\u767b\u9646\u5931\u8d25\uff01' + data); }, async: true }); }","title":"\u5f00\u53d1JS\u811a\u672c\u7ba1\u7406\u4f1a\u8bdd"},{"location":"featured-topics/application-porter/design/","text":"\u6839\u636eUser Story\uff0c\u5e94\u7528\u81f3\u5c11\u5305\u542b\u7528\u6237\u7ba1\u7406\u3001\u6587\u4ef6\u7ba1\u7406\u7b49\u5fae\u670d\u52a1\uff0c\u6bcf\u4e2a\u5fae\u670d\u52a1\u90fd\u884c\u4f7f\u4e0d\u4e00\u6837\u7684\u529f\u80fd\u3002\u4e0b\u9762\u662f\u5206\u89e3\u540e\u8bbe\u8ba1\u7684\u5fae\u670d\u52a1\u7ed3\u6784\uff1a \u7f51\u5173\uff1a \u8d1f\u8d23\u8fdb\u884c\u8bf7\u6c42\u8f6c\u53d1\u3001\u7528\u6237\u8ba4\u8bc1\u4ee5\u53ca\u5176\u4ed6\u5185\u5bb9\uff0c\u6bd4\u5982\u89e3\u51b3\u8de8\u7ad9\u8bbf\u95ee\u3001\u8bbe\u7f6eHTTP\u5b89\u5168\u6d88\u606f\u5934\u7b49\u3002\u901a\u8fc7\u8bbe\u7f6e\u9632\u706b\u5899\uff0c\u6240\u6709\u7684\u8bf7\u6c42\u90fd\u5fc5\u987b\u7ecf\u8fc7\u7f51\u5173\uff0c\u8fd9\u6837\u5c31\u5c06\u5185\u90e8\u670d\u52a1\u4e0e\u5916\u90e8\u7528\u6237\u9694\u79bb\u8d77\u6765\uff0c\u9632\u6b62\u5185\u90e8\u670d\u52a1\u88ab\u975e\u6cd5\u8bbf\u95ee\u3002 \u6587\u4ef6\u7ba1\u7406\uff1a \u63d0\u4f9b\u6587\u4ef6\u4e0a\u4f20\u3001\u5220\u9664\u7b49\u6587\u4ef6\u7ba1\u7406\u529f\u80fd\u3002 \u7528\u6237\u7ba1\u7406\uff1a \u63d0\u4f9b\u8ba4\u8bc1\u3001\u89d2\u8272\u548c\u6743\u9650\u7ba1\u7406\u7b49\u529f\u80fd\u3002 \u754c\u9762: \u91c7\u7528\u9759\u6001\u9875\u9762\u6280\u672f, html+js+css\u5b9e\u73b0\u3002\u754c\u9762\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u5355\u72ec\u7684\u5fae\u670d\u52a1\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u653e\u5230\u7f51\u5173\u670d\u52a1\u91cc\u9762\u3002 \u4e3a\u4e86\u53ef\u9760\u6027\uff0c\u8fd9\u4e9b\u670d\u52a1\u90fd\u5e94\u8be5\u652f\u6301\u5206\u5e03\u5f0f\u96c6\u7fa4\u90e8\u7f72\u3002\u56e0\u6b64\u5728\u4e1a\u52a1\u903b\u8f91\u4e2d\u6d89\u53ca\u5230\u5e76\u53d1\u548c\u8d1f\u8f7d\u5747\u8861\u7684\u573a\u666f\uff0c\u90fd\u9700\u8981\u8003\u8651\u65e0\u72b6\u6001\u8bbe\u8ba1\u3002\u53ef\u4ee5\u7ed9\u7f51\u5173\u914d\u7f6e\u57df\u540d\u6216\u8005\u5728\u4e0a\u5c42\u518d\u6302\u4e00\u4e2a\u5f39\u6027\u8d1f\u8f7d\u5747\u8861\u5668\uff0c\u5b9e\u73b0\u7f51\u5173\u7684\u591a\u5b9e\u4f8b\u90e8\u7f72\u3002 \u5fae\u670d\u52a1\u8bbe\u8ba1\u597d\u4ee5\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u5df2\u6709\u9879\u76ee\u5feb\u901f\u642d\u5efa\u9879\u76ee\u67b6\u5b50\u3002\u53ef\u4ee5\u4ece\uff1a Porter\u5e94\u7528 \u4e0b\u8f7d\u8be5\u9879\u76ee\u3002 \u521d\u59cb\u7684\u9879\u76ee\u662f\u4e00\u4e2amaven\u9879\u76ee\uff0c\u4e3b\u8981\u5185\u5bb9\u5305\u62ecpom.xml\u6587\u4ef6\u3001microservice.yam\u6587\u4ef6\u548c\u4e00\u4e2aMain\u51fd\u6570\u3002microservice.yam\u6587\u4ef6\u914d\u7f6e\u4e86\u5fae\u670d\u52a1\u7684\u57fa\u672c\u4fe1\u606f\u548c\u8bbf\u95ee\u670d\u52a1\u4e2d\u5fc3\u7684\u5730\u5740\u3002","title":"Design"},{"location":"featured-topics/application-porter/file-service/","text":"\u6587\u4ef6\u4e0a\u4f20\u529f\u80fd\u3001\u7528\u6237\u7ba1\u7406\u529f\u80fd\u90fd\u53ea\u9700\u8981\u63d0\u4f9bREST\u63a5\u53e3\uff0c\u5728\u6280\u672f\u9009\u578b\u4e0a\uff0c\u4f7f\u7528\u8f7b\u91cf\u7ea7REST\u6846\u67b6\u3002\u5f00\u53d1\u65b0\u7684\u5fae\u670d\u52a1\u90fd\u6d89\u53ca\u5230\u914d\u7f6e\u5fae\u670d\u52a1\u4fe1\u606f\uff0c\u5199\u4e00\u4e2a\u65b0\u7684Main\u51fd\u6570\uff0c\u8fd9\u4e9b\u516c\u5171\u6b65\u9aa4\u5728\u6587\u6863\u524d\u9762\u5df2\u7ecf\u63cf\u8ff0\uff0c\u540e\u7eed\u6587\u6863\u4f1a\u7701\u7565\u8fd9\u4e9b\u5185\u5bb9\u3002 \u589e\u52a0\u4f9d\u8d56\u5173\u7cfb dependency groupId org.apache.servicecomb /groupId artifactId solution-basic /artifactId /dependency \u5b9a\u4e49\u670d\u52a1\u63a5\u53e3 \u670d\u52a1\u63a5\u53e3\u5b9a\u4e49\u4e0a\u67093\u79cd\u9009\u62e9\uff1aRPC\u3001Spring MVC\u3001JAX RS\u3002 \u8fd9\u91cc\u9009\u62e9\u4e86Sping MVC\uff0c\u76f8\u6bd4RPC\u9700\u8981\u989d\u5916\u589e\u52a0Annotation\uff0c\u7075\u6d3b\u6027\u5728\u4e8e\u63a5\u53e3\u5373\u53ef\u4ee5\u901a\u8fc7RPC\u7684\u65b9\u5f0f\u5728\u670d\u52a1\u5185\u90e8\u8bbf\u95ee\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u6d4f\u89c8\u5668\u8bbf\u95ee\uff0c\u671f\u671b\u524d\u53f0js\u811a\u672c\u5f00\u53d1\u8005\u4e5f\u80fd\u591f\u5bf9\u7167\u751f\u6210\u7684\u5951\u7ea6\u5b8c\u6210\u5f00\u53d1\u3002 @RestSchema(schemaId = file ) @RequestMapping(path = / ) public class FileServiceEndpoint { @Autowired private FileService fileService; /** * \u4e0a\u4f20\u6587\u4ef6\u63a5\u53e3\uff0c\u7528\u6237\u4e0a\u4f20\u4e00\u4e2a\u6587\u4ef6\uff0c\u8fd4\u56de\u6587\u4ef6ID\u3002 */ @PostMapping(path = /upload , produces = MediaType.TEXT_PLAIN_VALUE) public String uploadFile(@RequestPart(name = fileName ) MultipartFile file) { return fileService.uploadFile(file); } /** * \u5220\u9664\u6587\u4ef6\u63a5\u53e3\u3002\u6307\u5b9aID\uff0c\u8fd4\u56de\u5220\u9664\u6210\u529f\u8fd8\u662f\u5931\u8d25. */ @DeleteMapping(path = /delete , produces = MediaType.APPLICATION_JSON_VALUE) public boolean deleteFile(@RequestParam(name = id ) String id) { return fileService.deleteFile(id); } } \u4e3a\u4e86\u5b9e\u73b0\u4e0d\u540c\u65b9\u5f0f\u7684\u6587\u4ef6\u5b58\u50a8\uff0c\u5c06\u5b9e\u73b0\u62bd\u8c61\u51fa\u6765FileService\u3002\u4e3a\u4e86\u7b80\u5355\uff0c\u5f53\u524d\u53ea\u63d0\u4f9b\u4e86\u672c\u5730\u6587\u4ef6\u5b9e\u73b0\u3002\u8fd9\u4e2a\u5b9e\u73b0\u9650\u5236\u4e86\u8be5\u670d\u52a1\u65e0\u6cd5\u8fdb\u884c\u591a\u5b9e\u4f8b\u90e8\u7f72\u3002\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u5bf9\u8c61\u5b58\u50a8\u670d\u52a1\u5668\u3001\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf\u7b49\u6ee1\u8db3\u5b58\u50a8\u8981\u6c42\u3002 \u8bbe\u7f6e\u4e34\u65f6\u76ee\u5f55 \u9700\u8981\u5728microservice.yaml\u4e2d\u589e\u52a0servicecomb.uploads.directory\u914d\u7f6e\u9879\uff0c\u6307\u5b9a\u4e34\u65f6\u76ee\u5f55\u7684\u8def\u5f84\u3002\u9700\u8981\u4fdd\u8bc1\u76ee\u5f55\u6709\u5199\u6743\u9650\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5982\u679c\u6ca1\u8bbe\u7f6e\u4e34\u65f6\u76ee\u5f55\uff0c\u4e0d\u5141\u8bb8\u542f\u7528\u4e0a\u4f20\u529f\u80fd\u3002\u5982\u679c\u4f7f\u7528\u7f51\u5173\uff0c\u7f51\u5173\u4e5f\u9700\u8981\u589e\u52a0\u8fd9\u4e2a\u914d\u7f6e\u9879\u3002 \u5f00\u53d1\u6d4b\u8bd5HTML\uff0c\u8bbf\u95ee\u4e0a\u4f20\u670d\u52a1 \u4e3a\u4e86\u6d4b\u8bd5\u5f00\u53d1\u7684\u63a5\u53e3\uff0c\u53ef\u4ee5\u5199\u4e00\u4e2aHTML\u7a0b\u5e8f\u3002\u6ce8\u610fname\u53c2\u6570\u9700\u8981\u548c\u63a5\u53e3\u5b9a\u4e49\u7684\u540d\u79f0\u4e00\u6837\u3002 !DOCTYPE html html head title Upload Example /title /head body h2 Upload Example /h2 hr/ form method= POST enctype= multipart/form-data action= http://localhost:9091/upload p File Name: input type= file name= fileName / /p p input type= submit value= Upload / /p /form /body /html \u53ef\u4ee5\u4f7f\u7528Postman\u7b49\u5de5\u5177\u6d4b\u8bd5\u5220\u9664\u63a5\u53e3\uff1a DELETE http://localhost:9091/delete?id=ba6bd8a2-d31a-42cd-a1be-9fb3d6ab4c82 \u8fd8\u53ef\u4ee5\u5f00\u53d1\u4e00\u4e2a\u5ba2\u6237\u7aef\u6d4b\u8bd5\u8fd9\u4e9b\u63a5\u53e3\uff0c\u5bf9\u4e8e\u81ea\u52a8\u5316\u6d4b\u8bd5\u7528\u4f8b\u662f\u975e\u5e38\u6709\u7528\u7684\u3002\u8fd9\u91cc\u4e0d\u518d\u8be6\u7ec6\u8bf4\u660e\u3002","title":"File service"},{"location":"featured-topics/application-porter/gateway-service/","text":"\u8fd9\u4e2a\u7ae0\u8282\u4e2d\uff0c\u4ecb\u7ecd\u5982\u4f55\u901a\u8fc7\u7f51\u5173\u8f6c\u53d1\u8bf7\u6c42\u3002java-chassis\u63d0\u4f9b\u4e86\u975e\u5e38\u7075\u6d3b\u7684\u7f51\u5173\u670d\u52a1\uff0c\u5f00\u53d1\u8005\u80fd\u591f\u975e\u5e38\u7b80\u5355\u7684\u5b9e\u73b0\u5fae\u670d\u52a1\u4e4b\u95f4\u7684\u8f6c\u53d1\uff0c\u7f51\u5173\u62e5\u6709\u5ba2\u6237\u7aef\u4e00\u6837\u7684\u670d\u52a1\u6cbb\u7406\u80fd\u529b\u3002\u540c\u65f6\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u4f7f\u7528vert.x\u66b4\u6f0f\u7684HTTP API\uff0c\u5b9e\u73b0\u975e\u5e38\u7075\u6d3b\u7684\u8f6c\u53d1\u63a7\u5236\u3002 \u7f51\u5173\u670d\u52a1\u7531\u4e00\u7cfb\u5217\u7684VertxHttpDispatcher\u7ec4\u6210\uff0c\u5f00\u53d1\u8005\u901a\u8fc7\u7ee7\u627fAbstractEdgeDispatcher\uff0c\u6765\u5b9e\u73b0\u81ea\u5df1\u7684\u8f6c\u53d1\u673a\u5236\u3002 \u4e3a\u4e86\u5b9e\u73b0gateway-service\u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230file-service\uff0c\u5b9a\u4e49\u4e86\u5982\u4e0b\u89c4\u5219\uff1a \u76f4\u63a5\u8bf7\u6c42file-service: DELETE http://localhost:9091/delete \u901a\u8fc7\u7f51\u5173\uff1aDELETE http://localhost:9090/api/file-service/delete \u8fbe\u5230\u8fd9\u4e2a\u76ee\u7684\u7684\u4ee3\u7801\u5982\u4e0b\uff0c\u5728\u8bf7\u6c42\u5904\u7406\u7684\u65f6\u5019\uff0c\u4f7f\u7528EdgeInvocation\uff0c\u53ef\u4ee5\u5b9e\u73b0\u8bf7\u6c42\u8f6c\u53d1\uff0c\u5e76\u5f00\u542f\u5404\u79cd\u6cbb\u7406\u529f\u80fd\u3002\u4e0b\u9762\u4ee3\u7801\u7684\u6838\u5fc3\u5185\u5bb9\u662f\u5b9a\u4e49\u8f6c\u53d1\u89c4\u5219regex\u3002 public class ApiDispatcher extends AbstractEdgeDispatcher { @Override public int getOrder() { return 10002; } @Override public void init(Router router) { String regex = /api/([^\\\\/]+)/(.*) ; router.routeWithRegex(regex).handler(CookieHandler.create()); router.routeWithRegex(regex).handler(createBodyHandler()); router.routeWithRegex(regex).failureHandler(this::onFailure).handler(this::onRequest); } protected void onRequest(RoutingContext context) { Map String, String pathParams = context.pathParams(); String microserviceName = pathParams.get( param0 ); String path = / + pathParams.get( param1 ); EdgeInvocation invoker = new EdgeInvocation(); invoker.init(microserviceName, context, path, httpServerFilters); invoker.edgeInvoke(); } } \u4e3a\u4e86\u5b9e\u73b0gateway-service\u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230porter-website\uff0c\u5b9a\u4e49\u4e86\u5982\u4e0b\u89c4\u5219\uff1a \u76f4\u63a5\u8bf7\u6c42porter-website: GET http://localhost:9093/index.html \u901a\u8fc7\u7f51\u5173\uff1aGET http://localhost:9090/ui/porter-website/index.html UI\u9759\u6001\u9875\u9762\u4fe1\u606f\u4e0d\u9700\u8981\u5b9e\u73b0\u6cbb\u7406\u80fd\u529b\uff08\u670d\u52a1\u6cbb\u7406\u80fd\u529b\u9700\u8981\u5951\u7ea6\uff0c\u9759\u6001\u9875\u9762\u4e0d\u5b58\u5728\u63a5\u53e3\u5951\u7ea6\uff09\uff0c\u56e0\u6b64\u76f4\u63a5\u4f7f\u7528vert.x\u7684API\u5b9e\u73b0\u8bf7\u6c42\u8f6c\u53d1\u3002\u5728\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u8fd8\u4f7f\u7528java chassis API\u505a\u4e86\u670d\u52a1\u53d1\u73b0\uff0c\u5e76\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5355\u7684RoundRobin\u8d1f\u8f7d\u5747\u8861\u7b56\u7565\uff0c\u4ece\u800c\u5141\u8bb8porter-website\u4e5f\u8fdb\u884c\u591a\u5b9e\u4f8b\u90e8\u7f72\u3002 public class UiDispatcher extends AbstractEdgeDispatcher { private static Logger LOGGER = LoggerFactory.getLogger(UiDispatcher.class); private static Vertx vertx = VertxUtils.getOrCreateVertxByName( web-client , null); private static HttpClient httpClient = vertx.createHttpClient(new HttpClientOptions()); private Map String, DiscoveryTree discoveryTrees = new ConcurrentHashMapEx (); private AtomicInteger counter = new AtomicInteger(0); @Override public int getOrder() { return 10001; } @Override public void init(Router router) { String regex = /ui/([^\\\\/]+)/(.*) ; router.routeWithRegex(regex).failureHandler(this::onFailure).handler(this::onRequest); } protected void onRequest(RoutingContext context) { Map String, String pathParams = context.pathParams(); String microserviceName = pathParams.get( param0 ); String path = / + pathParams.get( param1 ); URI uri = chooseServer(microserviceName); if (uri == null) { context.response().setStatusCode(404); context.response().end(); return; } // \u4f7f\u7528HttpClient\u8f6c\u53d1\u8bf7\u6c42 HttpClientRequest clietRequest = httpClient.request(context.request().method(), uri.getPort(), uri.getHost(), / + path, clientResponse - { context.request().response().setChunked(true); context.request().response().setStatusCode(clientResponse.statusCode()); context.request().response().headers().setAll(clientResponse.headers()); clientResponse.handler(data - { context.request().response().write(data); }); clientResponse.endHandler((v) - context.request().response().end()); }); clietRequest.setChunked(true); clietRequest.headers().setAll(context.request().headers()); context.request().handler(data - { clietRequest.write(data); }); context.request().endHandler((v) - clietRequest.end()); } private URI chooseServer(String serviceName) { URI uri = null; DiscoveryContext context = new DiscoveryContext(); context.setInputParameters(serviceName); DiscoveryTree discoveryTree = discoveryTrees.computeIfAbsent(serviceName, key - { return new DiscoveryTree(); }); VersionedCache serversVersionedCache = discoveryTree.discovery(context, RegistryUtils.getAppId(), serviceName, DefinitionConst.VERSION_RULE_ALL); Map String, MicroserviceInstance servers = serversVersionedCache.data(); String[] endpoints = asArray(servers); if (endpoints.length 0) { int index = Math.abs(counter.getAndIncrement() % endpoints.length); String endpoint = endpoints[index]; try { uri = new URI(endpoint); } catch (URISyntaxException e) { LOGGER.error( , e); } } return uri; } private String[] asArray(Map String, MicroserviceInstance servers) { List String endpoints = new LinkedList (); for (MicroserviceInstance instance : servers.values()) { endpoints.addAll(instance.getEndpoints()); } return endpoints.toArray(new String[endpoints.size()]); } } \u5b8c\u6210VertxHttpDispatcher\u5f00\u53d1\u540e\uff0c\u9700\u8981\u901a\u8fc7SPI\u7684\u65b9\u5f0f\u52a0\u8f7d\u5230\u7cfb\u7edf\u4e2d\uff0c\u9700\u8981\u589e\u52a0META-INF/services/org.apache.servicecomb.transport.rest.vertx.VertxHttpDispatcher\u914d\u7f6e\u6587\u4ef6\uff0c\u5e76\u5c06\u589e\u52a0\u7684\u4e24\u4e2a\u5b9e\u73b0\u5199\u5165\u8be5\u914d\u7f6e\u6587\u4ef6\u4e2d\u3002 \u7f51\u5173\u670d\u52a1\u5f00\u53d1\u5b8c\u6210\u540e\uff0c\u6240\u6709\u7684\u7528\u6237\u8bf7\u6c42\u90fd\u53ef\u4ee5\u901a\u8fc7\u7f51\u5173\u6765\u53d1\u9001\u3002\u5f00\u53d1\u8005\u901a\u8fc7\u901a\u8fc7\u8bbe\u7f6e\u9632\u706b\u5899\u7b49\u673a\u5236\uff0c\u9650\u5236\u7528\u6237\u76f4\u63a5\u8bbf\u95ee\u5185\u90e8\u670d\u52a1\uff0c\u4fdd\u8bc1\u5185\u90e8\u670d\u52a1\u7684\u5b89\u5168\u3002","title":"Gateway service"},{"location":"featured-topics/application-porter/https/","text":"HTTP\u534f\u8bae\u5df2\u9010\u6e10\u88ab\u6807\u8bb0\u4e3a\u4e0d\u5b89\u5168\uff0c\u914d\u7f6eHTTPS\u53ef\u4ee5\u9632\u6b62\u7528\u6237\u6570\u636e\u88ab\u7a83\u53d6\u548c\u7be1\u6539\uff0c\u63d0\u5347\u4e86\u5b89\u5168\u6027\u3002\u8003\u8651\u5230\u6027\u80fd\u7684\u5f71\u54cd\uff0c\u6211\u4eec\u53ea\u5728\u7f51\u5173\u4f7f\u7528HTTPS\u63a5\u5165\uff0c\u5185\u90e8\u670d\u52a1\u4e4b\u95f4\u4ecd\u7136\u4f7f\u7528HTTP\u3002 \u4f7f\u7528HTTPS\u4e4b\u524d\uff0c\u9700\u8981\u51c6\u5907\u8bc1\u4e66\u3002\u901a\u5e38\u662f\u5411\u6743\u5a01\u673a\u6784\u7533\u8bf7\uff0c\u8fd9\u6837\u7684\u8bc1\u4e66\u624d\u4f1a\u88ab\u6d4f\u89c8\u5668\u7b49\u8bbe\u5907\u6807\u8bb0\u4e3a\u53ef\u4fe1\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u901a\u8fc7\u5de5\u5177\u5df2\u7ecf\u751f\u6210\u597d\u7684\u8bc1\u4e66\u3002\u5e76\u4e14\u5c06\u81ea\u5df1\u7684\u8bc1\u4e66\u901a\u8fc7PKCS12\u683c\u5f0f\u5b58\u50a8\u5728server.p12\u6587\u4ef6\u4e2d\uff0c\u5c06CA\u7684\u8bc1\u4e66\u4f7f\u7528JKS\u683c\u5f0f\u5b58\u50a8\u5728trust.jks\u4e2d\u3002 \u7f51\u5173\u542f\u7528HTTP\u53ea\u9700\u8981\u5728\u76d1\u542c\u7684\u7aef\u53e3\u4e2d\u589e\u52a0sslEnabled\u914d\u7f6e\u9879\uff1a servicecomb: rest: address: 0.0.0.0:9090 ?sslEnabled=true \u7136\u540e\u589e\u52a0ssl\u76f8\u5173\u7684\u914d\u7f6e\u3002\u4e0b\u9762\u7684\u914d\u7f6e\u5305\u542b\u4e86TLS\u7684\u534f\u8bae\u3001\u662f\u5426\u8ba4\u8bc1\u5bf9\u7aef\u4ee5\u53ca\u8bc1\u4e66\u548c\u5bc6\u7801\u4fe1\u606f\u3002\u5176\u4e2d EdgeSSLCustom \u7528\u4e8e\u8bc1\u4e66\u8def\u5f84\u548c\u8bc1\u4e66\u5bc6\u7801\u7684\u8f6c\u6362\uff0c\u4e0d\u5b9e\u73b0\u7684\u65f6\u5019\uff0c\u9ed8\u8ba4\u4ece\u5f53\u524d\u76ee\u5f55\u8bfb\u53d6\u8bc1\u4e66\u6587\u4ef6\uff0c\u8bc1\u4e66\u7684\u5bc6\u7801\u660e\u6587\u5b58\u50a8\u3002\u5f53\u4e1a\u52a1\u9700\u8981\u505a\u4e00\u4e9b\u9ad8\u7ea7\u5b89\u5168\u7279\u6027\uff0c\u6bd4\u5982\u5bc6\u7801\u4fdd\u62a4\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u901a\u8fc7\u6269\u5c55\u8fd9\u4e2a\u7c7b\u5b9e\u73b0\u3002 ssl.protocols: TLSv1.2 ssl.authPeer: false ssl.checkCN.host: false ssl.trustStore: trust.jks ssl.trustStoreType: JKS ssl.trustStoreValue: Changeme_123 ssl.keyStore: server.p12 ssl.keyStoreType: PKCS12 ssl.keyStoreValue: Changeme_123 ssl.crl: revoke.crl ssl.sslCustomClass: org.apache.servicecomb.samples.porter.gateway.EdgeSSLCustom \u5f00\u53d1\u5b8c\u6210\u540e\uff0c\u8bbf\u95ee\u754c\u9762\u5c31\u53ef\u4ee5\u901a\u8fc7https\u8fdb\u884c\u4e86 https://localhost:9090/ui/porter-website/index.html","title":"Https"},{"location":"featured-topics/application-porter/porter-website/","text":"\u5f00\u53d1\u754c\u9762 \u5728\u6280\u672f\u9009\u62e9\u4e0a\uff0c\u754c\u9762\u5b8c\u5168\u7531html+js+css\u7b49\u9759\u6001\u7f51\u9875\u6280\u672f\u6784\u6210\uff0c\u4e0d\u91c7\u7528\u52a8\u6001\u9875\u9762\u6280\u672f\u3002\u91c7\u7528\u9759\u6001\u9875\u9762\u6280\u672f\u6784\u5efa\u754c\u9762\uff0c\u4f7f\u5f97\u6574\u4e2a\u5fae\u670d\u52a1\u7cfb\u7edf\u66f4\u52a0\u5177\u5907\u5f39\u6027\uff0c\u80fd\u591f\u975e\u5e38\u5bb9\u6613\u7684\u8fdb\u884c\u6269\u5bb9\uff0c\u76f8\u5173\u5f00\u53d1\u6210\u679c\u4e5f\u80fd\u591f\u66f4\u597d\u7684\u88ab\u5176\u4ed6\u5e94\u7528\u7ee7\u627f\u3002 \u91c7\u7528\u9759\u6001\u9875\u9762\u6280\u672f\uff0c\u4e5f\u4f7f\u5f97\u754c\u9762\u670d\u52a1\u90e8\u7f72\u66f4\u52a0\u7075\u6d3b\u591a\u6837\uff1a \u5c06\u9759\u6001\u9875\u9762\u90e8\u7f72\u5230nginx\uff0cnginx\u5c06REST\u8bf7\u6c42\u8f6c\u53d1\u5230gateway-service\u3002 \u5c06\u9759\u6001\u9875\u9762\u76f4\u63a5\u90e8\u7f72\u5230gateway-service\u3002 \u9759\u6001\u9875\u9762\u901a\u8fc7Tomcat\u3001Spring Boot\u7b49Web\u670d\u52a1\u5668\u90e8\u7f72\uff0c\u5e76\u6ce8\u518c\u5230\u670d\u52a1\u4e2d\u5fc3\uff0cgateway-service\u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230\u5bf9\u5e94\u7684\u5e94\u7528\u670d\u52a1\u5668\u4e0a\u3002 \u9759\u6001\u9875\u9762\u7531\u7b2c\u4e09\u65b9\u5f00\u53d1\uff0c\u7b2c\u4e09\u65b9\u76f4\u63a5\u901a\u8fc7gateway-service\u8bbf\u95eeREST\u63a5\u53e3\u3002\u7531\u7b2c\u4e09\u65b9\u9009\u62e9\u754c\u9762\u7684\u5f00\u53d1\u6280\u672f\u3002 \u8fd9\u51e0\u79cd\u65b9\u5f0f\u90fd\u88ab\u5e7f\u6cdb\u4f7f\u7528\u3002 \u5c06\u9759\u6001\u9875\u9762\u76f4\u63a5\u90e8\u7f72\u5230gateway-service \u5728 porter_lightweight \u9879\u76ee\u4e2d\uff0c\u91c7\u7528\u4e86\u5c06\u9759\u6001\u9875\u9762\u76f4\u63a5\u90e8\u7f72\u5230gateway-service\u7684\u65b9\u5f0f\uff0c\u8fd9\u79cd\u65b9\u5f0f\u7b80\u6d01\u9ad8\u6548\u3002\u8fd9\u79cd\u65b9\u5f0f\u7684\u6838\u5fc3\u4ee3\u7801\u662fStaticWebpageDispatcher\u3002\u5b83\u91c7\u7528vert.x\u63d0\u4f9b\u7684\u9759\u6001\u9875\u9762\u529f\u80fd\uff0c\u76f4\u63a5\u6302\u8f7d\u4e86\u9759\u6001\u9875\u9762\u670d\u52a1\u3002 public class StaticWebpageDispatcher implements VertxHttpDispatcher { private static final Logger LOGGER = LoggerFactory.getLogger(StaticWebpageDispatcher.class); private static final String WEB_ROOT = DynamicPropertyFactory.getInstance() .getStringProperty( gateway.webroot , /var/static ) .get(); @Override public int getOrder() { return Integer.MAX_VALUE; } @Override public void init(Router router) { String regex = /ui/(.*) ; StaticHandler webpageHandler = StaticHandler.create(); webpageHandler.setWebRoot(WEB_ROOT); LOGGER.info( server static web page for WEB_ROOT={} , WEB_ROOT); router.routeWithRegex(regex).failureHandler((context) - { LOGGER.error( , context.failure()); }).handler(webpageHandler); } } \u9759\u6001\u9875\u9762\u901a\u8fc7Tomcat\u3001Spring Boot\u7b49Web\u5bb9\u5668\u90e8\u7f72\uff0c\u5e76\u6ce8\u518c \u5728\u67b6\u6784\u56fe\u4e2d\uff0c\u754c\u9762\u7684\u8bf7\u6c42\u9700\u8981\u88ab\u7f51\u5173\u8f6c\u53d1\uff0c\u5e76\u4e14\u9700\u8981\u652f\u6301\u591a\u5b9e\u4f8b\u90e8\u7f72\uff0c\u56e0\u6b64\u754c\u9762\u670d\u52a1\u9700\u8981\u589e\u52a0\u7684\u529f\u80fd\u662f\u670d\u52a1\u6ce8\u518c\u548c\u53d1\u73b0\u3002\u6709\u4e24\u79cd\u65b9\u6cd5\u96c6\u6210\u548c\u4f7f\u7528J2EE\uff1a \u8fd0\u884c\u4e8e\u72ec\u7acb\u7684web\u670d\u52a1\u5668\u4e2d\uff0c\u5982tomcat\u7b49\u3002 \u8fd0\u884c\u4e8eSpring Boot\u7684Embedded Tomcat\u4e2d\u3002 \u5728Spring Boot\u4e2d\u63d0\u4f9b\u9759\u6001\u9875\u9762\u670d\u52a1\uff0c\u6838\u5fc3\u95ee\u9898\u662f\u89e3\u51b3\u670d\u52a1\u6ce8\u518c\u3001\u53d1\u73b0\u80fd\u529b\u3002\u5728Spring Boot\u7684Embeded Tomcat\u4e2d\u4f7f\u7528ServiceComb\u7684\u670d\u52a1\u6ce8\u518c\u53d1\u73b0\uff0c\u9700\u8981\u5b8c\u6210\u5982\u4e0b\u6b65\u9aa4\uff1a \u589e\u52a0\u4f9d\u8d56\u5173\u7cfb \u4f9d\u8d56\u5173\u7cfb\u5b9a\u4e49\u4e86\u5bf9\u4e8eSpring Boot\u7684\u4f9d\u8d56\u548cjava-chassis\u7684\u4f9d\u8d56\u3002 dependency groupId org.apache.servicecomb /groupId artifactId java-chassis-spring-boot-starter-servlet /artifactId /dependency \u914d\u7f6e\u5fae\u670d\u52a1\u4fe1\u606f(microservice.yaml) \u9700\u8981\u6ce8\u610f\u914d\u7f6e\u9879servicecomb.rest.address\u7684\u7aef\u53e3\u4e0eapplication.yml\u7684server.port\u4fdd\u6301\u4e00\u81f4\u3002application.yml\u662fSpring Boot\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u7528\u4e8e\u6307\u5b9aEmbeded Tomcat\u7684\u76d1\u542c\u7aef\u53e3\u3002microservice.yam\u7684\u4fe1\u606f\u7528\u4e8e\u670d\u52a1\u6ce8\u518c\u3002\u53e6\u5916\u4e5f\u9700\u8981\u6ce8\u610f\u4e00\u4e0b\u914d\u7f6e\u9879servicecomb.rest.servlet.urlPattern\uff0c\u5f53\u4f7f\u7528@EnableServiceComb\u65f6\uff0c\u4f1a\u52a0\u8f7dREST\u6846\u67b6org.apache.servicecomb.transport.rest.servlet. RestServlet\uff0c\u800c\u4e14\u9ed8\u8ba4\u63a5\u7ba1\u4e86/*\u7684\u8bf7\u6c42\u3002\u5728\u6211\u4eec\u7684\u573a\u666f\u4e0b\uff0c\u4ec5\u4ec5\u9700\u8981\u63d0\u4f9bweb\u9875\u9762\uff0c\u4e0d\u9700\u8981\u63d0\u4f9bREST\u670d\u52a1\uff0c\u8fd9\u4e2a\u914d\u7f6e\u9879\u7684\u542b\u4e49\u5c31\u662f\u5c06\u5b83\u7684\u8def\u5f84\u6539\u4e3a\u4e00\u4e2a\u548c\u9759\u6001\u9875\u9762\u4e0d\u51b2\u7a81\u7684\u8def\u5f84\uff0c\u4ee5\u4fdd\u8bc1\u9759\u6001\u9875\u9762\u80fd\u591f\u88ab\u6b63\u5e38\u8bbf\u95ee\u3002 APPLICATION_ID: porter service_description: name: porter-website version: 0.0.1 servicecomb: rest: address: 0.0.0.0:9093 servlet: urlPattern: /servicecomb/rest/* \u589e\u52a0\u9759\u6001\u9875\u9762 \u6309\u7167Spring Boot\u7684\u60ef\u4f8b\uff0c\u9759\u6001\u9875\u9762\u9700\u8981\u653e\u5230\u6e90\u4ee3\u7801\u7684resources/static\u76ee\u5f55\u3002\u9879\u76ee\u5f00\u59cb\u524d\uff0c\u589e\u52a0\u4e86\u5982\u4e0b\u9759\u6001\u9875\u9762\u548c\u76ee\u5f55\uff1a css js index.html \u4f7f\u7528@EnableServiceComb\u542f\u7528\u6ce8\u518c\u53d1\u73b0 @SpringBootApplication @EnableServiceComb public class WebsiteMain { public static void main(final String[] args) { SpringApplication.run(WebsiteMain.class, args); } } \u7ecf\u8fc7\u4ee5\u4e0a\u7684\u6b65\u9aa4\uff0c\u754c\u9762\u670d\u52a1\u5c31\u5f00\u53d1\u5b8c\u6210\u4e86\u3002\u901a\u8fc7\u8fd0\u884cWebsiteMain\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7 http://localhost:9093 \u6765\u8bbf\u95ee\u3002","title":"\u5f00\u53d1\u754c\u9762"},{"location":"featured-topics/application-porter/porter-website/#_1","text":"\u5728\u6280\u672f\u9009\u62e9\u4e0a\uff0c\u754c\u9762\u5b8c\u5168\u7531html+js+css\u7b49\u9759\u6001\u7f51\u9875\u6280\u672f\u6784\u6210\uff0c\u4e0d\u91c7\u7528\u52a8\u6001\u9875\u9762\u6280\u672f\u3002\u91c7\u7528\u9759\u6001\u9875\u9762\u6280\u672f\u6784\u5efa\u754c\u9762\uff0c\u4f7f\u5f97\u6574\u4e2a\u5fae\u670d\u52a1\u7cfb\u7edf\u66f4\u52a0\u5177\u5907\u5f39\u6027\uff0c\u80fd\u591f\u975e\u5e38\u5bb9\u6613\u7684\u8fdb\u884c\u6269\u5bb9\uff0c\u76f8\u5173\u5f00\u53d1\u6210\u679c\u4e5f\u80fd\u591f\u66f4\u597d\u7684\u88ab\u5176\u4ed6\u5e94\u7528\u7ee7\u627f\u3002 \u91c7\u7528\u9759\u6001\u9875\u9762\u6280\u672f\uff0c\u4e5f\u4f7f\u5f97\u754c\u9762\u670d\u52a1\u90e8\u7f72\u66f4\u52a0\u7075\u6d3b\u591a\u6837\uff1a \u5c06\u9759\u6001\u9875\u9762\u90e8\u7f72\u5230nginx\uff0cnginx\u5c06REST\u8bf7\u6c42\u8f6c\u53d1\u5230gateway-service\u3002 \u5c06\u9759\u6001\u9875\u9762\u76f4\u63a5\u90e8\u7f72\u5230gateway-service\u3002 \u9759\u6001\u9875\u9762\u901a\u8fc7Tomcat\u3001Spring Boot\u7b49Web\u670d\u52a1\u5668\u90e8\u7f72\uff0c\u5e76\u6ce8\u518c\u5230\u670d\u52a1\u4e2d\u5fc3\uff0cgateway-service\u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230\u5bf9\u5e94\u7684\u5e94\u7528\u670d\u52a1\u5668\u4e0a\u3002 \u9759\u6001\u9875\u9762\u7531\u7b2c\u4e09\u65b9\u5f00\u53d1\uff0c\u7b2c\u4e09\u65b9\u76f4\u63a5\u901a\u8fc7gateway-service\u8bbf\u95eeREST\u63a5\u53e3\u3002\u7531\u7b2c\u4e09\u65b9\u9009\u62e9\u754c\u9762\u7684\u5f00\u53d1\u6280\u672f\u3002 \u8fd9\u51e0\u79cd\u65b9\u5f0f\u90fd\u88ab\u5e7f\u6cdb\u4f7f\u7528\u3002","title":"\u5f00\u53d1\u754c\u9762"},{"location":"featured-topics/application-porter/porter-website/#gateway-service","text":"\u5728 porter_lightweight \u9879\u76ee\u4e2d\uff0c\u91c7\u7528\u4e86\u5c06\u9759\u6001\u9875\u9762\u76f4\u63a5\u90e8\u7f72\u5230gateway-service\u7684\u65b9\u5f0f\uff0c\u8fd9\u79cd\u65b9\u5f0f\u7b80\u6d01\u9ad8\u6548\u3002\u8fd9\u79cd\u65b9\u5f0f\u7684\u6838\u5fc3\u4ee3\u7801\u662fStaticWebpageDispatcher\u3002\u5b83\u91c7\u7528vert.x\u63d0\u4f9b\u7684\u9759\u6001\u9875\u9762\u529f\u80fd\uff0c\u76f4\u63a5\u6302\u8f7d\u4e86\u9759\u6001\u9875\u9762\u670d\u52a1\u3002 public class StaticWebpageDispatcher implements VertxHttpDispatcher { private static final Logger LOGGER = LoggerFactory.getLogger(StaticWebpageDispatcher.class); private static final String WEB_ROOT = DynamicPropertyFactory.getInstance() .getStringProperty( gateway.webroot , /var/static ) .get(); @Override public int getOrder() { return Integer.MAX_VALUE; } @Override public void init(Router router) { String regex = /ui/(.*) ; StaticHandler webpageHandler = StaticHandler.create(); webpageHandler.setWebRoot(WEB_ROOT); LOGGER.info( server static web page for WEB_ROOT={} , WEB_ROOT); router.routeWithRegex(regex).failureHandler((context) - { LOGGER.error( , context.failure()); }).handler(webpageHandler); } }","title":"\u5c06\u9759\u6001\u9875\u9762\u76f4\u63a5\u90e8\u7f72\u5230gateway-service"},{"location":"featured-topics/application-porter/porter-website/#tomcatspring-bootweb","text":"\u5728\u67b6\u6784\u56fe\u4e2d\uff0c\u754c\u9762\u7684\u8bf7\u6c42\u9700\u8981\u88ab\u7f51\u5173\u8f6c\u53d1\uff0c\u5e76\u4e14\u9700\u8981\u652f\u6301\u591a\u5b9e\u4f8b\u90e8\u7f72\uff0c\u56e0\u6b64\u754c\u9762\u670d\u52a1\u9700\u8981\u589e\u52a0\u7684\u529f\u80fd\u662f\u670d\u52a1\u6ce8\u518c\u548c\u53d1\u73b0\u3002\u6709\u4e24\u79cd\u65b9\u6cd5\u96c6\u6210\u548c\u4f7f\u7528J2EE\uff1a \u8fd0\u884c\u4e8e\u72ec\u7acb\u7684web\u670d\u52a1\u5668\u4e2d\uff0c\u5982tomcat\u7b49\u3002 \u8fd0\u884c\u4e8eSpring Boot\u7684Embedded Tomcat\u4e2d\u3002 \u5728Spring Boot\u4e2d\u63d0\u4f9b\u9759\u6001\u9875\u9762\u670d\u52a1\uff0c\u6838\u5fc3\u95ee\u9898\u662f\u89e3\u51b3\u670d\u52a1\u6ce8\u518c\u3001\u53d1\u73b0\u80fd\u529b\u3002\u5728Spring Boot\u7684Embeded Tomcat\u4e2d\u4f7f\u7528ServiceComb\u7684\u670d\u52a1\u6ce8\u518c\u53d1\u73b0\uff0c\u9700\u8981\u5b8c\u6210\u5982\u4e0b\u6b65\u9aa4\uff1a \u589e\u52a0\u4f9d\u8d56\u5173\u7cfb \u4f9d\u8d56\u5173\u7cfb\u5b9a\u4e49\u4e86\u5bf9\u4e8eSpring Boot\u7684\u4f9d\u8d56\u548cjava-chassis\u7684\u4f9d\u8d56\u3002 dependency groupId org.apache.servicecomb /groupId artifactId java-chassis-spring-boot-starter-servlet /artifactId /dependency \u914d\u7f6e\u5fae\u670d\u52a1\u4fe1\u606f(microservice.yaml) \u9700\u8981\u6ce8\u610f\u914d\u7f6e\u9879servicecomb.rest.address\u7684\u7aef\u53e3\u4e0eapplication.yml\u7684server.port\u4fdd\u6301\u4e00\u81f4\u3002application.yml\u662fSpring Boot\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u7528\u4e8e\u6307\u5b9aEmbeded Tomcat\u7684\u76d1\u542c\u7aef\u53e3\u3002microservice.yam\u7684\u4fe1\u606f\u7528\u4e8e\u670d\u52a1\u6ce8\u518c\u3002\u53e6\u5916\u4e5f\u9700\u8981\u6ce8\u610f\u4e00\u4e0b\u914d\u7f6e\u9879servicecomb.rest.servlet.urlPattern\uff0c\u5f53\u4f7f\u7528@EnableServiceComb\u65f6\uff0c\u4f1a\u52a0\u8f7dREST\u6846\u67b6org.apache.servicecomb.transport.rest.servlet. RestServlet\uff0c\u800c\u4e14\u9ed8\u8ba4\u63a5\u7ba1\u4e86/*\u7684\u8bf7\u6c42\u3002\u5728\u6211\u4eec\u7684\u573a\u666f\u4e0b\uff0c\u4ec5\u4ec5\u9700\u8981\u63d0\u4f9bweb\u9875\u9762\uff0c\u4e0d\u9700\u8981\u63d0\u4f9bREST\u670d\u52a1\uff0c\u8fd9\u4e2a\u914d\u7f6e\u9879\u7684\u542b\u4e49\u5c31\u662f\u5c06\u5b83\u7684\u8def\u5f84\u6539\u4e3a\u4e00\u4e2a\u548c\u9759\u6001\u9875\u9762\u4e0d\u51b2\u7a81\u7684\u8def\u5f84\uff0c\u4ee5\u4fdd\u8bc1\u9759\u6001\u9875\u9762\u80fd\u591f\u88ab\u6b63\u5e38\u8bbf\u95ee\u3002 APPLICATION_ID: porter service_description: name: porter-website version: 0.0.1 servicecomb: rest: address: 0.0.0.0:9093 servlet: urlPattern: /servicecomb/rest/* \u589e\u52a0\u9759\u6001\u9875\u9762 \u6309\u7167Spring Boot\u7684\u60ef\u4f8b\uff0c\u9759\u6001\u9875\u9762\u9700\u8981\u653e\u5230\u6e90\u4ee3\u7801\u7684resources/static\u76ee\u5f55\u3002\u9879\u76ee\u5f00\u59cb\u524d\uff0c\u589e\u52a0\u4e86\u5982\u4e0b\u9759\u6001\u9875\u9762\u548c\u76ee\u5f55\uff1a css js index.html \u4f7f\u7528@EnableServiceComb\u542f\u7528\u6ce8\u518c\u53d1\u73b0 @SpringBootApplication @EnableServiceComb public class WebsiteMain { public static void main(final String[] args) { SpringApplication.run(WebsiteMain.class, args); } } \u7ecf\u8fc7\u4ee5\u4e0a\u7684\u6b65\u9aa4\uff0c\u754c\u9762\u670d\u52a1\u5c31\u5f00\u53d1\u5b8c\u6210\u4e86\u3002\u901a\u8fc7\u8fd0\u884cWebsiteMain\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7 http://localhost:9093 \u6765\u8bbf\u95ee\u3002","title":"\u9759\u6001\u9875\u9762\u901a\u8fc7Tomcat\u3001Spring Boot\u7b49Web\u5bb9\u5668\u90e8\u7f72\uff0c\u5e76\u6ce8\u518c"},{"location":"featured-topics/application-porter/user-service/","text":"\u8bbf\u95ee\u6570\u636e\u5e93\u53ef\u4ee5\u4f7f\u7528\u7b2c\u4e09\u65b9\u63d0\u4f9b\u7684\u7ec4\u4ef6\u3002\u8fd9\u91cc\u9009\u62e9\u4e86MyBatis\u8bf4\u660e\u5982\u4f55\u8bbf\u95ee\u6570\u636e\u5e93\u3002\u5f00\u53d1\u8005\u4e5f\u53ef\u4ee5\u76f4\u63a5\u53c2\u8003\uff1a http://www.mybatis.org/spring/zh/index.html \u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e2a\u5feb\u901f\u96c6\u6210\u53c2\u8003\u3002\u5728\u672c\u7ae0\u4e2d\u6d89\u53ca\u5230\u5efa\u8868\u7b49\u6570\u636e\u5e93\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u6570\u636e\u5e93\u9009\u7528MySQL\u3002 \u8bbe\u8ba1\u8868 \u672c\u5e94\u7528\u63d0\u4f9b\u4e86\u975e\u5e38\u7b80\u5355\u7684\u7528\u6237\u7ba1\u7406\u548c\u57fa\u4e8e\u89d2\u8272\u7684\u9274\u6743\u673a\u5236\u3002\u56e0\u6b64\u6211\u4eec\u8bbe\u8ba1\u4e86\u975e\u5e38\u7b80\u5355\u7684\u7528\u6237\u8868\uff0c\u8868\u683c\u5305\u542b\u4e86\u7528\u6237\u540d\u79f0\u53ca\u7528\u6237\u6240\u5c5e\u7684\u89d2\u8272\u3002\u4e3a\u4e86\u6d4b\u8bd5\u7684\u76ee\u7684\uff0c\u8fd8\u63d2\u5165\u4e86\u4e24\u4e2a\u7528\u6237\u6570\u636e\uff0c\u5176\u4e2d\u5bc6\u7801\u91c7\u7528SHA256\u8fdb\u884c\u5355\u5411\u52a0\u5bc6\u4fdd\u5b58\u3002 CREATE DATABASE IF NOT EXISTS porter_user_db; USE porter_user_db; DROP TABLE IF EXISTS T_USER; CREATE TABLE `T_USER` ( `ID` INTEGER(20) NOT NULL COMMENT '\u7528\u6237ID', `USER_NAME` VARCHAR(64) NOT NULL COMMENT '\u7528\u6237\u540d\u79f0', `PASSWORD` VARCHAR(64) NOT NULL COMMENT '\u7528\u6237\u5bc6\u7801', `ROLE_NAME` VARCHAR(64) NOT NULL COMMENT '\u89d2\u8272\u540d\u79f0', PRIMARY KEY (`ID`) ); insert into T_USER(ID, USER_NAME, PASSWORD, ROLE_NAME) values(1, \"admin\", \"n4bQgYhMfWWaL+qgxVrQFaO/TxsrC4Is0V1sFbDwCgg=\", \"admin\"); insert into T_USER(ID, USER_NAME, PASSWORD, ROLE_NAME) values(2, \"guest\", \"n4bQgYhMfWWaL+qgxVrQFaO/TxsrC4Is0V1sFbDwCgg=\", \"guest\"); \u4f7f\u7528MyBatis \u5f15\u7528MyBatis\u7684\u76f8\u5173\u4f9d\u8d56 \u4f9d\u8d56\u5305\u542b\u4e86MyBatis\u548cSpring\u3001DBCP2\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u7ba1\u7406\u76f8\u5173\u7ec4\u4ef6\u3002\u8fd9\u4e9b\u7ec4\u4ef6\u90fd\u662f\u4f7f\u7528Spring\u548cMyBatis\u5fc5\u987b\u7684\u3002 dependency groupId org.mybatis /groupId artifactId mybatis /artifactId version 3.4.5 /version /dependency dependency groupId mysql /groupId artifactId mysql-connector-java /artifactId /dependency dependency groupId org.apache.commons /groupId artifactId commons-dbcp2 /artifactId /dependency dependency groupId org.mybatis /groupId artifactId mybatis-spring /artifactId version 1.3.0 /version /dependency dependency groupId org.springframework /groupId artifactId spring-jdbc /artifactId scope compile /scope /dependency dependency groupId org.springframework /groupId artifactId spring-aop /artifactId /dependency dependency groupId org.springframework /groupId artifactId spring-context-support /artifactId /dependency dependency groupId org.springframework /groupId artifactId spring-tx /artifactId /dependency \u914d\u7f6e\u6570\u636e\u6e90\u548cSqlSessionFactory \u6570\u636e\u6e90\u4f7f\u7528DBCP2\u3002SqlSessionFactory\u91cc\u9762\u6307\u5b9a\u4e86dataSource\u548cconfigLocation\u4e24\u4e2a\u5c5e\u6027\uff0c\u5e76\u65b0\u589e\u52a0\u4e86mybatis-config.xml\u6587\u4ef6\uff0c\u7528\u4e8e\u914d\u7f6emapper\u6587\u4ef6\u7684\u8def\u5f84\u3002 \u5728\u672c\u5fae\u670d\u52a1\u573a\u666f\u4e2d\uff0c\u53ea\u9700\u8981\u4f7f\u7528\u7b80\u5355\u7684\u6570\u636e\u5e93\u8fde\u63a5\u548c\u7b80\u5355\u4e8b\u52a1\u7ba1\u7406\uff0c\u5982\u679c\u9700\u8981\u4f7f\u7528\u590d\u6742\u7684\u4e8b\u52a1\u7ba1\u7406\uff0c\u8fd8\u9700\u8981\u914d\u7f6eXA\u6570\u636e\u6e90\u548c\u76f8\u5173\u7684\u4e8b\u52a1\u7ba1\u7406\u5668\u3002 \u6709\u5173MyBatis\u7684Configuration\u66f4\u52a0\u8be6\u7ec6\u7684\u4fe1\u606f\u53ef\u4ee5\u53c2\u8003\uff1a http://www.mybatis.org/mybatis-3/configuration.html \u3002 bean id= dataSource class= org.apache.commons.dbcp2.BasicDataSource destroy-method= close property name= driverClassName value= ${db.url:com.mysql.jdbc.Driver} / property name= url value= ${db.url:jdbc:mysql://localhost/porter_user_db} / property name= username value= ${db.username:root} / property name= password value= ${db.password:} / /bean bean id= sqlSessionFactory class= org.mybatis.spring.SqlSessionFactoryBean property name= dataSource ref= dataSource / property name= configLocation value= classpath:/config/mybatis-config.xml /property /bean \u4e66\u5199Mapper\u6587\u4ef6 \u6d89\u53ca\u5230JAVA\u7684Mapper\u5b9a\u4e49UserMapper\uff0cXML\u4e2d\u5b9a\u4e49SQL\u4e0eJAVA\u7684\u6620\u5c04\u5173\u7cfbUserMapper.xml\u3002\u5b9a\u4e49\u5b8c\u6210\u540e\uff0c\u9700\u8981\u5c06\u5185\u5bb9\u914d\u7f6e\u5230Mybatis\u7684\u626b\u63cf\u8def\u5f84\u548cSpring\u7684\u626b\u63cf\u8def\u5f84\u4e2d\uff0c\u6d89\u53ca\u6587\u4ef6mybatis-config.xml\u548cuser.bean.xml\u3002 ### mybatis-config.xml configuration mappers mapper resource= config/UserMapper.xml / /mappers /configuration ### user.bean.xml bean id= userMapper class= org.mybatis.spring.mapper.MapperFactoryBean property name= mapperInterface value= org.apache.servicecomb.samples.porter.user.dao.UserMapper / property name= sqlSessionFactory ref= sqlSessionFactory / /bean \u8bbe\u8ba1\u7528\u6237\u670d\u52a1 \u7ecf\u8fc7\u4e0a\u9762\u7684\u914d\u7f6e\uff0c\u6570\u636e\u5e93\u8bbf\u95ee\u76f8\u5173\u5f00\u53d1\u5df2\u7ecf\u5b8c\u6210\u4e86\u3002 \u7ed3\u5408User Story\uff0c\u53ef\u4ee5\u5148\u8bbe\u8ba1\u4e00\u4e2alogin\u7684\u670d\u52a1\u63a5\u53e3\u3002 \u8fd9\u4e2a\u670d\u52a1\u5728UserServiceEndpoint\u91cc\u9762\u8fdb\u884c\u5b9a\u4e49\u3002 @PostMapping(path = /login , produces = MediaType.APPLICATION_JSON_VALUE) public SessionInfo login(@RequestParam(name = userName ) String userName, @RequestParam(name = password ) String password) \u63a5\u53e3\u4f1a\u8fd4\u56deSessionInfo\uff0c\u8fd9\u4e9b\u5fc5\u8981\u7684\u4fe1\u606f\uff0c\u4f1a\u5728\u540e\u7eed\u7684\u9274\u6743\u3001\u8ba4\u8bc1\u64cd\u4f5c\u4e2d\u8d77\u5230\u5f88\u5927\u7684\u65b9\u4fbf\u3002 \u7ecf\u8fc7\u4ee5\u4e0a\u7684\u5f00\u53d1\uff0c\u5c31\u53ef\u4ee5\u542f\u52a8\u7528\u6237\u670d\u52a1\uff0c\u914d\u7f6e\u6570\u636e\u5e93\u548c\u63d2\u5165\u76f8\u5173\u6570\u636e\uff0c\u4ece\u754c\u9762\u8bbf\u95ee\u8fd9\u4e2a\u63a5\u53e3\u3002 #### \u8bbf\u95eelogin\u63a5\u53e3\u7684HTTP\u8bf7\u6c42\u548c\u54cd\u5e94 #Request POST http://localhost:9090/api/user-service/v1/user/login Content-Type: application/x-www-form-urlencoded userName=admin password=test #Response { id : 0, sessiondId : 1be646c0-50cb-4c0a-968d-2a512775f5e8 , userName : guest , roleName : guest , creationTime : null, activeTime : null }","title":"User service"},{"location":"featured-topics/application-porter/user-service/#_1","text":"\u672c\u5e94\u7528\u63d0\u4f9b\u4e86\u975e\u5e38\u7b80\u5355\u7684\u7528\u6237\u7ba1\u7406\u548c\u57fa\u4e8e\u89d2\u8272\u7684\u9274\u6743\u673a\u5236\u3002\u56e0\u6b64\u6211\u4eec\u8bbe\u8ba1\u4e86\u975e\u5e38\u7b80\u5355\u7684\u7528\u6237\u8868\uff0c\u8868\u683c\u5305\u542b\u4e86\u7528\u6237\u540d\u79f0\u53ca\u7528\u6237\u6240\u5c5e\u7684\u89d2\u8272\u3002\u4e3a\u4e86\u6d4b\u8bd5\u7684\u76ee\u7684\uff0c\u8fd8\u63d2\u5165\u4e86\u4e24\u4e2a\u7528\u6237\u6570\u636e\uff0c\u5176\u4e2d\u5bc6\u7801\u91c7\u7528SHA256\u8fdb\u884c\u5355\u5411\u52a0\u5bc6\u4fdd\u5b58\u3002 CREATE DATABASE IF NOT EXISTS porter_user_db; USE porter_user_db; DROP TABLE IF EXISTS T_USER; CREATE TABLE `T_USER` ( `ID` INTEGER(20) NOT NULL COMMENT '\u7528\u6237ID', `USER_NAME` VARCHAR(64) NOT NULL COMMENT '\u7528\u6237\u540d\u79f0', `PASSWORD` VARCHAR(64) NOT NULL COMMENT '\u7528\u6237\u5bc6\u7801', `ROLE_NAME` VARCHAR(64) NOT NULL COMMENT '\u89d2\u8272\u540d\u79f0', PRIMARY KEY (`ID`) ); insert into T_USER(ID, USER_NAME, PASSWORD, ROLE_NAME) values(1, \"admin\", \"n4bQgYhMfWWaL+qgxVrQFaO/TxsrC4Is0V1sFbDwCgg=\", \"admin\"); insert into T_USER(ID, USER_NAME, PASSWORD, ROLE_NAME) values(2, \"guest\", \"n4bQgYhMfWWaL+qgxVrQFaO/TxsrC4Is0V1sFbDwCgg=\", \"guest\");","title":"\u8bbe\u8ba1\u8868"},{"location":"featured-topics/application-porter/user-service/#mybatis","text":"\u5f15\u7528MyBatis\u7684\u76f8\u5173\u4f9d\u8d56 \u4f9d\u8d56\u5305\u542b\u4e86MyBatis\u548cSpring\u3001DBCP2\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u7ba1\u7406\u76f8\u5173\u7ec4\u4ef6\u3002\u8fd9\u4e9b\u7ec4\u4ef6\u90fd\u662f\u4f7f\u7528Spring\u548cMyBatis\u5fc5\u987b\u7684\u3002 dependency groupId org.mybatis /groupId artifactId mybatis /artifactId version 3.4.5 /version /dependency dependency groupId mysql /groupId artifactId mysql-connector-java /artifactId /dependency dependency groupId org.apache.commons /groupId artifactId commons-dbcp2 /artifactId /dependency dependency groupId org.mybatis /groupId artifactId mybatis-spring /artifactId version 1.3.0 /version /dependency dependency groupId org.springframework /groupId artifactId spring-jdbc /artifactId scope compile /scope /dependency dependency groupId org.springframework /groupId artifactId spring-aop /artifactId /dependency dependency groupId org.springframework /groupId artifactId spring-context-support /artifactId /dependency dependency groupId org.springframework /groupId artifactId spring-tx /artifactId /dependency \u914d\u7f6e\u6570\u636e\u6e90\u548cSqlSessionFactory \u6570\u636e\u6e90\u4f7f\u7528DBCP2\u3002SqlSessionFactory\u91cc\u9762\u6307\u5b9a\u4e86dataSource\u548cconfigLocation\u4e24\u4e2a\u5c5e\u6027\uff0c\u5e76\u65b0\u589e\u52a0\u4e86mybatis-config.xml\u6587\u4ef6\uff0c\u7528\u4e8e\u914d\u7f6emapper\u6587\u4ef6\u7684\u8def\u5f84\u3002 \u5728\u672c\u5fae\u670d\u52a1\u573a\u666f\u4e2d\uff0c\u53ea\u9700\u8981\u4f7f\u7528\u7b80\u5355\u7684\u6570\u636e\u5e93\u8fde\u63a5\u548c\u7b80\u5355\u4e8b\u52a1\u7ba1\u7406\uff0c\u5982\u679c\u9700\u8981\u4f7f\u7528\u590d\u6742\u7684\u4e8b\u52a1\u7ba1\u7406\uff0c\u8fd8\u9700\u8981\u914d\u7f6eXA\u6570\u636e\u6e90\u548c\u76f8\u5173\u7684\u4e8b\u52a1\u7ba1\u7406\u5668\u3002 \u6709\u5173MyBatis\u7684Configuration\u66f4\u52a0\u8be6\u7ec6\u7684\u4fe1\u606f\u53ef\u4ee5\u53c2\u8003\uff1a http://www.mybatis.org/mybatis-3/configuration.html \u3002 bean id= dataSource class= org.apache.commons.dbcp2.BasicDataSource destroy-method= close property name= driverClassName value= ${db.url:com.mysql.jdbc.Driver} / property name= url value= ${db.url:jdbc:mysql://localhost/porter_user_db} / property name= username value= ${db.username:root} / property name= password value= ${db.password:} / /bean bean id= sqlSessionFactory class= org.mybatis.spring.SqlSessionFactoryBean property name= dataSource ref= dataSource / property name= configLocation value= classpath:/config/mybatis-config.xml /property /bean \u4e66\u5199Mapper\u6587\u4ef6 \u6d89\u53ca\u5230JAVA\u7684Mapper\u5b9a\u4e49UserMapper\uff0cXML\u4e2d\u5b9a\u4e49SQL\u4e0eJAVA\u7684\u6620\u5c04\u5173\u7cfbUserMapper.xml\u3002\u5b9a\u4e49\u5b8c\u6210\u540e\uff0c\u9700\u8981\u5c06\u5185\u5bb9\u914d\u7f6e\u5230Mybatis\u7684\u626b\u63cf\u8def\u5f84\u548cSpring\u7684\u626b\u63cf\u8def\u5f84\u4e2d\uff0c\u6d89\u53ca\u6587\u4ef6mybatis-config.xml\u548cuser.bean.xml\u3002 ### mybatis-config.xml configuration mappers mapper resource= config/UserMapper.xml / /mappers /configuration ### user.bean.xml bean id= userMapper class= org.mybatis.spring.mapper.MapperFactoryBean property name= mapperInterface value= org.apache.servicecomb.samples.porter.user.dao.UserMapper / property name= sqlSessionFactory ref= sqlSessionFactory / /bean","title":"\u4f7f\u7528MyBatis"},{"location":"featured-topics/application-porter/user-service/#_2","text":"\u7ecf\u8fc7\u4e0a\u9762\u7684\u914d\u7f6e\uff0c\u6570\u636e\u5e93\u8bbf\u95ee\u76f8\u5173\u5f00\u53d1\u5df2\u7ecf\u5b8c\u6210\u4e86\u3002 \u7ed3\u5408User Story\uff0c\u53ef\u4ee5\u5148\u8bbe\u8ba1\u4e00\u4e2alogin\u7684\u670d\u52a1\u63a5\u53e3\u3002 \u8fd9\u4e2a\u670d\u52a1\u5728UserServiceEndpoint\u91cc\u9762\u8fdb\u884c\u5b9a\u4e49\u3002 @PostMapping(path = /login , produces = MediaType.APPLICATION_JSON_VALUE) public SessionInfo login(@RequestParam(name = userName ) String userName, @RequestParam(name = password ) String password) \u63a5\u53e3\u4f1a\u8fd4\u56deSessionInfo\uff0c\u8fd9\u4e9b\u5fc5\u8981\u7684\u4fe1\u606f\uff0c\u4f1a\u5728\u540e\u7eed\u7684\u9274\u6743\u3001\u8ba4\u8bc1\u64cd\u4f5c\u4e2d\u8d77\u5230\u5f88\u5927\u7684\u65b9\u4fbf\u3002 \u7ecf\u8fc7\u4ee5\u4e0a\u7684\u5f00\u53d1\uff0c\u5c31\u53ef\u4ee5\u542f\u52a8\u7528\u6237\u670d\u52a1\uff0c\u914d\u7f6e\u6570\u636e\u5e93\u548c\u63d2\u5165\u76f8\u5173\u6570\u636e\uff0c\u4ece\u754c\u9762\u8bbf\u95ee\u8fd9\u4e2a\u63a5\u53e3\u3002 #### \u8bbf\u95eelogin\u63a5\u53e3\u7684HTTP\u8bf7\u6c42\u548c\u54cd\u5e94 #Request POST http://localhost:9090/api/user-service/v1/user/login Content-Type: application/x-www-form-urlencoded userName=admin password=test #Response { id : 0, sessiondId : 1be646c0-50cb-4c0a-968d-2a512775f5e8 , userName : guest , roleName : guest , creationTime : null, activeTime : null }","title":"\u8bbe\u8ba1\u7528\u6237\u670d\u52a1"},{"location":"featured-topics/application-porter/user-story/","text":"\u5f00\u59cb\u524d\uff0c\u7ed9\u5e94\u7528\u53d6\u4e00\u4e2a\u540d\u5b57porter\u3002","title":"User story"},{"location":"featured-topics/features/configuration-sources/","text":"2.0.0 \u65b0\u7279\u6027\u4ecb\u7ecd\uff1a \u591a\u914d\u7f6e\u4e2d\u5fc3\u652f\u6301 \u5f88\u591a\u70ed\u5fc3\u7684\u5f00\u53d1\u8005\u7ed9 2.0.0 \u8d21\u732e\u4e86\u5f88\u591a\u65b0\u7684\u7279\u6027\uff0c @GuoYL123 \u8d21\u732e\u4e86 servicecomb-kie \u7684\u652f\u6301\uff0c @160731liupf \u8d21\u732e\u4e86 nacos \u7684\u652f\u6301\uff0c \u672c\u6587\u4ecb\u7ecd\u5f00\u53d1\u8005\u5982\u4f55\u5728\u81ea\u5df1\u7684\u9879\u76ee\u4e2d\u4f7f\u7528\u8fd9\u4e9b\u914d\u7f6e\u4e2d\u5fc3\u3002 Java Chassis \u914d\u7f6e\u6e90\u4ecb\u7ecd\u548c\u4f7f\u7528\u6307\u5357 \u914d\u7f6e\u4e2d\u5fc3\u662f\u5fae\u670d\u52a1\u67b6\u6784\u4e0b\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u4e2d\u95f4\u4ef6\uff0c\u901a\u8fc7\u914d\u7f6e\u4e2d\u5fc3\u7528\u6237\u53ef\u4ee5\u589e\u52a0\u548c\u5220\u9664\u914d\u7f6e\u4fe1\u606f\uff0c\u914d\u7f6e\u4fe1\u606f\u4f1a\u901a\u8fc7\u4e0d\u540c\u7684\u901a\u77e5\u673a\u5236\uff08\u901a\u5e38\u5305\u62ec PULL \u548c PUSH\uff09\uff0c \u5c06\u914d\u7f6e\u7684\u53d8\u5316\u63a8\u9001\u5230\u5fae\u670d\u52a1\u5b9e\u4f8b\u3002 java-chassis \u5141\u8bb8\u7528\u6237\u4f7f\u7528\u4e0d\u540c\u7684\u914d\u7f6e\u4e2d\u5fc3\uff0c \u76ee\u524d\u652f\u6301\u7528\u6237\u4f7f\u7528\u5982\u4e0b\u51e0\u79cd\u914d\u7f6e\u4e2d\u5fc3\uff1a \u534e\u4e3a\u4e91\u914d\u7f6e\u4e2d\u5fc3 \u534e\u4e3a\u4e91\u914d\u7f6e\u4e2d\u5fc3\u662f\u534e\u4e3a\u4e91CSE\u4ea7\u54c1\u7684\u4e00\u4e2a\u90e8\u4ef6\uff0cjava-chassis \u6700\u65e9\u4f7f\u7528\u5b83\u4f5c\u4e3a\u914d\u7f6e\u4e2d\u5fc3\u3002 \u5bf9\u63a5\u8fd9\u4e2a\u914d\u7f6e\u4e2d\u5fc3\u7684\u4ee3\u7801\u5728 config-cc \u6a21\u5757\u5b9e\u73b0\u3002 \u53ef\u4ee5\u4ece \u8f7b\u91cf\u5316\u5fae\u670d\u52a1\u5f15\u64ce \u4e0b\u8f7d\u672c\u5730\u4f7f\u7528\u7684\u7248\u672c\u3002\u4e5f\u53ef\u4ee5 \u76f4\u63a5\u8bbf\u95ee\u534e\u4e3a\u4e91 ServiceStage \u4ea7\u54c1\uff0c\u4f7f\u7528\u5728\u7ebf\u7684\u7248\u672c\u3002 \u4f7f\u7528\u534e\u4e3a\u4e91\u914d\u7f6e\u4e2d\u5fc3\uff0c\u9700\u8981\u5728\u9879\u76ee\u4e2d\u5f15\u5165\u5982\u4e0b\u4f9d\u8d56\uff1a dependency groupId org.apache.servicecomb /groupId artifactId config-cc /artifactId /dependency \u7136\u540e\u5728\u914d\u7f6e\u6587\u4ef6 microservice.yaml \u4e2d\u589e\u52a0\u5982\u4e0b\u914d\u7f6e\u9879\uff1a servicecomb: config: client: serverUri: http://127.0.0.1:30113 refreshMode: 0 refresh_interval: 5000 refreshPort: 30114 \u534e\u4e3a\u4e91\u914d\u7f6e\u4e2d\u5fc3\u7684\u5176\u4ed6\u914d\u7f6e\u9879\u542b\u4e49\u5982\u4e0b\uff1a \u914d\u7f6e\u9879\u540d \u63cf\u8ff0 servicecomb.config.client.refreshMode \u5e94\u7528\u914d\u7f6e\u7684\u5237\u65b0\u65b9\u5f0f\uff0c 0 \u4e3aconfig-center\u4e3b\u52a8push\uff0c 1 \u4e3aclient\u5468\u671fpull\uff0c\u9ed8\u8ba4\u4e3a 0 servicecomb.config.client.refreshPort config-center\u63a8\u9001\u914d\u7f6e\u7684\u7aef\u53e3 servicecomb.config.client.tenantName \u5e94\u7528\u7684\u79df\u6237\u540d\u79f0 servicecomb.config.client.serverUri config-center\u8bbf\u95ee\u5730\u5740\uff0c\u683c\u5f0f\u4e3a http(s)://{ip}:{port} \uff0c\u4ee5 , \u5206\u9694\u591a\u4e2a\u5730\u5740 servicecomb.config.client.refresh_interval pull\u6a21\u5f0f\u4e0b\u5237\u65b0\u914d\u7f6e\u9879\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u5355\u4f4d\u4e3a\u6beb\u79d2\uff0c\u9ed8\u8ba4\u503c\u4e3a30000 \u4f7f\u7528 servicecomb-kie servicecomb-kie \u662f\u5168\u65b0\u8bbe\u8ba1\u7684\u914d\u7f6e\u4e2d\u5fc3\u3002 \u4ece 2.0.0 \u7248\u672c\u5f00\u59cb\uff0c java-chassis \u652f\u6301\u4f7f\u7528 servicecomb-kie\u3002 \u4ece 2.0.1 \u7248\u672c\u5f00\u59cb\uff0c java-chassis \u9ed8\u8ba4\u4f7f\u7528long polling \u62c9\u53d6 servicecomb-kie \u914d\u7f6e\uff0c\u6765\u8282\u7701\u95f4\u9694\u8f6e\u8be2\u5e26\u6765\u7684\u7f51\u7edc\u6d88\u8017\u3002 servicecomb-kie \u7684\u5b89\u88c5\u6307\u5bfc\u53ef\u4ee5\u53c2\u8003\u5b98\u7f51\u6587\u6863\u3002 \u5728 java-chassis \u4e2d\u4f7f\u7528 servicecomb-kie\uff0c \u9700\u8981\u5f15\u5165\u4e0b\u9762\u7684\u4f9d\u8d56\uff1a dependency groupId org.apache.servicecomb /groupId artifactId config-kie /artifactId /dependency \u7136\u540e\u5728\u914d\u7f6e\u6587\u4ef6 microservice.yaml \u4e2d\u589e\u52a0\u5982\u4e0b\u914d\u7f6e\u9879\uff1a servicecomb: kie: serverUri: http://127.0.0.1:30110 refresh_interval: 5000 firstRefreshInterval: 5000 domainName: default servicecomb-kie \u7684\u914d\u7f6e\u9879\u53ca\u5176\u542b\u4e49\u5982\u4e0b\uff1a \u914d\u7f6e\u9879\u540d \u63cf\u8ff0 servicecomb.kie.domainName \u533a\u57df\u540d\u79f0\uff0c\u9ed8\u8ba4\u4e3adefault servicecomb.kie.serverUri servicecomb-kie\u8bbf\u95ee\u5730\u5740\uff0c\u683c\u5f0f\u4e3a http(s)://{ip}:{port} \uff0c\u4ee5 , \u5206\u9694\u591a\u4e2a\u5730\u5740 servicecomb.kie.refresh_interval pull\u6a21\u5f0f\u4e0b\u5237\u65b0\u914d\u7f6e\u9879\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u5355\u4f4d\u4e3a\u6beb\u79d2\uff0c\u9ed8\u8ba4\u503c\u4e3a3000 servicecomb.kie.firstRefreshInterval pull\u6a21\u5f0f\u4e0b\u542f\u52a8\u8fc7\u7a0b\u4e2d\u9996\u6b21\u5237\u65b0\u65f6\u95f4\u95f4\u9694\uff0c\u5355\u4f4d\u4e3a\u6beb\u79d2\uff0c\u9ed8\u8ba4\u503c\u4e3a3000 \u4f7f\u7528 nacos nacos \u662f alibaba \u63d0\u4f9b\u7684\u914d\u7f6e\u4e2d\u5fc3\u3002 java-chassis \u4ece 2.0.0 \u7248\u672c\u652f\u6301 nacos\u3002 nacos\u7684\u4e0b\u8f7d\u5b89\u88c5\u8bf7\u53c2\u8003\u5b98\u7f51\u4ecb\u7ecd\u3002 \u4f7f\u7528nacos\uff0c\u9700\u8981\u5728\u9879\u76ee\u4e2d\u5f15\u5165\u5982\u4e0b\u4f9d\u8d56\uff1a dependency groupId org.apache.servicecomb /groupId artifactId config-nacos /artifactId /dependency \u7136\u540e\u5728\u914d\u7f6e\u6587\u4ef6 microservice.yaml \u4e2d\u589e\u52a0\u5982\u4e0b\u914d\u7f6e\u9879\uff1a servicecomb: nacos: serverUri: http://127.0.0.1:8848 group: DEFAULT_GROUP dataId: example \u4f7f\u7528 Apollo Apollo \u662f\u643a\u7a0b\u6846\u67b6\u90e8\u95e8\u7814\u53d1\u7684\u5206\u5e03\u5f0f\u914d\u7f6e\u4e2d\u5fc3\u3002 Apollo\u7684\u4e0b\u8f7d\u5b89\u88c5\u8bf7\u53c2\u8003\u5b98\u7f51\u4ecb\u7ecd\u3002 dependency groupId org.apache.servicecomb /groupId artifactId config-apollo /artifactId /dependency \u7136\u540e\u5728\u914d\u7f6e\u6587\u4ef6 microservice.yaml \u4e2d\u589e\u52a0\u5982\u4e0b\u914d\u7f6e\u9879\uff1a apollo: config: serverUri: http://127.0.0.1:8070 serviceName: apollo-test env: DEV clusters: test-cluster namespace: application token: xxx refreshInterval: 30 firstRefreshInterval: 0 \u53c2\u4e0e\u914d\u7f6e\u6e90\u7684\u5f00\u53d1\u548c\u8d21\u732e 2.0.0 \u7248\u672c\u63d0\u4f9b\u4e864\u79cd\u914d\u7f6e\u6e90\u7684\u652f\u6301\uff0c \u5982\u679c\u91c7\u7528 Spring Boot \u8fd0\u884c\u6a21\u5f0f\uff0c \u7531\u4e8e Java Chassis \u7ee7\u627f\u548c\u9002\u914d\u4e86 Spring Boot \u7684 \u914d\u7f6e\u6e90\uff0c \u56e0\u6b64 Spring Boot \u91c7\u7528\u7684\u914d\u7f6e\u6e90\u4e5f\u53ef\u4ee5\u5e73\u6ed1\u7684\u88ab Java Chassis \u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u3002 \u6bd4\u5982 Java Chassis \u5728 Spring Boot \u96c6\u6210\u6a21\u5f0f\u4e0b\u4f7f\u7528 application.yml \u4f5c\u4e3a\u914d\u7f6e\u6587\u4ef6\uff0c \u53ef\u4ee5\u4f7f\u7528 git \u4f5c\u4e3a\u52a8\u6001\u914d\u7f6e\u6e90\u3002 \u56e0\u6b64\uff0c Java Chassis \u5df2\u7ecf\u652f\u6301\u5927\u90e8\u5206\u5f00\u53d1\u8005\u80fd\u591f\u4f7f\u7528\u7684\u914d\u7f6e\u6e90\u3002 \u7136\u800c\uff0c\u76ee\u524d\u7684\u652f\u6301\u4ecd\u7136\u662f\u4e0d\u591f\u7684\uff0c \u6bcf\u4e00\u4e2a\u4e0d\u540c\u7684\u914d\u7f6e\u4e2d\u5fc3 \u90fd\u63d0\u4f9b\u4e86\u975e\u5e38\u72ec\u7279\u7684\u529f\u80fd\uff0c Java Chassis \u53ea\u662f\u96c6\u6210\u4e86\u5b83\u4eec\u6781\u5c11\u7684\u6838\u5fc3\u529f\u80fd\uff0c \u7ef4\u62a4\u4e00\u4e2a\u914d\u7f6e\u4e2d\u5fc3\u7684\u652f\u6301\uff0c\u9700\u8981\u957f\u671f\u5927\u91cf\u7684\u5e94\u7528 \u9a8c\u8bc1\uff0c\u624d\u80fd\u591f\u628a\u529f\u80fd\u505a\u7684\u7a33\u5b9a\u548c\u5f3a\u5927\u3002 \u56e0\u6b64\uff0c\u914d\u7f6e\u4e2d\u5fc3\u7684\u652f\u6301\u8fd8\u9700\u8981\u5f00\u53d1\u8005\u5e2e\u52a9\u6301\u7eed\u7684\u8d21\u732e\u4ee3\u7801\u3002 Java Chassis \u7684\u914d\u7f6e\u6269\u5c55\u662f\u57fa\u4e8e archaius \uff0c \u5f00\u53d1\u8005\u53ea\u9700\u8981\u5b9e\u73b0 ConfigCenterConfigurationSource , \u5373\u53ef\u4ee5\u63a5\u5165\u5176\u4ed6\u914d\u7f6e\u4e2d\u5fc3\u3002 Java Chassis \u7684\u6e90\u7801\u76ee\u5f55 config-cc\uff0c config-apollo, config-kie, config-nacos \u5206\u522b\u5b9e\u73b0\u4e86 \u8fd9\u4e2a\u63a5\u53e3\u3002 nacos \u652f\u6301PR servicecomb-kie \u652f\u6301PR Java Chassis \u901a\u7528\u914d\u7f6e\u8bf4\u660e","title":"2.0.0 \u65b0\u7279\u6027\u4ecb\u7ecd\uff1a \u591a\u914d\u7f6e\u4e2d\u5fc3\u652f\u6301"},{"location":"featured-topics/features/configuration-sources/#200","text":"\u5f88\u591a\u70ed\u5fc3\u7684\u5f00\u53d1\u8005\u7ed9 2.0.0 \u8d21\u732e\u4e86\u5f88\u591a\u65b0\u7684\u7279\u6027\uff0c @GuoYL123 \u8d21\u732e\u4e86 servicecomb-kie \u7684\u652f\u6301\uff0c @160731liupf \u8d21\u732e\u4e86 nacos \u7684\u652f\u6301\uff0c \u672c\u6587\u4ecb\u7ecd\u5f00\u53d1\u8005\u5982\u4f55\u5728\u81ea\u5df1\u7684\u9879\u76ee\u4e2d\u4f7f\u7528\u8fd9\u4e9b\u914d\u7f6e\u4e2d\u5fc3\u3002","title":"2.0.0 \u65b0\u7279\u6027\u4ecb\u7ecd\uff1a \u591a\u914d\u7f6e\u4e2d\u5fc3\u652f\u6301"},{"location":"featured-topics/features/configuration-sources/#java-chassis","text":"\u914d\u7f6e\u4e2d\u5fc3\u662f\u5fae\u670d\u52a1\u67b6\u6784\u4e0b\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u4e2d\u95f4\u4ef6\uff0c\u901a\u8fc7\u914d\u7f6e\u4e2d\u5fc3\u7528\u6237\u53ef\u4ee5\u589e\u52a0\u548c\u5220\u9664\u914d\u7f6e\u4fe1\u606f\uff0c\u914d\u7f6e\u4fe1\u606f\u4f1a\u901a\u8fc7\u4e0d\u540c\u7684\u901a\u77e5\u673a\u5236\uff08\u901a\u5e38\u5305\u62ec PULL \u548c PUSH\uff09\uff0c \u5c06\u914d\u7f6e\u7684\u53d8\u5316\u63a8\u9001\u5230\u5fae\u670d\u52a1\u5b9e\u4f8b\u3002 java-chassis \u5141\u8bb8\u7528\u6237\u4f7f\u7528\u4e0d\u540c\u7684\u914d\u7f6e\u4e2d\u5fc3\uff0c \u76ee\u524d\u652f\u6301\u7528\u6237\u4f7f\u7528\u5982\u4e0b\u51e0\u79cd\u914d\u7f6e\u4e2d\u5fc3\uff1a \u534e\u4e3a\u4e91\u914d\u7f6e\u4e2d\u5fc3 \u534e\u4e3a\u4e91\u914d\u7f6e\u4e2d\u5fc3\u662f\u534e\u4e3a\u4e91CSE\u4ea7\u54c1\u7684\u4e00\u4e2a\u90e8\u4ef6\uff0cjava-chassis \u6700\u65e9\u4f7f\u7528\u5b83\u4f5c\u4e3a\u914d\u7f6e\u4e2d\u5fc3\u3002 \u5bf9\u63a5\u8fd9\u4e2a\u914d\u7f6e\u4e2d\u5fc3\u7684\u4ee3\u7801\u5728 config-cc \u6a21\u5757\u5b9e\u73b0\u3002 \u53ef\u4ee5\u4ece \u8f7b\u91cf\u5316\u5fae\u670d\u52a1\u5f15\u64ce \u4e0b\u8f7d\u672c\u5730\u4f7f\u7528\u7684\u7248\u672c\u3002\u4e5f\u53ef\u4ee5 \u76f4\u63a5\u8bbf\u95ee\u534e\u4e3a\u4e91 ServiceStage \u4ea7\u54c1\uff0c\u4f7f\u7528\u5728\u7ebf\u7684\u7248\u672c\u3002 \u4f7f\u7528\u534e\u4e3a\u4e91\u914d\u7f6e\u4e2d\u5fc3\uff0c\u9700\u8981\u5728\u9879\u76ee\u4e2d\u5f15\u5165\u5982\u4e0b\u4f9d\u8d56\uff1a dependency groupId org.apache.servicecomb /groupId artifactId config-cc /artifactId /dependency \u7136\u540e\u5728\u914d\u7f6e\u6587\u4ef6 microservice.yaml \u4e2d\u589e\u52a0\u5982\u4e0b\u914d\u7f6e\u9879\uff1a servicecomb: config: client: serverUri: http://127.0.0.1:30113 refreshMode: 0 refresh_interval: 5000 refreshPort: 30114 \u534e\u4e3a\u4e91\u914d\u7f6e\u4e2d\u5fc3\u7684\u5176\u4ed6\u914d\u7f6e\u9879\u542b\u4e49\u5982\u4e0b\uff1a \u914d\u7f6e\u9879\u540d \u63cf\u8ff0 servicecomb.config.client.refreshMode \u5e94\u7528\u914d\u7f6e\u7684\u5237\u65b0\u65b9\u5f0f\uff0c 0 \u4e3aconfig-center\u4e3b\u52a8push\uff0c 1 \u4e3aclient\u5468\u671fpull\uff0c\u9ed8\u8ba4\u4e3a 0 servicecomb.config.client.refreshPort config-center\u63a8\u9001\u914d\u7f6e\u7684\u7aef\u53e3 servicecomb.config.client.tenantName \u5e94\u7528\u7684\u79df\u6237\u540d\u79f0 servicecomb.config.client.serverUri config-center\u8bbf\u95ee\u5730\u5740\uff0c\u683c\u5f0f\u4e3a http(s)://{ip}:{port} \uff0c\u4ee5 , \u5206\u9694\u591a\u4e2a\u5730\u5740 servicecomb.config.client.refresh_interval pull\u6a21\u5f0f\u4e0b\u5237\u65b0\u914d\u7f6e\u9879\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u5355\u4f4d\u4e3a\u6beb\u79d2\uff0c\u9ed8\u8ba4\u503c\u4e3a30000 \u4f7f\u7528 servicecomb-kie servicecomb-kie \u662f\u5168\u65b0\u8bbe\u8ba1\u7684\u914d\u7f6e\u4e2d\u5fc3\u3002 \u4ece 2.0.0 \u7248\u672c\u5f00\u59cb\uff0c java-chassis \u652f\u6301\u4f7f\u7528 servicecomb-kie\u3002 \u4ece 2.0.1 \u7248\u672c\u5f00\u59cb\uff0c java-chassis \u9ed8\u8ba4\u4f7f\u7528long polling \u62c9\u53d6 servicecomb-kie \u914d\u7f6e\uff0c\u6765\u8282\u7701\u95f4\u9694\u8f6e\u8be2\u5e26\u6765\u7684\u7f51\u7edc\u6d88\u8017\u3002 servicecomb-kie \u7684\u5b89\u88c5\u6307\u5bfc\u53ef\u4ee5\u53c2\u8003\u5b98\u7f51\u6587\u6863\u3002 \u5728 java-chassis \u4e2d\u4f7f\u7528 servicecomb-kie\uff0c \u9700\u8981\u5f15\u5165\u4e0b\u9762\u7684\u4f9d\u8d56\uff1a dependency groupId org.apache.servicecomb /groupId artifactId config-kie /artifactId /dependency \u7136\u540e\u5728\u914d\u7f6e\u6587\u4ef6 microservice.yaml \u4e2d\u589e\u52a0\u5982\u4e0b\u914d\u7f6e\u9879\uff1a servicecomb: kie: serverUri: http://127.0.0.1:30110 refresh_interval: 5000 firstRefreshInterval: 5000 domainName: default servicecomb-kie \u7684\u914d\u7f6e\u9879\u53ca\u5176\u542b\u4e49\u5982\u4e0b\uff1a \u914d\u7f6e\u9879\u540d \u63cf\u8ff0 servicecomb.kie.domainName \u533a\u57df\u540d\u79f0\uff0c\u9ed8\u8ba4\u4e3adefault servicecomb.kie.serverUri servicecomb-kie\u8bbf\u95ee\u5730\u5740\uff0c\u683c\u5f0f\u4e3a http(s)://{ip}:{port} \uff0c\u4ee5 , \u5206\u9694\u591a\u4e2a\u5730\u5740 servicecomb.kie.refresh_interval pull\u6a21\u5f0f\u4e0b\u5237\u65b0\u914d\u7f6e\u9879\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u5355\u4f4d\u4e3a\u6beb\u79d2\uff0c\u9ed8\u8ba4\u503c\u4e3a3000 servicecomb.kie.firstRefreshInterval pull\u6a21\u5f0f\u4e0b\u542f\u52a8\u8fc7\u7a0b\u4e2d\u9996\u6b21\u5237\u65b0\u65f6\u95f4\u95f4\u9694\uff0c\u5355\u4f4d\u4e3a\u6beb\u79d2\uff0c\u9ed8\u8ba4\u503c\u4e3a3000 \u4f7f\u7528 nacos nacos \u662f alibaba \u63d0\u4f9b\u7684\u914d\u7f6e\u4e2d\u5fc3\u3002 java-chassis \u4ece 2.0.0 \u7248\u672c\u652f\u6301 nacos\u3002 nacos\u7684\u4e0b\u8f7d\u5b89\u88c5\u8bf7\u53c2\u8003\u5b98\u7f51\u4ecb\u7ecd\u3002 \u4f7f\u7528nacos\uff0c\u9700\u8981\u5728\u9879\u76ee\u4e2d\u5f15\u5165\u5982\u4e0b\u4f9d\u8d56\uff1a dependency groupId org.apache.servicecomb /groupId artifactId config-nacos /artifactId /dependency \u7136\u540e\u5728\u914d\u7f6e\u6587\u4ef6 microservice.yaml \u4e2d\u589e\u52a0\u5982\u4e0b\u914d\u7f6e\u9879\uff1a servicecomb: nacos: serverUri: http://127.0.0.1:8848 group: DEFAULT_GROUP dataId: example \u4f7f\u7528 Apollo Apollo \u662f\u643a\u7a0b\u6846\u67b6\u90e8\u95e8\u7814\u53d1\u7684\u5206\u5e03\u5f0f\u914d\u7f6e\u4e2d\u5fc3\u3002 Apollo\u7684\u4e0b\u8f7d\u5b89\u88c5\u8bf7\u53c2\u8003\u5b98\u7f51\u4ecb\u7ecd\u3002 dependency groupId org.apache.servicecomb /groupId artifactId config-apollo /artifactId /dependency \u7136\u540e\u5728\u914d\u7f6e\u6587\u4ef6 microservice.yaml \u4e2d\u589e\u52a0\u5982\u4e0b\u914d\u7f6e\u9879\uff1a apollo: config: serverUri: http://127.0.0.1:8070 serviceName: apollo-test env: DEV clusters: test-cluster namespace: application token: xxx refreshInterval: 30 firstRefreshInterval: 0","title":"Java Chassis \u914d\u7f6e\u6e90\u4ecb\u7ecd\u548c\u4f7f\u7528\u6307\u5357"},{"location":"featured-topics/features/configuration-sources/#_1","text":"2.0.0 \u7248\u672c\u63d0\u4f9b\u4e864\u79cd\u914d\u7f6e\u6e90\u7684\u652f\u6301\uff0c \u5982\u679c\u91c7\u7528 Spring Boot \u8fd0\u884c\u6a21\u5f0f\uff0c \u7531\u4e8e Java Chassis \u7ee7\u627f\u548c\u9002\u914d\u4e86 Spring Boot \u7684 \u914d\u7f6e\u6e90\uff0c \u56e0\u6b64 Spring Boot \u91c7\u7528\u7684\u914d\u7f6e\u6e90\u4e5f\u53ef\u4ee5\u5e73\u6ed1\u7684\u88ab Java Chassis \u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u3002 \u6bd4\u5982 Java Chassis \u5728 Spring Boot \u96c6\u6210\u6a21\u5f0f\u4e0b\u4f7f\u7528 application.yml \u4f5c\u4e3a\u914d\u7f6e\u6587\u4ef6\uff0c \u53ef\u4ee5\u4f7f\u7528 git \u4f5c\u4e3a\u52a8\u6001\u914d\u7f6e\u6e90\u3002 \u56e0\u6b64\uff0c Java Chassis \u5df2\u7ecf\u652f\u6301\u5927\u90e8\u5206\u5f00\u53d1\u8005\u80fd\u591f\u4f7f\u7528\u7684\u914d\u7f6e\u6e90\u3002 \u7136\u800c\uff0c\u76ee\u524d\u7684\u652f\u6301\u4ecd\u7136\u662f\u4e0d\u591f\u7684\uff0c \u6bcf\u4e00\u4e2a\u4e0d\u540c\u7684\u914d\u7f6e\u4e2d\u5fc3 \u90fd\u63d0\u4f9b\u4e86\u975e\u5e38\u72ec\u7279\u7684\u529f\u80fd\uff0c Java Chassis \u53ea\u662f\u96c6\u6210\u4e86\u5b83\u4eec\u6781\u5c11\u7684\u6838\u5fc3\u529f\u80fd\uff0c \u7ef4\u62a4\u4e00\u4e2a\u914d\u7f6e\u4e2d\u5fc3\u7684\u652f\u6301\uff0c\u9700\u8981\u957f\u671f\u5927\u91cf\u7684\u5e94\u7528 \u9a8c\u8bc1\uff0c\u624d\u80fd\u591f\u628a\u529f\u80fd\u505a\u7684\u7a33\u5b9a\u548c\u5f3a\u5927\u3002 \u56e0\u6b64\uff0c\u914d\u7f6e\u4e2d\u5fc3\u7684\u652f\u6301\u8fd8\u9700\u8981\u5f00\u53d1\u8005\u5e2e\u52a9\u6301\u7eed\u7684\u8d21\u732e\u4ee3\u7801\u3002 Java Chassis \u7684\u914d\u7f6e\u6269\u5c55\u662f\u57fa\u4e8e archaius \uff0c \u5f00\u53d1\u8005\u53ea\u9700\u8981\u5b9e\u73b0 ConfigCenterConfigurationSource , \u5373\u53ef\u4ee5\u63a5\u5165\u5176\u4ed6\u914d\u7f6e\u4e2d\u5fc3\u3002 Java Chassis \u7684\u6e90\u7801\u76ee\u5f55 config-cc\uff0c config-apollo, config-kie, config-nacos \u5206\u522b\u5b9e\u73b0\u4e86 \u8fd9\u4e2a\u63a5\u53e3\u3002 nacos \u652f\u6301PR servicecomb-kie \u652f\u6301PR Java Chassis \u901a\u7528\u914d\u7f6e\u8bf4\u660e","title":"\u53c2\u4e0e\u914d\u7f6e\u6e90\u7684\u5f00\u53d1\u548c\u8d21\u732e"},{"location":"featured-topics/features/date-time/","text":"2.0.1 \u65b0\u7279\u6027\u4ecb\u7ecd\uff1a date\u548cdate-time OpenAPI \u9488\u5bf9\u65f6\u95f4\u5b9a\u4e49\u4e86\u4e24\u79cd\u7c7b\u578b date \u548c date-time \u3002 JavaChassis \u57282.0.1\u4e4b\u524d\u7684\u7248\u672c\u53ea\u652f\u6301\u4f7f\u7528 date-time\uff0c\u800c\u4e14\u5fc5\u987b\u8981\u6c42\u4f7f\u7528 java.util.Date \u4f5c\u4e3a\u8fd0\u884c\u65f6\u7c7b\u578b\uff0c 2.0.1 \u7248\u672c\u6269\u5145\u4e86 date \u548c date-time \u7684\u5b9e\u73b0\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u4f7f\u7528\u66f4\u52a0\u7075\u6d3b\u7684\u65b9\u5f0f\u4f7f\u7528\u8fd9\u4e24\u79cd\u7c7b\u578b\u3002 \u4f7f\u7528 date \u53ef\u4ee5\u5728 query, path, body \u7b49\u53c2\u6570\u4e2d\u4f7f\u7528 date \u7c7b\u578b\u3002 date \u7c7b\u578b\u5bf9\u5e94\u7684 Java \u7c7b\u578b\u4e3a java.time.LocalDate \u3002 \u4f7f\u7528 Spring MVC\uff0c \u5206\u522b\u91c7\u7528\u5982\u4e0b\u65b9\u5f0f\u5b9a\u4e49\u63a5\u53e3\uff1a @GetMapping(path = /getLocalDate ) public LocalDate getLocalDate(@RequestParam( date ) LocalDate date) { return date; } @GetMapping(path = /getLocalDate/{date} ) public LocalDate getLocalDatePath(@PathParam( date ) LocalDate date) { return date; } @PostMapping(path = /postLocalDate ) public LocalDate postLocalDate(@RequestBody LocalDate date) { return date; } \u5176\u4e2d getLocalDatePath \u63a5\u53e3\u5b9a\u4e49\u751f\u6210\u7684 swagger \u63cf\u8ff0\u5982\u4e0b\uff1a /getLocalDate/{date}: get: operationId: getLocalDatePath parameters: - name: date in: path required: true type: string format: date responses: 200 : description: response of 200 schema: type: string format: date \u53ef\u4ee5\u770b\u51fa\uff0cdate \u5728\u7f51\u7edc\u4e0a\u662f\u901a\u8fc7 String \u8fdb\u884c\u7f16\u7801\u8fdb\u884c\u4f20\u8f93\u7684\uff0c \u683c\u5f0f\u662f\u6807\u51c6\u7684\u683c\u5f0f\uff0c \u6bd4\u5982 2020-02-20 \u3002 \u4f7f\u7528 date-time \u53ef\u4ee5\u5728 query, path, body \u7b49\u53c2\u6570\u4e2d\u4f7f\u7528 date-time \u7c7b\u578b\u3002 date \u7c7b\u578b\u5bf9\u5e94\u7684 Java \u7c7b\u578b\u4e3a java.time.LocalDateTime \uff0c \u6216\u8005 java.util.Date \u3002 \u4f7f\u7528 Spring MVC\uff0c \u5206\u522b\u91c7\u7528\u5982\u4e0b\u65b9\u5f0f\u5b9a\u4e49\u63a5\u53e3\uff1a @GetMapping(path = /getDate ) public Date getDate(@RequestParam( date ) Date date) { return date; } @GetMapping(path = /getDatePath/{date} ) public Date getDatePath(@PathParam( date ) Date date) { return date; } @PostMapping(path = /postDate ) public Date postDate(@RequestBody Date date) { return date; } @GetMapping(path = /getLocalDateTime ) public LocalDateTime getLocalDateTime(@RequestParam( date ) LocalDateTime date) { return date; } @GetMapping(path = /getLocalDateTime/{date} ) public LocalDateTime getLocalDateTimePath(@PathParam( date ) LocalDateTime date) { return date; } @PostMapping(path = /postLocalDateTime ) public LocalDateTime postLocalDateTime(@RequestBody LocalDateTime date) { return date; } \u5176\u4e2d getLocalDateTimePath \u63a5\u53e3\u5b9a\u4e49\u751f\u6210\u7684 swagger \u63cf\u8ff0\u5982\u4e0b\uff1a /getLocalDateTime/{date}: get: operationId: getLocalDateTimePath parameters: - name: date in: path required: true type: string format: date-time responses: 200 : description: response of 200 schema: type: string format: date-time \u53ef\u4ee5\u770b\u51fa\uff0cdate-time \u5728\u7f51\u7edc\u4e0a\u662f\u901a\u8fc7 String \u8fdb\u884c\u7f16\u7801\u8fdb\u884c\u4f20\u8f93\u7684\uff0c \u683c\u5f0f\u662f\u6807\u51c6\u7684\u683c\u5f0f\uff0c \u6bd4\u5982 2017-07-21T17:32:28Z \u3002 \u7531\u4e8e date-time \u7684\u6807\u51c6\u683c\u5f0f\u5305\u542b\u7279\u6b8a\u5b57\u7b26\uff0c\u5728\u4f5c\u4e3a query \u6216\u8005 path \u53c2\u6570\u7684\u65f6\u5019\uff0c \u9700\u8981\u505a\u597d URL \u7f16\u89e3\u7801\uff0c \u7f51\u7edc\u4e0a\u4f20\u9012\u7684\u5b9e\u9645\u5185\u5bb9\u4e3a 2017-07-21T17%3A32%3A28Z \uff0c \u6bd4\u5982\uff1a http://localhost:8082/dateTime/getLocalDateTime?date=2017-07-21T17%3A32%3A28Z , \u4f5c\u4e3a body \u53c2\u6570\uff0c \u5185\u5bb9\u4e0d\u4f1a\u7f16\u89e3\u7801\uff0c \u662f\u5f15\u53f7\u5305\u542b\u8d77\u6765\u7684 String \u7c7b\u578b\uff0c \u6bd4\u5982 \"2017-07-21T17:32:28Z\" \u3002","title":"2.0.1 \u65b0\u7279\u6027\u4ecb\u7ecd\uff1a date\u548cdate-time"},{"location":"featured-topics/features/date-time/#201-datedate-time","text":"OpenAPI \u9488\u5bf9\u65f6\u95f4\u5b9a\u4e49\u4e86\u4e24\u79cd\u7c7b\u578b date \u548c date-time \u3002 JavaChassis \u57282.0.1\u4e4b\u524d\u7684\u7248\u672c\u53ea\u652f\u6301\u4f7f\u7528 date-time\uff0c\u800c\u4e14\u5fc5\u987b\u8981\u6c42\u4f7f\u7528 java.util.Date \u4f5c\u4e3a\u8fd0\u884c\u65f6\u7c7b\u578b\uff0c 2.0.1 \u7248\u672c\u6269\u5145\u4e86 date \u548c date-time \u7684\u5b9e\u73b0\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u4f7f\u7528\u66f4\u52a0\u7075\u6d3b\u7684\u65b9\u5f0f\u4f7f\u7528\u8fd9\u4e24\u79cd\u7c7b\u578b\u3002","title":"2.0.1 \u65b0\u7279\u6027\u4ecb\u7ecd\uff1a date\u548cdate-time"},{"location":"featured-topics/features/date-time/#date","text":"\u53ef\u4ee5\u5728 query, path, body \u7b49\u53c2\u6570\u4e2d\u4f7f\u7528 date \u7c7b\u578b\u3002 date \u7c7b\u578b\u5bf9\u5e94\u7684 Java \u7c7b\u578b\u4e3a java.time.LocalDate \u3002 \u4f7f\u7528 Spring MVC\uff0c \u5206\u522b\u91c7\u7528\u5982\u4e0b\u65b9\u5f0f\u5b9a\u4e49\u63a5\u53e3\uff1a @GetMapping(path = /getLocalDate ) public LocalDate getLocalDate(@RequestParam( date ) LocalDate date) { return date; } @GetMapping(path = /getLocalDate/{date} ) public LocalDate getLocalDatePath(@PathParam( date ) LocalDate date) { return date; } @PostMapping(path = /postLocalDate ) public LocalDate postLocalDate(@RequestBody LocalDate date) { return date; } \u5176\u4e2d getLocalDatePath \u63a5\u53e3\u5b9a\u4e49\u751f\u6210\u7684 swagger \u63cf\u8ff0\u5982\u4e0b\uff1a /getLocalDate/{date}: get: operationId: getLocalDatePath parameters: - name: date in: path required: true type: string format: date responses: 200 : description: response of 200 schema: type: string format: date \u53ef\u4ee5\u770b\u51fa\uff0cdate \u5728\u7f51\u7edc\u4e0a\u662f\u901a\u8fc7 String \u8fdb\u884c\u7f16\u7801\u8fdb\u884c\u4f20\u8f93\u7684\uff0c \u683c\u5f0f\u662f\u6807\u51c6\u7684\u683c\u5f0f\uff0c \u6bd4\u5982 2020-02-20 \u3002","title":"\u4f7f\u7528 date"},{"location":"featured-topics/features/date-time/#date-time","text":"\u53ef\u4ee5\u5728 query, path, body \u7b49\u53c2\u6570\u4e2d\u4f7f\u7528 date-time \u7c7b\u578b\u3002 date \u7c7b\u578b\u5bf9\u5e94\u7684 Java \u7c7b\u578b\u4e3a java.time.LocalDateTime \uff0c \u6216\u8005 java.util.Date \u3002 \u4f7f\u7528 Spring MVC\uff0c \u5206\u522b\u91c7\u7528\u5982\u4e0b\u65b9\u5f0f\u5b9a\u4e49\u63a5\u53e3\uff1a @GetMapping(path = /getDate ) public Date getDate(@RequestParam( date ) Date date) { return date; } @GetMapping(path = /getDatePath/{date} ) public Date getDatePath(@PathParam( date ) Date date) { return date; } @PostMapping(path = /postDate ) public Date postDate(@RequestBody Date date) { return date; } @GetMapping(path = /getLocalDateTime ) public LocalDateTime getLocalDateTime(@RequestParam( date ) LocalDateTime date) { return date; } @GetMapping(path = /getLocalDateTime/{date} ) public LocalDateTime getLocalDateTimePath(@PathParam( date ) LocalDateTime date) { return date; } @PostMapping(path = /postLocalDateTime ) public LocalDateTime postLocalDateTime(@RequestBody LocalDateTime date) { return date; } \u5176\u4e2d getLocalDateTimePath \u63a5\u53e3\u5b9a\u4e49\u751f\u6210\u7684 swagger \u63cf\u8ff0\u5982\u4e0b\uff1a /getLocalDateTime/{date}: get: operationId: getLocalDateTimePath parameters: - name: date in: path required: true type: string format: date-time responses: 200 : description: response of 200 schema: type: string format: date-time \u53ef\u4ee5\u770b\u51fa\uff0cdate-time \u5728\u7f51\u7edc\u4e0a\u662f\u901a\u8fc7 String \u8fdb\u884c\u7f16\u7801\u8fdb\u884c\u4f20\u8f93\u7684\uff0c \u683c\u5f0f\u662f\u6807\u51c6\u7684\u683c\u5f0f\uff0c \u6bd4\u5982 2017-07-21T17:32:28Z \u3002 \u7531\u4e8e date-time \u7684\u6807\u51c6\u683c\u5f0f\u5305\u542b\u7279\u6b8a\u5b57\u7b26\uff0c\u5728\u4f5c\u4e3a query \u6216\u8005 path \u53c2\u6570\u7684\u65f6\u5019\uff0c \u9700\u8981\u505a\u597d URL \u7f16\u89e3\u7801\uff0c \u7f51\u7edc\u4e0a\u4f20\u9012\u7684\u5b9e\u9645\u5185\u5bb9\u4e3a 2017-07-21T17%3A32%3A28Z \uff0c \u6bd4\u5982\uff1a http://localhost:8082/dateTime/getLocalDateTime?date=2017-07-21T17%3A32%3A28Z , \u4f5c\u4e3a body \u53c2\u6570\uff0c \u5185\u5bb9\u4e0d\u4f1a\u7f16\u89e3\u7801\uff0c \u662f\u5f15\u53f7\u5305\u542b\u8d77\u6765\u7684 String \u7c7b\u578b\uff0c \u6bd4\u5982 \"2017-07-21T17:32:28Z\" \u3002","title":"\u4f7f\u7528 date-time"},{"location":"featured-topics/features/http-dispatcher/","text":"2.0.2 \u65b0\u7279\u6027\u4ecb\u7ecd\uff1a Edge Service \u901a\u7528\u7684 HTTP \u8f6c\u53d1\u5668 CommonHttpEdgeDispatcher Edge Service \u63d0\u4f9b\u4e86\u975e\u5e38\u4e30\u5bcc\u7684 HTTP \u8f6c\u53d1\u5668\uff0c\u5e76\u652f\u6301\u81ea\u5b9a\u4e49\u6269\u5c55\u3002\u5728 2.0.2 \u7248\u672c\u4e4b\u524d\uff0c\u7f3a\u7701\u63d0\u4f9b\u7684\u8f6c\u53d1\u5668\u90fd\u662f\u9488\u5bf9 \u4f7f\u7528 java-chassis \u5f00\u53d1\u7684\u5fae\u670d\u52a1\u8bbe\u8ba1\u7684\uff0c\u8fd9\u4e9b\u8f6c\u53d1\u5668\u9664\u4e86\u80fd\u591f\u8f6c\u53d1\u8bf7\u6c42\u5230\u4e0d\u540c\u7684 transport \uff0c \u8fd8\u80fd\u591f\u652f\u6301 consumer \u7aef\u670d\u52a1\u6cbb\u7406\uff0c \u548c\u666e\u901a\u7684 consumer \u8c03\u7528\u7c7b\u4f3c\u3002 \u5728\u5b9e\u9645\u4e1a\u52a1\u4e2d\uff0c\u53ef\u80fd\u5b58\u5728\u4e0d\u540c\u5f00\u53d1\u6846\u67b6\u5e76\u5b58\u7684\u60c5\u51b5\uff0c\u4e5f\u53ef\u80fd\u5305\u542b\u9057\u7559\u5e94\u7528 \u7cfb\u7edf\uff0c\u6216\u8005\u9700\u8981\u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230\u5176\u4ed6\u7b2c\u4e09\u65b9\u7cfb\u7edf\u7684\u573a\u666f\u3002 2.0.2 \u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b0\u7684\u8f6c\u53d1\u5668 CommonHttpEdgeDispatcher \u652f\u6301\u8fd9\u4e9b\u573a\u666f\u3002 CommonHttpEdgeDispatcher \u8981\u6c42\u76ee\u6807\u5fae\u670d\u52a1\u6ce8\u518c\u5230\u670d\u52a1\u4e2d\u5fc3\uff0c\u80fd\u591f\u88ab\u81ea\u52a8\u53d1\u73b0\u3002\u65b0\u7684\u8f6c\u53d1\u5668\u53ef\u4ee5\u7ba1\u7406\u5b9e\u4f8b\u72b6\u6001\uff0c\u63d0\u4f9b\u8d1f\u8f7d\u5747\u8861\u7b56\u7565\u914d\u7f6e\uff0c \u63d0\u4f9b\u5b9e\u4f8b\u9694\u79bb\u7b49\u57fa\u672c\u6cbb\u7406\u529f\u80fd\u3002 CommonHttpEdgeDispatcher \u80fd\u591f\u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230\u76d1\u542c HTTP \u6216\u8005 HTTP 2 \u534f\u8bae\u7684 Provider\uff0c \u5bf9\u4e8e Provider \u7684\u5f00\u53d1\u6846\u67b6\u6ca1\u6709\u9650\u5236\uff0c\u4e5f\u4e0d \u8981\u6c42 Provider \u6ce8\u518c\u5951\u7ea6\u4fe1\u606f\u3002 \u4f7f\u7528 CommonHttpEdgeDispatcher \u5728 Edge Service \u542f\u7528 CommonHttpEdgeDispatcher \u975e\u5e38\u7b80\u5355\uff0c \u53ea\u9700\u8981\u5728 microservice.yaml \u4e2d\u589e\u52a0\u4e0b\u9762\u7684\u914d\u7f6e\u3002 servicecomb: http: dispatcher: http: enabled: true mappings: businessV2: prefixSegmentCount: 1 path: /http/business/v2/.* microserviceName: business versionRule: 2.0.0 businessV1: prefixSegmentCount: 1 path: /http/business/v1/add.* microserviceName: business versionRule: 1.0.0-1.2.0 businessV1_1: prefixSegmentCount: 1 path: /http/business/v1/dec.* microserviceName: business versionRule: 1.1.0 \u901a\u7528\u7684 HTTP \u8f6c\u53d1\u5668\u7684\u914d\u7f6e\u9879\u548c URLMappedEdgeDispatcher \u975e\u5e38\u7c7b\u4f3c\u3002 \u53ef\u4ee5\u914d\u7f6e\u4e00\u7cfb\u5217\u7684 mappings \u5b9a\u4e49 URL \u4e0e \u5fae\u670d\u52a1\u4e4b\u95f4\u7684\u8f6c\u53d1\u5173\u7cfb\u3002 \u4e0a\u8ff0\u914d\u7f6e\u5b9a\u4e49\u4e86 3 \u4e2a mappings\uff0c \u7b2c 1 \u4e2a\u5c06 URL \u6ee1\u8db3 /http/business/v2/.* \u7684\u8bf7\u6c42 \u8f6c\u53d1\u5230 business \u670d\u52a1 2.0.0 \u7248\u672c\u5b9e\u4f8b\uff0c \u540e\u7aef\u670d\u52a1\u5b9e\u9645\u7684 URL \u4e3a /business/v2/.* \u3002 \u7b2c 2 \u4e2a\u6f14\u793a\u4e86\u7070\u5ea6\u8f6c\u53d1\uff0c \u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230 1.0.0 \u4ee5\u4e0a\uff08\u542b\uff09\uff0c 1.2.0 \u4ee5\u4e0b\uff08\u4e0d\u542b\uff09 \u7684\u7248\u672c\u3002 CommonHttpEdgeDispatcher \u7684\u6cbb\u7406 CommonHttpEdgeDispatcher \u96c6\u6210\u4e86 loadbalance \u6a21\u5757\u63d0\u4f9b\u7684\u6cbb\u7406\u80fd\u529b\uff0c \u5728 \u8d1f\u8f7d\u5747\u8861 \u91cc\u9762\u7684\u6cbb\u7406 \u80fd\u529b\u90fd\u53ef\u4ee5\u4f7f\u7528\uff0c\u9664\u4e86 \u8bbe\u7f6e\u91cd\u8bd5\u7b56\u7565 \u3002 \u8fd9\u4e2a\u8f6c\u53d1\u5668\u901a\u5e38\u88ab\u7528\u4e8e\u8f6c\u53d1 UI \u8bf7\u6c42\u5230\u540e\u7aef\u7684\u9759\u6001\u9875\u9762\u670d\u52a1\uff0c\u4ee5\u53ca\u9057\u7559\u7684\u4f7f\u7528 spring boot \u5f00\u53d1\u7684\u5fae\u670d\u52a1\uff0c \u6216\u8005\u91c7\u7528 spring-cloud-huawei \u63a5\u5165\u670d\u52a1\u4e2d\u5fc3\u7684 spring cloud \u5fae\u670d\u52a1\u5e94\u7528\u3002","title":"2.0.2 \u65b0\u7279\u6027\u4ecb\u7ecd\uff1a Edge Service \u901a\u7528\u7684 HTTP \u8f6c\u53d1\u5668 CommonHttpEdgeDispatcher"},{"location":"featured-topics/features/http-dispatcher/#202-edge-service-http-commonhttpedgedispatcher","text":"Edge Service \u63d0\u4f9b\u4e86\u975e\u5e38\u4e30\u5bcc\u7684 HTTP \u8f6c\u53d1\u5668\uff0c\u5e76\u652f\u6301\u81ea\u5b9a\u4e49\u6269\u5c55\u3002\u5728 2.0.2 \u7248\u672c\u4e4b\u524d\uff0c\u7f3a\u7701\u63d0\u4f9b\u7684\u8f6c\u53d1\u5668\u90fd\u662f\u9488\u5bf9 \u4f7f\u7528 java-chassis \u5f00\u53d1\u7684\u5fae\u670d\u52a1\u8bbe\u8ba1\u7684\uff0c\u8fd9\u4e9b\u8f6c\u53d1\u5668\u9664\u4e86\u80fd\u591f\u8f6c\u53d1\u8bf7\u6c42\u5230\u4e0d\u540c\u7684 transport \uff0c \u8fd8\u80fd\u591f\u652f\u6301 consumer \u7aef\u670d\u52a1\u6cbb\u7406\uff0c \u548c\u666e\u901a\u7684 consumer \u8c03\u7528\u7c7b\u4f3c\u3002 \u5728\u5b9e\u9645\u4e1a\u52a1\u4e2d\uff0c\u53ef\u80fd\u5b58\u5728\u4e0d\u540c\u5f00\u53d1\u6846\u67b6\u5e76\u5b58\u7684\u60c5\u51b5\uff0c\u4e5f\u53ef\u80fd\u5305\u542b\u9057\u7559\u5e94\u7528 \u7cfb\u7edf\uff0c\u6216\u8005\u9700\u8981\u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230\u5176\u4ed6\u7b2c\u4e09\u65b9\u7cfb\u7edf\u7684\u573a\u666f\u3002 2.0.2 \u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b0\u7684\u8f6c\u53d1\u5668 CommonHttpEdgeDispatcher \u652f\u6301\u8fd9\u4e9b\u573a\u666f\u3002 CommonHttpEdgeDispatcher \u8981\u6c42\u76ee\u6807\u5fae\u670d\u52a1\u6ce8\u518c\u5230\u670d\u52a1\u4e2d\u5fc3\uff0c\u80fd\u591f\u88ab\u81ea\u52a8\u53d1\u73b0\u3002\u65b0\u7684\u8f6c\u53d1\u5668\u53ef\u4ee5\u7ba1\u7406\u5b9e\u4f8b\u72b6\u6001\uff0c\u63d0\u4f9b\u8d1f\u8f7d\u5747\u8861\u7b56\u7565\u914d\u7f6e\uff0c \u63d0\u4f9b\u5b9e\u4f8b\u9694\u79bb\u7b49\u57fa\u672c\u6cbb\u7406\u529f\u80fd\u3002 CommonHttpEdgeDispatcher \u80fd\u591f\u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230\u76d1\u542c HTTP \u6216\u8005 HTTP 2 \u534f\u8bae\u7684 Provider\uff0c \u5bf9\u4e8e Provider \u7684\u5f00\u53d1\u6846\u67b6\u6ca1\u6709\u9650\u5236\uff0c\u4e5f\u4e0d \u8981\u6c42 Provider \u6ce8\u518c\u5951\u7ea6\u4fe1\u606f\u3002","title":"2.0.2 \u65b0\u7279\u6027\u4ecb\u7ecd\uff1a Edge Service \u901a\u7528\u7684 HTTP \u8f6c\u53d1\u5668 CommonHttpEdgeDispatcher"},{"location":"featured-topics/features/http-dispatcher/#commonhttpedgedispatcher","text":"\u5728 Edge Service \u542f\u7528 CommonHttpEdgeDispatcher \u975e\u5e38\u7b80\u5355\uff0c \u53ea\u9700\u8981\u5728 microservice.yaml \u4e2d\u589e\u52a0\u4e0b\u9762\u7684\u914d\u7f6e\u3002 servicecomb: http: dispatcher: http: enabled: true mappings: businessV2: prefixSegmentCount: 1 path: /http/business/v2/.* microserviceName: business versionRule: 2.0.0 businessV1: prefixSegmentCount: 1 path: /http/business/v1/add.* microserviceName: business versionRule: 1.0.0-1.2.0 businessV1_1: prefixSegmentCount: 1 path: /http/business/v1/dec.* microserviceName: business versionRule: 1.1.0 \u901a\u7528\u7684 HTTP \u8f6c\u53d1\u5668\u7684\u914d\u7f6e\u9879\u548c URLMappedEdgeDispatcher \u975e\u5e38\u7c7b\u4f3c\u3002 \u53ef\u4ee5\u914d\u7f6e\u4e00\u7cfb\u5217\u7684 mappings \u5b9a\u4e49 URL \u4e0e \u5fae\u670d\u52a1\u4e4b\u95f4\u7684\u8f6c\u53d1\u5173\u7cfb\u3002 \u4e0a\u8ff0\u914d\u7f6e\u5b9a\u4e49\u4e86 3 \u4e2a mappings\uff0c \u7b2c 1 \u4e2a\u5c06 URL \u6ee1\u8db3 /http/business/v2/.* \u7684\u8bf7\u6c42 \u8f6c\u53d1\u5230 business \u670d\u52a1 2.0.0 \u7248\u672c\u5b9e\u4f8b\uff0c \u540e\u7aef\u670d\u52a1\u5b9e\u9645\u7684 URL \u4e3a /business/v2/.* \u3002 \u7b2c 2 \u4e2a\u6f14\u793a\u4e86\u7070\u5ea6\u8f6c\u53d1\uff0c \u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230 1.0.0 \u4ee5\u4e0a\uff08\u542b\uff09\uff0c 1.2.0 \u4ee5\u4e0b\uff08\u4e0d\u542b\uff09 \u7684\u7248\u672c\u3002","title":"\u4f7f\u7528 CommonHttpEdgeDispatcher"},{"location":"featured-topics/features/http-dispatcher/#commonhttpedgedispatcher_1","text":"CommonHttpEdgeDispatcher \u96c6\u6210\u4e86 loadbalance \u6a21\u5757\u63d0\u4f9b\u7684\u6cbb\u7406\u80fd\u529b\uff0c \u5728 \u8d1f\u8f7d\u5747\u8861 \u91cc\u9762\u7684\u6cbb\u7406 \u80fd\u529b\u90fd\u53ef\u4ee5\u4f7f\u7528\uff0c\u9664\u4e86 \u8bbe\u7f6e\u91cd\u8bd5\u7b56\u7565 \u3002 \u8fd9\u4e2a\u8f6c\u53d1\u5668\u901a\u5e38\u88ab\u7528\u4e8e\u8f6c\u53d1 UI \u8bf7\u6c42\u5230\u540e\u7aef\u7684\u9759\u6001\u9875\u9762\u670d\u52a1\uff0c\u4ee5\u53ca\u9057\u7559\u7684\u4f7f\u7528 spring boot \u5f00\u53d1\u7684\u5fae\u670d\u52a1\uff0c \u6216\u8005\u91c7\u7528 spring-cloud-huawei \u63a5\u5165\u670d\u52a1\u4e2d\u5fc3\u7684 spring cloud \u5fae\u670d\u52a1\u5e94\u7528\u3002","title":"CommonHttpEdgeDispatcher \u7684\u6cbb\u7406"},{"location":"featured-topics/features/invoker/","text":"2.0.1 \u65b0\u7279\u6027\u4ecb\u7ecd\uff1a \u6cdb\u5316\u8c03\u7528 \u6cdb\u5316\u8c03\u7528\u6307\u5728\u4e0d\u77e5\u9053 Provider \u63a5\u53e3\u5b9a\u4e49\u4fe1\u606f\u7684\u60c5\u51b5\u4e0b\uff0c\u8bbf\u95ee Provider \u63d0\u4f9b\u7684\u670d\u52a1\u3002 \u4e0e\u6cdb\u5316\u8c03\u7528\u5bf9\u5e94\u7684\u65b9\u5f0f\u5305\u62ec\u900f\u660e RPC\uff08POJO\uff09\u548c RestTemplate\u3002 \u900f\u660e RPC \u9700\u8981\u63d0\u4f9b Provider \u5bf9\u5e94\u7684\u63a5\u53e3\uff0c RestTemplate \u9700\u8981\u63d0\u4f9b Provider \u5bf9\u5e94\u7684 URL \u548c \u6570\u636e Model \u3002 \u6cdb\u5316 \u8c03\u7528\u9700\u8981\u63d0\u4f9b Provider \u7684\u670d\u52a1\u5143\u6570\u636e\uff1a \u5fae\u670d\u52a1\u540d\u79f0\uff0c \u7248\u672c\uff0c Schema ID\uff0c Operation ID, \u5951\u7ea6\u53c2\u6570\u7b49\u4fe1\u606f\u3002 java-chassis \u5f88\u65e9\u5c31\u63d0\u4f9b\u4e86\u6cdb\u5316\u8c03\u7528\uff0c \u672c\u6587\u91cd\u70b9\u4ecb\u7ecd 2.0.1 \u7684\u529f\u80fd\u3002 2.0.1 \u5bf9\u4e8e\u6cdb\u5316\u8c03\u7528\u7684\u63a5\u53e3\u8fdb\u884c\u4e86\u4f18\u5316\uff0c \u652f\u6301\u6307\u5b9a\u54cd\u5e94\u7c7b\u578b\uff0c \u65e9\u671f\u7684\u7248\u672c\u7684\u54cd\u5e94\u7c7b\u578b\u53d6\u51b3\u4e8e\u8fd0\u884c\u4e0a\u4e0b\u6587\uff0c \u662f\u4e0d\u786e\u5b9a\u7684\u3002 \u4f7f\u7528\u6cdb\u5316\u8c03\u7528 \u5047\u8bbe Provider \u91c7\u7528\u900f\u660e RPC \u7684\u65b9\u5f0f\u63d0\u4f9b\u4e86\u5982\u4e0b\u670d\u52a1\uff1a @RpcSchema(schemaId = InvokerEndpoint ) public class InvokerEndpoint { public ServerModel model(ServerModel request) { return request; } } public class ServerModel { private String name; private int code; public String getName() { return name; } public void setName(String name) { this.name = name; } public int getCode() { return code; } public void setCode(int code) { this.code = code; } } \u53ef\u4ee5\u91c7\u7528 InvokerUtils \u8bbf\u95ee\u8fd9\u4e2a\u670d\u52a1\uff1a Map String, Object args = new HashMap (); ClientModel model = new ClientModel(); model.setCode(200); model.setName( hello ); args.put( request , model); ClientModel modelResult = InvokerUtils.syncInvoke( pojo , InvokerEndpoint , model , args, ClientModel.class); TestMgr.check(model.getCode(), modelResult.getCode()); TestMgr.check(model.getName(), modelResult.getName()); public class ClientModel { private String name; private int code; public String getName() { return name; } public void setName(String name) { this.name = name; } public int getCode() { return code; } public void setCode(int code) { this.code = code; } } \u53ef\u4ee5\u770b\u51fa\uff0c\u5728\u6cdb\u5316\u8c03\u7528\u7684\u60c5\u51b5\u4e0b\uff0c Provider \u548c Consumer \u53ef\u4ee5\u4f7f\u7528\u4e0d\u4e00\u6837 package \u7684 Model\u3002 Consumer \u8fd8\u53ef\u4ee5\u4e0d\u4f7f\u7528\u4efb\u4f55 Model, \u800c\u91c7\u7528 Map \u7684\u65b9\u5f0f\u8bbf\u95ee\uff1a Map String, Object args = new HashMap (); Map model = new HashMap(); model.put( code , 20); model.put( name , hello ); args.put( request , model); ClientModel modelResult = InvokerUtils.syncInvoke( pojo , InvokerEndpoint , model , args, ClientModel.class); TestMgr.check(model.get( code ), modelResult.getCode()); TestMgr.check(model.get( name ), modelResult.getName()); \u9700\u8981\u7279\u522b\u8bf4\u660e\u7684\u662f\u53c2\u6570 swaggerArguments \uff0c \u8fd9\u4e2a\u53c2\u6570\u662f\u548c Provider \u63a5\u53e3\u751f\u6210\u7684\u5951\u7ea6\u5bf9\u5e94\u7684\uff0c \u4e0d\u5173\u6ce8 Provider \u662f\u91c7\u7528\u900f\u660e RPC\uff0c \u8fd8\u662f \u91c7\u7528 Spring MVC \uff0c \u6216\u8005 JAX RS \u5f00\u53d1\u7684\u670d\u52a1\u3002 \u9700\u8981\u6ce8\u610f swaggerArguments \u53ef\u80fd\u548c Provider \u7684\u63a5\u53e3\u5b9a\u4e49\u7684\u53c2\u6570\u5217\u8868\u4e0d\u4e00\u6837\uff0c\u6bd4\u5982\u900f\u660e RPC \u5f00\u53d1\u6a21\u5f0f\u4e0b\u591a\u4e2a\u53c2\u6570\u7684\u573a\u666f\uff0c Spring MVC \u7684 Bean Param \u7684\u573a\u666f\u7b49\u7b49\u3002 \u91c7\u7528 reactive API 2.0.1 \u6cdb\u5316\u8c03\u7528\u8fd8\u589e\u52a0\u4e86\u5bf9\u5e94\u7684 reactive API\uff0c \u8fd9\u6837\u66f4\u52a0\u65b9\u4fbf\u91c7\u7528 reactive \u65b9\u5f0f\u8c03\u7528 Provider \u7684\u670d\u52a1\u3002 CountDownLatch countDownLatch = new CountDownLatch(1); InvokerUtils.reactiveInvoke( pojo , InvokerEndpoint , model , args, ClientModel.class, response - { ClientModel reactiveResult = response.getResult(); TestMgr.check(model.getCode(), reactiveResult.getCode()); TestMgr.check(model.getName(), reactiveResult.getName()); countDownLatch.countDown(); }); countDownLatch.await(); 2.0.1 \u7248\u672c\u4e4b\u524d\u7684 API 2.0.1 \u7248\u672c\u4e4b\u524d\u7684 API \u4e0d\u80fd\u591f\u6307\u5b9a responseType \uff0c \u56e0\u6b64\u8fd4\u56de\u503c\u7c7b\u578b\u662f\u4e0d\u786e\u5b9a\u7684\uff0c \u8fd9\u4e2a\u53d6\u51b3\u4e8e\u8fd0\u884c\u7684\u4e0a\u4e0b\u6587\u3002 \u5982\u679c Consumer \u6ca1\u6709\u52a0\u8f7d \u4efb\u4f55 @RpcReference \u4fe1\u606f\uff0c \u5e76\u4e14\u4e0d\u5b58\u5728 Provider \u8fd4\u56de\u503c Model \uff0c \u90a3\u4e48\u8fd4\u56de\u503c\u7c7b\u578b\u662f Map \uff1b \u5426\u5219\u8fd4\u56de\u7ed3\u679c\u53ef\u80fd\u662f\u548c Provider \u5177\u5907\u76f8\u540c package \u7c7b\u7684\u5b9e\u4f8b\uff0c \u8fd9\u4e2a\u8fd4\u56de\u63a5\u53e3\u7684\u7c7b\u578b\u8fd8\u53ef\u80fd\u548c\u52a0\u8f7d\u987a\u5e8f\u6709\u5173\u3002 \u7531\u4e8e\u8fd9\u79cd\u4e0d\u786e\u5b9a\u6027\uff0c \u65e9\u671f\u7684 API \u4f7f\u7528 @Deprecated \u58f0\u660e\u4e3a\u5e9f\u5f03\u3002 \u5c06 responseType \u8bbe\u7f6e\u4e3a null \uff0c \u80fd\u591f\u83b7\u5f97\u548c\u65e9\u671f API \u4e00\u6837\u7684\u6548\u679c\u3002","title":"2.0.1 \u65b0\u7279\u6027\u4ecb\u7ecd\uff1a \u6cdb\u5316\u8c03\u7528"},{"location":"featured-topics/features/invoker/#201","text":"\u6cdb\u5316\u8c03\u7528\u6307\u5728\u4e0d\u77e5\u9053 Provider \u63a5\u53e3\u5b9a\u4e49\u4fe1\u606f\u7684\u60c5\u51b5\u4e0b\uff0c\u8bbf\u95ee Provider \u63d0\u4f9b\u7684\u670d\u52a1\u3002 \u4e0e\u6cdb\u5316\u8c03\u7528\u5bf9\u5e94\u7684\u65b9\u5f0f\u5305\u62ec\u900f\u660e RPC\uff08POJO\uff09\u548c RestTemplate\u3002 \u900f\u660e RPC \u9700\u8981\u63d0\u4f9b Provider \u5bf9\u5e94\u7684\u63a5\u53e3\uff0c RestTemplate \u9700\u8981\u63d0\u4f9b Provider \u5bf9\u5e94\u7684 URL \u548c \u6570\u636e Model \u3002 \u6cdb\u5316 \u8c03\u7528\u9700\u8981\u63d0\u4f9b Provider \u7684\u670d\u52a1\u5143\u6570\u636e\uff1a \u5fae\u670d\u52a1\u540d\u79f0\uff0c \u7248\u672c\uff0c Schema ID\uff0c Operation ID, \u5951\u7ea6\u53c2\u6570\u7b49\u4fe1\u606f\u3002 java-chassis \u5f88\u65e9\u5c31\u63d0\u4f9b\u4e86\u6cdb\u5316\u8c03\u7528\uff0c \u672c\u6587\u91cd\u70b9\u4ecb\u7ecd 2.0.1 \u7684\u529f\u80fd\u3002 2.0.1 \u5bf9\u4e8e\u6cdb\u5316\u8c03\u7528\u7684\u63a5\u53e3\u8fdb\u884c\u4e86\u4f18\u5316\uff0c \u652f\u6301\u6307\u5b9a\u54cd\u5e94\u7c7b\u578b\uff0c \u65e9\u671f\u7684\u7248\u672c\u7684\u54cd\u5e94\u7c7b\u578b\u53d6\u51b3\u4e8e\u8fd0\u884c\u4e0a\u4e0b\u6587\uff0c \u662f\u4e0d\u786e\u5b9a\u7684\u3002","title":"2.0.1 \u65b0\u7279\u6027\u4ecb\u7ecd\uff1a \u6cdb\u5316\u8c03\u7528"},{"location":"featured-topics/features/invoker/#_1","text":"\u5047\u8bbe Provider \u91c7\u7528\u900f\u660e RPC \u7684\u65b9\u5f0f\u63d0\u4f9b\u4e86\u5982\u4e0b\u670d\u52a1\uff1a @RpcSchema(schemaId = InvokerEndpoint ) public class InvokerEndpoint { public ServerModel model(ServerModel request) { return request; } } public class ServerModel { private String name; private int code; public String getName() { return name; } public void setName(String name) { this.name = name; } public int getCode() { return code; } public void setCode(int code) { this.code = code; } } \u53ef\u4ee5\u91c7\u7528 InvokerUtils \u8bbf\u95ee\u8fd9\u4e2a\u670d\u52a1\uff1a Map String, Object args = new HashMap (); ClientModel model = new ClientModel(); model.setCode(200); model.setName( hello ); args.put( request , model); ClientModel modelResult = InvokerUtils.syncInvoke( pojo , InvokerEndpoint , model , args, ClientModel.class); TestMgr.check(model.getCode(), modelResult.getCode()); TestMgr.check(model.getName(), modelResult.getName()); public class ClientModel { private String name; private int code; public String getName() { return name; } public void setName(String name) { this.name = name; } public int getCode() { return code; } public void setCode(int code) { this.code = code; } } \u53ef\u4ee5\u770b\u51fa\uff0c\u5728\u6cdb\u5316\u8c03\u7528\u7684\u60c5\u51b5\u4e0b\uff0c Provider \u548c Consumer \u53ef\u4ee5\u4f7f\u7528\u4e0d\u4e00\u6837 package \u7684 Model\u3002 Consumer \u8fd8\u53ef\u4ee5\u4e0d\u4f7f\u7528\u4efb\u4f55 Model, \u800c\u91c7\u7528 Map \u7684\u65b9\u5f0f\u8bbf\u95ee\uff1a Map String, Object args = new HashMap (); Map model = new HashMap(); model.put( code , 20); model.put( name , hello ); args.put( request , model); ClientModel modelResult = InvokerUtils.syncInvoke( pojo , InvokerEndpoint , model , args, ClientModel.class); TestMgr.check(model.get( code ), modelResult.getCode()); TestMgr.check(model.get( name ), modelResult.getName()); \u9700\u8981\u7279\u522b\u8bf4\u660e\u7684\u662f\u53c2\u6570 swaggerArguments \uff0c \u8fd9\u4e2a\u53c2\u6570\u662f\u548c Provider \u63a5\u53e3\u751f\u6210\u7684\u5951\u7ea6\u5bf9\u5e94\u7684\uff0c \u4e0d\u5173\u6ce8 Provider \u662f\u91c7\u7528\u900f\u660e RPC\uff0c \u8fd8\u662f \u91c7\u7528 Spring MVC \uff0c \u6216\u8005 JAX RS \u5f00\u53d1\u7684\u670d\u52a1\u3002 \u9700\u8981\u6ce8\u610f swaggerArguments \u53ef\u80fd\u548c Provider \u7684\u63a5\u53e3\u5b9a\u4e49\u7684\u53c2\u6570\u5217\u8868\u4e0d\u4e00\u6837\uff0c\u6bd4\u5982\u900f\u660e RPC \u5f00\u53d1\u6a21\u5f0f\u4e0b\u591a\u4e2a\u53c2\u6570\u7684\u573a\u666f\uff0c Spring MVC \u7684 Bean Param \u7684\u573a\u666f\u7b49\u7b49\u3002","title":"\u4f7f\u7528\u6cdb\u5316\u8c03\u7528"},{"location":"featured-topics/features/invoker/#reactive-api","text":"2.0.1 \u6cdb\u5316\u8c03\u7528\u8fd8\u589e\u52a0\u4e86\u5bf9\u5e94\u7684 reactive API\uff0c \u8fd9\u6837\u66f4\u52a0\u65b9\u4fbf\u91c7\u7528 reactive \u65b9\u5f0f\u8c03\u7528 Provider \u7684\u670d\u52a1\u3002 CountDownLatch countDownLatch = new CountDownLatch(1); InvokerUtils.reactiveInvoke( pojo , InvokerEndpoint , model , args, ClientModel.class, response - { ClientModel reactiveResult = response.getResult(); TestMgr.check(model.getCode(), reactiveResult.getCode()); TestMgr.check(model.getName(), reactiveResult.getName()); countDownLatch.countDown(); }); countDownLatch.await();","title":"\u91c7\u7528 reactive API"},{"location":"featured-topics/features/invoker/#201-api","text":"2.0.1 \u7248\u672c\u4e4b\u524d\u7684 API \u4e0d\u80fd\u591f\u6307\u5b9a responseType \uff0c \u56e0\u6b64\u8fd4\u56de\u503c\u7c7b\u578b\u662f\u4e0d\u786e\u5b9a\u7684\uff0c \u8fd9\u4e2a\u53d6\u51b3\u4e8e\u8fd0\u884c\u7684\u4e0a\u4e0b\u6587\u3002 \u5982\u679c Consumer \u6ca1\u6709\u52a0\u8f7d \u4efb\u4f55 @RpcReference \u4fe1\u606f\uff0c \u5e76\u4e14\u4e0d\u5b58\u5728 Provider \u8fd4\u56de\u503c Model \uff0c \u90a3\u4e48\u8fd4\u56de\u503c\u7c7b\u578b\u662f Map \uff1b \u5426\u5219\u8fd4\u56de\u7ed3\u679c\u53ef\u80fd\u662f\u548c Provider \u5177\u5907\u76f8\u540c package \u7c7b\u7684\u5b9e\u4f8b\uff0c \u8fd9\u4e2a\u8fd4\u56de\u63a5\u53e3\u7684\u7c7b\u578b\u8fd8\u53ef\u80fd\u548c\u52a0\u8f7d\u987a\u5e8f\u6709\u5173\u3002 \u7531\u4e8e\u8fd9\u79cd\u4e0d\u786e\u5b9a\u6027\uff0c \u65e9\u671f\u7684 API \u4f7f\u7528 @Deprecated \u58f0\u660e\u4e3a\u5e9f\u5f03\u3002 \u5c06 responseType \u8bbe\u7f6e\u4e3a null \uff0c \u80fd\u591f\u83b7\u5f97\u548c\u65e9\u671f API \u4e00\u6837\u7684\u6548\u679c\u3002","title":"2.0.1 \u7248\u672c\u4e4b\u524d\u7684 API"},{"location":"featured-topics/features/trace-id/","text":"2.0.1 \u65b0\u7279\u6027\u4ecb\u7ecd\uff1a \u5728\u65e5\u5fd7\u4e2d\u8bb0\u5f55trace id \u5fae\u670d\u52a1\u67b6\u6784\u4e0b\uff0c\u9700\u8981\u90e8\u7f72\u5927\u91cf\u7684\u5fae\u670d\u52a1\u5b9e\u4f8b\uff0c\u8c03\u7528\u60c5\u51b5\u590d\u6742\uff0c\u7ed9\u95ee\u9898\u5b9a\u4f4d\u5e26\u6765\u4e86\u5f88\u5927\u7684\u9ebb\u70e6\u3002 \u901a\u8fc7\u8c03\u7528\u94fe\u7cfb\u7edf\u80fd\u591f\u5f88\u597d\u7684\u89e3\u51b3\u65e5\u5fd7\u8ffd\u8e2a\u7684\u95ee\u9898\uff0c \u4f46\u662f\u5bf9\u4e8e\u65e5\u5e38\u7684\u5f00\u53d1\u8c03\u8bd5\uff0c\u90e8\u7f72\u8c03\u7528\u94fe\u4ecd\u7136\u663e\u5f97\u590d\u6742\u3002 java-chassis \u63d0\u4f9b\u4e86\u4e00\u79cd\u7b80\u5355\u7684\u673a\u5236\uff0c\u5141\u8bb8\u4e1a\u52a1\u5728\u8bb0\u5f55\u65e5\u5fd7\u7684\u65f6\u5019\uff0c\u5305\u542btrace id\u3002 \u5728\u65e5\u5fd7\u7cfb\u7edf\u4e2d\u8bb0\u5f55 trace id java-chassis \u4f7f\u7528 MDC \u7684\u65b9\u5f0f\u8bb0\u5f55 trace id\uff0c \u53ef\u4ee5\u5728 log4j2 \u6216\u8005 logback \u4e2d\u6253\u5370 trace id\u3002 java-chassis \u8bb0\u5f55 trace id \u589e\u52a0 \u4e86 Marker \uff0c \u5f00\u53d1\u8005\u53ef\u4ee5\u65b9\u4fbf\u7684\u5c06\u8fd9\u7c7b\u65e5\u5fd7\u8fdb\u884c\u5206\u7c7b\u8f93\u51fa\u3002 log4j2\u7684\u914d\u7f6e\u5982\u4e0b\uff1a Appenders Console name= Console target= SYSTEM_OUT PatternLayout pattern= [%d][%t][%p][%c:%L][%X{SERVICECOMB_TRACE_ID}] %m%n / /Console /Appenders \u7ed3\u5408 Marker\uff0c \u5c06\u65e5\u5fd7\u5206\u7c7b\u663e\u793a\uff1a Appenders Console name= Console target= SYSTEM_OUT MarkerFilter marker= SERVICECOMB_MARKER onMatch= DENY onMismatch= ACCEPT / PatternLayout pattern= [%d][%t][%p][%c:%L] %m%n / /Console Console name= Console-Tracing target= SYSTEM_OUT MarkerFilter marker= SERVICECOMB_MARKER onMismatch= DENY onMatch= ACCEPT / PatternLayout pattern= [%d][%t][%p][%c:%L][%X{SERVICECOMB_TRACE_ID}] %m%n / /Console /Appenders logback\u7684\u914d\u7f6e\u5982\u4e0b: appender name= STDOUT class= ch.qos.logback.core.ConsoleAppender encoder pattern %d [%level] [%thread][%X{SERVICECOMB_TRACE_ID}] - %msg (%F:%L\\)%n /pattern /encoder /appender \u7ed3\u5408 Marker\uff0c \u53ef\u4ee5\u5c06\u65e5\u5fd7\u5206\u7c7b\u663e\u793a: appender name= STDOUT-TRACING class= ch.qos.logback.core.ConsoleAppender !-- If applicable, can use ch.qos.logback.classic.filter.MarkerFilter -- filter class= org.apache.servicecomb.foundation.logback.MarkerFilter Marker SERVICECOMB_MARKER /Marker OnMismatch DENY /OnMismatch OnMatch ACCEPT /OnMatch /filter encoder pattern %d [%level] [%thread][%X{SERVICECOMB_TRACE_ID}] - %msg (%F:%L\\)%n /pattern /encoder /appender \u4e1a\u52a1\u65e5\u5fd7\u5305\u542b trace id \u8bb0\u5f55 access log java-chassis \u53ea\u6709\u5c11\u91cf\u7684\u65e5\u5fd7\u5305\u542b trace id\uff0c\u4e1a\u52a1\u53ef\u4ee5\u65b9\u4fbf\u7684\u5728\u81ea\u5df1\u8bb0\u5f55\u7684\u65e5\u5fd7\u4e2d\u5305\u542b trace id\u3002 \u4e0b\u9762\u5f00\u53d1\u4e00\u4e2a\u7b80\u5355\u7684 Handler\uff0c \u8bb0\u5f55\u670d\u52a1\u7aef\u7684 access log\u3002 public class AccessLogHandler implements Handler { private static final Logger LOGGER = LoggerFactory.getLogger(AccessLogHandler.class); @Override public void handle(Invocation invocation, AsyncResponse asyncResp) throws Exception { invocation.getTraceIdLogger().info(LOGGER, request for operation {} begin , invocation.getInvocationQualifiedName()); invocation.next((resp) - { invocation.getTraceIdLogger().info(LOGGER, request for operation {} end , invocation.getInvocationQualifiedName()); asyncResp.complete(resp); }); } } \u914d\u7f6e Handler config handler id= custom-access-log class= org.apache.servicecomb.demo.prefix.AccessLogHandler / /config \u542f\u7528 Handler servicecomb: handler: chain: Provider: default: custom-access-log \u4e1a\u52a1\u65e5\u5fd7 \u53ef\u4ee5\u5728\u4e1a\u52a1\u5b9e\u73b0\u4e2d\u8bb0\u5f55 trace id public class RegisterUrlPrefixEndpoint { private static final Logger LOGGER = LoggerFactory.getLogger(RegisterUrlPrefixEndpoint.class); @GetMapping(path = /getName ) public String getName(@RequestParam(name = name ) String name) { ((Invocation) ContextUtils.getInvocationContext()).getTraceIdLogger().info(LOGGER, get name invoked. ); return name; } } \u589e\u52a0\u4e86 access log \u548c\u4e1a\u52a1\u65e5\u5fd7\u540e\u7684\u6548\u679c\u5982\u4e0b\uff1a [5e72e39e55209533-1] - request for operation PRODUCER rest demo-register-url-prefix-server.RegisterUrlPrefixEndpoint.getName begin [5e72e39e55209533-1] - get name invoked. [5e72e39e55209533-1] - request for operation PRODUCER rest demo-register-url-prefix-server.RegisterUrlPrefixEndpoint.getName end","title":"2.0.1 \u65b0\u7279\u6027\u4ecb\u7ecd\uff1a \u5728\u65e5\u5fd7\u4e2d\u8bb0\u5f55trace id"},{"location":"featured-topics/features/trace-id/#201-trace-id","text":"\u5fae\u670d\u52a1\u67b6\u6784\u4e0b\uff0c\u9700\u8981\u90e8\u7f72\u5927\u91cf\u7684\u5fae\u670d\u52a1\u5b9e\u4f8b\uff0c\u8c03\u7528\u60c5\u51b5\u590d\u6742\uff0c\u7ed9\u95ee\u9898\u5b9a\u4f4d\u5e26\u6765\u4e86\u5f88\u5927\u7684\u9ebb\u70e6\u3002 \u901a\u8fc7\u8c03\u7528\u94fe\u7cfb\u7edf\u80fd\u591f\u5f88\u597d\u7684\u89e3\u51b3\u65e5\u5fd7\u8ffd\u8e2a\u7684\u95ee\u9898\uff0c \u4f46\u662f\u5bf9\u4e8e\u65e5\u5e38\u7684\u5f00\u53d1\u8c03\u8bd5\uff0c\u90e8\u7f72\u8c03\u7528\u94fe\u4ecd\u7136\u663e\u5f97\u590d\u6742\u3002 java-chassis \u63d0\u4f9b\u4e86\u4e00\u79cd\u7b80\u5355\u7684\u673a\u5236\uff0c\u5141\u8bb8\u4e1a\u52a1\u5728\u8bb0\u5f55\u65e5\u5fd7\u7684\u65f6\u5019\uff0c\u5305\u542btrace id\u3002","title":"2.0.1 \u65b0\u7279\u6027\u4ecb\u7ecd\uff1a \u5728\u65e5\u5fd7\u4e2d\u8bb0\u5f55trace id"},{"location":"featured-topics/features/trace-id/#trace-id","text":"java-chassis \u4f7f\u7528 MDC \u7684\u65b9\u5f0f\u8bb0\u5f55 trace id\uff0c \u53ef\u4ee5\u5728 log4j2 \u6216\u8005 logback \u4e2d\u6253\u5370 trace id\u3002 java-chassis \u8bb0\u5f55 trace id \u589e\u52a0 \u4e86 Marker \uff0c \u5f00\u53d1\u8005\u53ef\u4ee5\u65b9\u4fbf\u7684\u5c06\u8fd9\u7c7b\u65e5\u5fd7\u8fdb\u884c\u5206\u7c7b\u8f93\u51fa\u3002 log4j2\u7684\u914d\u7f6e\u5982\u4e0b\uff1a Appenders Console name= Console target= SYSTEM_OUT PatternLayout pattern= [%d][%t][%p][%c:%L][%X{SERVICECOMB_TRACE_ID}] %m%n / /Console /Appenders \u7ed3\u5408 Marker\uff0c \u5c06\u65e5\u5fd7\u5206\u7c7b\u663e\u793a\uff1a Appenders Console name= Console target= SYSTEM_OUT MarkerFilter marker= SERVICECOMB_MARKER onMatch= DENY onMismatch= ACCEPT / PatternLayout pattern= [%d][%t][%p][%c:%L] %m%n / /Console Console name= Console-Tracing target= SYSTEM_OUT MarkerFilter marker= SERVICECOMB_MARKER onMismatch= DENY onMatch= ACCEPT / PatternLayout pattern= [%d][%t][%p][%c:%L][%X{SERVICECOMB_TRACE_ID}] %m%n / /Console /Appenders logback\u7684\u914d\u7f6e\u5982\u4e0b: appender name= STDOUT class= ch.qos.logback.core.ConsoleAppender encoder pattern %d [%level] [%thread][%X{SERVICECOMB_TRACE_ID}] - %msg (%F:%L\\)%n /pattern /encoder /appender \u7ed3\u5408 Marker\uff0c \u53ef\u4ee5\u5c06\u65e5\u5fd7\u5206\u7c7b\u663e\u793a: appender name= STDOUT-TRACING class= ch.qos.logback.core.ConsoleAppender !-- If applicable, can use ch.qos.logback.classic.filter.MarkerFilter -- filter class= org.apache.servicecomb.foundation.logback.MarkerFilter Marker SERVICECOMB_MARKER /Marker OnMismatch DENY /OnMismatch OnMatch ACCEPT /OnMatch /filter encoder pattern %d [%level] [%thread][%X{SERVICECOMB_TRACE_ID}] - %msg (%F:%L\\)%n /pattern /encoder /appender","title":"\u5728\u65e5\u5fd7\u7cfb\u7edf\u4e2d\u8bb0\u5f55 trace id"},{"location":"featured-topics/features/trace-id/#trace-id_1","text":"\u8bb0\u5f55 access log java-chassis \u53ea\u6709\u5c11\u91cf\u7684\u65e5\u5fd7\u5305\u542b trace id\uff0c\u4e1a\u52a1\u53ef\u4ee5\u65b9\u4fbf\u7684\u5728\u81ea\u5df1\u8bb0\u5f55\u7684\u65e5\u5fd7\u4e2d\u5305\u542b trace id\u3002 \u4e0b\u9762\u5f00\u53d1\u4e00\u4e2a\u7b80\u5355\u7684 Handler\uff0c \u8bb0\u5f55\u670d\u52a1\u7aef\u7684 access log\u3002 public class AccessLogHandler implements Handler { private static final Logger LOGGER = LoggerFactory.getLogger(AccessLogHandler.class); @Override public void handle(Invocation invocation, AsyncResponse asyncResp) throws Exception { invocation.getTraceIdLogger().info(LOGGER, request for operation {} begin , invocation.getInvocationQualifiedName()); invocation.next((resp) - { invocation.getTraceIdLogger().info(LOGGER, request for operation {} end , invocation.getInvocationQualifiedName()); asyncResp.complete(resp); }); } } \u914d\u7f6e Handler config handler id= custom-access-log class= org.apache.servicecomb.demo.prefix.AccessLogHandler / /config \u542f\u7528 Handler servicecomb: handler: chain: Provider: default: custom-access-log \u4e1a\u52a1\u65e5\u5fd7 \u53ef\u4ee5\u5728\u4e1a\u52a1\u5b9e\u73b0\u4e2d\u8bb0\u5f55 trace id public class RegisterUrlPrefixEndpoint { private static final Logger LOGGER = LoggerFactory.getLogger(RegisterUrlPrefixEndpoint.class); @GetMapping(path = /getName ) public String getName(@RequestParam(name = name ) String name) { ((Invocation) ContextUtils.getInvocationContext()).getTraceIdLogger().info(LOGGER, get name invoked. ); return name; } } \u589e\u52a0\u4e86 access log \u548c\u4e1a\u52a1\u65e5\u5fd7\u540e\u7684\u6548\u679c\u5982\u4e0b\uff1a [5e72e39e55209533-1] - request for operation PRODUCER rest demo-register-url-prefix-server.RegisterUrlPrefixEndpoint.getName begin [5e72e39e55209533-1] - get name invoked. [5e72e39e55209533-1] - request for operation PRODUCER rest demo-register-url-prefix-server.RegisterUrlPrefixEndpoint.getName end","title":"\u4e1a\u52a1\u65e5\u5fd7\u5305\u542b trace id"},{"location":"featured-topics/features/weak-type-contrast/","text":"2.0.0 \u65b0\u7279\u6027\u4ecb\u7ecd\uff1a \u5f31\u7c7b\u578b\u5951\u7ea6 \"\u4ee5\u5951\u7ea6\u4e3a\u4e2d\u5fc3\" \u662f Java Chassis \u7684\u6838\u5fc3\u8bbe\u8ba1\u7406\u5ff5\u3002 \u201c\u5951\u7ea6\u201d \u626e\u6f14\u7740\u7528\u6237\u4e0e\u5f00\u53d1\u8005\uff0c\u5f00\u53d1\u8005\u4e0e\u5f00\u53d1\u8005\u4e4b\u95f4\u7684\u6c9f\u901a\u6865\u6881\u3002 \u4e3e\u51e0\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u3002 \u5f00\u53d1\u8005\u53d1\u5e03\u4e86\u4e00\u4e2a\u5fae\u670d\u52a1A\uff0c\u540c\u65f6\u53d1\u5e03\u4e86\u4e00\u4efd\u5951\u7ea6\u6587\u4ef6\uff1a swagger: '2.0' info: title: rest api version: 1.0.0 basePath: /controller produces: - application/json paths: /add: get: operationId: add parameters: - name: a in: query required: true type: integer format: int32 - name: b in: query required: true type: integer format: int32 responses: 200 : description: add numer schema: type: integer format: int32 \u5fae\u670d\u52a1A\u7684\u7528\u6237\u53ef\u4ee5\u57fa\u4e8e\u8fd9\u4efd\u5951\u7ea6\uff0c\u4f7f\u7528\u6d4f\u89c8\u5668\u8bbf\u95ee add \u63a5\u53e3\uff0c\u4e5f\u53ef\u4ee5\u5728\u81ea\u5df1\u7684\u5fae\u670d\u52a1B\u4e2d\uff0c\u4f7f\u7528 RestTemplate \u8c03\u7528 add \u63a5\u53e3\uff0c\u7528\u6237\u4e0d\u9700\u8981\u77e5\u9053\u5fae\u670d\u52a1A\u7684\u5b9e\u73b0\u7ec6\u8282\uff0c\u4e5f\u4e0d\u9700\u8981\u4f9d\u8d56\u4efb\u4f55\u5fae\u670d\u52a1A\u63d0\u4f9b\u7684\u63a5\u53e3\uff0c\u5fae\u670d\u52a1B\u4fdd\u6301\u5b8c\u5168 \u4e0e\u5fae\u670d\u52a1A\u72ec\u7acb\u3002\u53ea\u8981\u5951\u7ea6\u4e0d\u53d8\uff0c\u5fae\u670d\u52a1B\u5c31\u53ef\u4ee5\u4fdd\u6301\u4e0d\u53d8\u3002 \u4f5c\u4e3a\u5fae\u670d\u52a1A\u7684\u5176\u4ed6\u5f00\u53d1\u8005\uff0c\u53ef\u4ee5\u57fa\u4e8e\u5951\u7ea6\u5f00\u53d1\u6cbb\u7406\u529f\u80fd\uff0c\u4e0d\u9700\u8981\u77e5\u9053 add \u63a5\u53e3\u7684\u5b9e\u73b0\u7ec6\u8282\u3002\u6bd4\u5982\u53ef\u4ee5\u7ed9 add \u63a5\u53e3\u589e\u52a0\u6d41\u91cf\u63a7\u5236 servicecomb.flowcontrol.Provider.qps.limit.[ServiceA].[Controller].[add]=1000 \uff0c \u9650\u5236\u5176\u6d41\u91cf\u4e3a1000 TPS\uff1b\u8fd8\u53ef\u4ee5\u57fa\u4e8e add \u63a5\u53e3\u7684\u53c2\u6570\u505a\u7070\u5ea6\u53d1\u5e03\uff0c\u5728\u7070\u5ea6\u53d1\u5e03\u4ee3\u7801\u91cc\u9762\u53ef\u80fd\u4f1a\u5b58\u5728\u4e0b\u9762\u7684\u4ee3\u7801\u7247\u6bb5\uff1a invocation.getSwaggerArgument(\"a\") \u6765\u83b7\u53d6\u53c2\u6570\u503c\u3002 \"\u4ee5\u5951\u7ea6\u4e3a\u4e2d\u5fc3\"\u662f\u4fdd\u6301\u5fae\u670d\u52a1\"\u72ec\u7acb\u6027\"\u975e\u5e38\u91cd\u8981\u7684\u624b\u6bb5\uff0c\u201c\u72ec\u7acb\u5f00\u53d1\u3001\u72ec\u7acb\u4ea4\u4ed8\u201d\u662f\u5fae\u670d\u52a1\u88ab\u5f15\u5165\uff0c\u63d0\u5347\u8f6f\u4ef6\u5de5\u7a0b\u80fd\u529b \u6700\u91cd\u8981\u7684\u4ef7\u503c\u3002 \u672c\u6587\u91cd\u70b9\u4ecb\u7ecd2.0.0\u7248\u672c\u5f15\u5165\u7684\u201c\u5f31\u7c7b\u578b\u5951\u7ea6\u201d\uff0c\u4ee5\u53ca\u5b83\u4e0e\u4e4b\u524d\u201c\u5f3a\u7c7b\u578b\u5951\u7ea6\u201d\u4e4b\u95f4\u7684\u5dee\u522b\u4e0e\u8054\u7cfb\u3002 \u5f31\u7c7b\u578b\u5951\u7ea6 vs \u5f3a\u7c7b\u578b\u5951\u7ea6 \u5f31\u7c7b\u578b\u5951\u7ea6\u548c\u5f3a\u7c7b\u578b\u5951\u7ea6\u7684\u5171\u540c\u70b9\u90fd\u662f\"\u4ee5\u5951\u7ea6\u4e3a\u4e2d\u5fc3\"\uff0c\u56e0\u6b64\u5f31\u7c7b\u578b\u5951\u7ea6\u5e76\u6ca1\u6709\u6539\u53d8 Java Chassis \u7684\u6574\u4f53\u8bbe\u8ba1\u7406\u5ff5\uff0c \u800c\u662f\u5728\u5b9e\u73b0\u5c42\u9762\u53d1\u751f\u4e86\u4e00\u4e9b\u53d8\u5316\uff0c\u8fdb\u800c\u5f71\u54cd\u5230\u90e8\u5206\u5f00\u53d1\u4f53\u9a8c\u30022.0.0\u4e4b\u524d\u7684\u7248\u672c\u662f\u5f3a\u7c7b\u578b\u5951\u7ea6\u3002\u4ea7\u751f\u5f3a\u7c7b\u578b\u5951\u7ea6\u548c\u4e00\u4e9b\u6280\u672f\u80cc\u666f \u6709\u5173\u7cfb\uff0c\u8ba8\u8bba\u7684\u8d77\u70b9\u53ef\u4ee5\u4ece Java Chassis Highway \u7684 ProtoBuffer \u8bb2\u8d77\u3002 \u719f\u6089 ProtoBuffer \u7684\u5f00\u53d1\u8005\u90fd\u77e5\u9053\uff0c ProtoBuffer \u4e3b\u8981\u88ab\u7528\u4e8e gRPC\uff0c \u5176\u4ed6\u5904\u7406 ProtoBuffer \u7f16\u89e3\u7801\u7684\u5e93\u8fd8\u6709 ProtoStuff\u3002 gRPC \u9700\u8981\u5199 IDL \u6587\u4ef6\uff0c \u7136\u540e\u6839\u636e IDL \u751f\u6210\u8fd0\u884c\u65f6\u7684\u4ee3\u7801\uff0c\u5728gRPC\u7684\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff0c\u5904\u7406\u7f16\u89e3\u7801\u7684\u7c7b\u5728\u7f16\u8bd1\u65f6\u95f4\u5c31\u5df2\u7ecf\u786e\u5b9a\uff0c\u65e0\u6cd5 \u66f4\u6539\u3002ProtoStuff \u63d0\u4f9b\u7684\u7c7b\u5e93\u6bd4 gRPC \u66f4\u52a0\u7075\u6d3b\uff0c\u5bf9\u4e8e\u540c\u6837\u7684 IDL \u6587\u4ef6\uff0c\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u6307\u5b9a\u4e0d\u540c\u7684\u7c7b\u8fdb\u884c\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u3002 \u65e0\u8bba\u5982\u4f55\uff0c\u5728\u4e00\u4e2a\u5fae\u670d\u52a1\u91cc\u9762\uff0c\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u5951\u7ea6\uff08IDL\u6587\u4ef6\uff09\uff0c\u90a3\u4e48\u5fc5\u987b\u5728\u7f16\u8bd1\u65f6\u5c31\u786e\u5b9a\u8fd9\u4e2a\u5951\u7ea6\u5bf9\u5e94\u7684\u7c7b\u662f\u4ec0\u4e48\u3002\u8fd9\u4e2a\u7c7b\u53ef\u4ee5 \u6709\u4e00\u4e2a\uff0c\u4e5f\u53ef\u4ee5\u6709\u591a\u4e2a\uff0c\u4f46\u662f\u5fc5\u987b\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u786e\u5b9a\u7c7b\u7684\u7c7b\u578b\u3002 \u5f3a\u7c7b\u578b\u5951\u7ea6\u53ef\u4ee5\u5b9a\u4e49\u4e3a\uff1a\u5728\u4e00\u4e2a\u5fae\u670d\u52a1\u91cc\u9762\uff0c\u5951\u7ea6\u5fc5\u987b\u5b58\u5728\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u7f16\u8bd1\u65f6\u786e\u5b9a\u7684\u7c7b\u578b\u4e0e\u5b83\u5bf9\u5e94\u3002\u57282.0.0\u7248\u672c\u4e4b\u524d\uff0c\u8fd9\u4e2a\u5bf9\u5e94 \u7684\u7c7b\u578b\u662f\u5728\u5951\u7ea6\u6587\u4ef6\u91cc\u9762\u6307\u5b9a\u7684\uff0c\u6bd4\u5982 x-java-interface: org.apache.servicecomb.demo.controller.Controller \u3002 \u5f00\u53d1\u8005 \u53ef\u80fd\u6ce8\u610f\u5230\u5728\u6d88\u8d39\u7aef\u4ee3\u7801\uff0c\u53ef\u4ee5\u4e0d\u4f9d\u8d56\u4efb\u4f55\u63d0\u4f9b\u7aef\u7684\u7c7b\uff0c\u8fd9\u662f\u56e0\u4e3a\u6d88\u8d39\u7aef\u7684\u4ee3\u7801\u4f1a\u6839\u636e\u5951\u7ea6\u63cf\u8ff0\uff0c\u91c7\u7528 javassist \u5de5\u5177\u52a8\u6001\u751f\u6210 \u4e00\u4e2a\u7c7b\u578b\u4e0e\u5951\u7ea6\u5bf9\u5e94\uff0c\u4e0d\u540c\u7248\u672c\u7684\u5951\u7ea6\u9700\u8981\u751f\u6210\u4e0d\u4e00\u6837\u7684\u7c7b\u578b\uff0c\u5982\u679c\u7070\u5ea6\u73af\u5883\u7248\u672c\u8fc7\u591a\uff0c\u5c31\u53ef\u80fd\u5bfc\u81f4\u5185\u5b58\u8fc7\u5927\u7684\u95ee\u9898\uff0c\u7279\u522b\u662f\u5728\u8fb9\u7f18 (Edge Service\uff09\u670d\u52a1\u91cc\u9762\u3002 \u5f3a\u7c7b\u578b\u5951\u7ea6\u7684\u4e00\u4e2a\u5916\u5728\u4f53\u73b0\u5c31\u662f\u4e0b\u9762\u7684\u4ee3\u7801\uff1a Person result = restTemplate.postForObject( /getPerson , null, Person.class); \u53ef\u80fd\u629b\u51fa ClassCastException \u5f02\u5e38\u3002 \u56e0\u4e3a getPerson \u7684\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u5728\u7f16\u8bd1\u65f6\u5df2\u7ecf\u786e\u5b9a\uff0c \u5982\u679c\u8fd4\u56de\u503c Person \u7c7b\u578b \u4e0e\u7f16\u8bd1\u65f6\u7684\u7c7b\u578b\u4e0d\u4e00\u6837\uff0c\u5c31\u4f1a\u62a5\u544a ClassCastException \u5f02\u5e38\u3002 \u4e86\u89e3\u4e86\u5f3a\u7c7b\u578b\u5951\u7ea6\u540e\uff0c\u5f31\u7c7b\u578b\u5951\u7ea6\u7684\u5b9a\u4e49\u5c31\u5f88\u660e\u663e\u4e86\uff1a \u5728\u4e00\u4e2a\u5fae\u670d\u52a1\u91cc\u9762\uff0c\u5951\u7ea6\u53ef\u4ee5\u5b58\u5728\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u7f16\u8bd1\u65f6\u786e\u5b9a\u7684\u7c7b\u578b\u4e0e\u5b83\u5bf9\u5e94\uff0c \u4e5f\u53ef\u4ee5\u4e0d\u5b58\u5728\u7f16\u8bd1\u65f6\u786e\u5b9a\u7684\u7c7b\u578b\u4e0e\u5b83\u5bf9\u5e94\u3002 \u5f15\u5165\u5f31\u7c7b\u578b\u5951\u7ea6\u540e\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\uff1a Person1 result = restTemplate.postForObject( /getPerson , null, Person1.class); Person2 result = restTemplate.postForObject( /getPerson , null, Person2.class); \u90fd\u4e0d\u4f1a\u62a5\u544a ClassCastException \u5f02\u5e38\uff0c\u53ea\u9700\u8981 Person1 \u548c Person2 \u7684\u5b9a\u4e49\u90fd\u80fd\u591f\u548c\u5951\u7ea6\u5bf9\u5e94\u3002 \u7531\u6b64\u53ef\u4ee5\u770b\u51fa\uff0c\u5f31\u7c7b\u578b \u5951\u7ea6\u5728\u4f7f\u7528\u65b9\u5f0f\u4e0a\u66f4\u52a0\u7075\u6d3b\uff0c\u53bb\u6389\u4e86\u52a8\u6001\u521b\u5efa\u7c7b\u7684\u8fc7\u7a0b\uff0c\u964d\u4f4e\u4e86\u5185\u5b58\u5360\u7528\uff0c\u7f29\u77ed\u4e86\u5fae\u670d\u52a1\u542f\u52a8\u65f6\u95f4\u3002 \u5229\u7528\u5f31\u7c7b\u578b\u5951\u7ea6\u589e\u5f3a\u5199\u4ee3\u7801\u7684\u7075\u6d3b\u6027 \u5f31\u7c7b\u578b\u5951\u7ea6\u4e0d\u8981\u6c42\u63d0\u4f9b\u8005\u4e0e\u6d88\u8d39\u8005\u4f7f\u7528\u4e00\u6837\u7684\u7c7b\u578b\uff0c\u5728\u4ee3\u7801\u4e66\u5199\u4e0a\u63d0\u4f9b\u4e86\u5f88\u5927\u7684\u65b9\u4fbf\u3002\u6bd4\u5982\u63d0\u4f9b\u8005\u6709\u5982\u4e0b\u63a5\u53e3\uff1a @RestSchema(schemaId = weakSpringmvc ) @RequestMapping(path = /weakSpringmvc , produces = MediaType.APPLICATION_JSON_VALUE) public class WeakSpringmvc { @GetMapping(path = /diffNames ) @ApiOperation(value = differentName , nickname = differentName ) public int diffNames(@RequestParam( x ) int a, @RequestParam( y ) int b) { return a * 2 + b; } @GetMapping(path = /genericParams ) @ApiOperation(value = genericParams , nickname = genericParams ) public List List String genericParams(@RequestParam( code ) int code, @RequestBody List List String names) { return names; } @GetMapping(path = /genericParamsModel ) @ApiOperation(value = genericParamsModel , nickname = genericParamsModel ) public GenericsModel genericParamsModel(@RequestParam( code ) int code, @RequestBody GenericsModel model) { return model; } @GetMapping(path = /specialNameModel ) @ApiOperation(value = specialNameModel , nickname = specialNameModel ) public SpecialNameModel specialNameModel(@RequestParam( code ) int code, @RequestBody SpecialNameModel model) { return model; } } \u800c\u6d88\u8d39\u8005\u53ea\u9700\u8981\u8bbf\u95ee\u5176\u4e2d\u4e00\u4e2a\u63a5\u53e3diffNames\uff0c\u53ea\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u63a5\u53e3\uff1a interface DiffNames { int differentName(int x, int y); } @RpcReference(microserviceName = springmvc , schemaId = weakSpringmvc ) private DiffNames diffNames; \u5176\u4e2d\u63a5\u53e3\u540d\u79f0\u662f\u548c\u5951\u7ea6\u91cc\u9762\u7684\u63a5\u53e3\u540d\u79f0\u4e00\u81f4 differentName \uff0c \u800c\u4e0d\u662f\u548c\u670d\u52a1\u7aef\u7684\u4ee3\u7801\u4e00\u81f4 diffNames \u3002 \u5951\u7ea6\u5305\u542b x \u548c y \u4e24\u4e2a\u53c2\u6570\uff0c \u5e76\u4e14\u5951\u7ea6\u7684\u53c2\u6570\u662f\u987a\u5e8f\u65e0\u5173\u7684\uff0c \u4e0b\u9762\u7684\u4ee3\u7801\u4e5f\u662f\u53ef\u4ee5\u8bbf\u95ee\u540c\u4e00\u4e2a\u63a5\u53e3\u7684\uff1a interface DiffNames2 { int differentName(int y, int x); } @RpcReference(microserviceName = springmvc , schemaId = weakSpringmvc ) private DiffNames2 diffNames2; \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c2.0.0 \u7248\u672c\u8981\u6c42\u4fdd\u7559\u53c2\u6570\u540d\u79f0\uff0c \u5728\u7f16\u8bd1\u4ee3\u7801\u7684\u65f6\u5019\uff0c\u9700\u8981\u52a0\u4e0a -parameters \u7f16\u8bd1\u53c2\u6570\u3002 \u5f00\u53d1\u8005\u8fd8\u53ef\u4ee5\u901a\u8fc7 RestTemplate \u8c03\u7528\u8fd9\u4e2a\u63a5\u53e3\uff1a restTemplate.getForObject( cse://springmvc/weakSpringmvc/diffNames?x=2 y=3 , Integer.class) \u6216\u8005\u91c7\u7528 InvokerUtils \u8c03\u7528\uff1a Map String, Object args = new HashMap (); args.put( x , 2); args.put( y , 3); InvokerUtils.syncInvoke( springmvc , weakSpringmvc , differentName , args); \u5f31\u7c7b\u578b\u5951\u7ea6\u7684\u6cbb\u7406\u529f\u80fd \u5f31\u7c7b\u578b\u5951\u7ea6\u5728 Invocation \u91cc\u9762\u63d0\u4f9b\u4e86\u72ec\u7acb\u7684\u65b9\u6cd5\uff0c\u8ba9\u5f00\u53d1\u8005\u5f00\u53d1\u6cbb\u7406\u529f\u80fd\u66f4\u52a0\u5bb9\u6613\u3002 public Map String, Object getInvocationArguments() { return this.invocationArguments; } public Map String, Object getSwaggerArguments() { return this.swaggerArguments; } public Object getInvocationArgument(String name) { return this.invocationArguments.get(name); } public Object getSwaggerArgument(String name) { return this.swaggerArguments.get(name); } getSwaggerArguments \u59cb\u7ec8\u83b7\u53d6\u7684\u662f\u548c\u5951\u7ea6\u5bf9\u5e94\u7684\u53c2\u6570\uff0c\u5982\u679c\u5951\u7ea6\u4e3a x \u548c y \u4e24\u4e2a query \u53c2\u6570\uff0c \u90a3\u4e48\u5f97\u5230\u7684\u53c2\u6570\u5c31\u662f \u5305\u542b x \u548c y \u7684 Map \u3002 getInvocationArgument \u83b7\u53d6\u7684\u662f\u5b9e\u9645\u7c7b\u578b\u53c2\u6570\uff0c \u5728\u670d\u52a1\u63d0\u4f9b\u8005\uff0c\u8fd9\u4e2a\u53c2\u6570\u5217\u8868\u7684\u4e2a\u6570\u548c\u7c7b\u578b \u548c\u5b9e\u9645\u7684 Method \u7684\u5217\u8868\u5bf9\u5e94\uff0c \u6bd4\u5982\u53ef\u80fd\u5305\u542b InvocationContext , HttpServletRequest \u7b49\u6ce8\u5165\u53c2\u6570\u3002 \u8fd8\u6709\u5f88\u591a\u60c5\u51b5\uff0c \u5951\u7ea6\u53c2\u6570\u548c\u7c7b\u578b\u53c2\u6570\u4e0d\u5bf9\u5e94\uff0c\u6bd4\u5982\u805a\u5408\u53c2\u6570\u7684\u60c5\u51b5\uff0c\u5951\u7ea6\u53c2\u6570\u662f\u591a\u4e2a query \u53c2\u6570\uff0c \u800c\u7c7b\u578b\u53c2\u6570\u662f\u4e00\u4e2a POJO\uff1b \u518d\u6bd4\u5982 POJO \u63a5\u53e3 \u5b9a\u4e49\u7684\u65f6\u5019\uff0c \u7c7b\u578b\u53c2\u6570\u53ef\u80fd\u662f\u591a\u4e2a\uff0c \u800c\u5951\u7ea6\u53c2\u6570\u53ea\u6709\u4e00\u4e2a body \u53c2\u6570\u3002 \u5728\u670d\u52a1\u6d88\u8d39\u8005\uff0c\u5982\u679c\u7528\u6237\u91c7\u7528 POJO \u65b9\u5f0f\u8c03\u7528\u670d\u52a1\u63d0\u4f9b\u8005\uff0c \u4e24\u4e2a\u63a5\u53e3\u7684\u8fd4\u56de\u7684\u503c\u4e0e\u670d\u52a1\u63d0\u4f9b\u8005\u7c7b\u4f3c\uff0c\u5b58\u5728\u8bed\u4e49\u5dee\u522b\uff1b\u5982\u679c\u91c7\u7528 RestTemplate \u6216\u8005 InvokerUtils \u8c03\u7528\uff0c \u90a3\u4e48\u4e24\u4e2a\u63a5\u53e3\u8fd4\u56de\u7684 \u5185\u5bb9\u4e00\u6837\uff0c\u90fd\u662f\u5951\u7ea6\u53c2\u6570\u3002\u5728\u8fb9\u7f18\u670d\u52a1\uff0c \u4e24\u4e2a\u63a5\u53e3\u8fd4\u56de\u7684\u90fd\u662f\u5951\u7ea6\u53c2\u6570\u3002 \u8fd9\u79cd\u884c\u4e3a\u4f53\u73b0\u4e86\u5f31\u7c7b\u578b\u5951\u7ea6\u7684\u8bed\u4e49\uff1a \u662f\u5426\u5b58\u5728\u7f16\u8bd1\u65f6 \u7c7b\u578b\u4e0e\u5951\u7ea6\u5bf9\u5e94\u3002 \u5f31\u7c7b\u578b\u5951\u7ea6\u5e26\u6765\u7684\u4e00\u4e9b\u53d8\u66f4 \u603b\u4f53\u800c\u8a00\uff0c\u5bf9\u4e8e REST \u901a\u4fe1\u6a21\u5f0f\uff0c \u5f31\u7c7b\u578b\u5951\u7ea6\u4e0d\u4ec5\u589e\u5f3a\u4e86\u5199\u4ee3\u7801\u7684\u7075\u6d3b\u6027\uff0c \u8fd8\u5b8c\u6574\u4fdd\u7559\u4e86\u5f3a\u7c7b\u578b\u5951\u7ea6\u7684\u5199\u4ee3\u7801\u65b9\u5f0f\uff0c\u51e0\u4e4e\u4e0d \u5b58\u5728\u7528\u6237\u9700\u8981\u611f\u77e5\u7684\u53d8\u66f4\u3002 \u5bf9\u4e8e HIGHWAY \u901a\u4fe1\u6a21\u5f0f\uff0c \u7531\u4e8e\u5e95\u5c42\u91c7\u7528 ProtoBuffer \u7f16\u7801\uff0c \u800c ProtoBuffer \u5929\u7136\u5c31\u662f\u4e00\u79cd \u5f3a\u7c7b\u578b\u5951\u7ea6\u7684\u7f16\u89e3\u7801\u8fc7\u7a0b\uff0c java-chassis \u4e3a\u4e86\u652f\u6301\u5f31\u7c7b\u578b\u5951\u7ea6\uff0c \u505a\u4e86\u5927\u91cf\u52aa\u529b\uff0c \u5728\u4e00\u4e9b\u8fb9\u754c\u6761\u4ef6\u5904\u7406\u4e0a\u4e0e\u5f31\u7c7b\u578b\u5951\u7ea6\u5b58\u5728 \u53d8\u66f4\uff0c\u4e24\u4e2a\u7248\u672c\u7684\u7f16\u89e3\u7801\u662f\u4e0d\u517c\u5bb9\u7684\uff0c\u9700\u8981\u540c\u65f6\u5347\u7ea7\u63d0\u4f9b\u8005\u548c\u6d88\u8d39\u8005\u3002 \u5728\u7f16\u7801\u65b9\u5f0f\u4e0a\uff0c\u5dee\u5f02\u4e3b\u8981\u4f53\u73b0\u5728\u5bf9\u4e8e\u7f3a\u7701\u503c\u7684\u5904\u7406\uff0c\u5bf9\u4e8e null \u7684\u5904\u7406\u7b49\u95ee\u9898\u4e0a\uff0c \u8be6\u7ec6\u53c2\u8003 1.3.0 \u5347\u7ea7 2.0.0\u6307\u5bfc \u3002","title":"2.0.0 \u65b0\u7279\u6027\u4ecb\u7ecd\uff1a \u5f31\u7c7b\u578b\u5951\u7ea6"},{"location":"featured-topics/features/weak-type-contrast/#200","text":"\"\u4ee5\u5951\u7ea6\u4e3a\u4e2d\u5fc3\" \u662f Java Chassis \u7684\u6838\u5fc3\u8bbe\u8ba1\u7406\u5ff5\u3002 \u201c\u5951\u7ea6\u201d \u626e\u6f14\u7740\u7528\u6237\u4e0e\u5f00\u53d1\u8005\uff0c\u5f00\u53d1\u8005\u4e0e\u5f00\u53d1\u8005\u4e4b\u95f4\u7684\u6c9f\u901a\u6865\u6881\u3002 \u4e3e\u51e0\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u3002 \u5f00\u53d1\u8005\u53d1\u5e03\u4e86\u4e00\u4e2a\u5fae\u670d\u52a1A\uff0c\u540c\u65f6\u53d1\u5e03\u4e86\u4e00\u4efd\u5951\u7ea6\u6587\u4ef6\uff1a swagger: '2.0' info: title: rest api version: 1.0.0 basePath: /controller produces: - application/json paths: /add: get: operationId: add parameters: - name: a in: query required: true type: integer format: int32 - name: b in: query required: true type: integer format: int32 responses: 200 : description: add numer schema: type: integer format: int32 \u5fae\u670d\u52a1A\u7684\u7528\u6237\u53ef\u4ee5\u57fa\u4e8e\u8fd9\u4efd\u5951\u7ea6\uff0c\u4f7f\u7528\u6d4f\u89c8\u5668\u8bbf\u95ee add \u63a5\u53e3\uff0c\u4e5f\u53ef\u4ee5\u5728\u81ea\u5df1\u7684\u5fae\u670d\u52a1B\u4e2d\uff0c\u4f7f\u7528 RestTemplate \u8c03\u7528 add \u63a5\u53e3\uff0c\u7528\u6237\u4e0d\u9700\u8981\u77e5\u9053\u5fae\u670d\u52a1A\u7684\u5b9e\u73b0\u7ec6\u8282\uff0c\u4e5f\u4e0d\u9700\u8981\u4f9d\u8d56\u4efb\u4f55\u5fae\u670d\u52a1A\u63d0\u4f9b\u7684\u63a5\u53e3\uff0c\u5fae\u670d\u52a1B\u4fdd\u6301\u5b8c\u5168 \u4e0e\u5fae\u670d\u52a1A\u72ec\u7acb\u3002\u53ea\u8981\u5951\u7ea6\u4e0d\u53d8\uff0c\u5fae\u670d\u52a1B\u5c31\u53ef\u4ee5\u4fdd\u6301\u4e0d\u53d8\u3002 \u4f5c\u4e3a\u5fae\u670d\u52a1A\u7684\u5176\u4ed6\u5f00\u53d1\u8005\uff0c\u53ef\u4ee5\u57fa\u4e8e\u5951\u7ea6\u5f00\u53d1\u6cbb\u7406\u529f\u80fd\uff0c\u4e0d\u9700\u8981\u77e5\u9053 add \u63a5\u53e3\u7684\u5b9e\u73b0\u7ec6\u8282\u3002\u6bd4\u5982\u53ef\u4ee5\u7ed9 add \u63a5\u53e3\u589e\u52a0\u6d41\u91cf\u63a7\u5236 servicecomb.flowcontrol.Provider.qps.limit.[ServiceA].[Controller].[add]=1000 \uff0c \u9650\u5236\u5176\u6d41\u91cf\u4e3a1000 TPS\uff1b\u8fd8\u53ef\u4ee5\u57fa\u4e8e add \u63a5\u53e3\u7684\u53c2\u6570\u505a\u7070\u5ea6\u53d1\u5e03\uff0c\u5728\u7070\u5ea6\u53d1\u5e03\u4ee3\u7801\u91cc\u9762\u53ef\u80fd\u4f1a\u5b58\u5728\u4e0b\u9762\u7684\u4ee3\u7801\u7247\u6bb5\uff1a invocation.getSwaggerArgument(\"a\") \u6765\u83b7\u53d6\u53c2\u6570\u503c\u3002 \"\u4ee5\u5951\u7ea6\u4e3a\u4e2d\u5fc3\"\u662f\u4fdd\u6301\u5fae\u670d\u52a1\"\u72ec\u7acb\u6027\"\u975e\u5e38\u91cd\u8981\u7684\u624b\u6bb5\uff0c\u201c\u72ec\u7acb\u5f00\u53d1\u3001\u72ec\u7acb\u4ea4\u4ed8\u201d\u662f\u5fae\u670d\u52a1\u88ab\u5f15\u5165\uff0c\u63d0\u5347\u8f6f\u4ef6\u5de5\u7a0b\u80fd\u529b \u6700\u91cd\u8981\u7684\u4ef7\u503c\u3002 \u672c\u6587\u91cd\u70b9\u4ecb\u7ecd2.0.0\u7248\u672c\u5f15\u5165\u7684\u201c\u5f31\u7c7b\u578b\u5951\u7ea6\u201d\uff0c\u4ee5\u53ca\u5b83\u4e0e\u4e4b\u524d\u201c\u5f3a\u7c7b\u578b\u5951\u7ea6\u201d\u4e4b\u95f4\u7684\u5dee\u522b\u4e0e\u8054\u7cfb\u3002","title":"2.0.0 \u65b0\u7279\u6027\u4ecb\u7ecd\uff1a \u5f31\u7c7b\u578b\u5951\u7ea6"},{"location":"featured-topics/features/weak-type-contrast/#vs","text":"\u5f31\u7c7b\u578b\u5951\u7ea6\u548c\u5f3a\u7c7b\u578b\u5951\u7ea6\u7684\u5171\u540c\u70b9\u90fd\u662f\"\u4ee5\u5951\u7ea6\u4e3a\u4e2d\u5fc3\"\uff0c\u56e0\u6b64\u5f31\u7c7b\u578b\u5951\u7ea6\u5e76\u6ca1\u6709\u6539\u53d8 Java Chassis \u7684\u6574\u4f53\u8bbe\u8ba1\u7406\u5ff5\uff0c \u800c\u662f\u5728\u5b9e\u73b0\u5c42\u9762\u53d1\u751f\u4e86\u4e00\u4e9b\u53d8\u5316\uff0c\u8fdb\u800c\u5f71\u54cd\u5230\u90e8\u5206\u5f00\u53d1\u4f53\u9a8c\u30022.0.0\u4e4b\u524d\u7684\u7248\u672c\u662f\u5f3a\u7c7b\u578b\u5951\u7ea6\u3002\u4ea7\u751f\u5f3a\u7c7b\u578b\u5951\u7ea6\u548c\u4e00\u4e9b\u6280\u672f\u80cc\u666f \u6709\u5173\u7cfb\uff0c\u8ba8\u8bba\u7684\u8d77\u70b9\u53ef\u4ee5\u4ece Java Chassis Highway \u7684 ProtoBuffer \u8bb2\u8d77\u3002 \u719f\u6089 ProtoBuffer \u7684\u5f00\u53d1\u8005\u90fd\u77e5\u9053\uff0c ProtoBuffer \u4e3b\u8981\u88ab\u7528\u4e8e gRPC\uff0c \u5176\u4ed6\u5904\u7406 ProtoBuffer \u7f16\u89e3\u7801\u7684\u5e93\u8fd8\u6709 ProtoStuff\u3002 gRPC \u9700\u8981\u5199 IDL \u6587\u4ef6\uff0c \u7136\u540e\u6839\u636e IDL \u751f\u6210\u8fd0\u884c\u65f6\u7684\u4ee3\u7801\uff0c\u5728gRPC\u7684\u8fd0\u884c\u8fc7\u7a0b\u4e2d\uff0c\u5904\u7406\u7f16\u89e3\u7801\u7684\u7c7b\u5728\u7f16\u8bd1\u65f6\u95f4\u5c31\u5df2\u7ecf\u786e\u5b9a\uff0c\u65e0\u6cd5 \u66f4\u6539\u3002ProtoStuff \u63d0\u4f9b\u7684\u7c7b\u5e93\u6bd4 gRPC \u66f4\u52a0\u7075\u6d3b\uff0c\u5bf9\u4e8e\u540c\u6837\u7684 IDL \u6587\u4ef6\uff0c\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u6307\u5b9a\u4e0d\u540c\u7684\u7c7b\u8fdb\u884c\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u3002 \u65e0\u8bba\u5982\u4f55\uff0c\u5728\u4e00\u4e2a\u5fae\u670d\u52a1\u91cc\u9762\uff0c\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u5951\u7ea6\uff08IDL\u6587\u4ef6\uff09\uff0c\u90a3\u4e48\u5fc5\u987b\u5728\u7f16\u8bd1\u65f6\u5c31\u786e\u5b9a\u8fd9\u4e2a\u5951\u7ea6\u5bf9\u5e94\u7684\u7c7b\u662f\u4ec0\u4e48\u3002\u8fd9\u4e2a\u7c7b\u53ef\u4ee5 \u6709\u4e00\u4e2a\uff0c\u4e5f\u53ef\u4ee5\u6709\u591a\u4e2a\uff0c\u4f46\u662f\u5fc5\u987b\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u786e\u5b9a\u7c7b\u7684\u7c7b\u578b\u3002 \u5f3a\u7c7b\u578b\u5951\u7ea6\u53ef\u4ee5\u5b9a\u4e49\u4e3a\uff1a\u5728\u4e00\u4e2a\u5fae\u670d\u52a1\u91cc\u9762\uff0c\u5951\u7ea6\u5fc5\u987b\u5b58\u5728\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u7f16\u8bd1\u65f6\u786e\u5b9a\u7684\u7c7b\u578b\u4e0e\u5b83\u5bf9\u5e94\u3002\u57282.0.0\u7248\u672c\u4e4b\u524d\uff0c\u8fd9\u4e2a\u5bf9\u5e94 \u7684\u7c7b\u578b\u662f\u5728\u5951\u7ea6\u6587\u4ef6\u91cc\u9762\u6307\u5b9a\u7684\uff0c\u6bd4\u5982 x-java-interface: org.apache.servicecomb.demo.controller.Controller \u3002 \u5f00\u53d1\u8005 \u53ef\u80fd\u6ce8\u610f\u5230\u5728\u6d88\u8d39\u7aef\u4ee3\u7801\uff0c\u53ef\u4ee5\u4e0d\u4f9d\u8d56\u4efb\u4f55\u63d0\u4f9b\u7aef\u7684\u7c7b\uff0c\u8fd9\u662f\u56e0\u4e3a\u6d88\u8d39\u7aef\u7684\u4ee3\u7801\u4f1a\u6839\u636e\u5951\u7ea6\u63cf\u8ff0\uff0c\u91c7\u7528 javassist \u5de5\u5177\u52a8\u6001\u751f\u6210 \u4e00\u4e2a\u7c7b\u578b\u4e0e\u5951\u7ea6\u5bf9\u5e94\uff0c\u4e0d\u540c\u7248\u672c\u7684\u5951\u7ea6\u9700\u8981\u751f\u6210\u4e0d\u4e00\u6837\u7684\u7c7b\u578b\uff0c\u5982\u679c\u7070\u5ea6\u73af\u5883\u7248\u672c\u8fc7\u591a\uff0c\u5c31\u53ef\u80fd\u5bfc\u81f4\u5185\u5b58\u8fc7\u5927\u7684\u95ee\u9898\uff0c\u7279\u522b\u662f\u5728\u8fb9\u7f18 (Edge Service\uff09\u670d\u52a1\u91cc\u9762\u3002 \u5f3a\u7c7b\u578b\u5951\u7ea6\u7684\u4e00\u4e2a\u5916\u5728\u4f53\u73b0\u5c31\u662f\u4e0b\u9762\u7684\u4ee3\u7801\uff1a Person result = restTemplate.postForObject( /getPerson , null, Person.class); \u53ef\u80fd\u629b\u51fa ClassCastException \u5f02\u5e38\u3002 \u56e0\u4e3a getPerson \u7684\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u5728\u7f16\u8bd1\u65f6\u5df2\u7ecf\u786e\u5b9a\uff0c \u5982\u679c\u8fd4\u56de\u503c Person \u7c7b\u578b \u4e0e\u7f16\u8bd1\u65f6\u7684\u7c7b\u578b\u4e0d\u4e00\u6837\uff0c\u5c31\u4f1a\u62a5\u544a ClassCastException \u5f02\u5e38\u3002 \u4e86\u89e3\u4e86\u5f3a\u7c7b\u578b\u5951\u7ea6\u540e\uff0c\u5f31\u7c7b\u578b\u5951\u7ea6\u7684\u5b9a\u4e49\u5c31\u5f88\u660e\u663e\u4e86\uff1a \u5728\u4e00\u4e2a\u5fae\u670d\u52a1\u91cc\u9762\uff0c\u5951\u7ea6\u53ef\u4ee5\u5b58\u5728\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u7f16\u8bd1\u65f6\u786e\u5b9a\u7684\u7c7b\u578b\u4e0e\u5b83\u5bf9\u5e94\uff0c \u4e5f\u53ef\u4ee5\u4e0d\u5b58\u5728\u7f16\u8bd1\u65f6\u786e\u5b9a\u7684\u7c7b\u578b\u4e0e\u5b83\u5bf9\u5e94\u3002 \u5f15\u5165\u5f31\u7c7b\u578b\u5951\u7ea6\u540e\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\uff1a Person1 result = restTemplate.postForObject( /getPerson , null, Person1.class); Person2 result = restTemplate.postForObject( /getPerson , null, Person2.class); \u90fd\u4e0d\u4f1a\u62a5\u544a ClassCastException \u5f02\u5e38\uff0c\u53ea\u9700\u8981 Person1 \u548c Person2 \u7684\u5b9a\u4e49\u90fd\u80fd\u591f\u548c\u5951\u7ea6\u5bf9\u5e94\u3002 \u7531\u6b64\u53ef\u4ee5\u770b\u51fa\uff0c\u5f31\u7c7b\u578b \u5951\u7ea6\u5728\u4f7f\u7528\u65b9\u5f0f\u4e0a\u66f4\u52a0\u7075\u6d3b\uff0c\u53bb\u6389\u4e86\u52a8\u6001\u521b\u5efa\u7c7b\u7684\u8fc7\u7a0b\uff0c\u964d\u4f4e\u4e86\u5185\u5b58\u5360\u7528\uff0c\u7f29\u77ed\u4e86\u5fae\u670d\u52a1\u542f\u52a8\u65f6\u95f4\u3002","title":"\u5f31\u7c7b\u578b\u5951\u7ea6 vs \u5f3a\u7c7b\u578b\u5951\u7ea6"},{"location":"featured-topics/features/weak-type-contrast/#_1","text":"\u5f31\u7c7b\u578b\u5951\u7ea6\u4e0d\u8981\u6c42\u63d0\u4f9b\u8005\u4e0e\u6d88\u8d39\u8005\u4f7f\u7528\u4e00\u6837\u7684\u7c7b\u578b\uff0c\u5728\u4ee3\u7801\u4e66\u5199\u4e0a\u63d0\u4f9b\u4e86\u5f88\u5927\u7684\u65b9\u4fbf\u3002\u6bd4\u5982\u63d0\u4f9b\u8005\u6709\u5982\u4e0b\u63a5\u53e3\uff1a @RestSchema(schemaId = weakSpringmvc ) @RequestMapping(path = /weakSpringmvc , produces = MediaType.APPLICATION_JSON_VALUE) public class WeakSpringmvc { @GetMapping(path = /diffNames ) @ApiOperation(value = differentName , nickname = differentName ) public int diffNames(@RequestParam( x ) int a, @RequestParam( y ) int b) { return a * 2 + b; } @GetMapping(path = /genericParams ) @ApiOperation(value = genericParams , nickname = genericParams ) public List List String genericParams(@RequestParam( code ) int code, @RequestBody List List String names) { return names; } @GetMapping(path = /genericParamsModel ) @ApiOperation(value = genericParamsModel , nickname = genericParamsModel ) public GenericsModel genericParamsModel(@RequestParam( code ) int code, @RequestBody GenericsModel model) { return model; } @GetMapping(path = /specialNameModel ) @ApiOperation(value = specialNameModel , nickname = specialNameModel ) public SpecialNameModel specialNameModel(@RequestParam( code ) int code, @RequestBody SpecialNameModel model) { return model; } } \u800c\u6d88\u8d39\u8005\u53ea\u9700\u8981\u8bbf\u95ee\u5176\u4e2d\u4e00\u4e2a\u63a5\u53e3diffNames\uff0c\u53ea\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u63a5\u53e3\uff1a interface DiffNames { int differentName(int x, int y); } @RpcReference(microserviceName = springmvc , schemaId = weakSpringmvc ) private DiffNames diffNames; \u5176\u4e2d\u63a5\u53e3\u540d\u79f0\u662f\u548c\u5951\u7ea6\u91cc\u9762\u7684\u63a5\u53e3\u540d\u79f0\u4e00\u81f4 differentName \uff0c \u800c\u4e0d\u662f\u548c\u670d\u52a1\u7aef\u7684\u4ee3\u7801\u4e00\u81f4 diffNames \u3002 \u5951\u7ea6\u5305\u542b x \u548c y \u4e24\u4e2a\u53c2\u6570\uff0c \u5e76\u4e14\u5951\u7ea6\u7684\u53c2\u6570\u662f\u987a\u5e8f\u65e0\u5173\u7684\uff0c \u4e0b\u9762\u7684\u4ee3\u7801\u4e5f\u662f\u53ef\u4ee5\u8bbf\u95ee\u540c\u4e00\u4e2a\u63a5\u53e3\u7684\uff1a interface DiffNames2 { int differentName(int y, int x); } @RpcReference(microserviceName = springmvc , schemaId = weakSpringmvc ) private DiffNames2 diffNames2; \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c2.0.0 \u7248\u672c\u8981\u6c42\u4fdd\u7559\u53c2\u6570\u540d\u79f0\uff0c \u5728\u7f16\u8bd1\u4ee3\u7801\u7684\u65f6\u5019\uff0c\u9700\u8981\u52a0\u4e0a -parameters \u7f16\u8bd1\u53c2\u6570\u3002 \u5f00\u53d1\u8005\u8fd8\u53ef\u4ee5\u901a\u8fc7 RestTemplate \u8c03\u7528\u8fd9\u4e2a\u63a5\u53e3\uff1a restTemplate.getForObject( cse://springmvc/weakSpringmvc/diffNames?x=2 y=3 , Integer.class) \u6216\u8005\u91c7\u7528 InvokerUtils \u8c03\u7528\uff1a Map String, Object args = new HashMap (); args.put( x , 2); args.put( y , 3); InvokerUtils.syncInvoke( springmvc , weakSpringmvc , differentName , args);","title":"\u5229\u7528\u5f31\u7c7b\u578b\u5951\u7ea6\u589e\u5f3a\u5199\u4ee3\u7801\u7684\u7075\u6d3b\u6027"},{"location":"featured-topics/features/weak-type-contrast/#_2","text":"\u5f31\u7c7b\u578b\u5951\u7ea6\u5728 Invocation \u91cc\u9762\u63d0\u4f9b\u4e86\u72ec\u7acb\u7684\u65b9\u6cd5\uff0c\u8ba9\u5f00\u53d1\u8005\u5f00\u53d1\u6cbb\u7406\u529f\u80fd\u66f4\u52a0\u5bb9\u6613\u3002 public Map String, Object getInvocationArguments() { return this.invocationArguments; } public Map String, Object getSwaggerArguments() { return this.swaggerArguments; } public Object getInvocationArgument(String name) { return this.invocationArguments.get(name); } public Object getSwaggerArgument(String name) { return this.swaggerArguments.get(name); } getSwaggerArguments \u59cb\u7ec8\u83b7\u53d6\u7684\u662f\u548c\u5951\u7ea6\u5bf9\u5e94\u7684\u53c2\u6570\uff0c\u5982\u679c\u5951\u7ea6\u4e3a x \u548c y \u4e24\u4e2a query \u53c2\u6570\uff0c \u90a3\u4e48\u5f97\u5230\u7684\u53c2\u6570\u5c31\u662f \u5305\u542b x \u548c y \u7684 Map \u3002 getInvocationArgument \u83b7\u53d6\u7684\u662f\u5b9e\u9645\u7c7b\u578b\u53c2\u6570\uff0c \u5728\u670d\u52a1\u63d0\u4f9b\u8005\uff0c\u8fd9\u4e2a\u53c2\u6570\u5217\u8868\u7684\u4e2a\u6570\u548c\u7c7b\u578b \u548c\u5b9e\u9645\u7684 Method \u7684\u5217\u8868\u5bf9\u5e94\uff0c \u6bd4\u5982\u53ef\u80fd\u5305\u542b InvocationContext , HttpServletRequest \u7b49\u6ce8\u5165\u53c2\u6570\u3002 \u8fd8\u6709\u5f88\u591a\u60c5\u51b5\uff0c \u5951\u7ea6\u53c2\u6570\u548c\u7c7b\u578b\u53c2\u6570\u4e0d\u5bf9\u5e94\uff0c\u6bd4\u5982\u805a\u5408\u53c2\u6570\u7684\u60c5\u51b5\uff0c\u5951\u7ea6\u53c2\u6570\u662f\u591a\u4e2a query \u53c2\u6570\uff0c \u800c\u7c7b\u578b\u53c2\u6570\u662f\u4e00\u4e2a POJO\uff1b \u518d\u6bd4\u5982 POJO \u63a5\u53e3 \u5b9a\u4e49\u7684\u65f6\u5019\uff0c \u7c7b\u578b\u53c2\u6570\u53ef\u80fd\u662f\u591a\u4e2a\uff0c \u800c\u5951\u7ea6\u53c2\u6570\u53ea\u6709\u4e00\u4e2a body \u53c2\u6570\u3002 \u5728\u670d\u52a1\u6d88\u8d39\u8005\uff0c\u5982\u679c\u7528\u6237\u91c7\u7528 POJO \u65b9\u5f0f\u8c03\u7528\u670d\u52a1\u63d0\u4f9b\u8005\uff0c \u4e24\u4e2a\u63a5\u53e3\u7684\u8fd4\u56de\u7684\u503c\u4e0e\u670d\u52a1\u63d0\u4f9b\u8005\u7c7b\u4f3c\uff0c\u5b58\u5728\u8bed\u4e49\u5dee\u522b\uff1b\u5982\u679c\u91c7\u7528 RestTemplate \u6216\u8005 InvokerUtils \u8c03\u7528\uff0c \u90a3\u4e48\u4e24\u4e2a\u63a5\u53e3\u8fd4\u56de\u7684 \u5185\u5bb9\u4e00\u6837\uff0c\u90fd\u662f\u5951\u7ea6\u53c2\u6570\u3002\u5728\u8fb9\u7f18\u670d\u52a1\uff0c \u4e24\u4e2a\u63a5\u53e3\u8fd4\u56de\u7684\u90fd\u662f\u5951\u7ea6\u53c2\u6570\u3002 \u8fd9\u79cd\u884c\u4e3a\u4f53\u73b0\u4e86\u5f31\u7c7b\u578b\u5951\u7ea6\u7684\u8bed\u4e49\uff1a \u662f\u5426\u5b58\u5728\u7f16\u8bd1\u65f6 \u7c7b\u578b\u4e0e\u5951\u7ea6\u5bf9\u5e94\u3002","title":"\u5f31\u7c7b\u578b\u5951\u7ea6\u7684\u6cbb\u7406\u529f\u80fd"},{"location":"featured-topics/features/weak-type-contrast/#_3","text":"\u603b\u4f53\u800c\u8a00\uff0c\u5bf9\u4e8e REST \u901a\u4fe1\u6a21\u5f0f\uff0c \u5f31\u7c7b\u578b\u5951\u7ea6\u4e0d\u4ec5\u589e\u5f3a\u4e86\u5199\u4ee3\u7801\u7684\u7075\u6d3b\u6027\uff0c \u8fd8\u5b8c\u6574\u4fdd\u7559\u4e86\u5f3a\u7c7b\u578b\u5951\u7ea6\u7684\u5199\u4ee3\u7801\u65b9\u5f0f\uff0c\u51e0\u4e4e\u4e0d \u5b58\u5728\u7528\u6237\u9700\u8981\u611f\u77e5\u7684\u53d8\u66f4\u3002 \u5bf9\u4e8e HIGHWAY \u901a\u4fe1\u6a21\u5f0f\uff0c \u7531\u4e8e\u5e95\u5c42\u91c7\u7528 ProtoBuffer \u7f16\u7801\uff0c \u800c ProtoBuffer \u5929\u7136\u5c31\u662f\u4e00\u79cd \u5f3a\u7c7b\u578b\u5951\u7ea6\u7684\u7f16\u89e3\u7801\u8fc7\u7a0b\uff0c java-chassis \u4e3a\u4e86\u652f\u6301\u5f31\u7c7b\u578b\u5951\u7ea6\uff0c \u505a\u4e86\u5927\u91cf\u52aa\u529b\uff0c \u5728\u4e00\u4e9b\u8fb9\u754c\u6761\u4ef6\u5904\u7406\u4e0a\u4e0e\u5f31\u7c7b\u578b\u5951\u7ea6\u5b58\u5728 \u53d8\u66f4\uff0c\u4e24\u4e2a\u7248\u672c\u7684\u7f16\u89e3\u7801\u662f\u4e0d\u517c\u5bb9\u7684\uff0c\u9700\u8981\u540c\u65f6\u5347\u7ea7\u63d0\u4f9b\u8005\u548c\u6d88\u8d39\u8005\u3002 \u5728\u7f16\u7801\u65b9\u5f0f\u4e0a\uff0c\u5dee\u5f02\u4e3b\u8981\u4f53\u73b0\u5728\u5bf9\u4e8e\u7f3a\u7701\u503c\u7684\u5904\u7406\uff0c\u5bf9\u4e8e null \u7684\u5904\u7406\u7b49\u95ee\u9898\u4e0a\uff0c \u8be6\u7ec6\u53c2\u8003 1.3.0 \u5347\u7ea7 2.0.0\u6307\u5bfc \u3002","title":"\u5f31\u7c7b\u578b\u5951\u7ea6\u5e26\u6765\u7684\u4e00\u4e9b\u53d8\u66f4"},{"location":"featured-topics/upgrading/1_3_0T2_0_0/","text":"1.3.0 \u5347\u7ea7 2.0.0\u6307\u5bfc 2.0.0 \u7248\u672c\u5b9e\u73b0\u4e86 \u5f31\u7c7b\u578b\u5951\u7ea6 \u3002 \u603b\u4f53\u800c\u8a00\uff0c\u5bf9\u4e8e REST \u901a\u4fe1\u6a21\u5f0f\uff0c \u5f31\u7c7b\u578b\u5951\u7ea6\u4e0d\u4ec5\u589e\u5f3a\u4e86\u5199\u4ee3\u7801\u7684\u7075\u6d3b\u6027\uff0c \u8fd8\u5b8c\u6574\u4fdd\u7559\u4e86\u5f3a\u7c7b\u578b\u5951\u7ea6\u7684\u5199\u4ee3\u7801\u65b9\u5f0f\uff0c\u51e0\u4e4e\u4e0d \u5b58\u5728\u7528\u6237\u9700\u8981\u611f\u77e5\u7684\u53d8\u66f4\u3002 \u5bf9\u4e8e HIGHWAY \u901a\u4fe1\u6a21\u5f0f\uff0c \u7531\u4e8e\u5e95\u5c42\u91c7\u7528 ProtoBuffer \u7f16\u7801\uff0c \u800c ProtoBuffer \u5929\u7136\u5c31\u662f\u4e00\u79cd \u5f3a\u7c7b\u578b\u5951\u7ea6\u7684\u7f16\u89e3\u7801\u8fc7\u7a0b\uff0c java-chassis \u4e3a\u4e86\u652f\u6301\u5f31\u7c7b\u578b\u5951\u7ea6\uff0c \u505a\u4e86\u5927\u91cf\u52aa\u529b\uff0c \u5728\u4e00\u4e9b\u8fb9\u754c\u6761\u4ef6\u5904\u7406\u4e0a\u4e0e\u5f31\u7c7b\u578b\u5951\u7ea6\u5b58\u5728 \u53d8\u66f4\uff0c\u4e24\u4e2a\u7248\u672c\u7684\u7f16\u89e3\u7801\u662f\u4e0d\u517c\u5bb9\u7684\uff0c\u9700\u8981\u540c\u65f6\u5347\u7ea7\u63d0\u4f9b\u8005\u548c\u6d88\u8d39\u8005\u3002 \u5728\u7f16\u7801\u65b9\u5f0f\u4e0a\uff0c\u5dee\u5f02\u4e3b\u8981\u4f53\u73b0\u5728\u5bf9\u4e8e\u7f3a\u7701\u503c\u7684\u5904\u7406\uff0c\u5bf9\u4e8e null \u7684\u5904\u7406\u7b49\u95ee\u9898\u4e0a\u3002 Highway\u901a\u4fe1\u534f\u8bae\u7684\u53d8\u66f4 Highway\u901a\u4fe1\u534f\u8bae\u662f2.0.0\u6700\u5927\u7684\u53d8\u66f4\u70b9\u3002\u5982\u679c\u4e1a\u52a1\u91c7\u7528\u4e86Highway\u901a\u4fe1\u534f\u8bae\uff0c\u9700\u8981\u786e\u4fdd\u6240\u6709\u76f8\u5173\u7684consumer \u548cprovider\u90fd\u5fc5\u987b\u5347\u7ea7\uff0c\u4f4e\u7248\u672c\u7684consumer\u548c\u9ad8\u7248\u672c\u7684provider\u4e4b\u95f4\u65e0\u6cd5\u76f4\u63a5\u901a\u4fe1\u3002\u6b64\u5916\uff0c\u4ece\u4ee3\u7801\u98ce\u683c\u7684\u5c42\u9762\uff0c \u8fd8\u6709\u5982\u4e0b\u4e00\u4e9b\u53d8\u66f4\u3002 \u7a7a\u5b57\u7b26\u4e32\u548cnull\u7684\u4f20\u8f93\uff1aprotoBuffer \u534f\u8bae\u5bf9\u7a7a\u5b57\u7b26\u4e32\u548cnull\u90fd\u5e8f\u5217\u5316\u4e3a\u7a7a\uff0c\u53cd\u5e8f\u5217\u5316\u7684\u7ed3\u679c\u90fd\u662fnull\u3002 \u5e94\u7528\u7a0b\u5e8f\u7684\u4e1a\u52a1\u903b\u8f91\u4e0d\u5e94\u8be5\u4f7f\u7528\u7a7a\u5b57\u7b26\u4e32\u548cnull\u8868\u8fbe\u4e0d\u540c\u8bed\u4e49\u3002\u5c3d\u7ba1\u5bf9\u4e8eREST\uff0c\u7a0b\u5e8f\u5e95\u5c42\u652f\u6301\u8fd9\u6837\u7684\u533a\u5206\uff0c \u4ecd\u7136\u4e0d\u5efa\u8bae\u5c06\u4e1a\u52a1\u903b\u8f91\u6784\u7b51\u5728\u8fd9\u4e2a\u5047\u8bbe\u4e4b\u4e0a\uff0c\u907f\u514d\u540e\u671f\u5347\u7ea7\u548c\u517c\u5bb9\u9677\u9631\u3002 \u5982\u679c\u8bf7\u6c42\u53c2\u6570\u6216\u8005\u8fd4\u56de\u503c\u662f\u4e00\u4e2aPOJO\uff0c\u5047\u8bbePerson\uff0cREST\u53ef\u4ee5\u8fd4\u56denull\uff0c\u4f46\u662fHIGHWAY\u59cb\u7ec8\u4f1a\u521b\u5efa\u4e00\u4e2a Person \u5bf9\u8c61\u8fd4\u56de\u3002\u4e1a\u52a1\u903b\u8f91\u5c3d\u53ef\u80fd\u4e0d\u8981\u4f9d\u8d56\u4e8enull\u5bf9\u8c61\u63d0\u4f9b\u8bed\u4e49\u3002 \u5728contrast first\u7f16\u7a0b\u6a21\u5f0f\u60c5\u51b5\u4e0b\uff0c\u7528\u6237\u5148\u5199\u5951\u7ea6\uff0c\u7136\u540e\u901a\u8fc7\u5951\u7ea6\u751f\u6210\u4ee3\u7801\uff0c\u5e76\u5c06\u5951\u7ea6\u6587\u4ef6\u653e \u5230 microservices/{microservice name}/{schema id}.yaml \u6587\u4ef6\u4e2d\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4e0d\u4f1a\u901a\u8fc7\u4ee3\u7801\u751f\u6210 \u5951\u7ea6\u3002\u901a\u5e38\u901a\u8fc7\u5de5\u5177\u751f\u6210\u4ee3\u7801\uff0c\u5de5\u5177\u751f\u6210\u7684\u6570\u636e\u7c7b\u578b\u548c\u5951\u7ea6\u7684\u6570\u636e\u7c7b\u578b\u5339\u914d\uff0c\u4f46\u662f\u5982\u679c\u8fd9\u79cd\u573a\u666f\u7684\u4ee3\u7801\u7ecf\u8fc7 \u4fee\u6539\uff0c\u5e76\u4e14yaml\u4e2d\u7684\u6570\u636e\u7c7b\u578b\u662fnumber\uff0c\u800c\u4ee3\u7801\u4e2d\u7684\u7c7b\u578b\u662fInteger\uff0c\u5728HIGHWAY\u901a\u4fe1\u6a21\u5f0f\u4e0b\u4f1a\u62a5\u544a\u9519\u8bef\u3002 HIGHWAY \u4f1a\u5c06 number \u7c7b\u578b\u89e3\u6790\u4e3a protoBuffer \u7684 double \u7c7b\u578b\uff0c \u5bf9\u5e94\u7684 JAVA \u7c7b\u578b\u4e3a double\u3002 protoBuffer \u4e0d\u652f\u6301\u5c06Integer\u7c7b\u578b\u91c7\u7528Double\u7684\u65b9\u5f0f\u5e8f\u5217\u5316\u3002\u5728contract first\u7f16\u7a0b\u6a21\u5f0f\u4e0b\uff0c\u5efa\u8bae\u901a\u8fc7 \u751f\u6210\u5de5\u5177\u751f\u6210\u4ee3\u7801\uff0c\u8fd9\u6837\u7528\u6237\u5c31\u4e0d\u7528\u4e86\u89e3swagger\u6570\u636e\u7c7b\u578b\u548cJAVA\u6570\u636e\u7c7b\u578b\u6620\u5c04\u7684\u7ec6\u8282\uff0c\u907f\u514d\u4e00\u4e9b\u9677\u9631\u3002 HIGHWAY \u7684\u6570\u636e\u7c7b\u578b\u5b9a\u4e49\u4e0d\u652f\u6301\u4e00\u4e9b\u7279\u6b8a\u5b57\u7b26\u4e32\uff0c\u6bd4\u5982 H.264 \u548c MPEG-2 \u5728OPEN API\u91cc\u9762\u662f\u5408\u6cd5\u7684 \u53c2\u6570\u540d\u79f0\uff0c\u4f46\u662f\u5728 protoBuffer \u91cc\u9762\u662f\u4e0d\u5408\u6cd5\u7684\u53c2\u6570\u540d\u79f0\u3002\u5e26\u6709\".\"\u548c\"-\"\u7684\u53c2\u6570\u540d\u5b57\u4e0d\u80fd\u7528\u4e8e HIGHWAY\u3002 \u5982\u679c\u5b58\u5728\uff0c\u7b2c\u4e00\u6b21\u8bbf\u95ee\u8fd9\u4e2a\u63a5\u53e3\u7684\u65f6\u5019\uff0c\u4f1a\u62a5\u544a: io.protostuff.compiler.parser.ParserException: Could not parse syntax \u5f02\u5e38\u3002 \u5bf9\u4e8e ENUM \u6709\u4e00\u4e2a\u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u5730\u65b9\uff0cprotoBuffer \u91c7\u7528int\u6765\u5e8f\u5217\u5316 ENUM \uff0cint\u7684\u9ed8\u8ba4\u503c(\u53730\uff09\u4e0d\u4f1a\u5e8f\u5217\u5316\uff0c\u90a3\u4e48\u53cd \u5e8f\u5217\u5316\u7684\u65f6\u5019\uff0cENUM \u7684\u7f3a\u7701\u503c\u5fc5\u987b\u4e3a\u7b2c\u4e00\u4e2a\u503c\u3002\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u5c06null\u548c\u7b2c\u4e00\u4e2a\u7f3a\u7701\u503c\u5f53\u6210\u4e00\u6837\u7684\u8bed\u4e49\u5bf9\u5f85\u3002\u6bd4 \u8f83\u597d\u7684\u505a\u6cd5\u662f\u5728\u7a0b\u5e8f\u91cc\u9762\u663e\u793a\u7684\u7ed9 ENUM \u5b57\u6bb5\u8d4b\u7f3a\u7701\u503c\u3002 HIGHWAY \u4e0d\u652f\u6301\u6570\u7ec4\u53c2\u6570\u5b58\u5728 null \u503c\u7684\u60c5\u51b5\u3002\u5982\u679c\u4e00\u4e2a\u63a5\u53e3\u7684\u53c2\u6570\u662fString[]\uff0c\u90a3\u4e48\u91cc\u9762\u7684\u5143\u7d20\u4e0d\u80fd \u4e3a null\uff0c\u5426\u5219\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u4f1a\u5931\u8d25\u3002 \u5bf9\u4e8e primitive \u7c7b\u578b\uff0c\u5e76\u4e14\u63a5\u53e3\u58f0\u660e\u4e3a @Required\uff0c\u7531\u4e8e HIGHWAY \u5e76\u4e0d\u4f1a\u5e8f\u5217\u5316\u7f3a\u7701\u503c\uff0c\u6bd4\u5982 0 \u7b49\uff0c \u5728Consumer\u7aef\u4f20\u9012\u7684\u53c2\u6570\u503c\u4e3a 0 \u7684\u65f6\u5019\uff0cProvider \u7aef\u5e76\u4e0d\u80fd\u533a\u5206\u8fd9\u4e2a\u503c\u662f\u4f20\u9012\u4e860\uff0c\u8fd8\u662f\u6ca1\u6709\u4f20\u9012\u3002\u56e0 \u6b64 HIGHWAY \u4f1a\u5ffd\u7565 @Required \u58f0\u660e\uff0c\u4f7f\u7528\u7f3a\u7701\u503c0\u3002 \u5982\u679c\u4e00\u4e2a\u5c5e\u6027\u7684\u540d\u79f0\u91c7\u7528\u4e00\u4e2a\u5c0f\u5199\u5b57\u6bcd\u5f00\u5934\uff0c\u5e76\u4e14\u53ea\u6709\u4e00\u4e2a\u5c0f\u5199\u5b57\u6bcd\uff0c\u5373\u4f7f\u751f\u6210\u7684getter/setter\u662f\u5408\u6cd5 \u7684\uff0c swagger \u751f\u6210\u7684\u5c5e\u6027\u540d\u79f0\u8fd8\u662f\u4f1a\u51fa\u73b0\u9519\u8bef\u3002\u5e94\u8be5\u5c3d\u53ef\u80fd\u907f\u514d\u4f7f\u7528\u8fd9\u6837\u7684\u5c5e\u6027\u540d\u79f0\u3002\u5fc5\u987b\u4f7f\u7528\u7684\u573a\u666f\uff0c\u9700\u8981 \u663e\u793a\u7684\u4f7f\u7528 @JsonProperty \u58f0\u660e\u3002 ```java public class SpecialNameModel { // names starts with only one lower case , although getter/setter generated by IDE is correct, // will cause jackson generate incorrect swagger names. // @JsonProperty must be used to make json work in a predictable way. @JsonProperty(\"aIntName\") private int aIntName; public int getaIntName() { return aIntName; } public void setaIntName(int aIntName) { this.aIntName = aIntName; } } ``` \u8fd4\u56de\u591a\u79cd\u7c7b\u578b\u6216\u8005\u901a\u8fc7 ContextUtils \u8bbe\u7f6e\u72b6\u6001\u7801 HIGHWAY \u4e0d\u518d\u652f\u6301\u3002 \u5c3d\u7ba1 1.3.0 \u4e4b\u524d\u7528\u6237\u4e5f\u4e0d\u4f1a\u5728 HIGHWAY \u6a21\u5f0f\u4e0b \u4f7f\u7528\u7c7b\u4f3c\u4e0b\u9762\u7684\u4ee3\u7801\uff0c \u4f46\u662f\u5728 1.3.0 \u4e4b\u524d\u7684\u7248\u672c\uff0c \u8fd9\u4e9b\u4ee3\u7801\u90e8\u5206\u786e\u5b9e\u80fd\u591f\u5de5\u4f5c\u3002 ```java @PUT public String sayHi(@PathParam(\"name\") String name) { ContextUtils.getInvocationContext().setStatus(202); return name + \" sayhi\"; } ``` \u4f18\u79c0\u5b9e\u8df5 : \u5982\u679c\u9879\u76ee\u4e2d\u9700\u8981\u540c\u65f6\u4f7f\u7528 REST \u548c HIGHWAY \u5bf9\u5916\u63d0\u4f9b\u670d\u52a1\uff0c \u5e76\u4e14\u4f1a\u4f7f\u7528\u5230\u4e00\u4e9b HIGHWAY \u534f\u8bae\u6709\u5dee\u5f02\u7684\u7528\u6cd5\uff0c \u53ef\u4ee5\u5c06\u8fd9\u4e9b\u63a5\u53e3\u5b9a\u4e49\u5230\u4e0d\u540c\u7684\u7c7b\u4e2d\uff0c \u4f7f\u7528\u4e0d\u4e00\u6837\u7684 Schema ID \u8fdb\u884c\u533a\u5206\uff0c\u6bd4\u5982 MySchemaHighwayOnly , MySchemaRestOnly , MySchema \u3002 \u4f7f\u7528 Edge Service \u573a\u666f\u4e0b Model \u7684\u7f3a\u7701\u503c \u5047\u8bbe\u4e1a\u52a1\u5e94\u7528\u91c7\u7528 Edge Service \u8f6c\u53d1\u8bf7\u6c42\u3002 \u5e76\u4e14\u5b9a\u4e49\u4e86\u4e00\u4e2a\u63a5\u53e3\uff0c \u6709\u5982\u4e0b Model \u4f5c\u4e3a\u53c2\u6570\uff1a public class Person { private Integer age = 30; private List String items; } \u7528\u6237\u4ece\u6d4f\u89c8\u5668\u8c03\u7528\u8fd9\u4e2a\u63a5\u53e3\uff0c JSON \u5185\u5bb9\u4e3a {} \uff0c \u4e0d\u4f20\u9012\u4efb\u4f55\u5185\u5bb9\uff0c 1.3.0 \u7248\u672c\u5f97\u5230\u7684 age = null\uff0c items = null \u3002 2.0.0 \u7248\u672c age = 30, items \u4e3a\u7a7a\u8868\uff0c \u4e0d\u4e3a null \u3002 \u8fd9\u4e2a\u884c\u4e3a\u662f\u7531\u4e8e 1.3.0 \u7248\u672c Edge Service \u4f1a\u81ea\u52a8\u751f\u6210\u4e00\u4e2a Person \u7c7b\uff0c \u8fd9\u4e2a\u7c7b\u6ca1\u6709\u7f3a\u7701\u503c\uff0c Edge Service \u91cd\u65b0\u5e8f\u5217\u5316\uff0c \u9020\u6210\u670d\u52a1\u7aef\u53d6\u5230\u4e86 null\u3002 \u5f31\u7c7b\u578b\u5951\u7ea6\u6ca1\u6709\u4e2d\u95f4\u7c7b\u578b\uff0c \u5e8f\u5217\u5316\u7684\u7ed3\u679c \u548c\u7528\u6237\u4ece\u6d4f\u89c8\u5668\u4f20\u9012\u8fc7\u6765\u7684\u503c\u4e00\u6837\u3002 RestTemplate\u7684\u4f7f\u7528 \u5bf9\u4e8e\u4e0b\u9762\u7684 consumer \u548c provider \u4ee3\u7801\uff1a // provider @PostMapping(path = /object ) public Object testObject(@RequestBody Object input) // consumer Object result = restTemplate.postForObject(prefix + /object , new EmptyObject(), EmptyObject.class); 1.3.0 \u7248\u672c\u8fd4\u56de\u7684 result \u7c7b\u578b\u4e3a Map\u3002 2.0.0 \u7248\u672c\u8fd4\u56de\u7684\u7c7b\u578b\u548c postForObject \u6307\u5b9a\u7684\u7c7b\u578b\u4e00\u81f4\uff0c\u4e0a\u9762\u7684\u793a\u4f8b \u4e2d\uff0cresult \u7c7b\u578b\u4e3a EmptyObject\u3002 \u4e0b\u9762\u7684\u4ee3\u7801\uff0c1.3.0 \u548c 2.0.0 \u7248\u672c\u8fd0\u884c\u7684\u7ed3\u679c\u662f\u4e00\u6837\u7684\uff1a List GenericObjectParam List RecursiveObjectParam response = consumers.getSCBRestTemplate() postForObject( /testListObjectParam , request, List.class); \u524d\u63d0\u6761\u4ef6\u662f GenericObjectParam \u548c RecursiveObjectParam \u5728 consumer \u7684 classpath \u4e2d\u5b58\u5728\u5bf9\u5e94\u7684 \u7c7b\uff0c\u5e76\u4e14 package \u548c\u670d\u52a1\u7aef\u5b9a\u4e49\u7684\u7c7b\u4e00\u6837\u3002\u5982\u679c\u4e0d\u4e00\u6837\uff0c \u5219 response \u7c7b\u578b\u4e3a List \uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u4f1a \u629b\u51fa\u7c7b\u578b\u8f6c\u6362\u5f02\u5e38\u30022.0.0 \u6ca1\u6709\u76f8\u540c package \u7684\u7ea6\u675f\uff0c\u5e76\u4e14\u5728\u4fdd\u6301\u517c\u5bb9\u7684\u60c5\u51b5\u4e0b\uff0c\u652f\u6301\u4e0b\u9762\u7684\u7528\u6cd5\uff1a HttpEntity SpringmvcBasicRequestModel requestEntity = new HttpEntity (requestModel, null); List SpringmvcBasicResponseModel responseModelList = template.exchange( /postListObject , HttpMethod.POST, requestEntity, new ParameterizedTypeReference List SpringmvcBasicResponseModel () { }).getBody(); \u8fd9\u79cd\u65b9\u5f0f\u7684\u8bed\u4e49\u6839\u636e\u6e05\u6670\uff0c\u5728\u4f7f\u7528\u6cdb\u578b\u7684\u65f6\u5019\uff0c\u5efa\u8bae\u91c7\u7528\u8fd9\u79cd\u7528\u6cd5\u3002 \u57281.3.0\u7248\u672c\u652f\u6301\u5982\u4e0b\u7528\u6cd5\uff1a template.postForEntity(url, {\\ time\\ :3073113710456,\\ date\\ :3073113710456,\\ holder\\ :\\ test\\ } , DateTimeModel.class) \u5373\u901a\u8fc7 JSON String \u7684\u65b9\u5f0f\u4f20\u9012\u53c2\u6570\u7ed9\u540e\u53f0\u7684 DateTimeModel \u5bf9\u8c61\u3002 \u7531\u4e8e\u8fd9\u79cd\u7528\u6cd5\u5728\u89e3\u6790\u7684\u65f6\u5019\u5b58\u5728\u4e8c\u4e49\u6027\uff0c 2.0.0 \u4e0d\u518d\u652f\u6301\u8fd9\u79cd\u7528\u6cd5\u3002 \u53ef\u4ee5\u4f7f\u7528 Map \u6216\u8005 JsonObject \u6765\u4f20\u9012\u3002 AsyncRestTemplate\u7684\u4f7f\u7528 1.3.0 \u548c 2.0.0 \u4e2d AsyncRestTemplate \u7684\u4f7f\u7528\u65b9\u5f0f\u4e00\u6837\uff0c\u6ca1\u6709\u53d8\u5316\u3002\u4f46\u662f\u7531\u4e8e 2.0.0 \u53ea\u652f\u6301spring 5\u7248 \u672c\uff0c\u800c spring 5 \u5c06 AsyncRestTemplate \u6807\u8bb0\u4e3a\u5e9f\u5f03\u72b6\u6001\uff0c\u5f00\u53d1\u8005\u5728\u540e\u7eed\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u5c3d\u53ef\u80fd\u4e0d\u8981\u4f7f \u7528 AsyncRestTemplate \u3002\u53ef\u4ee5\u4f7f\u7528 CompletableFuture \u6765\u66ff\u4ee3\uff0c\u53ef\u4ee5\u53c2\u8003\u8fd9 \u4e2a \u4f8b\u5b50 \u3002 Spring Boot \u96c6\u6210\u7684\u53d8\u5316 2.0.0 \u4e0d\u518d\u652f\u6301 spring 4 \u548c spring boot 1\uff0c \u7f3a\u7701\u4f7f\u7528 spring 5 \u548c spring boot 2\uff0c \u5e76\u4fee\u6539\u4e86\u76f8 \u5173 starters \u7684\u540d\u79f0\u3002 \u53ef\u4ee5\u901a\u8fc7\u9605 \u8bfb \u5728Spring Boot\u4e2d\u4f7f\u7528java chassis \u4e86\u89e3 \u76f8\u5173\u53d8\u5316\u3002 \u652f\u6301 JDK 11 2.0.0 \u7248\u672c\u53ef\u4ee5\u5728 JDK 11 \u4e0b\u8fd0\u884c\uff0c\u5e76\u8fdb\u884c\u4e86\u7b80\u5355\u7684\u96c6\u6210\u6d4b\u8bd5\u3002 2.0.0 \u652f\u6301\u7684\u6838\u5fc3 JDK \u7248\u672c\u4ecd\u7136\u662f 8\uff0c \u5e76\u6ca1\u6709\u91c7\u7528 JDK 11 \u7f16\u8bd1\u3002 JDK 11 \u7684\u4e00\u4e2a\u4e3b\u8981\u53d8\u5316\u662f\u540e\u7eed\u53ef\u80fd\u4e0d\u518d\u652f\u6301\u901a\u8fc7\u53cd\u5c04\u6539\u53d8\u7c7b\u7684\u5c01\u88c5\u6027\u3002 \u8fd9\u4e2a\u7279\u6027\u76ee\u524d\u6709\u5f88\u591a\u5730\u65b9\u4f7f\u7528\uff0c 2.0.0 \u7248\u672c\u4e3a\u4e86\u9002\u914d JDK 11\uff0c \u67d0\u4e9b\u7279\u6027\u7684\u4f7f\u7528\u4f1a\u53d1\u751f\u53d8\u5316\u3002 \u5177\u4f53\u6709\u5982\u4e0b\u51e0\u4e2a\u7279\u6027 \uff1a \u4f7f\u7528 EventManager \u6ce8\u518c\u4e8b\u4ef6 \u5728 1.3.0 \u7248\u672c\uff0c \u5141\u8bb8\u91c7\u7528 private \u7c7b \u6216\u8005 \u5185\u90e8\u533f\u540d\u7c7b\u4f5c\u4e3a\u4e8b\u4ef6\u76d1\u542c\u5bf9\u8c61\uff0c \u6bd4\u5982\uff1a public void myMethod() { Object receiveEvent = new Object() { @Subscribe public void onEvent(AlarmEvent circutBreakerEvent) { taskList.add(circutBreakerEvent); } }; EventManager.getEventBus().register(receiveEvent); } \u5728 2.0.0 \u7248\u672c\u4e0d\u5141\u8bb8\uff0c\u542f\u52a8\u7684\u65f6\u5019\u4f1a\u62a5\u544a\u5f02\u5e38\u3002 2.0.0 \u7248\u672c\u6ce8\u518c\u7684\u4e8b\u4ef6\u76d1\u542c\u5668\uff0c\u5fc5\u987b\u4fdd\u8bc1\u5bf9\u4e8e EventManager \u7c7b\u5177\u6709\u53ef\u8bbf\u95ee\u6027\u3002 \u901a\u5e38 \u5b9a\u4e49\u7684\u7c7b\u548c EventManager \u4e0d\u5c5e\u4e8e\u540c\u4e00\u4e2a package \uff0c \u56e0\u6b64\u8fd9\u4e2a\u7c7b\u5fc5\u987b\u662f public \u7684\uff0c \u4e8b\u4ef6\u5904\u7406\u65b9\u6cd5\u4e5f\u5fc5\u987b\u662f public \u7684\u3002 \u5b9a\u4e49\u63a5\u53e3\u7684 Model \u4f7f\u7528\u533f\u540d\u5185\u90e8\u7c7b \u5728 1.3.0 \u7248\u672c\uff0c \u4f7f\u7528\u533f\u540d\u5185\u90e8\u7c7b\u4f5c\u4e3a REST \u63a5\u53e3\u7684 Model \u662f\u5141\u8bb8\u7684\uff0c \u4f46\u662f 2.0.0 \u7248\u672c\u4e0d\u5141\u8bb8\u3002 \u5982\u679c\u91c7\u7528\u8fd9\u6837\u7684\u7c7b\u578b\u4f5c\u4e3a\u63a5\u53e3\u53c2\u6570\uff0c \u542f\u52a8\u7684\u65f6\u5019\u4f1a\u62a5\u544a\u5f02\u5e38\u3002 \u5176\u4ed6\u65b9\u9762\u7684\u5f71\u54cd \u7531\u4e8e JDK 11 \u4e0d\u5141\u8bb8\u901a\u8fc7\u53cd\u5c04\u7834\u574f\u5c01\u88c5\uff0c \u65e9\u671f\u901a\u8fc7\u53cd\u5c04\u4fee\u6539 private \u5b57\u6bb5\u7684\u503c\uff0c\u6765\u89c4\u907f\u4e00\u4e9b\u4e09\u65b9\u8f6f\u4ef6\u7684 bug\uff0c \u4ee5\u53ca\u505a\u4e00\u4e9b\u989d\u5916 \u5b9a\u5236\u53d8\u5f97\u4e0d\u53ef\u884c\uff0c \u4f7f\u7528\u8fd9\u4e9b\u7279\u6027 JDK 11 \u6682\u65f6\u53ea\u662f\u6253\u5370\u8b66\u544a\uff0c \u5728 JDK 13 \u7b49\u66f4\u9ad8\u7248\u672c\u4f1a\u5f7b\u5e95\u7981\u6b62\u3002 \u56e0\u6b64\u4e1a\u52a1\u5f00\u53d1\u7684\u65f6\u5019\uff0c \u5c3d\u53ef\u80fd \u4e0d\u8981\u4f7f\u7528\u7834\u574f\u5c01\u88c5\u7684\u7279\u6027\u3002 \u5e38\u89c1\u95ee\u9898 java-chassis\u8fd0\u884c\u65f6\u4f9d\u8d56\u4e8e\u63a5\u53e3\u5b9a\u4e49\u91cc\u9762\u7684\u540d\u5b57 \u4e3a\u4e86\u66f4\u597d\u7684\u57fa\u4e8eswagger\u5bf9\u670d\u52a1\u8fdb\u884c\u6cbb\u7406\uff0c\u4ee5\u53ca\u63d0\u9ad8\u5ba2\u6237\u7aef\u4ee3\u7801\u4e66\u5199\u7684\u7075\u6d3b\u6027\uff0cjava-chassis\u8981\u6c42\u4e66\u5199\u7684\u63a5\u53e3\u5b9a\u4e49\u4ee3\u7801\u5728\u7f16\u8bd1\u7684\u65f6\u5019\uff0c\u5e26\u4e0a\u53c2\u6570\u540d\u79f0\u4fe1\u606f\uff0c\u5426\u5219\u4f1a\u62a5\u544a\u5982\u4e0b\u9519\u8bef\uff1a Caused by: java.lang.IllegalStateException: parameter name is not present, method=org.apache.servicecomb.samples.porter.file.api.InternalAccessEndpoint:localAccess solution: change pom.xml, add compiler argument: -parameters, for example: plugin groupId org.apache.maven.plugins /groupId artifactId maven-compiler-plugin /artifactId configuration compilerArgument -parameters /compilerArgument /configuration /plugin \u89e3\u51b3\u8be5\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6emaven compiler plugin\uff0c \u52a0\u4e0a-parameters\u53c2\u6570\u3002\u5982\u679c\u5728IDE\u4e0b\u9762\u8fd0\u884c\uff0c\u9700\u8981\u8bbe\u7f6e build - java compilers \u5728\u7f16\u8bd1\u53c2\u6570\u91cc\u9762\u589e\u52a0-parameters\u3002 spring 5\u53d8\u66f4 cse.bean.xml\u6587\u4ef6\u5982\u679c\u91c7\u7528\u4e86classpath\u67e5\u627e\u5b9a\u4e49\u6587\u4ef6 beans xmlns= http://www.springframework.org/schema/beans xmlns:xsi= http://www.w3.org/2001/XMLSchema-instance xmlns:p= http://www.springframework.org/schema/p xmlns:util= http://www.springframework.org/schema/util xmlns:context= http://www.springframework.org/schema/context xmlns:tx= http://www.springframework.org/schema/tx xsi:schemaLocation= http://www.springframework.org/schema/beans classpath:org/springframework/beans/factory/xml/spring-beans-3.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd \u4f1a\u62a5\u544a\u4e0b\u9762\u7684\u9519\u8bef\uff1a [main][WARN][org.springframework.beans.factory.xml.XmlBeanDefinitionReader:48] Ignored XML validation warning org.xml.sax.SAXParseException: schema_reference.4: \u65e0\u6cd5\u8bfb\u53d6\u65b9\u6848\u6587\u6863 'classpath:org/springframework/beans/factory/xml/spring-beans-3.0.xsd', \u539f\u56e0\u4e3a 1) \u65e0\u6cd5\u627e\u5230\u6587\u6863; 2) \u65e0\u6cd5\u8bfb\u53d6\u6587\u6863; 3) \u6587\u6863\u7684\u6839\u5143\u7d20\u4e0d\u662f xsd:schema \u3002 at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:203) ~[?:1.8.0_131] at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.warning(ErrorHandlerWrapper.java:99) [?:1.8.0_131] at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:392) [?:1.8.0_131] \u4fee\u6539\u4e3a: beans xmlns= http://www.springframework.org/schema/beans xmlns:xsi= http://www.w3.org/2001/XMLSchema-instance xmlns:context= http://www.springframework.org/schema/context xsi:schemaLocation= http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd SCBEngine\u4f7f\u7528\u65f6\u673a \u4ee3\u7801 @RestSchema(schemaId = inspector ) @Path( /inspector ) public class InspectorEndpoint { private InspectorConfig inspectorConfig; public InspectorEndpoint() { this.inspectorConfig = SCBEngine.getInstance().getPriorityPropertyManager().createConfigObject(InspectorConfig.class); } Caused by: java.lang.NullPointerException at org.apache.servicecomb.core.SCBEngine. init (SCBEngine.java:126) at org.apache.servicecomb.core.SCBEngine.getInstance(SCBEngine.java:159) at org.apache.servicecomb.samples.porter.file.api.InspectorEndpoint. init (InspectorEndpoint.java:82) at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) at java.lang.reflect.Constructor.newInstance(Constructor.java:423) \u4e0d\u80fd\u591f\u5728bean\u7684\u521d\u59cb\u5316\u91cc\u9762\u4f7f\u7528SCBEngine\u7684\u5b9e\u4f8b\u3002\u8fd9\u4e2a\u5b9e\u4f8b\u4e1a\u52a1\u9700\u8981\u5728\u4e8b\u4ef6AFTER_REGISTRY\u7b49\u5904\u7406\u51fd\u6570\u4e2d\u4f7f\u7528\u3002 \u7f16\u8bd1\u9519\u8bef 2.0.0 \u76f8\u5bf9\u4e8e 1.0.0 \u5347\u7ea7\u4e86\u5927\u91cf\u4e09\u65b9\u4ef6\uff0c\u5305\u62ecnetty, vert.x, spring, spring boot\u7b49\uff0c\u76f4\u63a5\u5f15\u7528\u8fd9\u4e9b\u7ec4\u4ef6\u7684\u4ee3\u7801\u53ef\u80fd\u7f16\u8bd1\u5931\u8d25\u3002\u540c\u65f6\u8fd8\u5bf9\u4ee3\u7801\u8fdb\u884c\u4e86\u4e00\u5b9a\u91cd\u6784\uff0c\u6709\u4e9b\u4ee3\u7801\u4f7f\u7528\u4e86java-chassis\u672a\u516c\u5f00\u63a5\u53e3\uff0c\u4f7f\u7528\u8fd9\u4e9b\u63a5\u53e3\u53ef\u80fd\u7f16\u8bd1\u5931\u8d25\u3002\u4e0b\u9762\u662f\u4e00\u4e9b\u5e38\u89c1\u7684\u95ee\u9898\u3002\u4e0b\u9762\u4e00\u4e9bPR\u7684\u4fee\u6539\u53ef\u4ee5\u53c2\u8003\uff1a \u5347\u7ea7netty vertx \u5347\u7ea7jackson \u5220\u9664spring 4\u548cspring boot 1\u7684\u652f\u6301 \u8c03\u65742.x\u7248\u672cspring boot starter\u540d\u5b57 \u4e0b\u9762\u662f\u4e00\u4e9b\u573a\u666f\u7684\u95ee\u9898\uff1a router.routeWithRegex(regex).handler(CookieHandler.create()) \u63d0\u793a CookieHandler deprecated\uff0c\u5220\u9664\u8fd9\u884c\u4ee3\u7801 \u5373\u53ef\uff0c\u65b0\u7248\u672c\u7684vert.x\u5df2\u7ecf\u9ed8\u8ba4\u63d0\u4f9b\u4e86cookie\u5904\u7406\u3002 io.vertx.ext.web\u4e2d\u7684 io.vertx.ext.web.Cookie\u5df2\u8fc7\u65f6 \uff0c \u4fee\u6539 \u4e3a io.vertx.core.http.Cookie 2.0.0 \u4e00\u4e9b\u53ef\u80fd\u88ab\u5916\u90e8\u4f7f\u7528\u7684\u5185\u90e8\u63a5\u53e3\u8c03\u6574\uff1a Invocation \u7c7b\u5220\u9664\u4e86 getArgs \u63a5\u53e3\uff0c \u66ff\u6362\u4e3a getSwaggerArguments \uff0c \u540c\u65f6\u65b0\u589e\u4e86 getInvocationArguments \uff0c \u5173\u4e8e\u8fd9\u4e2a\u53d8\u66f4\u7684\u8bf4\u660e\uff0c\u8bf7\u53c2\u8003\u65b0\u7279\u6027\u4ecb\u7ecd\u6587\u7ae0 \u5f31\u7c7b\u578b\u5951\u7ea6 \u3002 \u5220\u9664 DynamicSchemaLoader \uff0c \u8fd9\u4e2a\u7c7b\u65e9\u671f\u7248\u672c\u63d0\u4f9b\u51fa\u6765\u662f\u65b9\u4fbf\u6ce8\u518c\u5951\u7ea6\uff0c \u6700\u65b0\u7248\u672c\u5ba2\u6237\u7aef\u5951\u7ea6\u53d1\u73b0\u53ef\u4ee5\u901a\u8fc7\u670d\u52a1\u4e2d\u5fc3 \u5b8c\u6210\uff0c\u4e0d\u518d\u9700\u8981\u8fd9\u6837\u7684\u529f\u80fd\u3002 CseContext.getInstance().getTransportManager().findTransport(Const.RESTFUL) \u4fee\u6539 \u4e3a SCBEngine.getInstance().getTransportManager().findTransport(Const.RESTFUL) \u6d4b\u8bd5\u4ee3\u7801\u53ef\u80fd\u4f7f\u7528 CseContext.getInstance().getConsumerProviderManager().setTransport(microserviceName, transport) \uff0c \u4fee\u6539 \u4e3a ArchaiusUtils.setProperty(\"servicecomb.references.transport.\" + microserviceName, transport); \u5df2\u77e5\u7f3a\u9677 2.0.0 \u7248\u672c\u5c06 servicecomb.service.registry.registerUrlPrefix \u5f04\u4e22\u4e86\u3002 \u8fd9\u4e2a\u914d\u7f6e\u9879\u662f\u4e3a\u4e00\u4e2a\u7279\u6b8a\u573a\u666f\u670d\u52a1\u7684\u7684\uff0c \u9ed8\u8ba4\u503c\u4e3a false\u3002 \u5728\u4f7f\u7528 WEB \u5bb9\u5668\uff08\u6bd4\u5982 tomcat\uff09 java-chassis\u7684\u573a\u666f\u4e0b\uff0c \u5982\u679c\u8bbe\u7f6e\u4e86 context-path\uff0c \u4f7f\u7528 java-chassis \u63d0\u4f9b\u7684 RestTemplate \u8bbf\u95ee\u670d\u52a1\u7684\u65f6\u5019\uff0c \u4e0d\u9700\u8981\u6307\u5b9a context-path\uff0c\u4ee5\u4fdd\u8bc1\u7528\u6237\u4e0d\u7528\u5173\u6ce8\u5fae\u670d\u52a1\u7684\u90e8\u7f72\u65b9\u5f0f\uff0c\u63d0\u4f9b\u4e86\u5f88\u5927\u7684\u4fbf\u5229\u3002 \u4f46\u662f\u6709\u4e9b\u7528\u6237\u7684\u4ee3\u7801\u662f\u5386\u53f2\u9057\u7559\u4ee3\u7801\u6539\u9020\u8fc7\u6765\u7684\uff0c\u671f\u671b URL \u5305\u542b\u5b8c\u6574\u7684 context-path\u3002 \u4f7f\u7528 2.0.0 \u7248\u672c\u5982\u679c\u5b58\u5728\u8fd9\u4e2a\u7279\u6b8a\u8981 \u6c42\uff0c \u7a0b\u5e8f\u4f1a\u8fd0\u884c\u9519\u8bef\uff0c\u8bbf\u95ee\u63a5\u53e3\u63d0\u793a NOT FOUND\u3002\u8fd9\u4e2a\u95ee\u9898\u5728 2.0.1 \u4fee\u590d\u3002","title":"1.3.0 \u5347\u7ea7 2.0.0\u6307\u5bfc"},{"location":"featured-topics/upgrading/1_3_0T2_0_0/#130-200","text":"2.0.0 \u7248\u672c\u5b9e\u73b0\u4e86 \u5f31\u7c7b\u578b\u5951\u7ea6 \u3002 \u603b\u4f53\u800c\u8a00\uff0c\u5bf9\u4e8e REST \u901a\u4fe1\u6a21\u5f0f\uff0c \u5f31\u7c7b\u578b\u5951\u7ea6\u4e0d\u4ec5\u589e\u5f3a\u4e86\u5199\u4ee3\u7801\u7684\u7075\u6d3b\u6027\uff0c \u8fd8\u5b8c\u6574\u4fdd\u7559\u4e86\u5f3a\u7c7b\u578b\u5951\u7ea6\u7684\u5199\u4ee3\u7801\u65b9\u5f0f\uff0c\u51e0\u4e4e\u4e0d \u5b58\u5728\u7528\u6237\u9700\u8981\u611f\u77e5\u7684\u53d8\u66f4\u3002 \u5bf9\u4e8e HIGHWAY \u901a\u4fe1\u6a21\u5f0f\uff0c \u7531\u4e8e\u5e95\u5c42\u91c7\u7528 ProtoBuffer \u7f16\u7801\uff0c \u800c ProtoBuffer \u5929\u7136\u5c31\u662f\u4e00\u79cd \u5f3a\u7c7b\u578b\u5951\u7ea6\u7684\u7f16\u89e3\u7801\u8fc7\u7a0b\uff0c java-chassis \u4e3a\u4e86\u652f\u6301\u5f31\u7c7b\u578b\u5951\u7ea6\uff0c \u505a\u4e86\u5927\u91cf\u52aa\u529b\uff0c \u5728\u4e00\u4e9b\u8fb9\u754c\u6761\u4ef6\u5904\u7406\u4e0a\u4e0e\u5f31\u7c7b\u578b\u5951\u7ea6\u5b58\u5728 \u53d8\u66f4\uff0c\u4e24\u4e2a\u7248\u672c\u7684\u7f16\u89e3\u7801\u662f\u4e0d\u517c\u5bb9\u7684\uff0c\u9700\u8981\u540c\u65f6\u5347\u7ea7\u63d0\u4f9b\u8005\u548c\u6d88\u8d39\u8005\u3002 \u5728\u7f16\u7801\u65b9\u5f0f\u4e0a\uff0c\u5dee\u5f02\u4e3b\u8981\u4f53\u73b0\u5728\u5bf9\u4e8e\u7f3a\u7701\u503c\u7684\u5904\u7406\uff0c\u5bf9\u4e8e null \u7684\u5904\u7406\u7b49\u95ee\u9898\u4e0a\u3002","title":"1.3.0 \u5347\u7ea7 2.0.0\u6307\u5bfc"},{"location":"featured-topics/upgrading/1_3_0T2_0_0/#highway","text":"Highway\u901a\u4fe1\u534f\u8bae\u662f2.0.0\u6700\u5927\u7684\u53d8\u66f4\u70b9\u3002\u5982\u679c\u4e1a\u52a1\u91c7\u7528\u4e86Highway\u901a\u4fe1\u534f\u8bae\uff0c\u9700\u8981\u786e\u4fdd\u6240\u6709\u76f8\u5173\u7684consumer \u548cprovider\u90fd\u5fc5\u987b\u5347\u7ea7\uff0c\u4f4e\u7248\u672c\u7684consumer\u548c\u9ad8\u7248\u672c\u7684provider\u4e4b\u95f4\u65e0\u6cd5\u76f4\u63a5\u901a\u4fe1\u3002\u6b64\u5916\uff0c\u4ece\u4ee3\u7801\u98ce\u683c\u7684\u5c42\u9762\uff0c \u8fd8\u6709\u5982\u4e0b\u4e00\u4e9b\u53d8\u66f4\u3002 \u7a7a\u5b57\u7b26\u4e32\u548cnull\u7684\u4f20\u8f93\uff1aprotoBuffer \u534f\u8bae\u5bf9\u7a7a\u5b57\u7b26\u4e32\u548cnull\u90fd\u5e8f\u5217\u5316\u4e3a\u7a7a\uff0c\u53cd\u5e8f\u5217\u5316\u7684\u7ed3\u679c\u90fd\u662fnull\u3002 \u5e94\u7528\u7a0b\u5e8f\u7684\u4e1a\u52a1\u903b\u8f91\u4e0d\u5e94\u8be5\u4f7f\u7528\u7a7a\u5b57\u7b26\u4e32\u548cnull\u8868\u8fbe\u4e0d\u540c\u8bed\u4e49\u3002\u5c3d\u7ba1\u5bf9\u4e8eREST\uff0c\u7a0b\u5e8f\u5e95\u5c42\u652f\u6301\u8fd9\u6837\u7684\u533a\u5206\uff0c \u4ecd\u7136\u4e0d\u5efa\u8bae\u5c06\u4e1a\u52a1\u903b\u8f91\u6784\u7b51\u5728\u8fd9\u4e2a\u5047\u8bbe\u4e4b\u4e0a\uff0c\u907f\u514d\u540e\u671f\u5347\u7ea7\u548c\u517c\u5bb9\u9677\u9631\u3002 \u5982\u679c\u8bf7\u6c42\u53c2\u6570\u6216\u8005\u8fd4\u56de\u503c\u662f\u4e00\u4e2aPOJO\uff0c\u5047\u8bbePerson\uff0cREST\u53ef\u4ee5\u8fd4\u56denull\uff0c\u4f46\u662fHIGHWAY\u59cb\u7ec8\u4f1a\u521b\u5efa\u4e00\u4e2a Person \u5bf9\u8c61\u8fd4\u56de\u3002\u4e1a\u52a1\u903b\u8f91\u5c3d\u53ef\u80fd\u4e0d\u8981\u4f9d\u8d56\u4e8enull\u5bf9\u8c61\u63d0\u4f9b\u8bed\u4e49\u3002 \u5728contrast first\u7f16\u7a0b\u6a21\u5f0f\u60c5\u51b5\u4e0b\uff0c\u7528\u6237\u5148\u5199\u5951\u7ea6\uff0c\u7136\u540e\u901a\u8fc7\u5951\u7ea6\u751f\u6210\u4ee3\u7801\uff0c\u5e76\u5c06\u5951\u7ea6\u6587\u4ef6\u653e \u5230 microservices/{microservice name}/{schema id}.yaml \u6587\u4ef6\u4e2d\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u4e0d\u4f1a\u901a\u8fc7\u4ee3\u7801\u751f\u6210 \u5951\u7ea6\u3002\u901a\u5e38\u901a\u8fc7\u5de5\u5177\u751f\u6210\u4ee3\u7801\uff0c\u5de5\u5177\u751f\u6210\u7684\u6570\u636e\u7c7b\u578b\u548c\u5951\u7ea6\u7684\u6570\u636e\u7c7b\u578b\u5339\u914d\uff0c\u4f46\u662f\u5982\u679c\u8fd9\u79cd\u573a\u666f\u7684\u4ee3\u7801\u7ecf\u8fc7 \u4fee\u6539\uff0c\u5e76\u4e14yaml\u4e2d\u7684\u6570\u636e\u7c7b\u578b\u662fnumber\uff0c\u800c\u4ee3\u7801\u4e2d\u7684\u7c7b\u578b\u662fInteger\uff0c\u5728HIGHWAY\u901a\u4fe1\u6a21\u5f0f\u4e0b\u4f1a\u62a5\u544a\u9519\u8bef\u3002 HIGHWAY \u4f1a\u5c06 number \u7c7b\u578b\u89e3\u6790\u4e3a protoBuffer \u7684 double \u7c7b\u578b\uff0c \u5bf9\u5e94\u7684 JAVA \u7c7b\u578b\u4e3a double\u3002 protoBuffer \u4e0d\u652f\u6301\u5c06Integer\u7c7b\u578b\u91c7\u7528Double\u7684\u65b9\u5f0f\u5e8f\u5217\u5316\u3002\u5728contract first\u7f16\u7a0b\u6a21\u5f0f\u4e0b\uff0c\u5efa\u8bae\u901a\u8fc7 \u751f\u6210\u5de5\u5177\u751f\u6210\u4ee3\u7801\uff0c\u8fd9\u6837\u7528\u6237\u5c31\u4e0d\u7528\u4e86\u89e3swagger\u6570\u636e\u7c7b\u578b\u548cJAVA\u6570\u636e\u7c7b\u578b\u6620\u5c04\u7684\u7ec6\u8282\uff0c\u907f\u514d\u4e00\u4e9b\u9677\u9631\u3002 HIGHWAY \u7684\u6570\u636e\u7c7b\u578b\u5b9a\u4e49\u4e0d\u652f\u6301\u4e00\u4e9b\u7279\u6b8a\u5b57\u7b26\u4e32\uff0c\u6bd4\u5982 H.264 \u548c MPEG-2 \u5728OPEN API\u91cc\u9762\u662f\u5408\u6cd5\u7684 \u53c2\u6570\u540d\u79f0\uff0c\u4f46\u662f\u5728 protoBuffer \u91cc\u9762\u662f\u4e0d\u5408\u6cd5\u7684\u53c2\u6570\u540d\u79f0\u3002\u5e26\u6709\".\"\u548c\"-\"\u7684\u53c2\u6570\u540d\u5b57\u4e0d\u80fd\u7528\u4e8e HIGHWAY\u3002 \u5982\u679c\u5b58\u5728\uff0c\u7b2c\u4e00\u6b21\u8bbf\u95ee\u8fd9\u4e2a\u63a5\u53e3\u7684\u65f6\u5019\uff0c\u4f1a\u62a5\u544a: io.protostuff.compiler.parser.ParserException: Could not parse syntax \u5f02\u5e38\u3002 \u5bf9\u4e8e ENUM \u6709\u4e00\u4e2a\u9700\u8981\u7279\u522b\u6ce8\u610f\u7684\u5730\u65b9\uff0cprotoBuffer \u91c7\u7528int\u6765\u5e8f\u5217\u5316 ENUM \uff0cint\u7684\u9ed8\u8ba4\u503c(\u53730\uff09\u4e0d\u4f1a\u5e8f\u5217\u5316\uff0c\u90a3\u4e48\u53cd \u5e8f\u5217\u5316\u7684\u65f6\u5019\uff0cENUM \u7684\u7f3a\u7701\u503c\u5fc5\u987b\u4e3a\u7b2c\u4e00\u4e2a\u503c\u3002\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u5c06null\u548c\u7b2c\u4e00\u4e2a\u7f3a\u7701\u503c\u5f53\u6210\u4e00\u6837\u7684\u8bed\u4e49\u5bf9\u5f85\u3002\u6bd4 \u8f83\u597d\u7684\u505a\u6cd5\u662f\u5728\u7a0b\u5e8f\u91cc\u9762\u663e\u793a\u7684\u7ed9 ENUM \u5b57\u6bb5\u8d4b\u7f3a\u7701\u503c\u3002 HIGHWAY \u4e0d\u652f\u6301\u6570\u7ec4\u53c2\u6570\u5b58\u5728 null \u503c\u7684\u60c5\u51b5\u3002\u5982\u679c\u4e00\u4e2a\u63a5\u53e3\u7684\u53c2\u6570\u662fString[]\uff0c\u90a3\u4e48\u91cc\u9762\u7684\u5143\u7d20\u4e0d\u80fd \u4e3a null\uff0c\u5426\u5219\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u4f1a\u5931\u8d25\u3002 \u5bf9\u4e8e primitive \u7c7b\u578b\uff0c\u5e76\u4e14\u63a5\u53e3\u58f0\u660e\u4e3a @Required\uff0c\u7531\u4e8e HIGHWAY \u5e76\u4e0d\u4f1a\u5e8f\u5217\u5316\u7f3a\u7701\u503c\uff0c\u6bd4\u5982 0 \u7b49\uff0c \u5728Consumer\u7aef\u4f20\u9012\u7684\u53c2\u6570\u503c\u4e3a 0 \u7684\u65f6\u5019\uff0cProvider \u7aef\u5e76\u4e0d\u80fd\u533a\u5206\u8fd9\u4e2a\u503c\u662f\u4f20\u9012\u4e860\uff0c\u8fd8\u662f\u6ca1\u6709\u4f20\u9012\u3002\u56e0 \u6b64 HIGHWAY \u4f1a\u5ffd\u7565 @Required \u58f0\u660e\uff0c\u4f7f\u7528\u7f3a\u7701\u503c0\u3002 \u5982\u679c\u4e00\u4e2a\u5c5e\u6027\u7684\u540d\u79f0\u91c7\u7528\u4e00\u4e2a\u5c0f\u5199\u5b57\u6bcd\u5f00\u5934\uff0c\u5e76\u4e14\u53ea\u6709\u4e00\u4e2a\u5c0f\u5199\u5b57\u6bcd\uff0c\u5373\u4f7f\u751f\u6210\u7684getter/setter\u662f\u5408\u6cd5 \u7684\uff0c swagger \u751f\u6210\u7684\u5c5e\u6027\u540d\u79f0\u8fd8\u662f\u4f1a\u51fa\u73b0\u9519\u8bef\u3002\u5e94\u8be5\u5c3d\u53ef\u80fd\u907f\u514d\u4f7f\u7528\u8fd9\u6837\u7684\u5c5e\u6027\u540d\u79f0\u3002\u5fc5\u987b\u4f7f\u7528\u7684\u573a\u666f\uff0c\u9700\u8981 \u663e\u793a\u7684\u4f7f\u7528 @JsonProperty \u58f0\u660e\u3002 ```java public class SpecialNameModel { // names starts with only one lower case , although getter/setter generated by IDE is correct, // will cause jackson generate incorrect swagger names. // @JsonProperty must be used to make json work in a predictable way. @JsonProperty(\"aIntName\") private int aIntName; public int getaIntName() { return aIntName; } public void setaIntName(int aIntName) { this.aIntName = aIntName; } } ``` \u8fd4\u56de\u591a\u79cd\u7c7b\u578b\u6216\u8005\u901a\u8fc7 ContextUtils \u8bbe\u7f6e\u72b6\u6001\u7801 HIGHWAY \u4e0d\u518d\u652f\u6301\u3002 \u5c3d\u7ba1 1.3.0 \u4e4b\u524d\u7528\u6237\u4e5f\u4e0d\u4f1a\u5728 HIGHWAY \u6a21\u5f0f\u4e0b \u4f7f\u7528\u7c7b\u4f3c\u4e0b\u9762\u7684\u4ee3\u7801\uff0c \u4f46\u662f\u5728 1.3.0 \u4e4b\u524d\u7684\u7248\u672c\uff0c \u8fd9\u4e9b\u4ee3\u7801\u90e8\u5206\u786e\u5b9e\u80fd\u591f\u5de5\u4f5c\u3002 ```java @PUT public String sayHi(@PathParam(\"name\") String name) { ContextUtils.getInvocationContext().setStatus(202); return name + \" sayhi\"; } ``` \u4f18\u79c0\u5b9e\u8df5 : \u5982\u679c\u9879\u76ee\u4e2d\u9700\u8981\u540c\u65f6\u4f7f\u7528 REST \u548c HIGHWAY \u5bf9\u5916\u63d0\u4f9b\u670d\u52a1\uff0c \u5e76\u4e14\u4f1a\u4f7f\u7528\u5230\u4e00\u4e9b HIGHWAY \u534f\u8bae\u6709\u5dee\u5f02\u7684\u7528\u6cd5\uff0c \u53ef\u4ee5\u5c06\u8fd9\u4e9b\u63a5\u53e3\u5b9a\u4e49\u5230\u4e0d\u540c\u7684\u7c7b\u4e2d\uff0c \u4f7f\u7528\u4e0d\u4e00\u6837\u7684 Schema ID \u8fdb\u884c\u533a\u5206\uff0c\u6bd4\u5982 MySchemaHighwayOnly , MySchemaRestOnly , MySchema \u3002","title":"Highway\u901a\u4fe1\u534f\u8bae\u7684\u53d8\u66f4"},{"location":"featured-topics/upgrading/1_3_0T2_0_0/#edge-service-model","text":"\u5047\u8bbe\u4e1a\u52a1\u5e94\u7528\u91c7\u7528 Edge Service \u8f6c\u53d1\u8bf7\u6c42\u3002 \u5e76\u4e14\u5b9a\u4e49\u4e86\u4e00\u4e2a\u63a5\u53e3\uff0c \u6709\u5982\u4e0b Model \u4f5c\u4e3a\u53c2\u6570\uff1a public class Person { private Integer age = 30; private List String items; } \u7528\u6237\u4ece\u6d4f\u89c8\u5668\u8c03\u7528\u8fd9\u4e2a\u63a5\u53e3\uff0c JSON \u5185\u5bb9\u4e3a {} \uff0c \u4e0d\u4f20\u9012\u4efb\u4f55\u5185\u5bb9\uff0c 1.3.0 \u7248\u672c\u5f97\u5230\u7684 age = null\uff0c items = null \u3002 2.0.0 \u7248\u672c age = 30, items \u4e3a\u7a7a\u8868\uff0c \u4e0d\u4e3a null \u3002 \u8fd9\u4e2a\u884c\u4e3a\u662f\u7531\u4e8e 1.3.0 \u7248\u672c Edge Service \u4f1a\u81ea\u52a8\u751f\u6210\u4e00\u4e2a Person \u7c7b\uff0c \u8fd9\u4e2a\u7c7b\u6ca1\u6709\u7f3a\u7701\u503c\uff0c Edge Service \u91cd\u65b0\u5e8f\u5217\u5316\uff0c \u9020\u6210\u670d\u52a1\u7aef\u53d6\u5230\u4e86 null\u3002 \u5f31\u7c7b\u578b\u5951\u7ea6\u6ca1\u6709\u4e2d\u95f4\u7c7b\u578b\uff0c \u5e8f\u5217\u5316\u7684\u7ed3\u679c \u548c\u7528\u6237\u4ece\u6d4f\u89c8\u5668\u4f20\u9012\u8fc7\u6765\u7684\u503c\u4e00\u6837\u3002","title":"\u4f7f\u7528 Edge Service \u573a\u666f\u4e0b Model \u7684\u7f3a\u7701\u503c"},{"location":"featured-topics/upgrading/1_3_0T2_0_0/#resttemplate","text":"\u5bf9\u4e8e\u4e0b\u9762\u7684 consumer \u548c provider \u4ee3\u7801\uff1a // provider @PostMapping(path = /object ) public Object testObject(@RequestBody Object input) // consumer Object result = restTemplate.postForObject(prefix + /object , new EmptyObject(), EmptyObject.class); 1.3.0 \u7248\u672c\u8fd4\u56de\u7684 result \u7c7b\u578b\u4e3a Map\u3002 2.0.0 \u7248\u672c\u8fd4\u56de\u7684\u7c7b\u578b\u548c postForObject \u6307\u5b9a\u7684\u7c7b\u578b\u4e00\u81f4\uff0c\u4e0a\u9762\u7684\u793a\u4f8b \u4e2d\uff0cresult \u7c7b\u578b\u4e3a EmptyObject\u3002 \u4e0b\u9762\u7684\u4ee3\u7801\uff0c1.3.0 \u548c 2.0.0 \u7248\u672c\u8fd0\u884c\u7684\u7ed3\u679c\u662f\u4e00\u6837\u7684\uff1a List GenericObjectParam List RecursiveObjectParam response = consumers.getSCBRestTemplate() postForObject( /testListObjectParam , request, List.class); \u524d\u63d0\u6761\u4ef6\u662f GenericObjectParam \u548c RecursiveObjectParam \u5728 consumer \u7684 classpath \u4e2d\u5b58\u5728\u5bf9\u5e94\u7684 \u7c7b\uff0c\u5e76\u4e14 package \u548c\u670d\u52a1\u7aef\u5b9a\u4e49\u7684\u7c7b\u4e00\u6837\u3002\u5982\u679c\u4e0d\u4e00\u6837\uff0c \u5219 response \u7c7b\u578b\u4e3a List \uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u4f1a \u629b\u51fa\u7c7b\u578b\u8f6c\u6362\u5f02\u5e38\u30022.0.0 \u6ca1\u6709\u76f8\u540c package \u7684\u7ea6\u675f\uff0c\u5e76\u4e14\u5728\u4fdd\u6301\u517c\u5bb9\u7684\u60c5\u51b5\u4e0b\uff0c\u652f\u6301\u4e0b\u9762\u7684\u7528\u6cd5\uff1a HttpEntity SpringmvcBasicRequestModel requestEntity = new HttpEntity (requestModel, null); List SpringmvcBasicResponseModel responseModelList = template.exchange( /postListObject , HttpMethod.POST, requestEntity, new ParameterizedTypeReference List SpringmvcBasicResponseModel () { }).getBody(); \u8fd9\u79cd\u65b9\u5f0f\u7684\u8bed\u4e49\u6839\u636e\u6e05\u6670\uff0c\u5728\u4f7f\u7528\u6cdb\u578b\u7684\u65f6\u5019\uff0c\u5efa\u8bae\u91c7\u7528\u8fd9\u79cd\u7528\u6cd5\u3002 \u57281.3.0\u7248\u672c\u652f\u6301\u5982\u4e0b\u7528\u6cd5\uff1a template.postForEntity(url, {\\ time\\ :3073113710456,\\ date\\ :3073113710456,\\ holder\\ :\\ test\\ } , DateTimeModel.class) \u5373\u901a\u8fc7 JSON String \u7684\u65b9\u5f0f\u4f20\u9012\u53c2\u6570\u7ed9\u540e\u53f0\u7684 DateTimeModel \u5bf9\u8c61\u3002 \u7531\u4e8e\u8fd9\u79cd\u7528\u6cd5\u5728\u89e3\u6790\u7684\u65f6\u5019\u5b58\u5728\u4e8c\u4e49\u6027\uff0c 2.0.0 \u4e0d\u518d\u652f\u6301\u8fd9\u79cd\u7528\u6cd5\u3002 \u53ef\u4ee5\u4f7f\u7528 Map \u6216\u8005 JsonObject \u6765\u4f20\u9012\u3002","title":"RestTemplate\u7684\u4f7f\u7528"},{"location":"featured-topics/upgrading/1_3_0T2_0_0/#asyncresttemplate","text":"1.3.0 \u548c 2.0.0 \u4e2d AsyncRestTemplate \u7684\u4f7f\u7528\u65b9\u5f0f\u4e00\u6837\uff0c\u6ca1\u6709\u53d8\u5316\u3002\u4f46\u662f\u7531\u4e8e 2.0.0 \u53ea\u652f\u6301spring 5\u7248 \u672c\uff0c\u800c spring 5 \u5c06 AsyncRestTemplate \u6807\u8bb0\u4e3a\u5e9f\u5f03\u72b6\u6001\uff0c\u5f00\u53d1\u8005\u5728\u540e\u7eed\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u5c3d\u53ef\u80fd\u4e0d\u8981\u4f7f \u7528 AsyncRestTemplate \u3002\u53ef\u4ee5\u4f7f\u7528 CompletableFuture \u6765\u66ff\u4ee3\uff0c\u53ef\u4ee5\u53c2\u8003\u8fd9 \u4e2a \u4f8b\u5b50 \u3002","title":"AsyncRestTemplate\u7684\u4f7f\u7528"},{"location":"featured-topics/upgrading/1_3_0T2_0_0/#spring-boot","text":"2.0.0 \u4e0d\u518d\u652f\u6301 spring 4 \u548c spring boot 1\uff0c \u7f3a\u7701\u4f7f\u7528 spring 5 \u548c spring boot 2\uff0c \u5e76\u4fee\u6539\u4e86\u76f8 \u5173 starters \u7684\u540d\u79f0\u3002 \u53ef\u4ee5\u901a\u8fc7\u9605 \u8bfb \u5728Spring Boot\u4e2d\u4f7f\u7528java chassis \u4e86\u89e3 \u76f8\u5173\u53d8\u5316\u3002","title":"Spring Boot \u96c6\u6210\u7684\u53d8\u5316"},{"location":"featured-topics/upgrading/1_3_0T2_0_0/#jdk-11","text":"2.0.0 \u7248\u672c\u53ef\u4ee5\u5728 JDK 11 \u4e0b\u8fd0\u884c\uff0c\u5e76\u8fdb\u884c\u4e86\u7b80\u5355\u7684\u96c6\u6210\u6d4b\u8bd5\u3002 2.0.0 \u652f\u6301\u7684\u6838\u5fc3 JDK \u7248\u672c\u4ecd\u7136\u662f 8\uff0c \u5e76\u6ca1\u6709\u91c7\u7528 JDK 11 \u7f16\u8bd1\u3002 JDK 11 \u7684\u4e00\u4e2a\u4e3b\u8981\u53d8\u5316\u662f\u540e\u7eed\u53ef\u80fd\u4e0d\u518d\u652f\u6301\u901a\u8fc7\u53cd\u5c04\u6539\u53d8\u7c7b\u7684\u5c01\u88c5\u6027\u3002 \u8fd9\u4e2a\u7279\u6027\u76ee\u524d\u6709\u5f88\u591a\u5730\u65b9\u4f7f\u7528\uff0c 2.0.0 \u7248\u672c\u4e3a\u4e86\u9002\u914d JDK 11\uff0c \u67d0\u4e9b\u7279\u6027\u7684\u4f7f\u7528\u4f1a\u53d1\u751f\u53d8\u5316\u3002 \u5177\u4f53\u6709\u5982\u4e0b\u51e0\u4e2a\u7279\u6027 \uff1a \u4f7f\u7528 EventManager \u6ce8\u518c\u4e8b\u4ef6 \u5728 1.3.0 \u7248\u672c\uff0c \u5141\u8bb8\u91c7\u7528 private \u7c7b \u6216\u8005 \u5185\u90e8\u533f\u540d\u7c7b\u4f5c\u4e3a\u4e8b\u4ef6\u76d1\u542c\u5bf9\u8c61\uff0c \u6bd4\u5982\uff1a public void myMethod() { Object receiveEvent = new Object() { @Subscribe public void onEvent(AlarmEvent circutBreakerEvent) { taskList.add(circutBreakerEvent); } }; EventManager.getEventBus().register(receiveEvent); } \u5728 2.0.0 \u7248\u672c\u4e0d\u5141\u8bb8\uff0c\u542f\u52a8\u7684\u65f6\u5019\u4f1a\u62a5\u544a\u5f02\u5e38\u3002 2.0.0 \u7248\u672c\u6ce8\u518c\u7684\u4e8b\u4ef6\u76d1\u542c\u5668\uff0c\u5fc5\u987b\u4fdd\u8bc1\u5bf9\u4e8e EventManager \u7c7b\u5177\u6709\u53ef\u8bbf\u95ee\u6027\u3002 \u901a\u5e38 \u5b9a\u4e49\u7684\u7c7b\u548c EventManager \u4e0d\u5c5e\u4e8e\u540c\u4e00\u4e2a package \uff0c \u56e0\u6b64\u8fd9\u4e2a\u7c7b\u5fc5\u987b\u662f public \u7684\uff0c \u4e8b\u4ef6\u5904\u7406\u65b9\u6cd5\u4e5f\u5fc5\u987b\u662f public \u7684\u3002 \u5b9a\u4e49\u63a5\u53e3\u7684 Model \u4f7f\u7528\u533f\u540d\u5185\u90e8\u7c7b \u5728 1.3.0 \u7248\u672c\uff0c \u4f7f\u7528\u533f\u540d\u5185\u90e8\u7c7b\u4f5c\u4e3a REST \u63a5\u53e3\u7684 Model \u662f\u5141\u8bb8\u7684\uff0c \u4f46\u662f 2.0.0 \u7248\u672c\u4e0d\u5141\u8bb8\u3002 \u5982\u679c\u91c7\u7528\u8fd9\u6837\u7684\u7c7b\u578b\u4f5c\u4e3a\u63a5\u53e3\u53c2\u6570\uff0c \u542f\u52a8\u7684\u65f6\u5019\u4f1a\u62a5\u544a\u5f02\u5e38\u3002 \u5176\u4ed6\u65b9\u9762\u7684\u5f71\u54cd \u7531\u4e8e JDK 11 \u4e0d\u5141\u8bb8\u901a\u8fc7\u53cd\u5c04\u7834\u574f\u5c01\u88c5\uff0c \u65e9\u671f\u901a\u8fc7\u53cd\u5c04\u4fee\u6539 private \u5b57\u6bb5\u7684\u503c\uff0c\u6765\u89c4\u907f\u4e00\u4e9b\u4e09\u65b9\u8f6f\u4ef6\u7684 bug\uff0c \u4ee5\u53ca\u505a\u4e00\u4e9b\u989d\u5916 \u5b9a\u5236\u53d8\u5f97\u4e0d\u53ef\u884c\uff0c \u4f7f\u7528\u8fd9\u4e9b\u7279\u6027 JDK 11 \u6682\u65f6\u53ea\u662f\u6253\u5370\u8b66\u544a\uff0c \u5728 JDK 13 \u7b49\u66f4\u9ad8\u7248\u672c\u4f1a\u5f7b\u5e95\u7981\u6b62\u3002 \u56e0\u6b64\u4e1a\u52a1\u5f00\u53d1\u7684\u65f6\u5019\uff0c \u5c3d\u53ef\u80fd \u4e0d\u8981\u4f7f\u7528\u7834\u574f\u5c01\u88c5\u7684\u7279\u6027\u3002","title":"\u652f\u6301 JDK 11"},{"location":"featured-topics/upgrading/1_3_0T2_0_0/#_1","text":"java-chassis\u8fd0\u884c\u65f6\u4f9d\u8d56\u4e8e\u63a5\u53e3\u5b9a\u4e49\u91cc\u9762\u7684\u540d\u5b57 \u4e3a\u4e86\u66f4\u597d\u7684\u57fa\u4e8eswagger\u5bf9\u670d\u52a1\u8fdb\u884c\u6cbb\u7406\uff0c\u4ee5\u53ca\u63d0\u9ad8\u5ba2\u6237\u7aef\u4ee3\u7801\u4e66\u5199\u7684\u7075\u6d3b\u6027\uff0cjava-chassis\u8981\u6c42\u4e66\u5199\u7684\u63a5\u53e3\u5b9a\u4e49\u4ee3\u7801\u5728\u7f16\u8bd1\u7684\u65f6\u5019\uff0c\u5e26\u4e0a\u53c2\u6570\u540d\u79f0\u4fe1\u606f\uff0c\u5426\u5219\u4f1a\u62a5\u544a\u5982\u4e0b\u9519\u8bef\uff1a Caused by: java.lang.IllegalStateException: parameter name is not present, method=org.apache.servicecomb.samples.porter.file.api.InternalAccessEndpoint:localAccess solution: change pom.xml, add compiler argument: -parameters, for example: plugin groupId org.apache.maven.plugins /groupId artifactId maven-compiler-plugin /artifactId configuration compilerArgument -parameters /compilerArgument /configuration /plugin \u89e3\u51b3\u8be5\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6emaven compiler plugin\uff0c \u52a0\u4e0a-parameters\u53c2\u6570\u3002\u5982\u679c\u5728IDE\u4e0b\u9762\u8fd0\u884c\uff0c\u9700\u8981\u8bbe\u7f6e build - java compilers \u5728\u7f16\u8bd1\u53c2\u6570\u91cc\u9762\u589e\u52a0-parameters\u3002 spring 5\u53d8\u66f4 cse.bean.xml\u6587\u4ef6\u5982\u679c\u91c7\u7528\u4e86classpath\u67e5\u627e\u5b9a\u4e49\u6587\u4ef6 beans xmlns= http://www.springframework.org/schema/beans xmlns:xsi= http://www.w3.org/2001/XMLSchema-instance xmlns:p= http://www.springframework.org/schema/p xmlns:util= http://www.springframework.org/schema/util xmlns:context= http://www.springframework.org/schema/context xmlns:tx= http://www.springframework.org/schema/tx xsi:schemaLocation= http://www.springframework.org/schema/beans classpath:org/springframework/beans/factory/xml/spring-beans-3.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd \u4f1a\u62a5\u544a\u4e0b\u9762\u7684\u9519\u8bef\uff1a [main][WARN][org.springframework.beans.factory.xml.XmlBeanDefinitionReader:48] Ignored XML validation warning org.xml.sax.SAXParseException: schema_reference.4: \u65e0\u6cd5\u8bfb\u53d6\u65b9\u6848\u6587\u6863 'classpath:org/springframework/beans/factory/xml/spring-beans-3.0.xsd', \u539f\u56e0\u4e3a 1) \u65e0\u6cd5\u627e\u5230\u6587\u6863; 2) \u65e0\u6cd5\u8bfb\u53d6\u6587\u6863; 3) \u6587\u6863\u7684\u6839\u5143\u7d20\u4e0d\u662f xsd:schema \u3002 at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:203) ~[?:1.8.0_131] at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.warning(ErrorHandlerWrapper.java:99) [?:1.8.0_131] at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:392) [?:1.8.0_131] \u4fee\u6539\u4e3a: beans xmlns= http://www.springframework.org/schema/beans xmlns:xsi= http://www.w3.org/2001/XMLSchema-instance xmlns:context= http://www.springframework.org/schema/context xsi:schemaLocation= http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd SCBEngine\u4f7f\u7528\u65f6\u673a \u4ee3\u7801 @RestSchema(schemaId = inspector ) @Path( /inspector ) public class InspectorEndpoint { private InspectorConfig inspectorConfig; public InspectorEndpoint() { this.inspectorConfig = SCBEngine.getInstance().getPriorityPropertyManager().createConfigObject(InspectorConfig.class); } Caused by: java.lang.NullPointerException at org.apache.servicecomb.core.SCBEngine. init (SCBEngine.java:126) at org.apache.servicecomb.core.SCBEngine.getInstance(SCBEngine.java:159) at org.apache.servicecomb.samples.porter.file.api.InspectorEndpoint. init (InspectorEndpoint.java:82) at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) at java.lang.reflect.Constructor.newInstance(Constructor.java:423) \u4e0d\u80fd\u591f\u5728bean\u7684\u521d\u59cb\u5316\u91cc\u9762\u4f7f\u7528SCBEngine\u7684\u5b9e\u4f8b\u3002\u8fd9\u4e2a\u5b9e\u4f8b\u4e1a\u52a1\u9700\u8981\u5728\u4e8b\u4ef6AFTER_REGISTRY\u7b49\u5904\u7406\u51fd\u6570\u4e2d\u4f7f\u7528\u3002","title":"\u5e38\u89c1\u95ee\u9898"},{"location":"featured-topics/upgrading/1_3_0T2_0_0/#_2","text":"2.0.0 \u76f8\u5bf9\u4e8e 1.0.0 \u5347\u7ea7\u4e86\u5927\u91cf\u4e09\u65b9\u4ef6\uff0c\u5305\u62ecnetty, vert.x, spring, spring boot\u7b49\uff0c\u76f4\u63a5\u5f15\u7528\u8fd9\u4e9b\u7ec4\u4ef6\u7684\u4ee3\u7801\u53ef\u80fd\u7f16\u8bd1\u5931\u8d25\u3002\u540c\u65f6\u8fd8\u5bf9\u4ee3\u7801\u8fdb\u884c\u4e86\u4e00\u5b9a\u91cd\u6784\uff0c\u6709\u4e9b\u4ee3\u7801\u4f7f\u7528\u4e86java-chassis\u672a\u516c\u5f00\u63a5\u53e3\uff0c\u4f7f\u7528\u8fd9\u4e9b\u63a5\u53e3\u53ef\u80fd\u7f16\u8bd1\u5931\u8d25\u3002\u4e0b\u9762\u662f\u4e00\u4e9b\u5e38\u89c1\u7684\u95ee\u9898\u3002\u4e0b\u9762\u4e00\u4e9bPR\u7684\u4fee\u6539\u53ef\u4ee5\u53c2\u8003\uff1a \u5347\u7ea7netty vertx \u5347\u7ea7jackson \u5220\u9664spring 4\u548cspring boot 1\u7684\u652f\u6301 \u8c03\u65742.x\u7248\u672cspring boot starter\u540d\u5b57 \u4e0b\u9762\u662f\u4e00\u4e9b\u573a\u666f\u7684\u95ee\u9898\uff1a router.routeWithRegex(regex).handler(CookieHandler.create()) \u63d0\u793a CookieHandler deprecated\uff0c\u5220\u9664\u8fd9\u884c\u4ee3\u7801 \u5373\u53ef\uff0c\u65b0\u7248\u672c\u7684vert.x\u5df2\u7ecf\u9ed8\u8ba4\u63d0\u4f9b\u4e86cookie\u5904\u7406\u3002 io.vertx.ext.web\u4e2d\u7684 io.vertx.ext.web.Cookie\u5df2\u8fc7\u65f6 \uff0c \u4fee\u6539 \u4e3a io.vertx.core.http.Cookie 2.0.0 \u4e00\u4e9b\u53ef\u80fd\u88ab\u5916\u90e8\u4f7f\u7528\u7684\u5185\u90e8\u63a5\u53e3\u8c03\u6574\uff1a Invocation \u7c7b\u5220\u9664\u4e86 getArgs \u63a5\u53e3\uff0c \u66ff\u6362\u4e3a getSwaggerArguments \uff0c \u540c\u65f6\u65b0\u589e\u4e86 getInvocationArguments \uff0c \u5173\u4e8e\u8fd9\u4e2a\u53d8\u66f4\u7684\u8bf4\u660e\uff0c\u8bf7\u53c2\u8003\u65b0\u7279\u6027\u4ecb\u7ecd\u6587\u7ae0 \u5f31\u7c7b\u578b\u5951\u7ea6 \u3002 \u5220\u9664 DynamicSchemaLoader \uff0c \u8fd9\u4e2a\u7c7b\u65e9\u671f\u7248\u672c\u63d0\u4f9b\u51fa\u6765\u662f\u65b9\u4fbf\u6ce8\u518c\u5951\u7ea6\uff0c \u6700\u65b0\u7248\u672c\u5ba2\u6237\u7aef\u5951\u7ea6\u53d1\u73b0\u53ef\u4ee5\u901a\u8fc7\u670d\u52a1\u4e2d\u5fc3 \u5b8c\u6210\uff0c\u4e0d\u518d\u9700\u8981\u8fd9\u6837\u7684\u529f\u80fd\u3002 CseContext.getInstance().getTransportManager().findTransport(Const.RESTFUL) \u4fee\u6539 \u4e3a SCBEngine.getInstance().getTransportManager().findTransport(Const.RESTFUL) \u6d4b\u8bd5\u4ee3\u7801\u53ef\u80fd\u4f7f\u7528 CseContext.getInstance().getConsumerProviderManager().setTransport(microserviceName, transport) \uff0c \u4fee\u6539 \u4e3a ArchaiusUtils.setProperty(\"servicecomb.references.transport.\" + microserviceName, transport);","title":"\u7f16\u8bd1\u9519\u8bef"},{"location":"featured-topics/upgrading/1_3_0T2_0_0/#_3","text":"2.0.0 \u7248\u672c\u5c06 servicecomb.service.registry.registerUrlPrefix \u5f04\u4e22\u4e86\u3002 \u8fd9\u4e2a\u914d\u7f6e\u9879\u662f\u4e3a\u4e00\u4e2a\u7279\u6b8a\u573a\u666f\u670d\u52a1\u7684\u7684\uff0c \u9ed8\u8ba4\u503c\u4e3a false\u3002 \u5728\u4f7f\u7528 WEB \u5bb9\u5668\uff08\u6bd4\u5982 tomcat\uff09 java-chassis\u7684\u573a\u666f\u4e0b\uff0c \u5982\u679c\u8bbe\u7f6e\u4e86 context-path\uff0c \u4f7f\u7528 java-chassis \u63d0\u4f9b\u7684 RestTemplate \u8bbf\u95ee\u670d\u52a1\u7684\u65f6\u5019\uff0c \u4e0d\u9700\u8981\u6307\u5b9a context-path\uff0c\u4ee5\u4fdd\u8bc1\u7528\u6237\u4e0d\u7528\u5173\u6ce8\u5fae\u670d\u52a1\u7684\u90e8\u7f72\u65b9\u5f0f\uff0c\u63d0\u4f9b\u4e86\u5f88\u5927\u7684\u4fbf\u5229\u3002 \u4f46\u662f\u6709\u4e9b\u7528\u6237\u7684\u4ee3\u7801\u662f\u5386\u53f2\u9057\u7559\u4ee3\u7801\u6539\u9020\u8fc7\u6765\u7684\uff0c\u671f\u671b URL \u5305\u542b\u5b8c\u6574\u7684 context-path\u3002 \u4f7f\u7528 2.0.0 \u7248\u672c\u5982\u679c\u5b58\u5728\u8fd9\u4e2a\u7279\u6b8a\u8981 \u6c42\uff0c \u7a0b\u5e8f\u4f1a\u8fd0\u884c\u9519\u8bef\uff0c\u8bbf\u95ee\u63a5\u53e3\u63d0\u793a NOT FOUND\u3002\u8fd9\u4e2a\u95ee\u9898\u5728 2.0.1 \u4fee\u590d\u3002","title":"\u5df2\u77e5\u7f3a\u9677"},{"location":"featured-topics/upgrading/2_0_0T2_0_1/","text":"2.0.0 \u5347\u7ea7 2.0.1\u6307\u5bfc trace id \u8bb0\u5f55\u7684\u53d8\u66f4\u8bf4\u660e 2.0.0 \u91c7\u7528 %marker \u8bb0\u5f55 trace id\uff0c \u7531\u4e8e Marker \u88ab\u8bbe\u8ba1\u4e3a Filtering \u573a\u666f\uff0c \u4e0d\u9002\u7528\u4e8e\u8bb0\u5f55 trace id\uff0c \u5426\u5219\u53ef\u80fd\u5bfc\u81f4\u6709\u4e9b logger \u7cfb\u7edf \u4ea7\u751f OOM\u3002 2.0.1 \u5c06 Marker \u8c03\u6574\u4e3a\u4e86 MDC \u3002 \u4f7f\u7528\u6307\u5bfc\u53c2\u8003 2.0.1 \u65b0\u7279\u6027\u4ecb\u7ecd\uff1a \u5728\u65e5\u5fd7\u4e2d\u8bb0\u5f55trace id \u72ec\u7acb tomcat (\u6216\u8005\u5176\u4ed6 web container ) \u8fd0\u884c\u7684\u573a\u666f \u5728\u4f7f\u7528\u72ec\u7acb tomcat \u8fd0\u884c\u7684\u573a\u666f\uff0c RestServletContextListener \u5728\u4f1a\u5728 contextInitialized \u73af\u8282\u8c03\u7528 Log4jUtils.init \u521d\u59cb\u5316 log4j , \u7531\u4e8e log4j \u76ee\u524d\u5df2\u7ecf\u88ab log4j2 \u6216\u8005 logback \u7b49\u66ff\u6362\uff0c \u4ece 2.0.1 \u5f00\u59cb\uff0c \u4e0d\u4f1a\u8c03\u7528 Log4jUtils \u521d\u59cb\u5316 log4j \u3002 \u5982\u679c\u5e94\u7528\u7cfb\u7edf\u9700\u8981\u7ee7\u7eed \u4f7f\u7528 log4j\uff0c \u53ef\u4ee5\u81ea\u5b9a\u4e49 ServletContextListener \uff0c\u8c03\u7528 Log4jUtils.init \u521d\u59cb\u5316 log4j\u3002","title":"2.0.0 \u5347\u7ea7 2.0.1\u6307\u5bfc"},{"location":"featured-topics/upgrading/2_0_0T2_0_1/#200-201","text":"","title":"2.0.0 \u5347\u7ea7 2.0.1\u6307\u5bfc"},{"location":"featured-topics/upgrading/2_0_0T2_0_1/#trace-id","text":"2.0.0 \u91c7\u7528 %marker \u8bb0\u5f55 trace id\uff0c \u7531\u4e8e Marker \u88ab\u8bbe\u8ba1\u4e3a Filtering \u573a\u666f\uff0c \u4e0d\u9002\u7528\u4e8e\u8bb0\u5f55 trace id\uff0c \u5426\u5219\u53ef\u80fd\u5bfc\u81f4\u6709\u4e9b logger \u7cfb\u7edf \u4ea7\u751f OOM\u3002 2.0.1 \u5c06 Marker \u8c03\u6574\u4e3a\u4e86 MDC \u3002 \u4f7f\u7528\u6307\u5bfc\u53c2\u8003 2.0.1 \u65b0\u7279\u6027\u4ecb\u7ecd\uff1a \u5728\u65e5\u5fd7\u4e2d\u8bb0\u5f55trace id","title":"trace id \u8bb0\u5f55\u7684\u53d8\u66f4\u8bf4\u660e"},{"location":"featured-topics/upgrading/2_0_0T2_0_1/#tomcat-web-container","text":"\u5728\u4f7f\u7528\u72ec\u7acb tomcat \u8fd0\u884c\u7684\u573a\u666f\uff0c RestServletContextListener \u5728\u4f1a\u5728 contextInitialized \u73af\u8282\u8c03\u7528 Log4jUtils.init \u521d\u59cb\u5316 log4j , \u7531\u4e8e log4j \u76ee\u524d\u5df2\u7ecf\u88ab log4j2 \u6216\u8005 logback \u7b49\u66ff\u6362\uff0c \u4ece 2.0.1 \u5f00\u59cb\uff0c \u4e0d\u4f1a\u8c03\u7528 Log4jUtils \u521d\u59cb\u5316 log4j \u3002 \u5982\u679c\u5e94\u7528\u7cfb\u7edf\u9700\u8981\u7ee7\u7eed \u4f7f\u7528 log4j\uff0c \u53ef\u4ee5\u81ea\u5b9a\u4e49 ServletContextListener \uff0c\u8c03\u7528 Log4jUtils.init \u521d\u59cb\u5316 log4j\u3002","title":"\u72ec\u7acb tomcat (\u6216\u8005\u5176\u4ed6 web container ) \u8fd0\u884c\u7684\u573a\u666f"},{"location":"general-development/AlarmEvent/","text":"\u83b7\u53d6\u7194\u65ad\u4e0e\u5b9e\u4f8b\u9694\u79bb\u544a\u8b66\u4e8b\u4ef6 \u573a\u666f\u63cf\u8ff0 \u5728\u5fae\u670d\u52a1\u8fd0\u884c\u671f\u95f4\u7194\u65ad\u6216\u5b9e\u4f8b\u9694\u79bb\u72b6\u6001\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u9700\u8981\u76d1\u542c\u5230\u76f8\u5173\u4e8b\u4ef6\uff0c\u83b7\u53d6\u76f8\u5173\u4fe1\u606f\u5e76\u8fdb\u884c\u5904\u7406 \u4f7f\u7528\u53c2\u8003 \u76d1\u542c\u7194\u65ad\u4e8b\u4ef6 Object receiveEvent = new Object() { @Subscribe public void onEvent(CircutBreakerEvent circutBreakerEvent) { //Get information from circutBreakerEvent } }; EventManager.getEventBus().register(receiveEvent); \u76d1\u542c\u5b9e\u4f8b\u9694\u79bb\u4e8b\u4ef6 Object receiveEvent = new Object() { @Subscribe public void onEvent(IsolationServerEvent isolationServerEvent) { //Get information from isolationServerEvent } }; EventManager.getEventBus().register(receiveEvent); \u4e24\u4e2a\u4e8b\u4ef6\u5747\u76d1\u542c Object receiveEvent = new Object() { @Subscribe public void onEvent(AlarmEvent alarmEvent) { //Get information from alarmEvent } }; EventManager.getEventBus().register(receiveEvent);","title":"\u83b7\u53d6\u7194\u65ad\u4e0e\u5b9e\u4f8b\u9694\u79bb\u544a\u8b66\u4e8b\u4ef6"},{"location":"general-development/AlarmEvent/#_1","text":"","title":"\u83b7\u53d6\u7194\u65ad\u4e0e\u5b9e\u4f8b\u9694\u79bb\u544a\u8b66\u4e8b\u4ef6"},{"location":"general-development/AlarmEvent/#_2","text":"\u5728\u5fae\u670d\u52a1\u8fd0\u884c\u671f\u95f4\u7194\u65ad\u6216\u5b9e\u4f8b\u9694\u79bb\u72b6\u6001\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u9700\u8981\u76d1\u542c\u5230\u76f8\u5173\u4e8b\u4ef6\uff0c\u83b7\u53d6\u76f8\u5173\u4fe1\u606f\u5e76\u8fdb\u884c\u5904\u7406","title":"\u573a\u666f\u63cf\u8ff0"},{"location":"general-development/AlarmEvent/#_3","text":"\u76d1\u542c\u7194\u65ad\u4e8b\u4ef6 Object receiveEvent = new Object() { @Subscribe public void onEvent(CircutBreakerEvent circutBreakerEvent) { //Get information from circutBreakerEvent } }; EventManager.getEventBus().register(receiveEvent); \u76d1\u542c\u5b9e\u4f8b\u9694\u79bb\u4e8b\u4ef6 Object receiveEvent = new Object() { @Subscribe public void onEvent(IsolationServerEvent isolationServerEvent) { //Get information from isolationServerEvent } }; EventManager.getEventBus().register(receiveEvent); \u4e24\u4e2a\u4e8b\u4ef6\u5747\u76d1\u542c Object receiveEvent = new Object() { @Subscribe public void onEvent(AlarmEvent alarmEvent) { //Get information from alarmEvent } }; EventManager.getEventBus().register(receiveEvent);","title":"\u4f7f\u7528\u53c2\u8003"},{"location":"general-development/CORS/","text":"CORS\u673a\u5236 \u6982\u5ff5\u9610\u8ff0 \u8de8\u57df\u8d44\u6e90\u5171\u4eab(CORS, Cross-Origin Resource Sharing)\u5141\u8bb8Web\u670d\u52a1\u5668\u8fdb\u884c\u8de8\u57df\u8bbf\u95ee\u63a7\u5236\uff0c\u4f7f\u6d4f\u89c8\u5668\u53ef\u4ee5\u66f4\u5b89\u5168\u5730\u8fdb\u884c\u8de8\u57df\u6570\u636e\u4f20\u8f93\u3002 \u573a\u666f\u63cf\u8ff0 \u5f53\u7528\u6237\u9700\u8981\u4ece\u6d4f\u89c8\u5668\u4e0a\u8de8\u57df\u53d1\u9001REST\u8bf7\u6c42\u65f6\u5c31\u6709\u53ef\u80fd\u8981\u7528\u5230CORS\u673a\u5236\uff0c\u63a5\u6536\u8de8\u57df\u8bf7\u6c42\u7684\u5fae\u670d\u52a1\u9700\u8981\u5f00\u542fCORS\u652f\u6301\u3002 \u914d\u7f6e\u8bf4\u660e CORS\u529f\u80fd\u5728microservice.yaml\u6587\u4ef6\u4e2d\u914d\u7f6e\uff0c\u914d\u7f6e\u9879\u89c1\u4e0b\u8868\u6240\u8ff0\u3002 \u914d\u7f6e\u9879 \u9ed8\u8ba4\u503c \u53d6\u503c\u8303\u56f4 \u662f\u5426\u5fc5\u9009 \u542b\u4e49 \u6ce8\u610f servicecomb.cors.enabled false true / false \u5426 \u662f\u5426\u5f00\u542fCORS\u529f\u80fd - servicecomb.cors.origin * - \u5426 Access-Control-Allow-Origin - servicecomb.cors.allowCredentials false true / false \u5426 Access-Control-Allow-Credentials \u6839\u636eCORS\u6807\u51c6\uff0c\u5f53Access-Control-Allow-Credentials\u8bbe\u7f6e\u4e3a true \u65f6\uff0cAccess-Control-Allow-Origin\u4e0d\u53ef\u8bbe\u7f6e\u4e3a\"*\"\uff0c\u5426\u5219\u5c06\u4f1a\u629b\u51fa\u5f02\u5e38 servicecomb.cors.allowedHeader \u65e0 - \u5426 Access-Control-Allow-Headers \u591a\u4e2a\u503c\u4f7f\u7528\u9017\u53f7\u5206\u9694 servicecomb.cors.allowedMethod \u65e0 - \u5426 Access-Control-Allow-Methods \u591a\u4e2a\u503c\u4f7f\u7528\u9017\u53f7\u5206\u9694 servicecomb.cors.exposedHeader \u65e0 - \u5426 Access-Control-Expose-Headers \u591a\u4e2a\u503c\u4f7f\u7528\u9017\u53f7\u5206\u9694 servicecomb.cors.maxAge \u65e0 (0,2147483647]\uff0c\u6574\u578b \u5426 Access-Control-Max-Age \u5355\u4f4d\u662f\u79d2\uff0c\u5982\u679c\u7528\u6237\u4e0d\u914d\u7f6e\u6b64\u9879\uff0c\u5219CORS\u5e94\u7b54\u4e2d\u6ca1\u6709Access-Control-Max-Age \u793a\u4f8b\u4ee3\u7801 servicecomb: cors: enabled: true origin: * allowCredentials: false allowedMethod: PUT,DELETE maxAge: 3600","title":"CORS\u673a\u5236"},{"location":"general-development/CORS/#cors","text":"","title":"CORS\u673a\u5236"},{"location":"general-development/CORS/#_1","text":"\u8de8\u57df\u8d44\u6e90\u5171\u4eab(CORS, Cross-Origin Resource Sharing)\u5141\u8bb8Web\u670d\u52a1\u5668\u8fdb\u884c\u8de8\u57df\u8bbf\u95ee\u63a7\u5236\uff0c\u4f7f\u6d4f\u89c8\u5668\u53ef\u4ee5\u66f4\u5b89\u5168\u5730\u8fdb\u884c\u8de8\u57df\u6570\u636e\u4f20\u8f93\u3002","title":"\u6982\u5ff5\u9610\u8ff0"},{"location":"general-development/CORS/#_2","text":"\u5f53\u7528\u6237\u9700\u8981\u4ece\u6d4f\u89c8\u5668\u4e0a\u8de8\u57df\u53d1\u9001REST\u8bf7\u6c42\u65f6\u5c31\u6709\u53ef\u80fd\u8981\u7528\u5230CORS\u673a\u5236\uff0c\u63a5\u6536\u8de8\u57df\u8bf7\u6c42\u7684\u5fae\u670d\u52a1\u9700\u8981\u5f00\u542fCORS\u652f\u6301\u3002","title":"\u573a\u666f\u63cf\u8ff0"},{"location":"general-development/CORS/#_3","text":"CORS\u529f\u80fd\u5728microservice.yaml\u6587\u4ef6\u4e2d\u914d\u7f6e\uff0c\u914d\u7f6e\u9879\u89c1\u4e0b\u8868\u6240\u8ff0\u3002 \u914d\u7f6e\u9879 \u9ed8\u8ba4\u503c \u53d6\u503c\u8303\u56f4 \u662f\u5426\u5fc5\u9009 \u542b\u4e49 \u6ce8\u610f servicecomb.cors.enabled false true / false \u5426 \u662f\u5426\u5f00\u542fCORS\u529f\u80fd - servicecomb.cors.origin * - \u5426 Access-Control-Allow-Origin - servicecomb.cors.allowCredentials false true / false \u5426 Access-Control-Allow-Credentials \u6839\u636eCORS\u6807\u51c6\uff0c\u5f53Access-Control-Allow-Credentials\u8bbe\u7f6e\u4e3a true \u65f6\uff0cAccess-Control-Allow-Origin\u4e0d\u53ef\u8bbe\u7f6e\u4e3a\"*\"\uff0c\u5426\u5219\u5c06\u4f1a\u629b\u51fa\u5f02\u5e38 servicecomb.cors.allowedHeader \u65e0 - \u5426 Access-Control-Allow-Headers \u591a\u4e2a\u503c\u4f7f\u7528\u9017\u53f7\u5206\u9694 servicecomb.cors.allowedMethod \u65e0 - \u5426 Access-Control-Allow-Methods \u591a\u4e2a\u503c\u4f7f\u7528\u9017\u53f7\u5206\u9694 servicecomb.cors.exposedHeader \u65e0 - \u5426 Access-Control-Expose-Headers \u591a\u4e2a\u503c\u4f7f\u7528\u9017\u53f7\u5206\u9694 servicecomb.cors.maxAge \u65e0 (0,2147483647]\uff0c\u6574\u578b \u5426 Access-Control-Max-Age \u5355\u4f4d\u662f\u79d2\uff0c\u5982\u679c\u7528\u6237\u4e0d\u914d\u7f6e\u6b64\u9879\uff0c\u5219CORS\u5e94\u7b54\u4e2d\u6ca1\u6709Access-Control-Max-Age","title":"\u914d\u7f6e\u8bf4\u660e"},{"location":"general-development/CORS/#_4","text":"servicecomb: cors: enabled: true origin: * allowCredentials: false allowedMethod: PUT,DELETE maxAge: 3600","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"general-development/QPS/","text":"","title":"QPS"},{"location":"general-development/catalog/","text":"\u901a\u7528\u529f\u80fd\u5f00\u53d1 \u8bbf\u95ee\u670d\u52a1\u4e2d\u5fc3 \u5e94\u7528\u6027\u80fd\u76d1\u63a7 \u5fae\u670d\u52a1\u8c03\u7528\u94fe \u81ea\u5b9a\u4e49\u8c03\u7528\u94fe\u6253\u70b9 \u672c\u5730\u5f00\u53d1\u548c\u6d4b\u8bd5 Http Filter \u6587\u4ef6\u4e0a\u4f20\u4e0b\u8f7d Reactive DNS\u81ea\u5b9a\u4e49\u914d\u7f6e \u4ee3\u7406\u8bbe\u7f6e \u6846\u67b6\u4e0a\u62a5\u7248\u672c\u53f7 \u8de8\u5e94\u7528\u8c03\u7528 \u5b9a\u5236\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u65b9\u6cd5 \u4f7f\u7528Context\u4f20\u9012\u63a7\u5236\u6d88\u606f \u8fd4\u56de\u503c\u5e8f\u5217\u5316\u6269\u5c55 CORS\u673a\u5236 \u83b7\u53d6\u7194\u65ad\u4e0e\u5b9e\u4f8b\u9694\u79bb\u544a\u8b66\u4e8b\u4ef6\u4fe1\u606f \u4f18\u96c5\u505c\u673a \u5f02\u5e38\u5904\u7406 \u5fae\u670d\u52a1\u5b9e\u4f8b\u95f4\u591a\u73af\u5883\u9694\u79bb \u7ebf\u7a0b\u6a21\u578b","title":"\u901a\u7528\u529f\u80fd\u5f00\u53d1"},{"location":"general-development/catalog/#_1","text":"\u8bbf\u95ee\u670d\u52a1\u4e2d\u5fc3 \u5e94\u7528\u6027\u80fd\u76d1\u63a7 \u5fae\u670d\u52a1\u8c03\u7528\u94fe \u81ea\u5b9a\u4e49\u8c03\u7528\u94fe\u6253\u70b9 \u672c\u5730\u5f00\u53d1\u548c\u6d4b\u8bd5 Http Filter \u6587\u4ef6\u4e0a\u4f20\u4e0b\u8f7d Reactive DNS\u81ea\u5b9a\u4e49\u914d\u7f6e \u4ee3\u7406\u8bbe\u7f6e \u6846\u67b6\u4e0a\u62a5\u7248\u672c\u53f7 \u8de8\u5e94\u7528\u8c03\u7528 \u5b9a\u5236\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u65b9\u6cd5 \u4f7f\u7528Context\u4f20\u9012\u63a7\u5236\u6d88\u606f \u8fd4\u56de\u503c\u5e8f\u5217\u5316\u6269\u5c55 CORS\u673a\u5236 \u83b7\u53d6\u7194\u65ad\u4e0e\u5b9e\u4f8b\u9694\u79bb\u544a\u8b66\u4e8b\u4ef6\u4fe1\u606f \u4f18\u96c5\u505c\u673a \u5f02\u5e38\u5904\u7406 \u5fae\u670d\u52a1\u5b9e\u4f8b\u95f4\u591a\u73af\u5883\u9694\u79bb \u7ebf\u7a0b\u6a21\u578b","title":"\u901a\u7528\u529f\u80fd\u5f00\u53d1"},{"location":"general-development/context/","text":"\u4f7f\u7528Context\u4f20\u9012\u63a7\u5236\u6d88\u606f Context \u7528\u4e8e\u5728\u5fae\u670d\u52a1\u4e4b\u95f4\u548c\u5fae\u670d\u52a1\u5185\u90e8\u4f20\u9012\u4e0a\u4e0b\u6587\u6570\u636e\u3002 Context \u662f key/value \u5bf9\uff0c\u53ea\u80fd\u591f\u4f7f\u7528 String \u7c7b\u578b\u3002 Context \u4f1a\u5e8f\u5217\u5316\u4e3a json \u683c\u5f0f\u5e76\u901a\u8fc7 HTTP Header \u4f20\u9012\uff0c\u56e0\u6b64\u4e5f\u4e0d\u652f\u6301 ASCII \u4e4b\u5916\u7684\u5b57\u7b26\uff0c\u5176\u4ed6\u5b57\u7b26\u9700\u8981\u5f00\u53d1\u8005\u5148\u81ea\u884c\u7f16\u7801\u518d\u4f20\u9012\u3002 Context \u5728\u4e00\u6b21\u8bf7\u6c42\u4e2d\uff0c\u4f1a\u5728\u8bf7\u6c42\u94fe\u4e0a\u4f20\u9012\uff0c\u4e0d\u9700\u8981\u91cd\u65b0\u8bbe\u7f6e\u3002 access log \u7684 trace id \u7b49 \u529f\u80fd\u90fd\u57fa\u4e8e\u8fd9\u4e2a\u7279\u6027\u5b9e\u73b0\u7684\u3002 Context \u4fdd\u5b58\u7684\u5185\u5bb9\u5206\u4e3a context \u548c localContext\u3002 localContext \u5728\u8c03\u7528\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u5728\u8fdb\u7a0b\u5185\u90e8\u4f20\u9012\uff0c \u800c context \u7684\u5185\u5bb9\u4f1a\u4f20\u9012\u5230\u8c03\u7528\u8fc7\u7a0b\u4e2d \u8fdc\u7aef\u670d\u52a1\u3002 \u8fd9\u79cd\u4f20\u9012\u662f\u5355\u5411\u7684\u3002\u6bd4\u5982\u5728\u4e00\u4e2a Provider \u5185\u90e8\uff0c \u8c03\u7528\u63a5\u53e3\uff0c \u90a3\u4e48 localContext \u7684\u5185\u5bb9\u4f1a\u590d\u5236\u7ed9\u8c03\u7528\u63a5\u53e3\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u7684 localContext\uff0c \u5982\u679c\u8fd9\u4e2a\u63a5\u53e3\u5728\u8c03\u7528\u8fc7\u7a0b\u4e2d\u4fee\u6539\u4e86 localContext\uff0c \u63a5\u53e3\u8fd4\u56de\u540e\uff0c Provider \u540e\u7eed\u7684\u903b\u8f91\u5904\u7406\u770b\u4e0d\u5230\u5bf9\u4e8e context \u7684\u4fee\u6539\u3002 \u5728 Handler \u6216\u8005 Filter \u4e2d\u8c03\u7528\u5176\u4ed6\u5fae\u670d\u52a1\uff0c context \u4fe1\u606f\u9ed8\u8ba4\u4e0d\u4f1a\u590d\u5236\uff0c\u9700\u8981\u5f00\u53d1\u8005\u663e\u793a\u7684\u5c06 context \u4fe1\u606f\u4f20\u9012\u8fc7\u53bb\u3002 \u4f7f\u7528 RestTemplate \u6216\u8005 RPC \u65b9\u5f0f\u4f20\u9012 context \u7684\u4f8b\u5b50\uff0c\u8bf7\u53c2\u8003\u672c\u6587\u540e\u9762\u7684\u6848\u4f8b\u3002 \u4f7f\u7528 Context \u7684\u573a\u666f \u5728\u8ba4\u8bc1\u573a\u666f\uff0cEdge Service \u8ba4\u8bc1\u901a\u8fc7\u4ee5\u540e\uff0c\u9700\u8981\u5c06\u4f1a\u8bdd ID\u3001\u7528\u6237\u540d\u79f0\u7b49\u4fe1\u606f\u4f20\u9012\u7ed9\u5fae\u670d\u52a1\uff0c\u5b9e\u73b0\u9274\u6743\u7b49\u903b\u8f91\u3002 \u7070\u5ea6\u53d1\u5e03\u573a\u666f\uff0c\u9700\u8981\u7ed3\u5408\u81ea\u5b9a\u4e49\u7684 tag \u5b9e\u73b0\u5f15\u6d41\uff0ctag \u4fe1\u606f\u9700\u8981\u4f20\u9012\u7ed9\u5fae\u670d\u52a1\u3002 \u5f00\u53d1 Handler \u5904\u7406\u94fe\u7684\u65f6\u5019\uff0c\u4e00\u4e2a Handler \u9700\u8981\u5c06\u8ba1\u7b97\u7ed3\u679c\u4f20\u9012\u7ed9\u4e0b\u4e00\u4e2a Handler\u3002 \u4f7f\u7528\u53c2\u8003 \u5728 Hanlder \u4e2d\u83b7\u53d6\u548c\u8bbe\u7f6eContext Handler \u5305\u542b\u4e86 Invocation \u5bf9\u8c61\uff0c\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528 invocation.addContext \u548c invocation.getContext \u3002 \u5728\u670d\u52a1\u63a5\u53e3\u4e2d\u83b7\u53d6Context \u901a\u8fc7\u63a5\u53e3\u6ce8\u5165 ``` public Response cseResponse(InvocationContext c1) ``` \u6216\u8005 ``` ContextUtils.getInvocationContext() ``` \u5728Edge Service\u4e2d\u8bbe\u7f6eContext \u901a\u8fc7\u91cd\u8f7dEdgeInvocation ``` EdgeInvocation edgeInvocation = new EdgeInvocation() { protected void createInvocation() { super.createInvocation(); this.invocation.addContext(\"hello\", \"world\"); } }; ``` \u6848\u4f8b\uff1a \u4f7f\u7528 Context \u548c DiscoveryTree \u5b9e\u73b0\u8f6e\u8be2\u8c03\u7528\u4e00\u4e2a\u5fae\u670d\u52a1\u7684\u6240\u6709\u5b9e\u4f8b \u901a\u5e38\u5fae\u670d\u52a1\u7684\u8c03\u7528\uff0c\u662f\u5c06\u8bf7\u6c42\u53d1\u9001\u5230\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u8fd9\u4e2a\u5b9e\u4f8b\u662f\u6839\u636e\u8d1f\u8f7d\u5747\u8861\u7b56\u7565\u51b3\u5b9a\u7684\uff0c\u4e1a\u52a1\u5f00\u53d1\u4e0d\u53ef\u63a7\u5236\u3002\u4e3a\u4e86\u5b9e\u73b0\u8f6e\u8be2\u8c03\u7528\u4e00\u4e2a\u5fae\u670d\u52a1\u7684\u6240\u6709\u5b9e\u4f8b\uff0c \u9996\u5148\u9700\u8981\u83b7\u53d6\u4e00\u4e2a\u5fae\u670d\u52a1\u7684\u6240\u6709\u5b9e\u4f8b\u5217\u8868\uff0c\u7136\u540e\u9010\u4e2a\u8c03\u7528\u3002 LoadBalance \u6a21\u5757\u652f\u6301\u901a\u8fc7 Context \u4f20\u9012 Endpoint \u4fe1\u606f\uff0c \u5982\u679c Endpoint \u5df2\u7ecf \u8bbe\u7f6e\uff0c \u53ef\u4ee5\u8df3\u8fc7\u8d1f\u8f7d\u5747\u8861\u5224\u65ad\uff0c \u4f7f\u7528\u7528\u6237\u81ea\u5df1\u6307\u5b9a\u7684 Endpoint\u3002 \u4f7f\u7528 DiscoveryTree \u83b7\u53d6\u5fae\u670d\u52a1\u5b9e\u4f8b\u5217\u8868 ```java public class TestDateTimeSchema { private DiscoveryTree discoveryTree = new DiscoveryTree(); public TestDateTimeSchema() { discoveryTree.addFilter(new CustomEndpointDiscoveryFilter()); discoveryTree.sort(); } private void testDateTimeSchemaMulticast() throws Exception { DiscoveryContext context = new DiscoveryContext(); VersionedCache serversVersionedCache = discoveryTree.discovery(context, \"springmvctest\", \"springmvc\", \"0+\"); List String enpoints = serversVersionedCache.data(); // \u83b7\u53d6\u5230\u5b9e\u4f8b\u5217\u8868\uff0c\u53ef\u4ee5\u7ed9\u4e0b\u9762\u7684\u5904\u7406\u6d41\u7a0b\u4f7f\u7528 } } public class CustomEndpointDiscoveryFilter extends AbstractEndpointDiscoveryFilter { @Override protected String findTransportName(DiscoveryContext context, DiscoveryTreeNode parent) { //only need rest endpoints return \"rest\"; } @Override protected Object createEndpoint(String transportName, String endpoint, MicroserviceInstance instance) { return endpoint; } @Override public int getOrder() { return 0; } } ``` \u4e0a\u9762\u7684\u4ee3\u7801\u901a\u8fc7 DiscoveryTree \u53d1\u73b0\u5b9e\u4f8b\u5217\u8868\uff0c \u5e76\u4e14\u5b9e\u73b0\u4e86 CustomEndpointDiscoveryFilter \uff0c \u5c06\u53d1\u73b0\u7684\u5b9e\u4f8b\u4fe1\u606f\u8f6c\u6362\u4e3a cache \u7684\u8fd4\u56de \u7c7b\u578b\uff0c \u5373 String\u3002 \u901a\u8fc7 InvocationContext \u4f20\u9012 Endpoint \u4fe1\u606f\u7ed9 Load Balance, \u6bcf\u6b21\u8c03\u7528\u8bbf\u95ee\u7528\u6237\u6307\u5b9a\u7684 Endpoint\u3002 \u8bbf\u95ee InvocationContext \u5206\u51e0\u79cd\u573a\u666f\uff0c \u53c2\u8003\u6587\u7ae0\u4e0a\u9762\u63d0\u5230\u7684\u60c5\u51b5\u3002 \u5728 Consumer \u8c03\u7528\u7684\u573a\u666f\u4e0b\uff0c \u53ef\u80fd\u4e0d\u5728\u4e00\u4e2a Provider \u7684\u5904\u7406\u4e0a\u4e0b\u6587\u4e2d\uff0c \u8fd9\u4e2a\u65f6\u5019\u7cfb\u7edf\u4e2d\u8fd8\u6ca1\u6709 InvocationContext \u5b9e\u4f8b\uff0c \u8fd9\u4e2a\u65f6\u5019\u53ef\u4ee5\u65b0\u521b\u5efa\u4e00\u4e2a\u5b9e\u4f8b\uff0c \u65b0\u521b\u5efa\u7684\u5b9e\u4f8b\u4fe1\u606f\u4f1a\u590d\u5236\u5230\u7cfb\u7edf\u5185\u90e8\u3002 \u4f7f\u7528 RPC Consumer \u4f20\u9012 InvocationContext \u7684\u4f8b\u5b50\uff1a ```java interface DateTimeSchemaWithContextInf { Date getDate(InvocationContext context, Date date); } @RpcReference(microserviceName = \"springmvc\", schemaId = \"DateTimeSchema\") private DateTimeSchemaWithContextInf dateTimeSchemaWithContextInf; // code slip for (String endpoint : enpoints) { InvocationContext invocationContext = new InvocationContext(); invocationContext.addLocalContext(LoadbalanceHandler.SERVICECOMB_SERVER_ENDPOINT, parseEndpoint(endpoint)); Date date = new Date(); TestMgr.check(date.getTime(), dateTimeSchemaWithContextInf.getDate(invocationContext, date).getTime()); } // code slip private Endpoint parseEndpoint(String endpointUri) throws Exception { URI formatUri = new URI(endpointUri); Transport transport = SCBEngine.getInstance().getTransportManager().findTransport(formatUri.getScheme()); return new Endpoint(transport, endpointUri); } ``` \u4f7f\u7528 RestTemplate \u4f20\u9012 InvocationContext \u7684\u4f8b\u5b50\uff1a ``` for (String endpoint : enpoints) { CseHttpEntity ? entity = new CseHttpEntity (null); InvocationContext invocationContext = new InvocationContext(); invocationContext.addLocalContext(LoadbalanceHandler.SERVICECOMB_SERVER_ENDPOINT, parseEndpoint(endpoint)); entity.setContext(invocationContext); Date date = new Date(); String dateValue = RestObjectMapperFactory.getRestObjectMapper().convertToString(date); TestMgr.check(date.getTime(), restTemplate .exchange(\"cse://springmvc/dateTime/getDate?date={1}\", HttpMethod.GET, entity, Date.class, dateValue).getBody().getTime()); \uff5d ``` \u6ce8\u610f\uff1a 2.0.2 \u7248\u672c\u5f00\u59cb\uff0c LoadbalanceHandler.SERVICECOMB_SERVER_ENDPOINT \u4f20\u9012\u7684\u7c7b\u578b\u662f Endpoint, \u65e9\u671f\u7248\u672c\u53ef\u4ee5\u76f4\u63a5\u4f20\u9012 String \u7c7b\u578b\uff0c LoadBalance \u6a21\u5757\u4f1a\u5c06 String \u7c7b\u578b\u8f6c\u6362\u4e3a Endpoint\u3002 \u5728\u6709\u5927\u91cf Endpoint \u7684\u60c5\u51b5\uff0c \u63d0\u524d\u4f7f\u7528 Endpoint \u7c7b\u578b\u80fd\u591f\u51cf\u5c11\u7c7b\u578b\u8f6c\u6362\uff0c\u8282\u7701\u5904\u7406\u65f6\u95f4\u3002","title":"\u4f7f\u7528Context\u4f20\u9012\u63a7\u5236\u6d88\u606f"},{"location":"general-development/context/#context","text":"Context \u7528\u4e8e\u5728\u5fae\u670d\u52a1\u4e4b\u95f4\u548c\u5fae\u670d\u52a1\u5185\u90e8\u4f20\u9012\u4e0a\u4e0b\u6587\u6570\u636e\u3002 Context \u662f key/value \u5bf9\uff0c\u53ea\u80fd\u591f\u4f7f\u7528 String \u7c7b\u578b\u3002 Context \u4f1a\u5e8f\u5217\u5316\u4e3a json \u683c\u5f0f\u5e76\u901a\u8fc7 HTTP Header \u4f20\u9012\uff0c\u56e0\u6b64\u4e5f\u4e0d\u652f\u6301 ASCII \u4e4b\u5916\u7684\u5b57\u7b26\uff0c\u5176\u4ed6\u5b57\u7b26\u9700\u8981\u5f00\u53d1\u8005\u5148\u81ea\u884c\u7f16\u7801\u518d\u4f20\u9012\u3002 Context \u5728\u4e00\u6b21\u8bf7\u6c42\u4e2d\uff0c\u4f1a\u5728\u8bf7\u6c42\u94fe\u4e0a\u4f20\u9012\uff0c\u4e0d\u9700\u8981\u91cd\u65b0\u8bbe\u7f6e\u3002 access log \u7684 trace id \u7b49 \u529f\u80fd\u90fd\u57fa\u4e8e\u8fd9\u4e2a\u7279\u6027\u5b9e\u73b0\u7684\u3002 Context \u4fdd\u5b58\u7684\u5185\u5bb9\u5206\u4e3a context \u548c localContext\u3002 localContext \u5728\u8c03\u7528\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u5728\u8fdb\u7a0b\u5185\u90e8\u4f20\u9012\uff0c \u800c context \u7684\u5185\u5bb9\u4f1a\u4f20\u9012\u5230\u8c03\u7528\u8fc7\u7a0b\u4e2d \u8fdc\u7aef\u670d\u52a1\u3002 \u8fd9\u79cd\u4f20\u9012\u662f\u5355\u5411\u7684\u3002\u6bd4\u5982\u5728\u4e00\u4e2a Provider \u5185\u90e8\uff0c \u8c03\u7528\u63a5\u53e3\uff0c \u90a3\u4e48 localContext \u7684\u5185\u5bb9\u4f1a\u590d\u5236\u7ed9\u8c03\u7528\u63a5\u53e3\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u7684 localContext\uff0c \u5982\u679c\u8fd9\u4e2a\u63a5\u53e3\u5728\u8c03\u7528\u8fc7\u7a0b\u4e2d\u4fee\u6539\u4e86 localContext\uff0c \u63a5\u53e3\u8fd4\u56de\u540e\uff0c Provider \u540e\u7eed\u7684\u903b\u8f91\u5904\u7406\u770b\u4e0d\u5230\u5bf9\u4e8e context \u7684\u4fee\u6539\u3002 \u5728 Handler \u6216\u8005 Filter \u4e2d\u8c03\u7528\u5176\u4ed6\u5fae\u670d\u52a1\uff0c context \u4fe1\u606f\u9ed8\u8ba4\u4e0d\u4f1a\u590d\u5236\uff0c\u9700\u8981\u5f00\u53d1\u8005\u663e\u793a\u7684\u5c06 context \u4fe1\u606f\u4f20\u9012\u8fc7\u53bb\u3002 \u4f7f\u7528 RestTemplate \u6216\u8005 RPC \u65b9\u5f0f\u4f20\u9012 context \u7684\u4f8b\u5b50\uff0c\u8bf7\u53c2\u8003\u672c\u6587\u540e\u9762\u7684\u6848\u4f8b\u3002","title":"\u4f7f\u7528Context\u4f20\u9012\u63a7\u5236\u6d88\u606f"},{"location":"general-development/context/#context_1","text":"\u5728\u8ba4\u8bc1\u573a\u666f\uff0cEdge Service \u8ba4\u8bc1\u901a\u8fc7\u4ee5\u540e\uff0c\u9700\u8981\u5c06\u4f1a\u8bdd ID\u3001\u7528\u6237\u540d\u79f0\u7b49\u4fe1\u606f\u4f20\u9012\u7ed9\u5fae\u670d\u52a1\uff0c\u5b9e\u73b0\u9274\u6743\u7b49\u903b\u8f91\u3002 \u7070\u5ea6\u53d1\u5e03\u573a\u666f\uff0c\u9700\u8981\u7ed3\u5408\u81ea\u5b9a\u4e49\u7684 tag \u5b9e\u73b0\u5f15\u6d41\uff0ctag \u4fe1\u606f\u9700\u8981\u4f20\u9012\u7ed9\u5fae\u670d\u52a1\u3002 \u5f00\u53d1 Handler \u5904\u7406\u94fe\u7684\u65f6\u5019\uff0c\u4e00\u4e2a Handler \u9700\u8981\u5c06\u8ba1\u7b97\u7ed3\u679c\u4f20\u9012\u7ed9\u4e0b\u4e00\u4e2a Handler\u3002","title":"\u4f7f\u7528 Context \u7684\u573a\u666f"},{"location":"general-development/context/#_1","text":"\u5728 Hanlder \u4e2d\u83b7\u53d6\u548c\u8bbe\u7f6eContext Handler \u5305\u542b\u4e86 Invocation \u5bf9\u8c61\uff0c\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528 invocation.addContext \u548c invocation.getContext \u3002 \u5728\u670d\u52a1\u63a5\u53e3\u4e2d\u83b7\u53d6Context \u901a\u8fc7\u63a5\u53e3\u6ce8\u5165 ``` public Response cseResponse(InvocationContext c1) ``` \u6216\u8005 ``` ContextUtils.getInvocationContext() ``` \u5728Edge Service\u4e2d\u8bbe\u7f6eContext \u901a\u8fc7\u91cd\u8f7dEdgeInvocation ``` EdgeInvocation edgeInvocation = new EdgeInvocation() { protected void createInvocation() { super.createInvocation(); this.invocation.addContext(\"hello\", \"world\"); } }; ```","title":"\u4f7f\u7528\u53c2\u8003"},{"location":"general-development/context/#context-discoverytree","text":"\u901a\u5e38\u5fae\u670d\u52a1\u7684\u8c03\u7528\uff0c\u662f\u5c06\u8bf7\u6c42\u53d1\u9001\u5230\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u8fd9\u4e2a\u5b9e\u4f8b\u662f\u6839\u636e\u8d1f\u8f7d\u5747\u8861\u7b56\u7565\u51b3\u5b9a\u7684\uff0c\u4e1a\u52a1\u5f00\u53d1\u4e0d\u53ef\u63a7\u5236\u3002\u4e3a\u4e86\u5b9e\u73b0\u8f6e\u8be2\u8c03\u7528\u4e00\u4e2a\u5fae\u670d\u52a1\u7684\u6240\u6709\u5b9e\u4f8b\uff0c \u9996\u5148\u9700\u8981\u83b7\u53d6\u4e00\u4e2a\u5fae\u670d\u52a1\u7684\u6240\u6709\u5b9e\u4f8b\u5217\u8868\uff0c\u7136\u540e\u9010\u4e2a\u8c03\u7528\u3002 LoadBalance \u6a21\u5757\u652f\u6301\u901a\u8fc7 Context \u4f20\u9012 Endpoint \u4fe1\u606f\uff0c \u5982\u679c Endpoint \u5df2\u7ecf \u8bbe\u7f6e\uff0c \u53ef\u4ee5\u8df3\u8fc7\u8d1f\u8f7d\u5747\u8861\u5224\u65ad\uff0c \u4f7f\u7528\u7528\u6237\u81ea\u5df1\u6307\u5b9a\u7684 Endpoint\u3002 \u4f7f\u7528 DiscoveryTree \u83b7\u53d6\u5fae\u670d\u52a1\u5b9e\u4f8b\u5217\u8868 ```java public class TestDateTimeSchema { private DiscoveryTree discoveryTree = new DiscoveryTree(); public TestDateTimeSchema() { discoveryTree.addFilter(new CustomEndpointDiscoveryFilter()); discoveryTree.sort(); } private void testDateTimeSchemaMulticast() throws Exception { DiscoveryContext context = new DiscoveryContext(); VersionedCache serversVersionedCache = discoveryTree.discovery(context, \"springmvctest\", \"springmvc\", \"0+\"); List String enpoints = serversVersionedCache.data(); // \u83b7\u53d6\u5230\u5b9e\u4f8b\u5217\u8868\uff0c\u53ef\u4ee5\u7ed9\u4e0b\u9762\u7684\u5904\u7406\u6d41\u7a0b\u4f7f\u7528 } } public class CustomEndpointDiscoveryFilter extends AbstractEndpointDiscoveryFilter { @Override protected String findTransportName(DiscoveryContext context, DiscoveryTreeNode parent) { //only need rest endpoints return \"rest\"; } @Override protected Object createEndpoint(String transportName, String endpoint, MicroserviceInstance instance) { return endpoint; } @Override public int getOrder() { return 0; } } ``` \u4e0a\u9762\u7684\u4ee3\u7801\u901a\u8fc7 DiscoveryTree \u53d1\u73b0\u5b9e\u4f8b\u5217\u8868\uff0c \u5e76\u4e14\u5b9e\u73b0\u4e86 CustomEndpointDiscoveryFilter \uff0c \u5c06\u53d1\u73b0\u7684\u5b9e\u4f8b\u4fe1\u606f\u8f6c\u6362\u4e3a cache \u7684\u8fd4\u56de \u7c7b\u578b\uff0c \u5373 String\u3002 \u901a\u8fc7 InvocationContext \u4f20\u9012 Endpoint \u4fe1\u606f\u7ed9 Load Balance, \u6bcf\u6b21\u8c03\u7528\u8bbf\u95ee\u7528\u6237\u6307\u5b9a\u7684 Endpoint\u3002 \u8bbf\u95ee InvocationContext \u5206\u51e0\u79cd\u573a\u666f\uff0c \u53c2\u8003\u6587\u7ae0\u4e0a\u9762\u63d0\u5230\u7684\u60c5\u51b5\u3002 \u5728 Consumer \u8c03\u7528\u7684\u573a\u666f\u4e0b\uff0c \u53ef\u80fd\u4e0d\u5728\u4e00\u4e2a Provider \u7684\u5904\u7406\u4e0a\u4e0b\u6587\u4e2d\uff0c \u8fd9\u4e2a\u65f6\u5019\u7cfb\u7edf\u4e2d\u8fd8\u6ca1\u6709 InvocationContext \u5b9e\u4f8b\uff0c \u8fd9\u4e2a\u65f6\u5019\u53ef\u4ee5\u65b0\u521b\u5efa\u4e00\u4e2a\u5b9e\u4f8b\uff0c \u65b0\u521b\u5efa\u7684\u5b9e\u4f8b\u4fe1\u606f\u4f1a\u590d\u5236\u5230\u7cfb\u7edf\u5185\u90e8\u3002 \u4f7f\u7528 RPC Consumer \u4f20\u9012 InvocationContext \u7684\u4f8b\u5b50\uff1a ```java interface DateTimeSchemaWithContextInf { Date getDate(InvocationContext context, Date date); } @RpcReference(microserviceName = \"springmvc\", schemaId = \"DateTimeSchema\") private DateTimeSchemaWithContextInf dateTimeSchemaWithContextInf; // code slip for (String endpoint : enpoints) { InvocationContext invocationContext = new InvocationContext(); invocationContext.addLocalContext(LoadbalanceHandler.SERVICECOMB_SERVER_ENDPOINT, parseEndpoint(endpoint)); Date date = new Date(); TestMgr.check(date.getTime(), dateTimeSchemaWithContextInf.getDate(invocationContext, date).getTime()); } // code slip private Endpoint parseEndpoint(String endpointUri) throws Exception { URI formatUri = new URI(endpointUri); Transport transport = SCBEngine.getInstance().getTransportManager().findTransport(formatUri.getScheme()); return new Endpoint(transport, endpointUri); } ``` \u4f7f\u7528 RestTemplate \u4f20\u9012 InvocationContext \u7684\u4f8b\u5b50\uff1a ``` for (String endpoint : enpoints) { CseHttpEntity ? entity = new CseHttpEntity (null); InvocationContext invocationContext = new InvocationContext(); invocationContext.addLocalContext(LoadbalanceHandler.SERVICECOMB_SERVER_ENDPOINT, parseEndpoint(endpoint)); entity.setContext(invocationContext); Date date = new Date(); String dateValue = RestObjectMapperFactory.getRestObjectMapper().convertToString(date); TestMgr.check(date.getTime(), restTemplate .exchange(\"cse://springmvc/dateTime/getDate?date={1}\", HttpMethod.GET, entity, Date.class, dateValue).getBody().getTime()); \uff5d ``` \u6ce8\u610f\uff1a 2.0.2 \u7248\u672c\u5f00\u59cb\uff0c LoadbalanceHandler.SERVICECOMB_SERVER_ENDPOINT \u4f20\u9012\u7684\u7c7b\u578b\u662f Endpoint, \u65e9\u671f\u7248\u672c\u53ef\u4ee5\u76f4\u63a5\u4f20\u9012 String \u7c7b\u578b\uff0c LoadBalance \u6a21\u5757\u4f1a\u5c06 String \u7c7b\u578b\u8f6c\u6362\u4e3a Endpoint\u3002 \u5728\u6709\u5927\u91cf Endpoint \u7684\u60c5\u51b5\uff0c \u63d0\u524d\u4f7f\u7528 Endpoint \u7c7b\u578b\u80fd\u591f\u51cf\u5c11\u7c7b\u578b\u8f6c\u6362\uff0c\u8282\u7701\u5904\u7406\u65f6\u95f4\u3002","title":"\u6848\u4f8b\uff1a \u4f7f\u7528 Context \u548c DiscoveryTree \u5b9e\u73b0\u8f6e\u8be2\u8c03\u7528\u4e00\u4e2a\u5fae\u670d\u52a1\u7684\u6240\u6709\u5b9e\u4f8b"},{"location":"general-development/cross-app-invocation/","text":"\u8de8\u5e94\u7528\u8c03\u7528 \u6982\u5ff5\u9610\u8ff0 \u5e94\u7528\u662f\u5fae\u670d\u52a1\u5b9e\u4f8b\u9694\u79bb\u5c42\u6b21\u4e2d\u7684\u4e00\u5c42\uff0c\u4e00\u4e2a\u5e94\u7528\u5305\u542b\u591a\u4e2a\u5fae\u670d\u52a1\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u53ea\u5141\u8bb8\u540c\u5e94\u7528\u7684\u5fae\u670d\u52a1\u5b9e\u4f8b\u76f8\u4e92\u8c03\u7528\u3002 \u573a\u666f\u63cf\u8ff0 \u5f53\u7528\u6237\u9700\u8981\u4e0d\u540c\u5e94\u7528\u95f4\u7684\u5fae\u670d\u52a1\u76f8\u4e92\u8c03\u7528\u65f6\uff0c\u5c31\u9700\u8981\u5f00\u542f\u8de8\u5e94\u7528\u8c03\u7528\u529f\u80fd\u3002 \u914d\u7f6e\u8bf4\u660e \u82e5\u8981\u5f00\u542f\u8de8\u5e94\u7528\u8c03\u7528\uff0c\u9996\u5148\u9700\u5728provider\u7aef\u7684microservice.yaml\u6587\u4ef6\u5f00\u542f\u8de8\u5e94\u7528\u8c03\u7528\u914d\u7f6e\u3002 \u6ce8\u610f\uff1a \u9700\u8981\u5347\u7ea7\u5fae\u670d\u52a1\u7248\u672c\u53f7\uff0c\u4ee5\u4fbf\u5728\u670d\u52a1\u4e2d\u5fc3\u91cd\u65b0\u6ce8\u518c\u5fae\u670d\u52a1\u4fe1\u606f \u5373\u4f7f\u662fdevelopment\u5f00\u53d1\u73af\u5883\uff0c\u4e5f\u9700\u8981\u5347\u7ea7\u5fae\u670d\u52a1\u7248\u672c\u53f7\uff0c\u56e0\u4e3adevelopment\u73af\u5883\u4e0b\uff0c\u4e5f\u53ea\u6709\u5951\u7ea6\u53d1\u751f\u53d8\u5316\uff0c\u624d\u4f1a\u91cd\u65b0\u6ce8\u518c\u5951\u7ea6 \u914d\u7f6e\u9879\u5982\u4e0b\uff1a service_description: # other configuration omitted properties: allowCrossApp: true # enable cross app invocation consumer\u7aef\u6307\u5b9a\u5fae\u670d\u52a1\u540d\u79f0\u8c03\u7528provider\u7684\u65f6\u5019\uff0c\u9700\u8981\u52a0\u4e0aprovider\u6240\u5c5e\u7684\u5e94\u7528ID\uff0c\u683c\u5f0f\u53d8\u4e3a [appID]:[microserviceName] \u3002 \u793a\u4f8b\u4ee3\u7801 \u793a\u4f8b\u5047\u8bbeprovider\u6240\u5c5e\u5e94\u7528\u4e3ahelloApp\uff0c\u5fae\u670d\u52a1\u540d\u79f0\u4e3ahelloProvider\uff1bconsumer\u6240\u5c5e\u5e94\u7528\u4e3ahelloApp2\uff0c\u5fae\u670d\u52a1\u540d\u79f0\u4e3ahelloConsumer\u3002 RestTemplate\u8c03\u7528\u65b9\u5f0f \u5f53consumer\u7aef\u4ee5RestTemplate\u65b9\u5f0f\u5f00\u53d1\u5fae\u670d\u52a1\u6d88\u8d39\u8005\u65f6\uff0c\u9700\u8981\u5728\u8c03\u7528\u7684URL\u4e2d\u5c06 [microserviceName] \u6539\u4e3a [appID]:[microserviceName] \uff0c\u4ee3\u7801\u793a\u4f8b\u5982\u4e0b\uff1a ```java RestTemplate restTemplate = RestTemplateBuilder.create(); ResponseEntity String responseEntity = restTemplate .getForEntity(\"cse://helloApp:helloProvider/hello/sayHello?name={name}\", String.class, \"ServiceComb\"); ``` RPC\u8c03\u7528\u65b9\u5f0f \u5f53consumer\u7aef\u4ee5RPC\u65b9\u5f0f\u5f00\u53d1\u5fae\u670d\u52a1\u6d88\u8d39\u8005\u65f6\uff0c\u58f0\u660e\u7684\u670d\u52a1\u63d0\u4f9b\u8005\u4ee3\u7406\u5982\u4e0b\uff1a java @RpcReference(schemaId = \"hello\", microserviceName = \"helloApp:helloProvider\") private Hello hello; \u8de8\u5e94\u7528\u8c03\u7528\u4e0e\u540c\u5e94\u7528\u4e0b\u8c03\u7528\u5fae\u670d\u52a1\u7684\u65b9\u5f0f\u76f8\u540c\uff1a java hello.sayHello(\"ServiceComb\");","title":"\u8de8\u5e94\u7528\u8c03\u7528"},{"location":"general-development/cross-app-invocation/#_1","text":"","title":"\u8de8\u5e94\u7528\u8c03\u7528"},{"location":"general-development/cross-app-invocation/#_2","text":"\u5e94\u7528\u662f\u5fae\u670d\u52a1\u5b9e\u4f8b\u9694\u79bb\u5c42\u6b21\u4e2d\u7684\u4e00\u5c42\uff0c\u4e00\u4e2a\u5e94\u7528\u5305\u542b\u591a\u4e2a\u5fae\u670d\u52a1\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u53ea\u5141\u8bb8\u540c\u5e94\u7528\u7684\u5fae\u670d\u52a1\u5b9e\u4f8b\u76f8\u4e92\u8c03\u7528\u3002","title":"\u6982\u5ff5\u9610\u8ff0"},{"location":"general-development/cross-app-invocation/#_3","text":"\u5f53\u7528\u6237\u9700\u8981\u4e0d\u540c\u5e94\u7528\u95f4\u7684\u5fae\u670d\u52a1\u76f8\u4e92\u8c03\u7528\u65f6\uff0c\u5c31\u9700\u8981\u5f00\u542f\u8de8\u5e94\u7528\u8c03\u7528\u529f\u80fd\u3002","title":"\u573a\u666f\u63cf\u8ff0"},{"location":"general-development/cross-app-invocation/#_4","text":"\u82e5\u8981\u5f00\u542f\u8de8\u5e94\u7528\u8c03\u7528\uff0c\u9996\u5148\u9700\u5728provider\u7aef\u7684microservice.yaml\u6587\u4ef6\u5f00\u542f\u8de8\u5e94\u7528\u8c03\u7528\u914d\u7f6e\u3002 \u6ce8\u610f\uff1a \u9700\u8981\u5347\u7ea7\u5fae\u670d\u52a1\u7248\u672c\u53f7\uff0c\u4ee5\u4fbf\u5728\u670d\u52a1\u4e2d\u5fc3\u91cd\u65b0\u6ce8\u518c\u5fae\u670d\u52a1\u4fe1\u606f \u5373\u4f7f\u662fdevelopment\u5f00\u53d1\u73af\u5883\uff0c\u4e5f\u9700\u8981\u5347\u7ea7\u5fae\u670d\u52a1\u7248\u672c\u53f7\uff0c\u56e0\u4e3adevelopment\u73af\u5883\u4e0b\uff0c\u4e5f\u53ea\u6709\u5951\u7ea6\u53d1\u751f\u53d8\u5316\uff0c\u624d\u4f1a\u91cd\u65b0\u6ce8\u518c\u5951\u7ea6 \u914d\u7f6e\u9879\u5982\u4e0b\uff1a service_description: # other configuration omitted properties: allowCrossApp: true # enable cross app invocation consumer\u7aef\u6307\u5b9a\u5fae\u670d\u52a1\u540d\u79f0\u8c03\u7528provider\u7684\u65f6\u5019\uff0c\u9700\u8981\u52a0\u4e0aprovider\u6240\u5c5e\u7684\u5e94\u7528ID\uff0c\u683c\u5f0f\u53d8\u4e3a [appID]:[microserviceName] \u3002","title":"\u914d\u7f6e\u8bf4\u660e"},{"location":"general-development/cross-app-invocation/#_5","text":"\u793a\u4f8b\u5047\u8bbeprovider\u6240\u5c5e\u5e94\u7528\u4e3ahelloApp\uff0c\u5fae\u670d\u52a1\u540d\u79f0\u4e3ahelloProvider\uff1bconsumer\u6240\u5c5e\u5e94\u7528\u4e3ahelloApp2\uff0c\u5fae\u670d\u52a1\u540d\u79f0\u4e3ahelloConsumer\u3002 RestTemplate\u8c03\u7528\u65b9\u5f0f \u5f53consumer\u7aef\u4ee5RestTemplate\u65b9\u5f0f\u5f00\u53d1\u5fae\u670d\u52a1\u6d88\u8d39\u8005\u65f6\uff0c\u9700\u8981\u5728\u8c03\u7528\u7684URL\u4e2d\u5c06 [microserviceName] \u6539\u4e3a [appID]:[microserviceName] \uff0c\u4ee3\u7801\u793a\u4f8b\u5982\u4e0b\uff1a ```java RestTemplate restTemplate = RestTemplateBuilder.create(); ResponseEntity String responseEntity = restTemplate .getForEntity(\"cse://helloApp:helloProvider/hello/sayHello?name={name}\", String.class, \"ServiceComb\"); ``` RPC\u8c03\u7528\u65b9\u5f0f \u5f53consumer\u7aef\u4ee5RPC\u65b9\u5f0f\u5f00\u53d1\u5fae\u670d\u52a1\u6d88\u8d39\u8005\u65f6\uff0c\u58f0\u660e\u7684\u670d\u52a1\u63d0\u4f9b\u8005\u4ee3\u7406\u5982\u4e0b\uff1a java @RpcReference(schemaId = \"hello\", microserviceName = \"helloApp:helloProvider\") private Hello hello; \u8de8\u5e94\u7528\u8c03\u7528\u4e0e\u540c\u5e94\u7528\u4e0b\u8c03\u7528\u5fae\u670d\u52a1\u7684\u65b9\u5f0f\u76f8\u540c\uff1a java hello.sayHello(\"ServiceComb\");","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"general-development/customized-tracing/","text":"\u6982\u5ff5\u9610\u8ff0 \u5206\u5e03\u5f0f\u8c03\u7528\u94fe\u8ffd\u8e2a\u63d0\u4f9b\u4e86\u670d\u52a1\u95f4\u8c03\u7528\u7684\u65f6\u5e8f\u4fe1\u606f\uff0c\u4f46\u670d\u52a1\u5185\u90e8\u7684\u94fe\u8def\u8c03\u7528\u4fe1\u606f\u5bf9\u5f00\u53d1\u8005\u540c\u6837\u91cd\u8981\uff0c\u5982\u679c\u80fd\u5c06\u4e24\u8005\u5408\u4e8c\u4e3a\u4e00\uff0c\u5c31\u80fd\u63d0\u4f9b\u66f4\u5b8c\u6574\u7684\u8c03\u7528\u94fe\uff0c\u66f4\u5bb9\u6613\u5b9a\u4f4d\u9519\u8bef\u548c\u6f5c\u5728\u6027\u80fd\u95ee\u9898\u3002 \u524d\u63d0\u6761\u4ef6 \u4f7f\u7528\u81ea\u5b9a\u4e49\u6253\u70b9\u529f\u80fd\u9700\u8981\u9996\u5148\u914d\u7f6e\u5e76\u542f\u7528Java Chassis\u5fae\u670d\u52a1\u8c03\u7528\u94fe\u3002 \u6ce8\u610f\u4e8b\u9879 \u4f7f\u7528 @Span \u6ce8\u91ca\u7684\u81ea\u5b9a\u4e49\u6253\u70b9\u529f\u80fd\u53ea\u652f\u6301\u548cJava Chassis\u8c03\u7528\u8bf7\u6c42\u540c\u4e00\u7ebf\u7a0b\u7684\u65b9\u6cd5\u8c03\u7528\u3002 \u6dfb\u52a0 @Span \u6ce8\u91ca\u7684\u65b9\u6cd5\u5fc5\u987b\u662fSpring\u7ba1\u7406\u7684Bean\uff0c\u5426\u5219\u9700\u8981\u6309\u8fd9\u91cc \u63d0\u5230\u7684\u65b9\u6cd5 \u914d\u7f6e\u3002 \u81ea\u5b9a\u4e49\u8c03\u7528\u94fe\u6253\u70b9 \u8be5\u529f\u80fd\u96c6\u6210\u4e86Zipkin\uff0c\u63d0\u4f9b @Span \u6ce8\u91ca\u4e3a\u9700\u8981\u8ffd\u8e2a\u7684\u65b9\u6cd5\u81ea\u5b9a\u4e49\u6253\u70b9\u3002Java Chassis\u5c06\u81ea\u52a8\u8ffd\u8e2a\u6240\u6709\u6dfb\u52a0 @Span \u6ce8\u91ca\u7684\u65b9\u6cd5\uff0c\u628a\u6bcf\u4e2a\u65b9\u6cd5\u7684\u672c\u5730\u8c03\u7528\u4fe1\u606f\u4e0e\u670d\u52a1\u95f4\u8c03\u7528\u4fe1\u606f\u8fde\u63a5\u8d77\u6765\u3002 \u4f7f\u7528\u6b65\u9aa4: \u6dfb\u52a0\u4f9d\u8d56 \u57fa\u4e8e ServiceComb Java Chassis \u7684\u5fae\u670d\u52a1\u53ea\u9700\u8981\u6dfb\u52a0\u5982\u4e0b\u4f9d\u8d56\u5230 pom.xml\uff1a dependency groupId org.apache.servicecomb /groupId artifactId tracing-zipkin /artifactId /dependency \u542f\u7528\u81ea\u5b9a\u4e49\u6253\u70b9\u529f\u80fd {#\u914d\u7f6e\u8ffd\u8e2a\u5904\u7406\u548c\u6570\u636e\u6536\u96c6} \u5728\u5e94\u7528\u5165\u53e3\u6216Spring\u914d\u7f6e\u7c7b\u4e0a\u6dfb\u52a0 @EnableZipkinTracing \u6ce8\u91ca\uff1a @SpringBootApplication @EnableZipkinTracing public class ZipkinSpanTestApplication { public static void main(String[] args) { SpringApplication.run(ZipkinSpanTestApplication.class); } } \u5b9a\u5236\u6253\u70b9 \u5728\u9700\u8981\u5b9a\u5236\u6253\u70b9\u7684\u65b9\u6cd5\u4e0a\u6dfb\u52a0 @Span \u6ce8\u91ca\uff1a @Component public class SlowRepoImpl implements SlowRepo { private static final Logger logger = LoggerFactory.getLogger(SlowRepoImpl.class); private final Random random = new Random(); @Span @Override public String crawl() throws InterruptedException { logger.info( in /crawl ); Thread.sleep(random.nextInt(200)); return crawled ; } } \u5c31\u8fd9\u6837\uff0c\u901a\u8fc7\u4f7f\u7528 @Span \u6ce8\u91ca\uff0c\u6211\u4eec\u542f\u52a8\u4e86\u57fa\u4e8e Zipkin \u7684\u81ea\u5b9a\u4e49\u6253\u70b9\u529f\u80fd\u3002 \u5b9a\u5236\u4e0a\u62a5\u7684\u6570\u636e \u901a\u8fc7\u81ea\u5b9a\u4e49\u6253\u70b9\u4e0a\u62a5\u7684\u8c03\u7528\u94fe\u5305\u542b\u4e24\u6761\u6570\u636e\uff1a span name \u9ed8\u8ba4\u4e3a\u5f53\u524d\u6ce8\u91ca\u7684\u65b9\u6cd5\u5168\u540d\u3002 call.path \u9ed8\u8ba4\u4e3a\u5f53\u524d\u6ce8\u91ca\u7684\u65b9\u6cd5\u7b7e\u540d\u3002 \u4f8b\u5982\uff0c\u4e0a\u8ff0\u4f8b\u5b50 SlowRepoImp \u91cc\u4e0a\u62a5\u7684\u6570\u636e\u5982\u4e0b\uff1a key value span name crawl call.path public abstract java.lang.String org.apache.servicecomb.tests.tracing.SlowRepo.crawl() throws java.lang.InterruptedException \u5982\u679c\u9700\u8981\u5b9a\u5236\u4e0a\u62a5\u7684\u6570\u636e\u5185\u5bb9\uff0c\u53ef\u4ee5\u4f20\u5165\u81ea\u5b9a\u4e49\u7684\u53c2\u6570\uff1a public static class CustomSpanTask { @Span(spanName = transaction1 , callPath = startA ) public String invoke() { return invoke the method ; } }","title":"Customized tracing"},{"location":"general-development/customized-tracing/#_1","text":"\u5206\u5e03\u5f0f\u8c03\u7528\u94fe\u8ffd\u8e2a\u63d0\u4f9b\u4e86\u670d\u52a1\u95f4\u8c03\u7528\u7684\u65f6\u5e8f\u4fe1\u606f\uff0c\u4f46\u670d\u52a1\u5185\u90e8\u7684\u94fe\u8def\u8c03\u7528\u4fe1\u606f\u5bf9\u5f00\u53d1\u8005\u540c\u6837\u91cd\u8981\uff0c\u5982\u679c\u80fd\u5c06\u4e24\u8005\u5408\u4e8c\u4e3a\u4e00\uff0c\u5c31\u80fd\u63d0\u4f9b\u66f4\u5b8c\u6574\u7684\u8c03\u7528\u94fe\uff0c\u66f4\u5bb9\u6613\u5b9a\u4f4d\u9519\u8bef\u548c\u6f5c\u5728\u6027\u80fd\u95ee\u9898\u3002","title":"\u6982\u5ff5\u9610\u8ff0"},{"location":"general-development/customized-tracing/#_2","text":"\u4f7f\u7528\u81ea\u5b9a\u4e49\u6253\u70b9\u529f\u80fd\u9700\u8981\u9996\u5148\u914d\u7f6e\u5e76\u542f\u7528Java Chassis\u5fae\u670d\u52a1\u8c03\u7528\u94fe\u3002","title":"\u524d\u63d0\u6761\u4ef6"},{"location":"general-development/customized-tracing/#_3","text":"\u4f7f\u7528 @Span \u6ce8\u91ca\u7684\u81ea\u5b9a\u4e49\u6253\u70b9\u529f\u80fd\u53ea\u652f\u6301\u548cJava Chassis\u8c03\u7528\u8bf7\u6c42\u540c\u4e00\u7ebf\u7a0b\u7684\u65b9\u6cd5\u8c03\u7528\u3002 \u6dfb\u52a0 @Span \u6ce8\u91ca\u7684\u65b9\u6cd5\u5fc5\u987b\u662fSpring\u7ba1\u7406\u7684Bean\uff0c\u5426\u5219\u9700\u8981\u6309\u8fd9\u91cc \u63d0\u5230\u7684\u65b9\u6cd5 \u914d\u7f6e\u3002","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"general-development/customized-tracing/#_4","text":"\u8be5\u529f\u80fd\u96c6\u6210\u4e86Zipkin\uff0c\u63d0\u4f9b @Span \u6ce8\u91ca\u4e3a\u9700\u8981\u8ffd\u8e2a\u7684\u65b9\u6cd5\u81ea\u5b9a\u4e49\u6253\u70b9\u3002Java Chassis\u5c06\u81ea\u52a8\u8ffd\u8e2a\u6240\u6709\u6dfb\u52a0 @Span \u6ce8\u91ca\u7684\u65b9\u6cd5\uff0c\u628a\u6bcf\u4e2a\u65b9\u6cd5\u7684\u672c\u5730\u8c03\u7528\u4fe1\u606f\u4e0e\u670d\u52a1\u95f4\u8c03\u7528\u4fe1\u606f\u8fde\u63a5\u8d77\u6765\u3002","title":"\u81ea\u5b9a\u4e49\u8c03\u7528\u94fe\u6253\u70b9"},{"location":"general-development/customized-tracing/#_5","text":"","title":"\u4f7f\u7528\u6b65\u9aa4:"},{"location":"general-development/customized-tracing/#_6","text":"\u57fa\u4e8e ServiceComb Java Chassis \u7684\u5fae\u670d\u52a1\u53ea\u9700\u8981\u6dfb\u52a0\u5982\u4e0b\u4f9d\u8d56\u5230 pom.xml\uff1a dependency groupId org.apache.servicecomb /groupId artifactId tracing-zipkin /artifactId /dependency","title":"\u6dfb\u52a0\u4f9d\u8d56"},{"location":"general-development/customized-tracing/#_7","text":"\u5728\u5e94\u7528\u5165\u53e3\u6216Spring\u914d\u7f6e\u7c7b\u4e0a\u6dfb\u52a0 @EnableZipkinTracing \u6ce8\u91ca\uff1a @SpringBootApplication @EnableZipkinTracing public class ZipkinSpanTestApplication { public static void main(String[] args) { SpringApplication.run(ZipkinSpanTestApplication.class); } }","title":"\u542f\u7528\u81ea\u5b9a\u4e49\u6253\u70b9\u529f\u80fd {#\u914d\u7f6e\u8ffd\u8e2a\u5904\u7406\u548c\u6570\u636e\u6536\u96c6}"},{"location":"general-development/customized-tracing/#_8","text":"\u5728\u9700\u8981\u5b9a\u5236\u6253\u70b9\u7684\u65b9\u6cd5\u4e0a\u6dfb\u52a0 @Span \u6ce8\u91ca\uff1a @Component public class SlowRepoImpl implements SlowRepo { private static final Logger logger = LoggerFactory.getLogger(SlowRepoImpl.class); private final Random random = new Random(); @Span @Override public String crawl() throws InterruptedException { logger.info( in /crawl ); Thread.sleep(random.nextInt(200)); return crawled ; } } \u5c31\u8fd9\u6837\uff0c\u901a\u8fc7\u4f7f\u7528 @Span \u6ce8\u91ca\uff0c\u6211\u4eec\u542f\u52a8\u4e86\u57fa\u4e8e Zipkin \u7684\u81ea\u5b9a\u4e49\u6253\u70b9\u529f\u80fd\u3002","title":"\u5b9a\u5236\u6253\u70b9"},{"location":"general-development/customized-tracing/#_9","text":"\u901a\u8fc7\u81ea\u5b9a\u4e49\u6253\u70b9\u4e0a\u62a5\u7684\u8c03\u7528\u94fe\u5305\u542b\u4e24\u6761\u6570\u636e\uff1a span name \u9ed8\u8ba4\u4e3a\u5f53\u524d\u6ce8\u91ca\u7684\u65b9\u6cd5\u5168\u540d\u3002 call.path \u9ed8\u8ba4\u4e3a\u5f53\u524d\u6ce8\u91ca\u7684\u65b9\u6cd5\u7b7e\u540d\u3002 \u4f8b\u5982\uff0c\u4e0a\u8ff0\u4f8b\u5b50 SlowRepoImp \u91cc\u4e0a\u62a5\u7684\u6570\u636e\u5982\u4e0b\uff1a key value span name crawl call.path public abstract java.lang.String org.apache.servicecomb.tests.tracing.SlowRepo.crawl() throws java.lang.InterruptedException \u5982\u679c\u9700\u8981\u5b9a\u5236\u4e0a\u62a5\u7684\u6570\u636e\u5185\u5bb9\uff0c\u53ef\u4ee5\u4f20\u5165\u81ea\u5b9a\u4e49\u7684\u53c2\u6570\uff1a public static class CustomSpanTask { @Span(spanName = transaction1 , callPath = startA ) public String invoke() { return invoke the method ; } }","title":"\u5b9a\u5236\u4e0a\u62a5\u7684\u6570\u636e"},{"location":"general-development/ding-zhi-xu-lie-hua-he-fan-xu-lie-hua-fang-fa/","text":"","title":"Ding zhi xu lie hua he fan xu lie hua fang fa"},{"location":"general-development/dnsconfig/","text":"\u573a\u666f\u63cf\u8ff0 \u7528\u6237\u4f7f\u7528\u57df\u540d\u8fde\u63a5\u516c\u6709\u4e91\u6216\u8005\u4e09\u65b9\u7cfb\u7edf\u65f6\uff0c\u9700\u8981\u4f7f\u7528\u5230\u57df\u540d\u89e3\u6790\u7cfb\u7edf\u3002\u5728\u4e0d\u540c\u7684\u7cfb\u7edf\u3001\u4e0d\u540c\u7684\u6846\u67b6\u4f7f\u7528\u7684\u57df\u540d\u89e3\u6790\u673a\u5236\u90fd\u53ef\u80fd\u4e0d\u592a\u4e00\u6837\u3002\u6240\u4ee5\u6211\u4eec\u6709\u5fc5\u8981\u63d0\u4f9b\u4e00\u4e2a\u7edf\u4e00\u7684\u914d\u7f6e\u5165\u53e3\uff0c\u4ee5\u4fbf\u5f00\u53d1\u8fd0\u7ef4\u4eba\u5458\u53ef\u4ee5\u81ea\u5b9a\u4e49DNS\u89e3\u6790\u673a\u5236\uff0c\u800c\u4e0d\u5b8c\u5168\u53d7\u5236\u4e8e\u7cfb\u7edf\u914d\u7f6e\u3002 DNS\u914d\u7f6e DNS\u914d\u7f6e\u9879\u5199\u5728microservice.yaml\u6587\u4ef6\u4e2d\uff0c\u652f\u6301\u7edf\u4e00\u5236\u5b9a\u8bc1\u4e66\uff0c\u4e5f\u53ef\u4ee5\u6dfb\u52a0tag\u8fdb\u884c\u66f4\u7ec6\u7c92\u5ea6\u7684\u914d\u7f6e\uff0c\u6709tag\u7684\u914d\u7f6e\u4f1a\u8986\u76d6\u5168\u5c40\u914d\u7f6e\uff0c\u914d\u7f6e\u683c\u5f0f\u5982\u4e0b\uff1a addressResolver.[tag].[property] \u5e38\u89c1\u7684tag\u5982\u4e0b\u8868\uff1a \u9879\u76ee tag \u670d\u52a1\u4e2d\u5fc3 sc.consumer \u914d\u7f6e\u4e2d\u5fc3 cc.consumer \u770b\u677f\u4e2d\u5fc3 mc.consumer \u7528\u6237\u81ea\u5b9a\u4e49 self.tag \u5404\u4e2aproperties\u8be6\u7ec6\u8bf4\u660e\uff08\u8bbe\u7f6eVertx DNS\u89e3\u6790\uff09 addressResolver: servers: 8.8.8.8,8.8.4.4 #\u5bf9\u5e94Linux /etc/resolv.conf\u7684nameserver,DNS\u670d\u52a1\u5668\u5730\u5740\uff0c\u652f\u6301\u914d\u7f6e\u591a\u4e2a\uff0c\u4ee5\u9017\u53f7\u9694\u5f00 ndots: 1 #\u5bf9\u5e94linux /etc/resolv.conf\u91cc\u9762\u7684options: ndots, \u4f5c\u7528\u5c31\u662f\u5982\u679c\u7ed9\u7684\u57df\u540d\u91cc\u9762\u5305\u542b\u7684\u70b9\u7684\u4e2a\u6570\u5c11\u4e8e\u8be5\u9608\u503c\uff0c\u90a3\u4e48DNS\u89e3\u6790\u7684\u65f6\u5019\u5c31\u4f1a\u9ed8\u8ba4\u52a0\u4e0asearchDomains\u7684\u503c\uff0c\u8fd9\u4e2a\u5fc5\u987b\u548csearchDomains\u642d\u914d\u4f7f\u7528\uff0cLinux\u9ed8\u8ba4\u4e3a1 searchDomains: a,b,c #\u5bf9\u5e94linux /etc/resolv.conf\u91cc\u9762\u7684search\uff0c\u548cndots\u642d\u914d\u4f7f\u7528\uff0c\u5982\u679c\u5f53\u524d\u57df\u540d\u7684\u70b9\u4e2a\u6570\u5c11\u4e8e\u8bbe\u7f6e\u503c\uff0c\u89e3\u6790\u65f6\u5c31\u4f1a\u628a\u8fd9\u4e9b\u503c\u6dfb\u52a0\u5230\u57df\u540d\u540e\u9762\u4e00\u8d77\u89e3\u6790\uff0c\u6bd4\u5982ndots\u8bbe\u7f6e\u7684\u4e3a4\uff0c\u5f53\u524d\u57df\u540d\u4e3aservicecomb.cn-north-1.myhwclouds.com\uff0c\u53ea\u6709\u4e09\u4e2a\u70b9\uff0c\u90a3\u4e48\u89e3\u6790\u7684\u65f6\u5019\u5c31\u4f1a\u81ea\u52a8\u52a0\u4e0aservicecomb.cn-north-1.myhwclouds.com.a\u53bb\u89e3\u6790\uff0c\u6ca1\u89e3\u6790\u51fa\u6765\u5728\u7528servicecomb.cn-north-1.myhwclouds.com.b\uff0c\u76f4\u5230\u80fd\u6700\u540e\u89e3\u6790\u51fa\u6765 optResourceEnabled: true #optional record is automatically included in DNS queries cacheMinTimeToLive: 0 #\u6700\u5c0f\u7f13\u5b58\u65f6\u95f4 cacheMaxTimeToLive: 10000 #\u6700\u5927\u7f13\u5b58\u65f6\u95f4 cacheNegativeTimeToLive: 0 #DNS\u89e3\u6790\u5931\u8d25\u540e\uff0c\u4e0b\u6b21\u91cd\u8bd5\u7684\u7b49\u5f85\u65f6\u95f4 queryTimeout: 5000 #\u67e5\u8be2\u8d85\u65f6\u65f6\u95f4 maxQueries: 4 #\u67e5\u8be2\u6b21\u6570 rdFlag: true #\u8bbe\u7f6eDNS\u9012\u5f52\u67e5\u8be2 rotateServers: true #\u8bbe\u7f6e\u662f\u5426\u652f\u6301\u8f6e\u8be2 \u793a\u4f8b VertxOptions vertxOptions = new VertxOptions(); vertxOptions.setAddressResolverOptions(AddressResolverConfig.getAddressResover( self.tag )); Vertx vertx = VertxUtils.getOrCreateVertxByName( registry , vertxOptions); // this has to set the client options HttpClientOptions httpClientOptions = createHttpClientOptions(); ClientPoolManager HttpClientWithContext clientMgr = new ClientPoolManager (vertx, new HttpClientPoolFactory(httpClientOptions)); clientMgr.findThreadBindClientPool().runOnContext(httpClient - { // do some http request });","title":"Dnsconfig"},{"location":"general-development/dnsconfig/#_1","text":"\u7528\u6237\u4f7f\u7528\u57df\u540d\u8fde\u63a5\u516c\u6709\u4e91\u6216\u8005\u4e09\u65b9\u7cfb\u7edf\u65f6\uff0c\u9700\u8981\u4f7f\u7528\u5230\u57df\u540d\u89e3\u6790\u7cfb\u7edf\u3002\u5728\u4e0d\u540c\u7684\u7cfb\u7edf\u3001\u4e0d\u540c\u7684\u6846\u67b6\u4f7f\u7528\u7684\u57df\u540d\u89e3\u6790\u673a\u5236\u90fd\u53ef\u80fd\u4e0d\u592a\u4e00\u6837\u3002\u6240\u4ee5\u6211\u4eec\u6709\u5fc5\u8981\u63d0\u4f9b\u4e00\u4e2a\u7edf\u4e00\u7684\u914d\u7f6e\u5165\u53e3\uff0c\u4ee5\u4fbf\u5f00\u53d1\u8fd0\u7ef4\u4eba\u5458\u53ef\u4ee5\u81ea\u5b9a\u4e49DNS\u89e3\u6790\u673a\u5236\uff0c\u800c\u4e0d\u5b8c\u5168\u53d7\u5236\u4e8e\u7cfb\u7edf\u914d\u7f6e\u3002","title":"\u573a\u666f\u63cf\u8ff0"},{"location":"general-development/dnsconfig/#dns","text":"DNS\u914d\u7f6e\u9879\u5199\u5728microservice.yaml\u6587\u4ef6\u4e2d\uff0c\u652f\u6301\u7edf\u4e00\u5236\u5b9a\u8bc1\u4e66\uff0c\u4e5f\u53ef\u4ee5\u6dfb\u52a0tag\u8fdb\u884c\u66f4\u7ec6\u7c92\u5ea6\u7684\u914d\u7f6e\uff0c\u6709tag\u7684\u914d\u7f6e\u4f1a\u8986\u76d6\u5168\u5c40\u914d\u7f6e\uff0c\u914d\u7f6e\u683c\u5f0f\u5982\u4e0b\uff1a addressResolver.[tag].[property] \u5e38\u89c1\u7684tag\u5982\u4e0b\u8868\uff1a \u9879\u76ee tag \u670d\u52a1\u4e2d\u5fc3 sc.consumer \u914d\u7f6e\u4e2d\u5fc3 cc.consumer \u770b\u677f\u4e2d\u5fc3 mc.consumer \u7528\u6237\u81ea\u5b9a\u4e49 self.tag \u5404\u4e2aproperties\u8be6\u7ec6\u8bf4\u660e\uff08\u8bbe\u7f6eVertx DNS\u89e3\u6790\uff09 addressResolver: servers: 8.8.8.8,8.8.4.4 #\u5bf9\u5e94Linux /etc/resolv.conf\u7684nameserver,DNS\u670d\u52a1\u5668\u5730\u5740\uff0c\u652f\u6301\u914d\u7f6e\u591a\u4e2a\uff0c\u4ee5\u9017\u53f7\u9694\u5f00 ndots: 1 #\u5bf9\u5e94linux /etc/resolv.conf\u91cc\u9762\u7684options: ndots, \u4f5c\u7528\u5c31\u662f\u5982\u679c\u7ed9\u7684\u57df\u540d\u91cc\u9762\u5305\u542b\u7684\u70b9\u7684\u4e2a\u6570\u5c11\u4e8e\u8be5\u9608\u503c\uff0c\u90a3\u4e48DNS\u89e3\u6790\u7684\u65f6\u5019\u5c31\u4f1a\u9ed8\u8ba4\u52a0\u4e0asearchDomains\u7684\u503c\uff0c\u8fd9\u4e2a\u5fc5\u987b\u548csearchDomains\u642d\u914d\u4f7f\u7528\uff0cLinux\u9ed8\u8ba4\u4e3a1 searchDomains: a,b,c #\u5bf9\u5e94linux /etc/resolv.conf\u91cc\u9762\u7684search\uff0c\u548cndots\u642d\u914d\u4f7f\u7528\uff0c\u5982\u679c\u5f53\u524d\u57df\u540d\u7684\u70b9\u4e2a\u6570\u5c11\u4e8e\u8bbe\u7f6e\u503c\uff0c\u89e3\u6790\u65f6\u5c31\u4f1a\u628a\u8fd9\u4e9b\u503c\u6dfb\u52a0\u5230\u57df\u540d\u540e\u9762\u4e00\u8d77\u89e3\u6790\uff0c\u6bd4\u5982ndots\u8bbe\u7f6e\u7684\u4e3a4\uff0c\u5f53\u524d\u57df\u540d\u4e3aservicecomb.cn-north-1.myhwclouds.com\uff0c\u53ea\u6709\u4e09\u4e2a\u70b9\uff0c\u90a3\u4e48\u89e3\u6790\u7684\u65f6\u5019\u5c31\u4f1a\u81ea\u52a8\u52a0\u4e0aservicecomb.cn-north-1.myhwclouds.com.a\u53bb\u89e3\u6790\uff0c\u6ca1\u89e3\u6790\u51fa\u6765\u5728\u7528servicecomb.cn-north-1.myhwclouds.com.b\uff0c\u76f4\u5230\u80fd\u6700\u540e\u89e3\u6790\u51fa\u6765 optResourceEnabled: true #optional record is automatically included in DNS queries cacheMinTimeToLive: 0 #\u6700\u5c0f\u7f13\u5b58\u65f6\u95f4 cacheMaxTimeToLive: 10000 #\u6700\u5927\u7f13\u5b58\u65f6\u95f4 cacheNegativeTimeToLive: 0 #DNS\u89e3\u6790\u5931\u8d25\u540e\uff0c\u4e0b\u6b21\u91cd\u8bd5\u7684\u7b49\u5f85\u65f6\u95f4 queryTimeout: 5000 #\u67e5\u8be2\u8d85\u65f6\u65f6\u95f4 maxQueries: 4 #\u67e5\u8be2\u6b21\u6570 rdFlag: true #\u8bbe\u7f6eDNS\u9012\u5f52\u67e5\u8be2 rotateServers: true #\u8bbe\u7f6e\u662f\u5426\u652f\u6301\u8f6e\u8be2","title":"DNS\u914d\u7f6e"},{"location":"general-development/dnsconfig/#_2","text":"VertxOptions vertxOptions = new VertxOptions(); vertxOptions.setAddressResolverOptions(AddressResolverConfig.getAddressResover( self.tag )); Vertx vertx = VertxUtils.getOrCreateVertxByName( registry , vertxOptions); // this has to set the client options HttpClientOptions httpClientOptions = createHttpClientOptions(); ClientPoolManager HttpClientWithContext clientMgr = new ClientPoolManager (vertx, new HttpClientPoolFactory(httpClientOptions)); clientMgr.findThreadBindClientPool().runOnContext(httpClient - { // do some http request });","title":"\u793a\u4f8b"},{"location":"general-development/error-handling/","text":"\u5f02\u5e38\u5904\u7406 \u5f02\u5e38\u5206\u7c7b\u53ca\u5ba2\u6237\u7aef\u5982\u4f55\u5224\u65ad\u5f02\u5e38\u7c7b\u578b \u4e1a\u52a1\u5f02\u5e38\uff1a\u8fd9\u7c7b\u5f02\u5e38\u7531\u4e1a\u52a1\u63a5\u53e3\u5b9a\u4e49\u3002\u7528\u6237\u5728\u83b7\u53d6\u5230\u670d\u52a1swagger\u5b9a\u4e49\u7684\u65f6\u5019\uff0c\u5c31\u80fd\u591f\u4ece\u5b9a\u4e49\u4e2d\u770b\u5230\u8fd9\u7c7b\u5f02\u5e38\u5bf9 \u5e94\u7684\u9519\u8bef\u7801\uff0c\u4ee5\u53ca\u8fd4\u56de\u503c\u7c7b\u578b\u3002 \u4e0b\u9762\u7684\u4f8b\u5b50\u5c55\u73b0\u4e86\u4e1a\u52a1\u5b9a\u4e49\u5f02\u5e38\u3002 @Path(\"/errorCode\") @POST @ApiResponses({ @ApiResponse(code = 200, response = MultiResponse200.class, message = \"\"), @ApiResponse(code = 400, response = MultiResponse400.class, message = \"\"), @ApiResponse(code = 500, response = MultiResponse500.class, message = \"\")}) public MultiResponse200 errorCode(MultiRequest request) { if (request.getCode() == 400) { MultiResponse400 r = new MultiResponse400(); r.setCode(400); r.setMessage(\"bad request\"); throw new InvocationException(javax.ws.rs.core.Response.Status.BAD_REQUEST, r); } else if (request.getCode() == 500) { MultiResponse500 r = new MultiResponse500(); r.setCode(500); r.setMessage(\"internal error\"); throw new InvocationException(javax.ws.rs.core.Response.Status.INTERNAL_SERVER_ERROR, r); } else { MultiResponse200 r = new MultiResponse200(); r.setCode(200); r.setMessage(\"success result\"); return r; } } \u5ba2\u6237\u7aef\u4ee3\u7801\u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u65b9\u5f0f\u5904\u7406\u5f02\u5e38\u3002\u5f02\u5e38\u7684\u7c7b\u578b\u662f\u786e\u5b9a\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7cast\u83b7\u53d6\u5230\u5f02\u5e38\u7c7b\u578b\u3002 MultiRequest request = new MultiRequest(); request.setCode(200); ResponseEntity MultiResponse200 result = template .postForEntity(SERVER + \"/MultiErrorCodeService/errorCode\", request, MultiResponse200.class); TestMgr.check(result.getStatusCode(), 200); TestMgr.check(result.getBody().getMessage(), \"success result\"); request.setCode(400); MultiResponse400 t400 = null; try { template.postForEntity(SERVER + \"/MultiErrorCodeService/errorCode\", request, MultiResponse400.class); } catch (InvocationException e) { t400 = (MultiResponse400) e.getErrorData(); } TestMgr.check(t400.getCode(), 400); TestMgr.check(t400.getMessage(), \"bad request\"); request.setCode(500); MultiResponse500 t500 = null; try { template.postForEntity(SERVER + \"/MultiErrorCodeService/errorCode\", request, MultiResponse400.class); } catch (InvocationException e) { t500 = (MultiResponse500) e.getErrorData(); } TestMgr.check(t500.getCode(), 500); TestMgr.check(t500.getMessage(), \"internal error\"); \u63a7\u5236\u5f02\u5e38\uff1a\u8fd9\u7c7b\u5f02\u5e38\u901a\u5e38\u662f\u6846\u67b6\u5904\u7406\u6d41\u7a0b\u4e0a\u7684\u5f02\u5e38\u3002\u6bd4\u5982\u6d41\u63a7Handler\u629b\u51faTOO_MANY_REQUESTS_STATUS\u5f02\u5e38\u3002 public class ConsumerQpsFlowControlHandler implements Handler { ... ... if (qpsController.isLimitNewRequest()) { // return http status 429 CommonExceptionData errorData = new CommonExceptionData(\"rejected by qps flowcontrol\"); asyncResp.consumerFail( new InvocationException(QpsConst.TOO_MANY_REQUESTS_STATUS, errorData)); return; } invocation.next(asyncResp); } } \u63a7\u5236\u5f02\u5e38\u5728\u63a5\u53e3\u5b9a\u4e49\u91cc\u9762\u6ca1\u6709\u58f0\u660e\u3002\u5ba2\u6237\u7aef\u5728\u505a\u5f02\u5e38\u5904\u7406\u7684\u65f6\u5019\uff0c\u4e0d\u77e5\u9053\u5f02\u5e38\u7c7b\u578b\u3002\u53ef\u4ee5\u91c7\u7528\u5f31\u7c7b\u578b\u7684\u65b9\u5f0f\u5904\u7406\u5f02\u5e38\uff1a JsonObject requestJson = new JsonObject(); requestJson.put(\"code\", 400); requestJson.put(\"message\", \"test message\"); try { template .postForEntity(SERVER + \"/MultiErrorCodeService/noClientErrorCode\", requestJson, Object.class); } catch (InvocationException e) { TestMgr.check(e.getStatusCode(), 400); mapResult = RestObjectMapperFactory.getRestObjectMapper().convertValue(e.getErrorData(), Map.class); TestMgr.check(mapResult.get(\"message\"), \"test message\"); TestMgr.check(mapResult.get(\"code\"), 400); TestMgr.check(mapResult.get(\"t400\"), 400); } \u4e0a\u9762\u7684\u4ee3\u7801\u5047\u8bbe\u4e0d\u77e5\u9053\u5f02\u5e38\u7c7b\u578b\uff0c\u901a\u8fc7API\u5c06\u5f02\u5e38\u7c7b\u578b\u8f6c\u6362\u4e3aMap\u7c7b\u578b\uff0c\u7136\u540e\u4eceMap\u91cc\u9762\u8bfb\u53d6\u5f02\u5e38\u7c7b\u578b\u3002 ServiceComb\u81ea\u5df1\u629b\u51fa\u7684\u5f02\u5e38\u7c7b\u578b\u4e2d\uff0c\u4e00\u822c\u63a7\u5236\u5f02\u5e38\u7684\u7c7b\u578b\u4e5f\u662f\u56fa\u5b9a\u7684\uff0c\u4e3aCommonExceptionData\u3002 \u672a\u77e5\u5f02\u5e38\uff1a\u8fd9\u7c7b\u5f02\u5e38\u53d1\u751f\u7684\u60c5\u51b5\u4e0d\u786e\u5b9a\u3002\u6bd4\u5982\u4e1a\u52a1\u4ee3\u7801\u5b9e\u73b0\u7684\u65f6\u5019\uff0c\u629b\u51faNullPointerException\u7b49\u672a\u6355\u83b7\u5f02\u5e38\u3001\u5e95\u5c42 \u7684\u7f51\u7edc\u8fde\u63a5\u8d85\u65f6\u5f02\u5e38\u7b49\u3002\u8fd9\u7c7b\u5f02\u5e38\u4f1a\u7531ServiceComb\u5c01\u88c5\u6210590\u6216\u8005490\u9519\u8bef\u8fd4\u56de\u3002\u6bd4\u5982\uff1a CommonExceptionData errorData = new CommonExceptionData(cause.getMessage()); asyncResp.producerFail(new InvocationException(590, errorData) \u6216\u8005 asyncResp.consumerFail(new InvocationException(490, errorData) \u672a\u77e5\u5f02\u5e38\u6d88\u606f\u7684\u7c7b\u578b\u56fa\u5b9a\u4e3aCommonExceptionData\u7c7b\u578b\u3002 \u5f02\u5e38\u62e6\u622a\u5668 \u6709\u65f6\u5019\uff0c\u4e1a\u52a1\u9700\u8981\u5c06\u6240\u6709\u7684\u672a\u77e5\u5f02\u5e38\u3001\u63a7\u5236\u5f02\u5e38\u8fdb\u884c\u6355\u83b7\uff0c\u8f6c\u6362\u4e3a\u5bf9\u7528\u6237\u53cb\u597d\u7684\u6d88\u606f\u3002\u6216\u8005\u5bf9\u63a7\u5236\u5f02\u5e38\u8fdb\u884c\u6355\u83b7\uff0c\u5c06 \u6d88\u606f\u4f53\u8f6c\u6362\u4e3a\u81ea\u5b9a\u4e49\u7684JSON\u683c\u5f0f\u3002\u8fd9\u91cc\u9762\u6709\u51e0\u4e2a\u53c2\u8003\u70b9\u3002 \u901a\u8fc7 ExceptionToProducerResponseConverter \u62e6\u622a\u5f02\u5e38 ExceptionToProducerResponseConverter \u80fd\u591f\u62e6\u622a\u4e1a\u52a1\u5f02\u5e38\u4ee5\u53ca\u4e1a\u52a1\u5b9e\u73b0\u91cc\u9762\u629b\u51fa\u7684\u672a\u77e5\u5f02\u5e38\u3002\u4f46\u662f\u4e0d\u80fd\u62e6\u622a Handler\uff0cHttpServerFilter \u7b49\u629b\u51fa\u7684\u5f02\u5e38\u3002\u66f4\u52a0\u786e\u5207\u7684\u662f ProducerOperationHandler \u6355\u83b7\u7684\u5f02\u5e38\u90fd\u4f1a\u88ab ExceptionToProducerResponseConverter \u5904\u7406\u3002 ExceptionToProducerResponseConverter \u5305\u542b\u5982\u4e0b \u51e0\u4e2a\u63a5\u53e3\uff1a getExceptionClass() \u5b9e\u73b0\u7c7b\u6240\u5904\u7406\u7684\u5f02\u5e38\u7c7b\u578b\u3002\u5982\u679c\u8be5\u65b9\u6cd5\u8fd4\u56de null \uff0c\u5219\u8bf4\u660e\u6b64\u5b9e\u73b0\u7c7b\u4e3a\u9ed8\u8ba4converter\u3002 Response convert(SwaggerInvocation swaggerInvocation, T e) \u5904\u7406\u5f02\u5e38\u903b\u8f91\uff0c\u8be5\u65b9\u6cd5\u8fd4\u56de\u7684 Response \u51b3\u5b9a\u4e86ServiceComb\u5c06\u4f1a\u8fd4\u56de\u4f55\u79cd\u72b6\u6001\u7801\u3001\u4f55\u79cdresponse body\u7684\u5e94\u7b54\u3002 getOrder() \u5b9e\u73b0\u7c7b\u7684\u4f18\u5148\u7ea7\uff0c\u8be5\u65b9\u6cd5\u8fd4\u56de\u7684\u503c\u8d8a\u5c0f\uff0c\u4f18\u5148\u7ea7\u8d8a\u9ad8\uff0c\u5982\u679c\u4e0d\u8986\u5199\u8be5\u65b9\u6cd5\u7684\u8bdd\uff0c\u5219\u8fd4\u56de\u9ed8\u8ba4\u4f18\u5148\u7ea7 0 \u3002\u5bf9\u4e8e\u5904\u7406\u540c\u4e00\u5f02\u5e38\u7c7b\u578b\u7684converter\uff08\u6216\u9ed8\u8ba4converter\uff09\uff0c\u53ea\u6709\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u751f\u6548\u3002 \u5728\u4e3a\u5f02\u5e38\u9009\u62e9converter\u65f6\uff0c\u4f1a\u4ece\u5f02\u5e38\u672c\u8eab\u7684\u7c7b\u578b\u5f00\u59cb\u5339\u914d\uff0c\u5982\u679c\u627e\u4e0d\u5230\u5bf9\u5e94\u7684converter\u5219\u9010\u7ea7\u5411\u4e0a\u67e5\u627e\u7236\u7c7b\u578b\u7684converter\u3002\u5f53\u5339\u914d\u5230 Throwable \u4ecd\u672a\u627e\u5230converter\u65f6\uff0c\u5c06\u4f7f\u7528\u9ed8\u8ba4converter\u5904\u7406\u5f02\u5e38\u3002 public class CustomExceptionToProducerResponseConverter implements ExceptionToProducerResponseConverter IllegalStateException { @Override public Class IllegalStateException getExceptionClass() { // \u8fd4\u56deIllegalStateException\u8868\u793a\u8be5converter\u5904\u7406IllegalStateException\u7c7b\u578b\u7684\u5f02\u5e38 return IllegalStateException.class; } @Override public int getOrder() { // \u8fd4\u56de\u7684order\u503c\u8d8a\u5c0f\uff0c\u4f18\u5148\u7ea7\u8d8a\u9ad8 return 100; } @Override public Response convert(SwaggerInvocation swaggerInvocation, IllegalStateException e) { // \u8fd9\u91cc\u662f\u5904\u7406\u5f02\u5e38\u7684\u903b\u8f91 IllegalStateErrorData data = new IllegalStateErrorData(); data.setId(500); data.setMessage(e.getMessage()); data.setState(e.getMessage()); InvocationException state = new InvocationException(Status.INTERNAL_SERVER_ERROR, data); return Response.failResp(state); } } \u8bf4\u660e : 2.0.2 \u4e4b\u524d\u7684\u7248\u672c\u90e8\u5206\u4e1a\u52a1\u5f02\u5e38\u65e0\u6cd5\u901a\u8fc7 ExceptionToProducerResponseConverter \u6355\u83b7\uff0c \u7cfb\u7edf\u505a\u4e86\u81ea\u52a8\u5904\u7406\uff0c\u4e0d\u7ecf\u8fc7 ExceptionToProducerResponseConverter\u3002 2.0.2 \u7248\u672c\u89c4\u8303\u5316\u4e86\u5904\u7406\u6d41\u7a0b\u3002 \u901a\u8fc7 Handler \u62e6\u622a\u5f02\u5e38 \u53ef\u4ee5\u5f00\u53d1\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684 Handler, \u5e76\u4e14\u5c06\u5176\u653e\u5230\u5176\u4ed6 Handler \u7684\u524d\u9762\uff0c\u53ef\u4ee5\u5904\u7406\u7edd\u5927\u591a\u6570\u4e1a\u52a1\u5f02\u5e38\u3001\u63a7\u5236\u5f02\u5e38\u548c \u672a\u77e5\u5f02\u5e38\u3002Handler \u4e0d\u4ec5\u4ec5\u53ef\u4ee5\u5e2e\u52a9\u548c\u5904\u7406\u5f02\u5e38\uff0c\u8fd8\u53ef\u4ee5\u8bb0\u5f55\u8bbf\u95ee\u65e5\u5fd7\uff0c\u53c2 \u8003 2.0.1 \u65b0\u7279\u6027\u4ecb\u7ecd\uff1a \u5728\u65e5\u5fd7\u4e2d\u8bb0\u5f55trace id public class ExceptionConvertHandler implements Handler { @Override public void handle(Invocation invocation, AsyncResponse asyncResp) throws Exception { invocation.next(response - { if (response.isFailed()) { Throwable e = response.getResult(); if (e instanceof InvocationException ((InvocationException)e).getStatusCode() == 408) { CustomException customException = new CustomException(\"change the response\", 777); InvocationException stt = new InvocationException(Status.EXPECTATION_FAILED, customException); response.setResult(stt); response.setStatus(stt.getStatus()); } } asyncResp.complete(response); }); } } \u63a7\u5236\u6d88\u606f\u6d88\u606f\u4f53\u5e8f\u5217\u5316 \u63a7\u5236\u6d88\u606f\u6d88\u606f\u4f53\u5e8f\u5217\u5316\u7684\u76ee\u7684\u662f\u7b80\u5316\u6d88\u8d39\u8005\u7684\u5f02\u5e38\u5904\u7406\u903b\u8f91\uff0c\u4e0d\u7528\u4f7f\u7528\u5f31\u7c7b\u578b\uff0c\u800c\u662f\u4f7f\u7528\u786e\u5207\u7c7b\u578b\u3002\u53ef\u4ee5\u91c7\u7528\u6ce8\u518c\u5168\u5c40\u7684\u9519\u8bef\u7801\u7c7b\u578b\u3002 \u4e1a\u52a1\u9700\u8981\u901a\u8fc7SPI\u5b9e\u73b0org.apache.servicecomb.swagger.invocation.response.ResponseMetaMapper\u63a5\u53e3\u3002 \u63a5\u53e3\u7684\u6838\u5fc3\u5185\u5bb9\u662f\u4e3a\u6bcf\u4e2a\u9519\u8bef\u7801\u6307\u5b9a\u5e8f\u5217\u5316\u7c7b\u578b\uff1a private final static Map Integer, ResponseMeta CODES = new HashMap (1); static { ResponseMeta meta = new ResponseMeta(); meta.setJavaType(SimpleType.constructUnsafe(IllegalStateErrorData.class)); CODES.put(500, meta); } @Override public Map Integer, ResponseMeta getMapper() { return CODES; }","title":"\u5f02\u5e38\u5904\u7406"},{"location":"general-development/error-handling/#_1","text":"","title":"\u5f02\u5e38\u5904\u7406"},{"location":"general-development/error-handling/#_2","text":"\u4e1a\u52a1\u5f02\u5e38\uff1a\u8fd9\u7c7b\u5f02\u5e38\u7531\u4e1a\u52a1\u63a5\u53e3\u5b9a\u4e49\u3002\u7528\u6237\u5728\u83b7\u53d6\u5230\u670d\u52a1swagger\u5b9a\u4e49\u7684\u65f6\u5019\uff0c\u5c31\u80fd\u591f\u4ece\u5b9a\u4e49\u4e2d\u770b\u5230\u8fd9\u7c7b\u5f02\u5e38\u5bf9 \u5e94\u7684\u9519\u8bef\u7801\uff0c\u4ee5\u53ca\u8fd4\u56de\u503c\u7c7b\u578b\u3002 \u4e0b\u9762\u7684\u4f8b\u5b50\u5c55\u73b0\u4e86\u4e1a\u52a1\u5b9a\u4e49\u5f02\u5e38\u3002 @Path(\"/errorCode\") @POST @ApiResponses({ @ApiResponse(code = 200, response = MultiResponse200.class, message = \"\"), @ApiResponse(code = 400, response = MultiResponse400.class, message = \"\"), @ApiResponse(code = 500, response = MultiResponse500.class, message = \"\")}) public MultiResponse200 errorCode(MultiRequest request) { if (request.getCode() == 400) { MultiResponse400 r = new MultiResponse400(); r.setCode(400); r.setMessage(\"bad request\"); throw new InvocationException(javax.ws.rs.core.Response.Status.BAD_REQUEST, r); } else if (request.getCode() == 500) { MultiResponse500 r = new MultiResponse500(); r.setCode(500); r.setMessage(\"internal error\"); throw new InvocationException(javax.ws.rs.core.Response.Status.INTERNAL_SERVER_ERROR, r); } else { MultiResponse200 r = new MultiResponse200(); r.setCode(200); r.setMessage(\"success result\"); return r; } } \u5ba2\u6237\u7aef\u4ee3\u7801\u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u65b9\u5f0f\u5904\u7406\u5f02\u5e38\u3002\u5f02\u5e38\u7684\u7c7b\u578b\u662f\u786e\u5b9a\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7cast\u83b7\u53d6\u5230\u5f02\u5e38\u7c7b\u578b\u3002 MultiRequest request = new MultiRequest(); request.setCode(200); ResponseEntity MultiResponse200 result = template .postForEntity(SERVER + \"/MultiErrorCodeService/errorCode\", request, MultiResponse200.class); TestMgr.check(result.getStatusCode(), 200); TestMgr.check(result.getBody().getMessage(), \"success result\"); request.setCode(400); MultiResponse400 t400 = null; try { template.postForEntity(SERVER + \"/MultiErrorCodeService/errorCode\", request, MultiResponse400.class); } catch (InvocationException e) { t400 = (MultiResponse400) e.getErrorData(); } TestMgr.check(t400.getCode(), 400); TestMgr.check(t400.getMessage(), \"bad request\"); request.setCode(500); MultiResponse500 t500 = null; try { template.postForEntity(SERVER + \"/MultiErrorCodeService/errorCode\", request, MultiResponse400.class); } catch (InvocationException e) { t500 = (MultiResponse500) e.getErrorData(); } TestMgr.check(t500.getCode(), 500); TestMgr.check(t500.getMessage(), \"internal error\"); \u63a7\u5236\u5f02\u5e38\uff1a\u8fd9\u7c7b\u5f02\u5e38\u901a\u5e38\u662f\u6846\u67b6\u5904\u7406\u6d41\u7a0b\u4e0a\u7684\u5f02\u5e38\u3002\u6bd4\u5982\u6d41\u63a7Handler\u629b\u51faTOO_MANY_REQUESTS_STATUS\u5f02\u5e38\u3002 public class ConsumerQpsFlowControlHandler implements Handler { ... ... if (qpsController.isLimitNewRequest()) { // return http status 429 CommonExceptionData errorData = new CommonExceptionData(\"rejected by qps flowcontrol\"); asyncResp.consumerFail( new InvocationException(QpsConst.TOO_MANY_REQUESTS_STATUS, errorData)); return; } invocation.next(asyncResp); } } \u63a7\u5236\u5f02\u5e38\u5728\u63a5\u53e3\u5b9a\u4e49\u91cc\u9762\u6ca1\u6709\u58f0\u660e\u3002\u5ba2\u6237\u7aef\u5728\u505a\u5f02\u5e38\u5904\u7406\u7684\u65f6\u5019\uff0c\u4e0d\u77e5\u9053\u5f02\u5e38\u7c7b\u578b\u3002\u53ef\u4ee5\u91c7\u7528\u5f31\u7c7b\u578b\u7684\u65b9\u5f0f\u5904\u7406\u5f02\u5e38\uff1a JsonObject requestJson = new JsonObject(); requestJson.put(\"code\", 400); requestJson.put(\"message\", \"test message\"); try { template .postForEntity(SERVER + \"/MultiErrorCodeService/noClientErrorCode\", requestJson, Object.class); } catch (InvocationException e) { TestMgr.check(e.getStatusCode(), 400); mapResult = RestObjectMapperFactory.getRestObjectMapper().convertValue(e.getErrorData(), Map.class); TestMgr.check(mapResult.get(\"message\"), \"test message\"); TestMgr.check(mapResult.get(\"code\"), 400); TestMgr.check(mapResult.get(\"t400\"), 400); } \u4e0a\u9762\u7684\u4ee3\u7801\u5047\u8bbe\u4e0d\u77e5\u9053\u5f02\u5e38\u7c7b\u578b\uff0c\u901a\u8fc7API\u5c06\u5f02\u5e38\u7c7b\u578b\u8f6c\u6362\u4e3aMap\u7c7b\u578b\uff0c\u7136\u540e\u4eceMap\u91cc\u9762\u8bfb\u53d6\u5f02\u5e38\u7c7b\u578b\u3002 ServiceComb\u81ea\u5df1\u629b\u51fa\u7684\u5f02\u5e38\u7c7b\u578b\u4e2d\uff0c\u4e00\u822c\u63a7\u5236\u5f02\u5e38\u7684\u7c7b\u578b\u4e5f\u662f\u56fa\u5b9a\u7684\uff0c\u4e3aCommonExceptionData\u3002 \u672a\u77e5\u5f02\u5e38\uff1a\u8fd9\u7c7b\u5f02\u5e38\u53d1\u751f\u7684\u60c5\u51b5\u4e0d\u786e\u5b9a\u3002\u6bd4\u5982\u4e1a\u52a1\u4ee3\u7801\u5b9e\u73b0\u7684\u65f6\u5019\uff0c\u629b\u51faNullPointerException\u7b49\u672a\u6355\u83b7\u5f02\u5e38\u3001\u5e95\u5c42 \u7684\u7f51\u7edc\u8fde\u63a5\u8d85\u65f6\u5f02\u5e38\u7b49\u3002\u8fd9\u7c7b\u5f02\u5e38\u4f1a\u7531ServiceComb\u5c01\u88c5\u6210590\u6216\u8005490\u9519\u8bef\u8fd4\u56de\u3002\u6bd4\u5982\uff1a CommonExceptionData errorData = new CommonExceptionData(cause.getMessage()); asyncResp.producerFail(new InvocationException(590, errorData) \u6216\u8005 asyncResp.consumerFail(new InvocationException(490, errorData) \u672a\u77e5\u5f02\u5e38\u6d88\u606f\u7684\u7c7b\u578b\u56fa\u5b9a\u4e3aCommonExceptionData\u7c7b\u578b\u3002","title":"\u5f02\u5e38\u5206\u7c7b\u53ca\u5ba2\u6237\u7aef\u5982\u4f55\u5224\u65ad\u5f02\u5e38\u7c7b\u578b"},{"location":"general-development/error-handling/#_3","text":"\u6709\u65f6\u5019\uff0c\u4e1a\u52a1\u9700\u8981\u5c06\u6240\u6709\u7684\u672a\u77e5\u5f02\u5e38\u3001\u63a7\u5236\u5f02\u5e38\u8fdb\u884c\u6355\u83b7\uff0c\u8f6c\u6362\u4e3a\u5bf9\u7528\u6237\u53cb\u597d\u7684\u6d88\u606f\u3002\u6216\u8005\u5bf9\u63a7\u5236\u5f02\u5e38\u8fdb\u884c\u6355\u83b7\uff0c\u5c06 \u6d88\u606f\u4f53\u8f6c\u6362\u4e3a\u81ea\u5b9a\u4e49\u7684JSON\u683c\u5f0f\u3002\u8fd9\u91cc\u9762\u6709\u51e0\u4e2a\u53c2\u8003\u70b9\u3002 \u901a\u8fc7 ExceptionToProducerResponseConverter \u62e6\u622a\u5f02\u5e38 ExceptionToProducerResponseConverter \u80fd\u591f\u62e6\u622a\u4e1a\u52a1\u5f02\u5e38\u4ee5\u53ca\u4e1a\u52a1\u5b9e\u73b0\u91cc\u9762\u629b\u51fa\u7684\u672a\u77e5\u5f02\u5e38\u3002\u4f46\u662f\u4e0d\u80fd\u62e6\u622a Handler\uff0cHttpServerFilter \u7b49\u629b\u51fa\u7684\u5f02\u5e38\u3002\u66f4\u52a0\u786e\u5207\u7684\u662f ProducerOperationHandler \u6355\u83b7\u7684\u5f02\u5e38\u90fd\u4f1a\u88ab ExceptionToProducerResponseConverter \u5904\u7406\u3002 ExceptionToProducerResponseConverter \u5305\u542b\u5982\u4e0b \u51e0\u4e2a\u63a5\u53e3\uff1a getExceptionClass() \u5b9e\u73b0\u7c7b\u6240\u5904\u7406\u7684\u5f02\u5e38\u7c7b\u578b\u3002\u5982\u679c\u8be5\u65b9\u6cd5\u8fd4\u56de null \uff0c\u5219\u8bf4\u660e\u6b64\u5b9e\u73b0\u7c7b\u4e3a\u9ed8\u8ba4converter\u3002 Response convert(SwaggerInvocation swaggerInvocation, T e) \u5904\u7406\u5f02\u5e38\u903b\u8f91\uff0c\u8be5\u65b9\u6cd5\u8fd4\u56de\u7684 Response \u51b3\u5b9a\u4e86ServiceComb\u5c06\u4f1a\u8fd4\u56de\u4f55\u79cd\u72b6\u6001\u7801\u3001\u4f55\u79cdresponse body\u7684\u5e94\u7b54\u3002 getOrder() \u5b9e\u73b0\u7c7b\u7684\u4f18\u5148\u7ea7\uff0c\u8be5\u65b9\u6cd5\u8fd4\u56de\u7684\u503c\u8d8a\u5c0f\uff0c\u4f18\u5148\u7ea7\u8d8a\u9ad8\uff0c\u5982\u679c\u4e0d\u8986\u5199\u8be5\u65b9\u6cd5\u7684\u8bdd\uff0c\u5219\u8fd4\u56de\u9ed8\u8ba4\u4f18\u5148\u7ea7 0 \u3002\u5bf9\u4e8e\u5904\u7406\u540c\u4e00\u5f02\u5e38\u7c7b\u578b\u7684converter\uff08\u6216\u9ed8\u8ba4converter\uff09\uff0c\u53ea\u6709\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u751f\u6548\u3002 \u5728\u4e3a\u5f02\u5e38\u9009\u62e9converter\u65f6\uff0c\u4f1a\u4ece\u5f02\u5e38\u672c\u8eab\u7684\u7c7b\u578b\u5f00\u59cb\u5339\u914d\uff0c\u5982\u679c\u627e\u4e0d\u5230\u5bf9\u5e94\u7684converter\u5219\u9010\u7ea7\u5411\u4e0a\u67e5\u627e\u7236\u7c7b\u578b\u7684converter\u3002\u5f53\u5339\u914d\u5230 Throwable \u4ecd\u672a\u627e\u5230converter\u65f6\uff0c\u5c06\u4f7f\u7528\u9ed8\u8ba4converter\u5904\u7406\u5f02\u5e38\u3002 public class CustomExceptionToProducerResponseConverter implements ExceptionToProducerResponseConverter IllegalStateException { @Override public Class IllegalStateException getExceptionClass() { // \u8fd4\u56deIllegalStateException\u8868\u793a\u8be5converter\u5904\u7406IllegalStateException\u7c7b\u578b\u7684\u5f02\u5e38 return IllegalStateException.class; } @Override public int getOrder() { // \u8fd4\u56de\u7684order\u503c\u8d8a\u5c0f\uff0c\u4f18\u5148\u7ea7\u8d8a\u9ad8 return 100; } @Override public Response convert(SwaggerInvocation swaggerInvocation, IllegalStateException e) { // \u8fd9\u91cc\u662f\u5904\u7406\u5f02\u5e38\u7684\u903b\u8f91 IllegalStateErrorData data = new IllegalStateErrorData(); data.setId(500); data.setMessage(e.getMessage()); data.setState(e.getMessage()); InvocationException state = new InvocationException(Status.INTERNAL_SERVER_ERROR, data); return Response.failResp(state); } } \u8bf4\u660e : 2.0.2 \u4e4b\u524d\u7684\u7248\u672c\u90e8\u5206\u4e1a\u52a1\u5f02\u5e38\u65e0\u6cd5\u901a\u8fc7 ExceptionToProducerResponseConverter \u6355\u83b7\uff0c \u7cfb\u7edf\u505a\u4e86\u81ea\u52a8\u5904\u7406\uff0c\u4e0d\u7ecf\u8fc7 ExceptionToProducerResponseConverter\u3002 2.0.2 \u7248\u672c\u89c4\u8303\u5316\u4e86\u5904\u7406\u6d41\u7a0b\u3002 \u901a\u8fc7 Handler \u62e6\u622a\u5f02\u5e38 \u53ef\u4ee5\u5f00\u53d1\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684 Handler, \u5e76\u4e14\u5c06\u5176\u653e\u5230\u5176\u4ed6 Handler \u7684\u524d\u9762\uff0c\u53ef\u4ee5\u5904\u7406\u7edd\u5927\u591a\u6570\u4e1a\u52a1\u5f02\u5e38\u3001\u63a7\u5236\u5f02\u5e38\u548c \u672a\u77e5\u5f02\u5e38\u3002Handler \u4e0d\u4ec5\u4ec5\u53ef\u4ee5\u5e2e\u52a9\u548c\u5904\u7406\u5f02\u5e38\uff0c\u8fd8\u53ef\u4ee5\u8bb0\u5f55\u8bbf\u95ee\u65e5\u5fd7\uff0c\u53c2 \u8003 2.0.1 \u65b0\u7279\u6027\u4ecb\u7ecd\uff1a \u5728\u65e5\u5fd7\u4e2d\u8bb0\u5f55trace id public class ExceptionConvertHandler implements Handler { @Override public void handle(Invocation invocation, AsyncResponse asyncResp) throws Exception { invocation.next(response - { if (response.isFailed()) { Throwable e = response.getResult(); if (e instanceof InvocationException ((InvocationException)e).getStatusCode() == 408) { CustomException customException = new CustomException(\"change the response\", 777); InvocationException stt = new InvocationException(Status.EXPECTATION_FAILED, customException); response.setResult(stt); response.setStatus(stt.getStatus()); } } asyncResp.complete(response); }); } } \u63a7\u5236\u6d88\u606f\u6d88\u606f\u4f53\u5e8f\u5217\u5316 \u63a7\u5236\u6d88\u606f\u6d88\u606f\u4f53\u5e8f\u5217\u5316\u7684\u76ee\u7684\u662f\u7b80\u5316\u6d88\u8d39\u8005\u7684\u5f02\u5e38\u5904\u7406\u903b\u8f91\uff0c\u4e0d\u7528\u4f7f\u7528\u5f31\u7c7b\u578b\uff0c\u800c\u662f\u4f7f\u7528\u786e\u5207\u7c7b\u578b\u3002\u53ef\u4ee5\u91c7\u7528\u6ce8\u518c\u5168\u5c40\u7684\u9519\u8bef\u7801\u7c7b\u578b\u3002 \u4e1a\u52a1\u9700\u8981\u901a\u8fc7SPI\u5b9e\u73b0org.apache.servicecomb.swagger.invocation.response.ResponseMetaMapper\u63a5\u53e3\u3002 \u63a5\u53e3\u7684\u6838\u5fc3\u5185\u5bb9\u662f\u4e3a\u6bcf\u4e2a\u9519\u8bef\u7801\u6307\u5b9a\u5e8f\u5217\u5316\u7c7b\u578b\uff1a private final static Map Integer, ResponseMeta CODES = new HashMap (1); static { ResponseMeta meta = new ResponseMeta(); meta.setJavaType(SimpleType.constructUnsafe(IllegalStateErrorData.class)); CODES.put(500, meta); } @Override public Map Integer, ResponseMeta getMapper() { return CODES; }","title":"\u5f02\u5e38\u62e6\u622a\u5668"},{"location":"general-development/file-download/","text":"\u6587\u4ef6\u4e0b\u8f7d\u5f00\u53d1\u6307\u5bfc \u670d\u52a1\u63d0\u4f9b\u8005\u5f00\u53d1 \u6587\u4ef6\u4e0b\u8f7d\u652f\u6301\u91c7\u7528 Spring MVC \u548c Jax RS \u5f00\u53d1\u3002 \u56e0\u4e3a\u6587\u4ef6\u4e0b\u8f7d\u90fd\u662f GET \u65b9\u6cd5\uff0c \u56e0\u6b64\u4e24\u8005\u7684\u4f7f\u7528\u5dee\u5f02\u5f88\u5c0f\uff0c \u8fd9\u91cc\u7684\u4f8b\u5b50\u53ea\u63d0\u4f9b Spring MVC \u3002 File \u6700\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u63a5\u53e3\u7684\u8fd4\u56de\u53c2\u6570\u58f0\u660e\u4e3a File \u7c7b\u578b\u7684\u53c2\u6570\uff0c \u5373\u53ef\u5b9a\u4e49\u4e00\u4e2a\u4e0b\u8f7d\u63a5\u53e3\u3002 @GetMapping(path = /file ) public File file(String name) Part \u5982\u679c\u9700\u8981\u6839\u636e\u8bf7\u6c42\u53c2\u6570\u52a8\u6001\u521b\u5efa\u4e34\u65f6\u6587\u4ef6\uff0c\u4e0b\u8f7d\u5b8c\u6210\u540e\uff0c\u5c06\u4e34\u65f6\u6587\u4ef6\u5220\u9664\uff0c\u53ef\u4ee5\u91c7\u7528 Part \u7c7b\u578b\u7684\u53c2\u6570\u3002 @GetMapping(path = /file ) public Part file(String content) throws IOException { File file = createTempFile(content); return new FilePart(null, file) .setDeleteAfterFinished(true) .setSubmittedFileName( test.txt ); } Resource \u53ef\u4ee5\u5c06\u63a5\u53e3\u58f0\u660e\u4e3a org.springframework.core.io.Resource\u3002 \u7531\u4e8eresource\u4e0d\u4e00\u5b9a\u8868\u793a\u6587\u4ef6\u4e0b\u8f7d\uff0c\u6240\u4ee5\u9700\u8981\u901a\u8fc7 @ApiResponse \u6807\u8bc6\u8fd9\u662f\u4e00\u4e2a\u6587\u4ef6\u4e0b\u8f7d\u573a\u666f \u4ee5ByteArrayResource\u4e3a\u4f8b\u8bf4\u660e\uff1a @GetMapping(path = /resource ) @ApiResponses({ @ApiResponse(code = 200, response = File.class, message = ) }) public Resource resource() { return new ByteArrayResource(bytes) { @Override public String getFilename() { return resource.txt ; } }; } \u4e0a\u4f8b\u4e2d\uff0c\u56e0\u4e3aByteArrayResource\u6ca1\u6709\u6587\u4ef6\u540d\u7684\u6982\u5ff5\uff0c\u6240\u4ee5\u9700\u8981\u5b9e\u73b0Resource\u7684getFilename\u65b9\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7ResponseEntity \u8fdb\u884c\u5305\u88c5\uff1a @GetMapping(path = /resource ) @ApiResponses({ @ApiResponse(code = 200, response = File.class, message = ) }) public ResponseEntity Resource resource() { return ResponseEntity .ok() .header(HttpHeaders.CONTENT_TYPE, MediaType.TEXT_PLAIN_VALUE) .header(HttpHeaders.CONTENT_DISPOSITION, attachment;filename=resource.txt ) .body(resource); } InputStream \u4e00\u6837\u7684\uff0c \u4f7f\u7528 InputStream \u9700\u8981 @ApiResponse \u6807\u8bc6\u8fd9\u662f\u4e00\u4e2a\u6587\u4ef6\u4e0b\u8f7d\u573a\u666f return ResponseEntity .ok() .header(HttpHeaders.CONTENT_TYPE, MediaType.TEXT_PLAIN_VALUE) .header(HttpHeaders.CONTENT_DISPOSITION, attachment;filename=resource.txt ) .body(stream); \u5728\u4e0b\u8f7d\u5b8c\u6210\u540e\uff0cServiceComb\u4f1a\u81ea\u52a8\u5173\u95edstream\uff0c\u5f00\u53d1\u4eba\u5458\u4e0d\u5fc5\u518d\u5173\u6ce8\u3002 \u6587\u4ef6\u7c7b\u578b\u5224\u5b9a \u53ea\u8981\u6ca1\u6709\u901a\u8fc7ResponseEntity\u76f4\u63a5\u8bbe\u7f6eHttpHeaders.CONTENT_TYPE\uff0cServiceComb\u90fd\u4f1a\u5c1d\u8bd5\u901a\u8fc7File\u3001Part\u3001Resource\u4e2d\u7684\u6587\u4ef6\u540d\u540e\u7f00\u8fdb\u884c\u81ea\u52a8\u5224\u5b9a\u3002 ServiceComb\u4f7f\u7528java\u7684mime type\u673a\u5236\u8fdb\u884c\u6587\u4ef6\u7c7b\u578b\u5224\u5b9a\uff0c\u5982\u679c\u4e1a\u52a1\u573a\u666f\u4e2d\u7684\u6587\u4ef6\u540e\u7f00\u65e0\u6cd5\u88ab\u8bc6\u522b\uff0cServiceComb\u4f1a\u9ed8\u8ba4\u5904\u7406\u4e3aapplication/octet-stream \u5982\u679c\u8fd9\u4e0d\u6ee1\u8db3\u8981\u6c42\uff0c\u5047\u8bbe\u6587\u4ef6\u540e\u7f00\u4e3axyz\uff0c\u671f\u671b\u6587\u4ef6\u7c7b\u578b\u4e3aapplication/file-xyz\uff0c\u4ee5\u4e0b\u65b9\u5f0f\u4efb\u9009\u4e00\u79cd\u5747\u53ef\u89e3\u51b3\uff1a \u901a\u8fc7Java\u7684mime type\u673a\u5236\u6269\u5c55 \u5728META-INF\u76ee\u5f55\u4e0b\uff0c\u521b\u5efamime.types\u6587\u4ef6\uff0c\u5176\u5185\u5bb9\u4e3a\uff1a application/file-xyz xyz 2. \u5728\u4e1a\u52a1\u4ee3\u7801\u4e2d\u901a\u8fc7Part\u6307\u5b9a @GetMapping(path = /tempFilePart ) public Part tempFilePart(String content) throws IOException { File file = createTempFile(content); return new FilePart(null, file) .setDeleteAfterFinished(true) .contentType( application/file-xyz ) .setSubmittedFileName( tempFilePart.txt ); } 3. \u5728\u4e1a\u52a1\u4ee3\u7801\u4e2d\u901a\u8fc7ResponseEntity\u6307\u5b9a @GetMapping(path = /tempFileEntity ) public ResponseEntity Part tempFileEntity(String content) throws IOException { File file = createTempFile(content); return ResponseEntity .ok() .header(HttpHeaders.CONTENT_TYPE, application/file-xyz ) .header(HttpHeaders.CONTENT_DISPOSITION, attachment;filename=tempFileEntity.txt ) .body(new FilePart(null, file) .setDeleteAfterFinished(true)); } \u6307\u5b9a\u6587\u4ef6\u540d \u53ea\u8981\u6ca1\u6709\u901a\u8fc7ResponseEntity\u76f4\u63a5\u8bbe\u7f6eHttpHeaders.CONTENT_DISPOSITION\uff0cServiceComb\u90fd\u4f1a\u5c1d\u8bd5\u901a\u8fc7File\u3001Part\u3001Resource\u4e2d\u7684\u6587\u4ef6\u540d\u751f\u6210HttpHeaders.CONTENT_DISPOSITION\uff0c\u5047\u8bbe\u6587\u4ef6\u540d\u4e3afile.txt\uff0c\u5219\u751f\u6210\u7684\u6570\u636e\u5982\u4e0b\uff1a Content-Disposition: attachment;filename=file.txt;filename*=utf-8\u2019\u2019file.txt \u4e0d\u4ec5\u4ec5\u751f\u6210filename\uff0c\u8fd8\u751f\u6210\u4e86filename*\uff0c\u8fd9\u662f\u56e0\u4e3a\u5982\u679c\u6587\u4ef6\u540d\u4e2d\u51fa\u73b0\u4e86\u4e2d\u6587\u3001\u7a7a\u683c\uff0c\u5e76\u4e14filename\u6b63\u786e\u5730\u505a\u4e86encode\uff0cie\u3001chrome\u90fd\u6ca1\u6709\u95ee\u9898\uff0c\u4f46\u662ffirefox\u76f4\u63a5\u5c06encode\u540e\u7684\u4e32\u5f53\u4f5c\u6587\u4ef6\u540d\u76f4\u63a5\u4f7f\u7528\u4e86\u3002firefox\u6309\u7167 https://tools.ietf.org/html/rtf6266 \uff0c\u53ea\u5bf9filename*\u8fdb\u884c\u89e3\u7801\u3002 \u5982\u679c\u4e1a\u52a1\u4ee3\u7801\u4e2d\u76f4\u63a5\u8bbe\u7f6eContent-Disposition\uff0c\u9700\u8981\u81ea\u884c\u5904\u7406\u591a\u6d4f\u89c8\u5668\u652f\u6301\u7684\u95ee\u9898\u3002 \u6587\u4ef6\u4e0b\u8f7d\u7684\u66f4\u591a\u7528\u6cd5\u53ef\u4ee5\u901a\u8fc7\u4e0b\u8f7d java-chassis \u6e90\u7801\uff0c \u67e5\u770b DownloadSchema \u91cc\u9762\u7684\u4f8b\u5b50\u3002 \u670d\u52a1\u6d88\u8d39\u8005\u5f00\u53d1 \u6d88\u8d39\u8005\u7edf\u4e00\u4f7f\u7528 org.apache.servicecomb.foundation.vertx.http.ReadStreamPart \u5904\u7406\u6587\u4ef6\u4e0b\u8f7d\u3002 \u53ef\u4ee5\u4f7f\u7528\u900f\u660e RPC \u65b9\u5f0f\uff0c public interface \u2026\u2026{ ReadStreamPart download1(\u2026\u2026); ReadStreamPart download2(\u2026\u2026); } \u6216\u8005 RestTemplate ReadStreamPart part = restTemplate.getForObject(url, ReadStreamPart.class); ReadStreamPart\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u65b9\u6cd5\uff0c\u5c06\u6570\u636e\u6d41\u4fdd\u5b58\u4e3a\u672c\u5730\u6570\u636e\uff1a org.apache.servicecomb.foundation.vertx.http.ReadStreamPart.saveAsBytes() org.apache.servicecomb.foundation.vertx.http.ReadStreamPart.saveAsString() org.apache.servicecomb.foundation.vertx.http.ReadStreamPart.saveToFile(String) org.apache.servicecomb.foundation.vertx.http.ReadStreamPart.saveToFile(File, OpenOptions) \u6ce8\u610f\uff1a \u5728\u5f97\u5230ReadStreamPart\u5b9e\u4f8b\u65f6\uff0c\u5e76\u6ca1\u6709\u5b8c\u6210\u6587\u4ef6\u5185\u5bb9\u7684\u4e0b\u8f7d\uff0c\u8c03\u7528save\u7cfb\u5217\u65b9\u6cd5\u624d\u5f00\u59cb\u771f\u6b63\u4ece\u7f51\u7edc\u4e0a\u8bfb\u53d6\u6587\u4ef6\u6570\u636e\u3002 \u5982\u679c\u4f7f\u7528saveAsBytes\u3001saveAsString\uff0c\u6570\u636e\u662f\u76f4\u63a5\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\u7684\uff0c\u5982\u679c\u4e0b\u8f7d\u7684\u6587\u4ef6\u5f88\u5927\uff0c\u4f1a\u5bfc\u81f4\u5185\u5b58\u6ea2\u51fa\u3002 save\u7cfb\u5217\u65b9\u6cd5\uff0c\u8fd4\u56de\u7684\u90fd\u662fCompletableFuture\u5bf9\u8c61\uff0c \u5982\u679c\u8981\u963b\u585e\u7b49\u5f85\u4e0b\u8f7d\u5b8c\u6210\uff0c\u901a\u8fc7future.get()\u5373\u53ef\uff1b \u5982\u679c\u901a\u8fc7future.whenComplete\u8fdb\u884c\u5f02\u6b65\u56de\u8c03\u5904\u7406\uff0c\u8981\u6ce8\u610f\u56de\u8c03\u662f\u53d1\u751f\u5728\u7f51\u7edc\u7ebf\u7a0b\u4e2d\u7684\uff0c\u6b64\u65f6\u9700\u8981\u9075\u5b88reactive\u7684\u7ebf\u7a0b\u89c4\u5219\u3002","title":"\u6587\u4ef6\u4e0b\u8f7d\u5f00\u53d1\u6307\u5bfc"},{"location":"general-development/file-download/#_1","text":"","title":"\u6587\u4ef6\u4e0b\u8f7d\u5f00\u53d1\u6307\u5bfc"},{"location":"general-development/file-download/#_2","text":"\u6587\u4ef6\u4e0b\u8f7d\u652f\u6301\u91c7\u7528 Spring MVC \u548c Jax RS \u5f00\u53d1\u3002 \u56e0\u4e3a\u6587\u4ef6\u4e0b\u8f7d\u90fd\u662f GET \u65b9\u6cd5\uff0c \u56e0\u6b64\u4e24\u8005\u7684\u4f7f\u7528\u5dee\u5f02\u5f88\u5c0f\uff0c \u8fd9\u91cc\u7684\u4f8b\u5b50\u53ea\u63d0\u4f9b Spring MVC \u3002 File \u6700\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u63a5\u53e3\u7684\u8fd4\u56de\u53c2\u6570\u58f0\u660e\u4e3a File \u7c7b\u578b\u7684\u53c2\u6570\uff0c \u5373\u53ef\u5b9a\u4e49\u4e00\u4e2a\u4e0b\u8f7d\u63a5\u53e3\u3002 @GetMapping(path = /file ) public File file(String name) Part \u5982\u679c\u9700\u8981\u6839\u636e\u8bf7\u6c42\u53c2\u6570\u52a8\u6001\u521b\u5efa\u4e34\u65f6\u6587\u4ef6\uff0c\u4e0b\u8f7d\u5b8c\u6210\u540e\uff0c\u5c06\u4e34\u65f6\u6587\u4ef6\u5220\u9664\uff0c\u53ef\u4ee5\u91c7\u7528 Part \u7c7b\u578b\u7684\u53c2\u6570\u3002 @GetMapping(path = /file ) public Part file(String content) throws IOException { File file = createTempFile(content); return new FilePart(null, file) .setDeleteAfterFinished(true) .setSubmittedFileName( test.txt ); } Resource \u53ef\u4ee5\u5c06\u63a5\u53e3\u58f0\u660e\u4e3a org.springframework.core.io.Resource\u3002 \u7531\u4e8eresource\u4e0d\u4e00\u5b9a\u8868\u793a\u6587\u4ef6\u4e0b\u8f7d\uff0c\u6240\u4ee5\u9700\u8981\u901a\u8fc7 @ApiResponse \u6807\u8bc6\u8fd9\u662f\u4e00\u4e2a\u6587\u4ef6\u4e0b\u8f7d\u573a\u666f \u4ee5ByteArrayResource\u4e3a\u4f8b\u8bf4\u660e\uff1a @GetMapping(path = /resource ) @ApiResponses({ @ApiResponse(code = 200, response = File.class, message = ) }) public Resource resource() { return new ByteArrayResource(bytes) { @Override public String getFilename() { return resource.txt ; } }; } \u4e0a\u4f8b\u4e2d\uff0c\u56e0\u4e3aByteArrayResource\u6ca1\u6709\u6587\u4ef6\u540d\u7684\u6982\u5ff5\uff0c\u6240\u4ee5\u9700\u8981\u5b9e\u73b0Resource\u7684getFilename\u65b9\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7ResponseEntity \u8fdb\u884c\u5305\u88c5\uff1a @GetMapping(path = /resource ) @ApiResponses({ @ApiResponse(code = 200, response = File.class, message = ) }) public ResponseEntity Resource resource() { return ResponseEntity .ok() .header(HttpHeaders.CONTENT_TYPE, MediaType.TEXT_PLAIN_VALUE) .header(HttpHeaders.CONTENT_DISPOSITION, attachment;filename=resource.txt ) .body(resource); } InputStream \u4e00\u6837\u7684\uff0c \u4f7f\u7528 InputStream \u9700\u8981 @ApiResponse \u6807\u8bc6\u8fd9\u662f\u4e00\u4e2a\u6587\u4ef6\u4e0b\u8f7d\u573a\u666f return ResponseEntity .ok() .header(HttpHeaders.CONTENT_TYPE, MediaType.TEXT_PLAIN_VALUE) .header(HttpHeaders.CONTENT_DISPOSITION, attachment;filename=resource.txt ) .body(stream); \u5728\u4e0b\u8f7d\u5b8c\u6210\u540e\uff0cServiceComb\u4f1a\u81ea\u52a8\u5173\u95edstream\uff0c\u5f00\u53d1\u4eba\u5458\u4e0d\u5fc5\u518d\u5173\u6ce8\u3002 \u6587\u4ef6\u7c7b\u578b\u5224\u5b9a \u53ea\u8981\u6ca1\u6709\u901a\u8fc7ResponseEntity\u76f4\u63a5\u8bbe\u7f6eHttpHeaders.CONTENT_TYPE\uff0cServiceComb\u90fd\u4f1a\u5c1d\u8bd5\u901a\u8fc7File\u3001Part\u3001Resource\u4e2d\u7684\u6587\u4ef6\u540d\u540e\u7f00\u8fdb\u884c\u81ea\u52a8\u5224\u5b9a\u3002 ServiceComb\u4f7f\u7528java\u7684mime type\u673a\u5236\u8fdb\u884c\u6587\u4ef6\u7c7b\u578b\u5224\u5b9a\uff0c\u5982\u679c\u4e1a\u52a1\u573a\u666f\u4e2d\u7684\u6587\u4ef6\u540e\u7f00\u65e0\u6cd5\u88ab\u8bc6\u522b\uff0cServiceComb\u4f1a\u9ed8\u8ba4\u5904\u7406\u4e3aapplication/octet-stream \u5982\u679c\u8fd9\u4e0d\u6ee1\u8db3\u8981\u6c42\uff0c\u5047\u8bbe\u6587\u4ef6\u540e\u7f00\u4e3axyz\uff0c\u671f\u671b\u6587\u4ef6\u7c7b\u578b\u4e3aapplication/file-xyz\uff0c\u4ee5\u4e0b\u65b9\u5f0f\u4efb\u9009\u4e00\u79cd\u5747\u53ef\u89e3\u51b3\uff1a \u901a\u8fc7Java\u7684mime type\u673a\u5236\u6269\u5c55 \u5728META-INF\u76ee\u5f55\u4e0b\uff0c\u521b\u5efamime.types\u6587\u4ef6\uff0c\u5176\u5185\u5bb9\u4e3a\uff1a application/file-xyz xyz 2. \u5728\u4e1a\u52a1\u4ee3\u7801\u4e2d\u901a\u8fc7Part\u6307\u5b9a @GetMapping(path = /tempFilePart ) public Part tempFilePart(String content) throws IOException { File file = createTempFile(content); return new FilePart(null, file) .setDeleteAfterFinished(true) .contentType( application/file-xyz ) .setSubmittedFileName( tempFilePart.txt ); } 3. \u5728\u4e1a\u52a1\u4ee3\u7801\u4e2d\u901a\u8fc7ResponseEntity\u6307\u5b9a @GetMapping(path = /tempFileEntity ) public ResponseEntity Part tempFileEntity(String content) throws IOException { File file = createTempFile(content); return ResponseEntity .ok() .header(HttpHeaders.CONTENT_TYPE, application/file-xyz ) .header(HttpHeaders.CONTENT_DISPOSITION, attachment;filename=tempFileEntity.txt ) .body(new FilePart(null, file) .setDeleteAfterFinished(true)); } \u6307\u5b9a\u6587\u4ef6\u540d \u53ea\u8981\u6ca1\u6709\u901a\u8fc7ResponseEntity\u76f4\u63a5\u8bbe\u7f6eHttpHeaders.CONTENT_DISPOSITION\uff0cServiceComb\u90fd\u4f1a\u5c1d\u8bd5\u901a\u8fc7File\u3001Part\u3001Resource\u4e2d\u7684\u6587\u4ef6\u540d\u751f\u6210HttpHeaders.CONTENT_DISPOSITION\uff0c\u5047\u8bbe\u6587\u4ef6\u540d\u4e3afile.txt\uff0c\u5219\u751f\u6210\u7684\u6570\u636e\u5982\u4e0b\uff1a Content-Disposition: attachment;filename=file.txt;filename*=utf-8\u2019\u2019file.txt \u4e0d\u4ec5\u4ec5\u751f\u6210filename\uff0c\u8fd8\u751f\u6210\u4e86filename*\uff0c\u8fd9\u662f\u56e0\u4e3a\u5982\u679c\u6587\u4ef6\u540d\u4e2d\u51fa\u73b0\u4e86\u4e2d\u6587\u3001\u7a7a\u683c\uff0c\u5e76\u4e14filename\u6b63\u786e\u5730\u505a\u4e86encode\uff0cie\u3001chrome\u90fd\u6ca1\u6709\u95ee\u9898\uff0c\u4f46\u662ffirefox\u76f4\u63a5\u5c06encode\u540e\u7684\u4e32\u5f53\u4f5c\u6587\u4ef6\u540d\u76f4\u63a5\u4f7f\u7528\u4e86\u3002firefox\u6309\u7167 https://tools.ietf.org/html/rtf6266 \uff0c\u53ea\u5bf9filename*\u8fdb\u884c\u89e3\u7801\u3002 \u5982\u679c\u4e1a\u52a1\u4ee3\u7801\u4e2d\u76f4\u63a5\u8bbe\u7f6eContent-Disposition\uff0c\u9700\u8981\u81ea\u884c\u5904\u7406\u591a\u6d4f\u89c8\u5668\u652f\u6301\u7684\u95ee\u9898\u3002 \u6587\u4ef6\u4e0b\u8f7d\u7684\u66f4\u591a\u7528\u6cd5\u53ef\u4ee5\u901a\u8fc7\u4e0b\u8f7d java-chassis \u6e90\u7801\uff0c \u67e5\u770b DownloadSchema \u91cc\u9762\u7684\u4f8b\u5b50\u3002","title":"\u670d\u52a1\u63d0\u4f9b\u8005\u5f00\u53d1"},{"location":"general-development/file-download/#_3","text":"\u6d88\u8d39\u8005\u7edf\u4e00\u4f7f\u7528 org.apache.servicecomb.foundation.vertx.http.ReadStreamPart \u5904\u7406\u6587\u4ef6\u4e0b\u8f7d\u3002 \u53ef\u4ee5\u4f7f\u7528\u900f\u660e RPC \u65b9\u5f0f\uff0c public interface \u2026\u2026{ ReadStreamPart download1(\u2026\u2026); ReadStreamPart download2(\u2026\u2026); } \u6216\u8005 RestTemplate ReadStreamPart part = restTemplate.getForObject(url, ReadStreamPart.class); ReadStreamPart\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u65b9\u6cd5\uff0c\u5c06\u6570\u636e\u6d41\u4fdd\u5b58\u4e3a\u672c\u5730\u6570\u636e\uff1a org.apache.servicecomb.foundation.vertx.http.ReadStreamPart.saveAsBytes() org.apache.servicecomb.foundation.vertx.http.ReadStreamPart.saveAsString() org.apache.servicecomb.foundation.vertx.http.ReadStreamPart.saveToFile(String) org.apache.servicecomb.foundation.vertx.http.ReadStreamPart.saveToFile(File, OpenOptions) \u6ce8\u610f\uff1a \u5728\u5f97\u5230ReadStreamPart\u5b9e\u4f8b\u65f6\uff0c\u5e76\u6ca1\u6709\u5b8c\u6210\u6587\u4ef6\u5185\u5bb9\u7684\u4e0b\u8f7d\uff0c\u8c03\u7528save\u7cfb\u5217\u65b9\u6cd5\u624d\u5f00\u59cb\u771f\u6b63\u4ece\u7f51\u7edc\u4e0a\u8bfb\u53d6\u6587\u4ef6\u6570\u636e\u3002 \u5982\u679c\u4f7f\u7528saveAsBytes\u3001saveAsString\uff0c\u6570\u636e\u662f\u76f4\u63a5\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\u7684\uff0c\u5982\u679c\u4e0b\u8f7d\u7684\u6587\u4ef6\u5f88\u5927\uff0c\u4f1a\u5bfc\u81f4\u5185\u5b58\u6ea2\u51fa\u3002 save\u7cfb\u5217\u65b9\u6cd5\uff0c\u8fd4\u56de\u7684\u90fd\u662fCompletableFuture\u5bf9\u8c61\uff0c \u5982\u679c\u8981\u963b\u585e\u7b49\u5f85\u4e0b\u8f7d\u5b8c\u6210\uff0c\u901a\u8fc7future.get()\u5373\u53ef\uff1b \u5982\u679c\u901a\u8fc7future.whenComplete\u8fdb\u884c\u5f02\u6b65\u56de\u8c03\u5904\u7406\uff0c\u8981\u6ce8\u610f\u56de\u8c03\u662f\u53d1\u751f\u5728\u7f51\u7edc\u7ebf\u7a0b\u4e2d\u7684\uff0c\u6b64\u65f6\u9700\u8981\u9075\u5b88reactive\u7684\u7ebf\u7a0b\u89c4\u5219\u3002","title":"\u670d\u52a1\u6d88\u8d39\u8005\u5f00\u53d1"},{"location":"general-development/file-upload/","text":"\u6587\u4ef6\u4e0a\u4f20\u5f00\u53d1\u6307\u5bfc \u670d\u52a1\u63d0\u4f9b\u8005\u5f00\u53d1 \u670d\u52a1\u63d0\u4f9b\u8005\u53ef\u4ee5\u91c7\u7528Spring MVC \u6216\u8005 Jax RS\u5b9a\u4e49\u4e0a\u4f20\u63a5\u53e3\u3002 \u91c7\u7528Spring MVC @PostMapping(path = /fileUpload , produces = MediaType.TEXT_PLAIN_VALUE, consumes = MediaType.MULTIPART_FORM_DATA_VALUE) public String fileUpload(@RequestPart(name = file ) MultipartFile file) @PostMapping(path = /fileUpload , produces = MediaType.TEXT_PLAIN_VALUE, consumes = MediaType.MULTIPART_FORM_DATA_VALUE) public String fileUpload(@RequestPart(name = file ) Part file) \u6587\u4ef6\u4e0a\u4f20\u9700\u8981\u901a\u8fc7 @RequestPart \u58f0\u660e\u53c2\u6570\uff0c\u53c2\u6570\u7c7b\u578b\u652f\u6301 servlet \u5b9a\u4e49\u7684 javax.servlet.http.Part \u7c7b\u578b\uff0c\u4e5f\u652f\u6301 org.springframework.web.multipart.MultipartFile \u7c7b\u578b\uff0c\u4e24\u79cd\u6570\u636e\u7c7b\u578b\u529f\u80fd\u662f\u4e00\u81f4\u7684\uff0cMultipartFile \u7684\u5e95 \u5c42\u4e5f\u662fPart\u3002 \u4e24\u79cd\u6570\u636e\u7c7b\u578b\u53ef\u4ee5\u6df7\u5408\u4f7f\u7528\uff0c\u6bd4\u5982\u7b2c\u4e00\u4e2a\u53c2\u6570\u662fPart\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662fMultipartFile\u3002 \u9664\u4e86\u901a\u8fc7 \u5b9a\u4e49\u591a\u4e2a\u53c2\u6570\u7684\u65b9\u5f0f\u4e0a\u4f20\u591a\u4e2a\u6587\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7List\u6216\u8005\u6570\u7ec4\u7684\u65b9\u5f0f\u58f0\u660e\u4e0a\u4f20\u591a\u4e2a\u6587\u4ef6\u3002 @PostMapping(path = /fileUpload , produces = MediaType.TEXT_PLAIN_VALUE, consumes = MediaType.MULTIPART_FORM_DATA_VALUE) public String fileUpload(@RequestPart(name = files ) List MultipartFile files) @PostMapping(path = /fileUpload , produces = MediaType.TEXT_PLAIN_VALUE, consumes = MediaType.MULTIPART_FORM_DATA_VALUE) public String fileUpload(@RequestPart(name = files ) MultipartFile[] files) \u53ef\u4ee5\u901a\u8fc7@RequestAttribute\u83b7\u53d6\u5176\u4ed6\u989d\u5916\u4fe1\u606f\u3002 @PostMapping(path = /fileUpload , produces = MediaType.TEXT_PLAIN_VALUE, consumes = MediaType.MULTIPART_FORM_DATA_VALUE) public String fileUpload(@RequestPart(name = files ) List MultipartFile files, @RequestAttribute( message ) String message) Spring MVC\u65b9\u5f0f\u5b9a\u4e49\u4e0a\u4f20\u63a5\u53e3\u8fd8\u6709\u5176\u4ed6\u5f88\u591a\u65b9\u5f0f\uff0c\u53ef\u4ee5\u4e0b\u8f7djava-chassis\u6e90\u7801\uff0c\u5e76\u67e5\u770bUploadSpringmvcSchema\u91cc\u9762\u7684\u793a\u4f8b\u3002 \u91c7\u7528Jax RS @Path( /fileUpload ) @POST @Produces(MediaType.TEXT_PLAIN) public String fileUpload(@FormParam(name = file ) Part file) \u6587\u4ef6\u4e0a\u4f20\u9700\u8981\u901a\u8fc7 @FormParam \u58f0\u660e\u53c2\u6570\uff0c\u53c2\u6570\u7c7b\u578b\u652f\u6301servlet\u5b9a\u4e49\u7684javax.servlet.http.Part\u7c7b\u578b\u3002\u9664\u4e86\u901a\u8fc7 \u5b9a\u4e49\u591a\u4e2a\u53c2\u6570\u7684\u65b9\u5f0f\u4e0a\u4f20\u591a\u4e2a\u6587\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7List\u6216\u8005\u6570\u7ec4\u7684\u65b9\u5f0f\u58f0\u660e\u4e0a\u4f20\u591a\u4e2a\u6587\u4ef6\u3002 @Path( /fileUpload ) @POST @Produces(MediaType.TEXT_PLAIN) public String fileUpload(@FormParam(name = files ) List Part files) @Path( /fileUpload ) @POST @Produces(MediaType.TEXT_PLAIN) public String fileUpload(@FormParam(name = files ) Part[] files) \u53ef\u4ee5\u901a\u8fc7@FormParam\u83b7\u53d6\u5176\u4ed6\u989d\u5916\u4fe1\u606f\u3002 @Path( /fileUpload ) @POST @Produces(MediaType.TEXT_PLAIN) public String fileUpload(@FormParam(name = files ) List Part files, @FormParam( message ) String message) Jax RS \u65b9\u5f0f\u5b9a\u4e49\u4e0a\u4f20\u63a5\u53e3\u8fd8\u6709\u5176\u4ed6\u5f88\u591a\u65b9\u5f0f\uff0c\u53ef\u4ee5\u4e0b\u8f7djava-chassis\u6e90\u7801\uff0c\u5e76\u67e5\u770b UploadJaxrsSchema \u91cc\u9762\u7684\u793a\u4f8b\u3002 \u4e1a\u52a1\u5f00\u53d1\u6ce8\u610f\u4e8b\u9879 \u901a\u8fc7MultipartFile\u6216Part\u6253\u5f00\u6d41\u540e\uff0c\u8bb0\u5f97\u5173\u95ed\uff0c\u5426\u5219\u4e0a\u4f20\u7684\u4e34\u65f6\u6587\u4ef6\u4f1a\u65e0\u6cd5\u5220\u9664\uff0c\u5bfc\u81f4\u8d44\u6e90\u6cc4\u9732\u548c\u78c1\u76d8\u7a7a\u95f4\u8017\u5c3d\u3002 \u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005 \u53ef\u4ee5\u4f7f\u7528\u900f\u660e RPC interface UploadIntf { String upload(File file); } @RpcReference(microserviceName = name , schemaId = schema ) UploadIntf uploadIntf; String result = uploadIntf.upload(file); \u6216\u8005 RestTemplate \u8fdb\u884c\u6587\u4ef6\u4e0a\u4f20\u3002 Map String, Object map = new HashMap (); map.put( file , new FileSystemResource( a file path! )); map.put( param1 , test ); HttpHeaders headers = new HttpHeaders(); headers.setContentType(org.springframework.http.MediaType.MULTIPART_FORM_DATA); HttpEntity Map String, Object entity = new HttpEntity (map, headers); String reseult = template.postForObject(url, entity, String.class); \u670d\u52a1\u6d88\u8d39\u8005\u4e0d\u533a\u5206\u670d\u52a1\u63d0\u4f9b\u8005\u662f Spring MVC \u6216\u8005 Jax RS\u3002 \u5728\u4f7f\u7528\u900f\u660e RPC \u6216\u8005 RestTemplate \u7684\u65f6\u5019\uff0c \u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u7c7b\u578b \u4e0e\u670d\u52a1\u63d0\u4f9b\u8005\u7684\u6587\u4ef6\u5bf9\u5e94\uff1a java.io.File javax.servlet.http.Part java.io.InputStream org.springframework.core.io.Resource \u4f7f\u7528InputStream\u65f6\uff0c\u56e0\u4e3a\u662f\u6d41\u7684\u65b9\u5f0f\uff0c\u6b64\u65f6\u6ca1\u6709\u5ba2\u6237\u7aef\u6587\u4ef6\u540d\u7684\u6982\u5ff5\uff0c\u670d\u52a1\u63d0\u4f9b\u8005\u83b7\u53d6\u5230\u7684\u6587\u4ef6\u540d\u4e3anull\u3002 \u5982\u679c\u65e2\u8981\u4f7f\u7528\u5185\u5b58\u6570\u636e\uff0c\u53c8\u60f3\u8ba9producer\u53ef\u4ee5\u83b7\u53d6\u5ba2\u6237\u7aef\u6587\u4ef6\u540d\uff0c\u53ef\u4ee5\u4f7f\u7528resource\u7c7b\u578b\uff0c\u7ee7\u627f org.springframework.core.io.ByteArrayResource\uff0c\u4e14\u9700\u8981\u5b9e\u73b0 getFilename \u65b9\u6cd5\u3002 \u4e00\u6837\u7684\uff0c\u670d\u52a1\u6d88\u8d39\u8005\u8fd8\u6709\u5176\u4ed6\u7075\u6d3b\u7684\u4f7f\u7528\u65b9\u5f0f\uff0c\u53ef\u4ee5\u4e0b\u8f7d java-chassis \u4ee3\u7801\u67e5\u770b\u8c03\u7528\u793a\u4f8b\u3002 \u4f7f\u7528\u6d4f\u89c8\u5668\u4e0a\u4f20\u6587\u4ef6 \u6d4f\u89c8\u5668\u901a\u8fc7Form\u7684\u65b9\u5f0f\u4e0a\u4f20\u6587\u4ef6\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684HTML \u548c JS \u793a\u4f8b form id= upload_form method= POST p File Name: input type= file name= fileName / /p p input type= button value= Upload onclick= uploadAction() /p /form \u4e8b\u4ef6\u5904\u7406\uff1a function uploadAction() { var formData = new FormData(document.getElementById( upload_form )); $.ajax({ type: 'POST', url: /api/file-service/upload , data: formData, processData:false, contentType:false, success: function (data) { console.log(data); var error = document.getElementById( error ); error.textContent= Upload Successfully, file id= + data; error.hidden=false; }, error: function(data) { console.log(data); var error = document.getElementById( error ); error.textContent= Upload failed ; error.hidden=false; }, async: true }); \u914d\u7f6e\u53c2\u6570\u8bf4\u660e \u914d\u7f6e\u9879 \u9ed8\u8ba4\u503c \u53d6\u503c\u8303\u56f4 \u542b\u4e49 servicecomb.uploads.directory null \u4e0a\u4f20\u7684\u4e34\u65f6\u6587\u4ef6\u4fdd\u5b58\u5728\u54ea\u4e2a\u76ee\u5f55\uff0c \u9ed8\u8ba4\u503cnull\u8868\u793a\u4e0d\u652f\u6301\u6587\u4ef6\u4e0a\u4f20 servicecomb.uploads.maxSize -1 http body\u7684\u6700\u5927\u5141\u8bb8\u5927\u5c0f\uff0c\u5355\u4f4dbyte\uff0c\u9ed8\u8ba4\u503c-1\u8868\u793a\u65e0\u9650\u5236","title":"\u6587\u4ef6\u4e0a\u4f20\u5f00\u53d1\u6307\u5bfc"},{"location":"general-development/file-upload/#_1","text":"","title":"\u6587\u4ef6\u4e0a\u4f20\u5f00\u53d1\u6307\u5bfc"},{"location":"general-development/file-upload/#_2","text":"\u670d\u52a1\u63d0\u4f9b\u8005\u53ef\u4ee5\u91c7\u7528Spring MVC \u6216\u8005 Jax RS\u5b9a\u4e49\u4e0a\u4f20\u63a5\u53e3\u3002 \u91c7\u7528Spring MVC @PostMapping(path = /fileUpload , produces = MediaType.TEXT_PLAIN_VALUE, consumes = MediaType.MULTIPART_FORM_DATA_VALUE) public String fileUpload(@RequestPart(name = file ) MultipartFile file) @PostMapping(path = /fileUpload , produces = MediaType.TEXT_PLAIN_VALUE, consumes = MediaType.MULTIPART_FORM_DATA_VALUE) public String fileUpload(@RequestPart(name = file ) Part file) \u6587\u4ef6\u4e0a\u4f20\u9700\u8981\u901a\u8fc7 @RequestPart \u58f0\u660e\u53c2\u6570\uff0c\u53c2\u6570\u7c7b\u578b\u652f\u6301 servlet \u5b9a\u4e49\u7684 javax.servlet.http.Part \u7c7b\u578b\uff0c\u4e5f\u652f\u6301 org.springframework.web.multipart.MultipartFile \u7c7b\u578b\uff0c\u4e24\u79cd\u6570\u636e\u7c7b\u578b\u529f\u80fd\u662f\u4e00\u81f4\u7684\uff0cMultipartFile \u7684\u5e95 \u5c42\u4e5f\u662fPart\u3002 \u4e24\u79cd\u6570\u636e\u7c7b\u578b\u53ef\u4ee5\u6df7\u5408\u4f7f\u7528\uff0c\u6bd4\u5982\u7b2c\u4e00\u4e2a\u53c2\u6570\u662fPart\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662fMultipartFile\u3002 \u9664\u4e86\u901a\u8fc7 \u5b9a\u4e49\u591a\u4e2a\u53c2\u6570\u7684\u65b9\u5f0f\u4e0a\u4f20\u591a\u4e2a\u6587\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7List\u6216\u8005\u6570\u7ec4\u7684\u65b9\u5f0f\u58f0\u660e\u4e0a\u4f20\u591a\u4e2a\u6587\u4ef6\u3002 @PostMapping(path = /fileUpload , produces = MediaType.TEXT_PLAIN_VALUE, consumes = MediaType.MULTIPART_FORM_DATA_VALUE) public String fileUpload(@RequestPart(name = files ) List MultipartFile files) @PostMapping(path = /fileUpload , produces = MediaType.TEXT_PLAIN_VALUE, consumes = MediaType.MULTIPART_FORM_DATA_VALUE) public String fileUpload(@RequestPart(name = files ) MultipartFile[] files) \u53ef\u4ee5\u901a\u8fc7@RequestAttribute\u83b7\u53d6\u5176\u4ed6\u989d\u5916\u4fe1\u606f\u3002 @PostMapping(path = /fileUpload , produces = MediaType.TEXT_PLAIN_VALUE, consumes = MediaType.MULTIPART_FORM_DATA_VALUE) public String fileUpload(@RequestPart(name = files ) List MultipartFile files, @RequestAttribute( message ) String message) Spring MVC\u65b9\u5f0f\u5b9a\u4e49\u4e0a\u4f20\u63a5\u53e3\u8fd8\u6709\u5176\u4ed6\u5f88\u591a\u65b9\u5f0f\uff0c\u53ef\u4ee5\u4e0b\u8f7djava-chassis\u6e90\u7801\uff0c\u5e76\u67e5\u770bUploadSpringmvcSchema\u91cc\u9762\u7684\u793a\u4f8b\u3002 \u91c7\u7528Jax RS @Path( /fileUpload ) @POST @Produces(MediaType.TEXT_PLAIN) public String fileUpload(@FormParam(name = file ) Part file) \u6587\u4ef6\u4e0a\u4f20\u9700\u8981\u901a\u8fc7 @FormParam \u58f0\u660e\u53c2\u6570\uff0c\u53c2\u6570\u7c7b\u578b\u652f\u6301servlet\u5b9a\u4e49\u7684javax.servlet.http.Part\u7c7b\u578b\u3002\u9664\u4e86\u901a\u8fc7 \u5b9a\u4e49\u591a\u4e2a\u53c2\u6570\u7684\u65b9\u5f0f\u4e0a\u4f20\u591a\u4e2a\u6587\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7List\u6216\u8005\u6570\u7ec4\u7684\u65b9\u5f0f\u58f0\u660e\u4e0a\u4f20\u591a\u4e2a\u6587\u4ef6\u3002 @Path( /fileUpload ) @POST @Produces(MediaType.TEXT_PLAIN) public String fileUpload(@FormParam(name = files ) List Part files) @Path( /fileUpload ) @POST @Produces(MediaType.TEXT_PLAIN) public String fileUpload(@FormParam(name = files ) Part[] files) \u53ef\u4ee5\u901a\u8fc7@FormParam\u83b7\u53d6\u5176\u4ed6\u989d\u5916\u4fe1\u606f\u3002 @Path( /fileUpload ) @POST @Produces(MediaType.TEXT_PLAIN) public String fileUpload(@FormParam(name = files ) List Part files, @FormParam( message ) String message) Jax RS \u65b9\u5f0f\u5b9a\u4e49\u4e0a\u4f20\u63a5\u53e3\u8fd8\u6709\u5176\u4ed6\u5f88\u591a\u65b9\u5f0f\uff0c\u53ef\u4ee5\u4e0b\u8f7djava-chassis\u6e90\u7801\uff0c\u5e76\u67e5\u770b UploadJaxrsSchema \u91cc\u9762\u7684\u793a\u4f8b\u3002 \u4e1a\u52a1\u5f00\u53d1\u6ce8\u610f\u4e8b\u9879 \u901a\u8fc7MultipartFile\u6216Part\u6253\u5f00\u6d41\u540e\uff0c\u8bb0\u5f97\u5173\u95ed\uff0c\u5426\u5219\u4e0a\u4f20\u7684\u4e34\u65f6\u6587\u4ef6\u4f1a\u65e0\u6cd5\u5220\u9664\uff0c\u5bfc\u81f4\u8d44\u6e90\u6cc4\u9732\u548c\u78c1\u76d8\u7a7a\u95f4\u8017\u5c3d\u3002","title":"\u670d\u52a1\u63d0\u4f9b\u8005\u5f00\u53d1"},{"location":"general-development/file-upload/#_3","text":"\u53ef\u4ee5\u4f7f\u7528\u900f\u660e RPC interface UploadIntf { String upload(File file); } @RpcReference(microserviceName = name , schemaId = schema ) UploadIntf uploadIntf; String result = uploadIntf.upload(file); \u6216\u8005 RestTemplate \u8fdb\u884c\u6587\u4ef6\u4e0a\u4f20\u3002 Map String, Object map = new HashMap (); map.put( file , new FileSystemResource( a file path! )); map.put( param1 , test ); HttpHeaders headers = new HttpHeaders(); headers.setContentType(org.springframework.http.MediaType.MULTIPART_FORM_DATA); HttpEntity Map String, Object entity = new HttpEntity (map, headers); String reseult = template.postForObject(url, entity, String.class); \u670d\u52a1\u6d88\u8d39\u8005\u4e0d\u533a\u5206\u670d\u52a1\u63d0\u4f9b\u8005\u662f Spring MVC \u6216\u8005 Jax RS\u3002 \u5728\u4f7f\u7528\u900f\u660e RPC \u6216\u8005 RestTemplate \u7684\u65f6\u5019\uff0c \u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u7c7b\u578b \u4e0e\u670d\u52a1\u63d0\u4f9b\u8005\u7684\u6587\u4ef6\u5bf9\u5e94\uff1a java.io.File javax.servlet.http.Part java.io.InputStream org.springframework.core.io.Resource \u4f7f\u7528InputStream\u65f6\uff0c\u56e0\u4e3a\u662f\u6d41\u7684\u65b9\u5f0f\uff0c\u6b64\u65f6\u6ca1\u6709\u5ba2\u6237\u7aef\u6587\u4ef6\u540d\u7684\u6982\u5ff5\uff0c\u670d\u52a1\u63d0\u4f9b\u8005\u83b7\u53d6\u5230\u7684\u6587\u4ef6\u540d\u4e3anull\u3002 \u5982\u679c\u65e2\u8981\u4f7f\u7528\u5185\u5b58\u6570\u636e\uff0c\u53c8\u60f3\u8ba9producer\u53ef\u4ee5\u83b7\u53d6\u5ba2\u6237\u7aef\u6587\u4ef6\u540d\uff0c\u53ef\u4ee5\u4f7f\u7528resource\u7c7b\u578b\uff0c\u7ee7\u627f org.springframework.core.io.ByteArrayResource\uff0c\u4e14\u9700\u8981\u5b9e\u73b0 getFilename \u65b9\u6cd5\u3002 \u4e00\u6837\u7684\uff0c\u670d\u52a1\u6d88\u8d39\u8005\u8fd8\u6709\u5176\u4ed6\u7075\u6d3b\u7684\u4f7f\u7528\u65b9\u5f0f\uff0c\u53ef\u4ee5\u4e0b\u8f7d java-chassis \u4ee3\u7801\u67e5\u770b\u8c03\u7528\u793a\u4f8b\u3002","title":"\u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005"},{"location":"general-development/file-upload/#_4","text":"\u6d4f\u89c8\u5668\u901a\u8fc7Form\u7684\u65b9\u5f0f\u4e0a\u4f20\u6587\u4ef6\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684HTML \u548c JS \u793a\u4f8b form id= upload_form method= POST p File Name: input type= file name= fileName / /p p input type= button value= Upload onclick= uploadAction() /p /form \u4e8b\u4ef6\u5904\u7406\uff1a function uploadAction() { var formData = new FormData(document.getElementById( upload_form )); $.ajax({ type: 'POST', url: /api/file-service/upload , data: formData, processData:false, contentType:false, success: function (data) { console.log(data); var error = document.getElementById( error ); error.textContent= Upload Successfully, file id= + data; error.hidden=false; }, error: function(data) { console.log(data); var error = document.getElementById( error ); error.textContent= Upload failed ; error.hidden=false; }, async: true });","title":"\u4f7f\u7528\u6d4f\u89c8\u5668\u4e0a\u4f20\u6587\u4ef6"},{"location":"general-development/file-upload/#_5","text":"\u914d\u7f6e\u9879 \u9ed8\u8ba4\u503c \u53d6\u503c\u8303\u56f4 \u542b\u4e49 servicecomb.uploads.directory null \u4e0a\u4f20\u7684\u4e34\u65f6\u6587\u4ef6\u4fdd\u5b58\u5728\u54ea\u4e2a\u76ee\u5f55\uff0c \u9ed8\u8ba4\u503cnull\u8868\u793a\u4e0d\u652f\u6301\u6587\u4ef6\u4e0a\u4f20 servicecomb.uploads.maxSize -1 http body\u7684\u6700\u5927\u5141\u8bb8\u5927\u5c0f\uff0c\u5355\u4f4dbyte\uff0c\u9ed8\u8ba4\u503c-1\u8868\u793a\u65e0\u9650\u5236","title":"\u914d\u7f6e\u53c2\u6570\u8bf4\u660e"},{"location":"general-development/gated-launch/","text":"","title":"Gated launch"},{"location":"general-development/http-filter/","text":"\u67d0\u4e9b\u573a\u666f\u4e2d\uff0c\u4e1a\u52a1\u4f7f\u7528http\u800c\u4e0d\u662fhttps\uff0c\u4f5c\u4e3a\u7f51\u7edc\u4f20\u8f93\u901a\u9053\uff0c\u6b64\u65f6\u4e3a\u4e86\u9632\u6b62\u88ab\u4f2a\u9020\u6216\u7be1\u6539\u8bf7\u6c42\uff0c\u9700\u8981\u63d0\u4f9bconsumer\u3001producer\u4e4b\u95f4\u5bf9http\u7801\u6d41\u7684\u7b7e\u540d\u529f\u80fd\u3002 \u7b7e\u540d\u529f\u80fd\u4f7f\u7528org.apache.servicecomb.common.rest.filter.HttpClientFilter\u548corg.apache.servicecomb.common.rest.filter.HttpServerFilter\u63a5\u53e3\u6765\u627f\u8f7d\uff0c\u5efa\u8baehttp\u7801\u6d41\u5f3a\u76f8\u5173\u7684\u903b\u8f91\u4f7f\u7528\u8fd9\u91cc\u7684Filter\u673a\u5236\uff0c\u800c\u5951\u7ea6\u53c2\u6570\u76f8\u5173\u903b\u8f91\u4f7f\u7528Handler\u673a\u5236\u3002 \u5173\u4e8eFilter\u63a5\u53e3\u7684\u4f7f\u7528\uff0c\u53ef\u4ee5\u53c2\u8003 demo-signature \u3002 1.\u6982\u8ff0 Filter\u673a\u5236\u4f7f\u7528Java\u6807\u51c6\u7684SPI\u673a\u5236\u52a0\u8f7d\u3002 HttpClientFilter\u3001HttpServerFilter\u90fd\u5404\u81ea\u5141\u8bb8\u52a0\u8f7d\u591a\u4e2a\uff1a \u5404\u5b9e\u4f8b\u4e4b\u95f4\u7684\u6267\u884c\u987a\u5e8f\u7531getOrder\u7684\u8fd4\u56de\u503c\u51b3\u5b9a \u5982\u679cgetOrder\u8fd4\u56de\u503c\u76f8\u540c\uff0c\u5219\u76f8\u5e94\u7684\u5b9e\u4f8b\u987a\u5e8f\u968f\u673a\u51b3\u5b9a \u65e0\u8bba\u662frequest\uff0c\u8fd8\u662fresponse\uff0c\u8bfb\u53d6body\u7801\u6d41\uff0c\u90fd\u4f7f\u7528getBodyBytes()\uff0c\u8fd4\u56de\u503c\u53ef\u80fd\u4e3anull\uff08\u6bd4\u5982get\u8c03\u7528\u7684\u573a\u666f\uff09\uff0c\u5982\u679c\u4e0d\u4e3anull\uff0c\u5bf9\u5e94\u7684\u7801\u6d41\u957f\u5ea6\uff0c\u901a\u8fc7getBodyBytesLength()\u83b7\u53d6\u3002 2.HttpClientFilter \u7cfb\u7edf\u5185\u7f6e2\u4e2aHttpClientFilter\uff0c\u6269\u5c55\u529f\u80fd\u65f6\u6ce8\u610forder\u503c\u4e0d\u8981\u51b2\u7a81\uff1a org.apache.servicecomb.provider.springmvc.reference.RestTemplateCopyHeaderFilter, order\u503c\u4e3aInteger.MIN_VALUE org.apache.servicecomb.transport.rest.client.http.DefaultHttpClientFilter, order\u503c\u4e3aInteger.MAX_VALUE 2.1\u539f\u578b public interface HttpClientFilter { int getOrder(); void beforeSendRequest(Invocation invocation, HttpServletRequestEx requestEx); // if finished, then return a none null response // if return a null response, then sdk will call next filter.afterReceive Response afterReceiveResponse(Invocation invocation, HttpServletResponseEx responseEx); } 2.2 beforeSendRequest \u7528\u4e8e\u5728\u5df2\u7ecf\u751f\u6210\u7801\u6d41\u4e4b\u540e\uff0c\u53d1\u9001\u8bf7\u6c42\u4e4b\u524d\uff0c\u6839\u636eurl\u3001header\u3001query\u3001\u7801\u6d41\u8ba1\u7b97\u7b7e\u540d\uff0c\u5e76\u8bbe\u7f6e\u5230header\u4e2d\u53bb(requestEx.setHeader)\u3002 \u4ece\u5165\u53c2invocation\u4e2d\u53ef\u4ee5\u83b7\u53d6\u672c\u6b21\u8c03\u7528\u7684\u5404\u79cd\u5143\u6570\u636e\u4ee5\u53ca\u5bf9\u8c61\u5f62\u5f0f\u7684\u53c2\u6570\uff08\u7801\u6d41\u662f\u6839\u636e\u8fd9\u4e9b\u53c2\u6570\u751f\u6210\u7684\uff09\u3002 2.3 afterReceiveResponse \u7528\u4e8e\u5728\u4ece\u7f51\u7edc\u6536\u5230\u5e94\u7b54\u540e\uff0c\u6839\u636eheader\u3001\u7801\u6d41\u8ba1\u7b97\u7b7e\u540d\uff0c\u5e76\u4e0eheader\u4e2d\u7684\u7b7e\u540d\u5bf9\u6bd4\u3002\u5982\u679c\u7b7e\u540d\u4e0d\u5bf9\uff0c\u76f4\u63a5\u6784\u9020\u4e00\u4e2aResponse \u4f5c\u4e3a\u8fd4\u56de\u503c\uff0c\u53ea\u8981\u4e0d\u662f\u8fd4\u56deNULL\uff0c\u5219\u6846\u67b6\u4f1a\u4e2d\u65ad\u5bf9\u5176\u4ed6HttpClientFilter\u7684\u8c03\u7528\u3002 3 HttpServerFilter 3.1\u539f\u578b public interface HttpServerFilter { int getOrder(); default boolean needCacheRequest(OperationMeta operationMeta) { return false; } // if finished, then return a none null response // if return a null response, then sdk will call next filter.afterReceiveRequest Response afterReceiveRequest(Invocation invocation, HttpServletRequestEx requestEx); // invocation maybe null void beforeSendResponse(Invocation invocation, HttpServletResponseEx responseEx); } 3.2 needCacheRequest \u4e0eHttpClientFilter\u4e0d\u540c\u7684\u662f\uff0c\u589e\u52a0\u4e86\u51b3\u5b9a\u662f\u5426\u7f13\u5b58\u8bf7\u6c42\u7684\u529f\u80fd\u3002 \u8fd9\u662f\u56e0\u4e3aServiceComb\u4e0d\u4ec5\u4ec5\u80fd\u4f7f\u7528standalone\u7684\u65b9\u5f0f\u8fd0\u884c\uff0c\u4e5f\u80fd\u8fd0\u884c\u4e8eweb\u5bb9\u5668\uff08\u6bd4\u5982tomcat\uff09\uff0c\u5728servlet\u7684\u5b9e\u73b0\u4e0a\uff0c\u8bf7\u6c42\u7801\u6d41\u53ea\u80fd\u8bfb\u53d6\u4e00\u6b21\uff0c\u5e76\u4e14\u4e0d\u4e00\u5b9a\u652f\u6301reset\uff08\u6bd4\u5982tomcat\uff09\uff0cRESTful\u6846\u67b6\u9700\u8981\u6267\u884c\u53cd\u5e8f\u5217\u5316\uff0c\u9700\u8981\u8bfb\u53d6body\u7801\u6d41\uff0c\u7b7e\u540d\u903b\u8f91\u4e5f\u9700\u8981\u8bfb\u53d6body\u7801\u6d41\uff0c\u5982\u679c\u4f7f\u7528\u9ed8\u8ba4\u7684\u5904\u7406\uff0c\u5fc5\u7136\u6709\u4e00\u65b9\u529f\u80fd\u65e0\u6cd5\u5b9e\u73b0\u3002 \u6240\u4ee5\u8fd0\u884c\u4e8eweb\u5bb9\u5668\u573a\u666f\u65f6\uff0c\u6240\u6709HttpServerFilter\uff0c\u53ea\u8981\u6709\u4e00\u4e2a\u8fd4\u56de\u9700\u8981\u7f13\u5b58\u8bf7\u6c42\uff0c\u5219body\u7801\u6d41\u4f1a\u88ab\u590d\u5236\u4fdd\u5b58\u8d77\u6765\uff0c\u4ee5\u652f\u6301\u91cd\u590d\u8bfb\u53d6\u3002 \u5165\u53c2\u662f\u672c\u6b21\u8bf7\u6c42\u5bf9\u5e94\u7684\u5143\u6570\u636e\uff0c\u4e1a\u52a1\u53ef\u4ee5\u9488\u5bf9\u8be5\u8bf7\u6c42\u51b3\u5b9a\u662f\u5426\u9700\u8981\u7f13\u5b58\u8bf7\u6c42\u3002 3.3 afterReceiveRequest \u5728\u6536\u5230\u8bf7\u6c42\u540e\uff0c\u6839\u636eurl\u3001header\u3001query\u3001\u7801\u6d41\u8ba1\u7b97\u7b7e\u540d\uff0c\u5e76\u4e0eheader\u4e2d\u7684\u7b7e\u540d\u5bf9\u6bd4,\u5982\u679c\u7b7e\u540d\u4e0d\u5bf9\uff0c\u76f4\u63a5\u6784\u9020\u4e00\u4e2aResponse\u4f5c\u4e3a\u8fd4\u56de\u503c\uff0c\u53ea\u8981\u4e0d\u662f\u8fd4\u56deNULL\uff0c\u5219\u6846\u67b6\u4f1a\u4e2d\u65ad\u5bf9\u5176\u4ed6HttpClientFilter\u7684\u8c03\u7528\u3002 3.4 beforeSendResponse \u5728\u53d1\u9001\u5e94\u7b54\u4e4b\u524d\uff0c\u6839\u636eheader\u3001\u7801\u6d41\u8ba1\u7b97\u7b7e\u540d\uff0c\u5e76\u8bbe\u7f6e\u5230header\u4e2d\u53bb\u3002 \u56e0\u4e3a\u53ef\u80fdinvocation\u8fd8\u6ca1\u6765\u5f97\u53ca\u6784\u9020\uff0c\u8c03\u7528\u6d41\u7a0b\u5df2\u7ecf\u51fa\u9519\uff0c\u6240\u4ee5\u5165\u53c2invocation\u53ef\u80fd\u662fnull\u3002","title":"Http filter"},{"location":"general-development/http-filter/#1","text":"Filter\u673a\u5236\u4f7f\u7528Java\u6807\u51c6\u7684SPI\u673a\u5236\u52a0\u8f7d\u3002 HttpClientFilter\u3001HttpServerFilter\u90fd\u5404\u81ea\u5141\u8bb8\u52a0\u8f7d\u591a\u4e2a\uff1a \u5404\u5b9e\u4f8b\u4e4b\u95f4\u7684\u6267\u884c\u987a\u5e8f\u7531getOrder\u7684\u8fd4\u56de\u503c\u51b3\u5b9a \u5982\u679cgetOrder\u8fd4\u56de\u503c\u76f8\u540c\uff0c\u5219\u76f8\u5e94\u7684\u5b9e\u4f8b\u987a\u5e8f\u968f\u673a\u51b3\u5b9a \u65e0\u8bba\u662frequest\uff0c\u8fd8\u662fresponse\uff0c\u8bfb\u53d6body\u7801\u6d41\uff0c\u90fd\u4f7f\u7528getBodyBytes()\uff0c\u8fd4\u56de\u503c\u53ef\u80fd\u4e3anull\uff08\u6bd4\u5982get\u8c03\u7528\u7684\u573a\u666f\uff09\uff0c\u5982\u679c\u4e0d\u4e3anull\uff0c\u5bf9\u5e94\u7684\u7801\u6d41\u957f\u5ea6\uff0c\u901a\u8fc7getBodyBytesLength()\u83b7\u53d6\u3002","title":"1.\u6982\u8ff0"},{"location":"general-development/http-filter/#2httpclientfilter","text":"\u7cfb\u7edf\u5185\u7f6e2\u4e2aHttpClientFilter\uff0c\u6269\u5c55\u529f\u80fd\u65f6\u6ce8\u610forder\u503c\u4e0d\u8981\u51b2\u7a81\uff1a org.apache.servicecomb.provider.springmvc.reference.RestTemplateCopyHeaderFilter, order\u503c\u4e3aInteger.MIN_VALUE org.apache.servicecomb.transport.rest.client.http.DefaultHttpClientFilter, order\u503c\u4e3aInteger.MAX_VALUE","title":"2.HttpClientFilter"},{"location":"general-development/http-filter/#21","text":"public interface HttpClientFilter { int getOrder(); void beforeSendRequest(Invocation invocation, HttpServletRequestEx requestEx); // if finished, then return a none null response // if return a null response, then sdk will call next filter.afterReceive Response afterReceiveResponse(Invocation invocation, HttpServletResponseEx responseEx); }","title":"2.1\u539f\u578b"},{"location":"general-development/http-filter/#22-beforesendrequest","text":"\u7528\u4e8e\u5728\u5df2\u7ecf\u751f\u6210\u7801\u6d41\u4e4b\u540e\uff0c\u53d1\u9001\u8bf7\u6c42\u4e4b\u524d\uff0c\u6839\u636eurl\u3001header\u3001query\u3001\u7801\u6d41\u8ba1\u7b97\u7b7e\u540d\uff0c\u5e76\u8bbe\u7f6e\u5230header\u4e2d\u53bb(requestEx.setHeader)\u3002 \u4ece\u5165\u53c2invocation\u4e2d\u53ef\u4ee5\u83b7\u53d6\u672c\u6b21\u8c03\u7528\u7684\u5404\u79cd\u5143\u6570\u636e\u4ee5\u53ca\u5bf9\u8c61\u5f62\u5f0f\u7684\u53c2\u6570\uff08\u7801\u6d41\u662f\u6839\u636e\u8fd9\u4e9b\u53c2\u6570\u751f\u6210\u7684\uff09\u3002","title":"2.2 beforeSendRequest"},{"location":"general-development/http-filter/#23-afterreceiveresponse","text":"\u7528\u4e8e\u5728\u4ece\u7f51\u7edc\u6536\u5230\u5e94\u7b54\u540e\uff0c\u6839\u636eheader\u3001\u7801\u6d41\u8ba1\u7b97\u7b7e\u540d\uff0c\u5e76\u4e0eheader\u4e2d\u7684\u7b7e\u540d\u5bf9\u6bd4\u3002\u5982\u679c\u7b7e\u540d\u4e0d\u5bf9\uff0c\u76f4\u63a5\u6784\u9020\u4e00\u4e2aResponse \u4f5c\u4e3a\u8fd4\u56de\u503c\uff0c\u53ea\u8981\u4e0d\u662f\u8fd4\u56deNULL\uff0c\u5219\u6846\u67b6\u4f1a\u4e2d\u65ad\u5bf9\u5176\u4ed6HttpClientFilter\u7684\u8c03\u7528\u3002","title":"2.3 afterReceiveResponse"},{"location":"general-development/http-filter/#3-httpserverfilter","text":"","title":"3 HttpServerFilter"},{"location":"general-development/http-filter/#31","text":"public interface HttpServerFilter { int getOrder(); default boolean needCacheRequest(OperationMeta operationMeta) { return false; } // if finished, then return a none null response // if return a null response, then sdk will call next filter.afterReceiveRequest Response afterReceiveRequest(Invocation invocation, HttpServletRequestEx requestEx); // invocation maybe null void beforeSendResponse(Invocation invocation, HttpServletResponseEx responseEx); }","title":"3.1\u539f\u578b"},{"location":"general-development/http-filter/#32-needcacherequest","text":"\u4e0eHttpClientFilter\u4e0d\u540c\u7684\u662f\uff0c\u589e\u52a0\u4e86\u51b3\u5b9a\u662f\u5426\u7f13\u5b58\u8bf7\u6c42\u7684\u529f\u80fd\u3002 \u8fd9\u662f\u56e0\u4e3aServiceComb\u4e0d\u4ec5\u4ec5\u80fd\u4f7f\u7528standalone\u7684\u65b9\u5f0f\u8fd0\u884c\uff0c\u4e5f\u80fd\u8fd0\u884c\u4e8eweb\u5bb9\u5668\uff08\u6bd4\u5982tomcat\uff09\uff0c\u5728servlet\u7684\u5b9e\u73b0\u4e0a\uff0c\u8bf7\u6c42\u7801\u6d41\u53ea\u80fd\u8bfb\u53d6\u4e00\u6b21\uff0c\u5e76\u4e14\u4e0d\u4e00\u5b9a\u652f\u6301reset\uff08\u6bd4\u5982tomcat\uff09\uff0cRESTful\u6846\u67b6\u9700\u8981\u6267\u884c\u53cd\u5e8f\u5217\u5316\uff0c\u9700\u8981\u8bfb\u53d6body\u7801\u6d41\uff0c\u7b7e\u540d\u903b\u8f91\u4e5f\u9700\u8981\u8bfb\u53d6body\u7801\u6d41\uff0c\u5982\u679c\u4f7f\u7528\u9ed8\u8ba4\u7684\u5904\u7406\uff0c\u5fc5\u7136\u6709\u4e00\u65b9\u529f\u80fd\u65e0\u6cd5\u5b9e\u73b0\u3002 \u6240\u4ee5\u8fd0\u884c\u4e8eweb\u5bb9\u5668\u573a\u666f\u65f6\uff0c\u6240\u6709HttpServerFilter\uff0c\u53ea\u8981\u6709\u4e00\u4e2a\u8fd4\u56de\u9700\u8981\u7f13\u5b58\u8bf7\u6c42\uff0c\u5219body\u7801\u6d41\u4f1a\u88ab\u590d\u5236\u4fdd\u5b58\u8d77\u6765\uff0c\u4ee5\u652f\u6301\u91cd\u590d\u8bfb\u53d6\u3002 \u5165\u53c2\u662f\u672c\u6b21\u8bf7\u6c42\u5bf9\u5e94\u7684\u5143\u6570\u636e\uff0c\u4e1a\u52a1\u53ef\u4ee5\u9488\u5bf9\u8be5\u8bf7\u6c42\u51b3\u5b9a\u662f\u5426\u9700\u8981\u7f13\u5b58\u8bf7\u6c42\u3002","title":"3.2 needCacheRequest"},{"location":"general-development/http-filter/#33-afterreceiverequest","text":"\u5728\u6536\u5230\u8bf7\u6c42\u540e\uff0c\u6839\u636eurl\u3001header\u3001query\u3001\u7801\u6d41\u8ba1\u7b97\u7b7e\u540d\uff0c\u5e76\u4e0eheader\u4e2d\u7684\u7b7e\u540d\u5bf9\u6bd4,\u5982\u679c\u7b7e\u540d\u4e0d\u5bf9\uff0c\u76f4\u63a5\u6784\u9020\u4e00\u4e2aResponse\u4f5c\u4e3a\u8fd4\u56de\u503c\uff0c\u53ea\u8981\u4e0d\u662f\u8fd4\u56deNULL\uff0c\u5219\u6846\u67b6\u4f1a\u4e2d\u65ad\u5bf9\u5176\u4ed6HttpClientFilter\u7684\u8c03\u7528\u3002","title":"3.3 afterReceiveRequest"},{"location":"general-development/http-filter/#34-beforesendresponse","text":"\u5728\u53d1\u9001\u5e94\u7b54\u4e4b\u524d\uff0c\u6839\u636eheader\u3001\u7801\u6d41\u8ba1\u7b97\u7b7e\u540d\uff0c\u5e76\u8bbe\u7f6e\u5230header\u4e2d\u53bb\u3002 \u56e0\u4e3a\u53ef\u80fdinvocation\u8fd8\u6ca1\u6765\u5f97\u53ca\u6784\u9020\uff0c\u8c03\u7528\u6d41\u7a0b\u5df2\u7ecf\u51fa\u9519\uff0c\u6240\u4ee5\u5165\u53c2invocation\u53ef\u80fd\u662fnull\u3002","title":"3.4 beforeSendResponse"},{"location":"general-development/kuang-jia-shang-bao-ban-ben-hao/","text":"","title":"Kuang jia shang bao ban ben hao"},{"location":"general-development/local-develop-test/","text":"\u6982\u5ff5\u9610\u8ff0 \u672c\u5c0f\u8282\u4ecb\u7ecd\u5982\u4f55\u5728\u5f00\u53d1\u8005\u672c\u5730\u8fdb\u884c\u6d88\u8d39\u8005/\u63d0\u4f9b\u8005\u5e94\u7528\u7684\u5f00\u53d1\u8c03\u8bd5\u3002\u5f00\u53d1\u670d\u52a1\u63d0\u4f9b\u8005\u8bf7\u53c2\u80033 \u5f00\u53d1\u670d\u52a1\u63d0\u4f9b\u8005\u7ae0\u8282\uff0c\u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005\u8bf7\u53c2\u80034 \u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005\u3002\u670d\u52a1\u63d0\u4f9b\u8005\u548c\u6d88\u8d39\u63d0\u4f9b\u8005\u5747\u9700\u8981\u8fde\u63a5\u5230\u5728\u8fdc\u7a0b\u7684\u670d\u52a1\u4e2d\u5fc3\uff0c\u4e3a\u4e86\u672c\u5730\u5fae\u670d\u52a1\u7684\u5f00\u53d1\u548c\u8c03\u8bd5\uff0c\u672c\u5c0f\u8282\u4ecb\u7ecd\u4e86\u4e24\u79cd\u642d\u5efa\u672c\u5730\u670d\u52a1\u4e2d\u5fc3\u7684\u65b9\u6cd5\u8fdb\u884c\u672c\u5730\u5fae\u670d\u52a1\u8c03\u8bd5\uff1a \u542f\u52a8\u672c\u5730\u670d\u52a1\u4e2d\u5fc3 \u901a\u8fc7local file\u6a21\u62df\u542f\u52a8\u670d\u52a1\u4e2d\u5fc3Mock\u673a\u5236 \u901a\u8fc7\u8bbe\u7f6e\u73af\u5883\u4fe1\u606f\u65b9\u4fbf\u672c\u5730\u8c03\u8bd5 \u670d\u52a1\u4e2d\u5fc3\u662f\u5fae\u670d\u52a1\u6846\u67b6\u4e2d\u7684\u91cd\u8981\u7ec4\u4ef6\uff0c\u7528\u4e8e\u670d\u52a1\u5143\u6570\u636e\u4ee5\u53ca\u670d\u52a1\u5b9e\u4f8b\u5143\u6570\u636e\u7684\u7ba1\u7406\u548c\u5904\u7406\u6ce8\u518c\u3001\u53d1\u73b0\u3002\u670d\u52a1\u4e2d\u5fc3\u4e0e\u5fae\u670d\u52a1\u63d0\u4f9b/\u6d88\u8d39\u8005\u7684\u903b\u8f91\u5173\u7cfb\u4e0b\u56fe\u6240\u793a\uff1a \u542f\u52a8\u672c\u5730\u670d\u52a1\u4e2d\u5fc3 \u6b65\u9aa4 1 \u542f\u52a8\u672c\u5730\u670d\u52a1\u4e2d\u5fc3 \u4ee5\u53ef\u6267\u884c\u6587\u4ef6\u7684\u65b9\u5f0f\u8fd0\u884c Windows Linux 1. \u4e0b\u8f7d \u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\u53ef\u6267\u884c\u6587\u4ef6\u538b\u7f29\u5305 2. \u89e3\u538b\u7f29\u5230\u5f53\u524d\u6587\u4ef6\u5939 3. \u8fdb\u5165\u89e3\u538b\u7f29\u540e\u7684\u76ee\u5f55\uff0c\u7136\u540e\u53cc\u51fb\u8fd0\u884c start-service-center.bat \u6587\u4ef6 1. \u4e0b\u8f7d\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\u53ef\u6267\u884c\u6587\u4ef6\u538b\u7f29\u5305\u5e76\u89e3\u538b\u7f29 bash wget http://apache.org/dyn/closer.cgi/incubator/servicecomb/incubator-servicecomb-service-center/1.0.0-m1/apache-servicecomb-incubating-service-center-1.0.0-m1-linux-amd64.tar.gz tar xvf apache-servicecomb-incubating-service-center-1.0.0-m1-linux-amd64.tar.gz 2. \u8fd0\u884c\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3 bash bash apache-servicecomb-incubating-service-center-1.0.0-m1-linux-amd64/start-service-center.sh \u6ce8\u610f\uff1a\u524d\u7aef\uff08frontend\uff09\u5728Linux\u73af\u5883\u4e0b\u9ed8\u8ba4\u4f1a\u7ed1\u5b9aipv6\u5730\u5740\uff0c\u5bfc\u81f4\u6d4f\u89c8\u5668\u62a5\u9519\uff0c\u4fee\u590d\u529e\u6cd5\u4e3a\uff1a\u5148\u4fee\u6539conf/app.conf\u4e2d\u7684httpaddr\u4e3a\u5916\u90e8\u53ef\u8fbe\u7f51\u5361ip\uff0c\u4e4b\u540e\u4fee\u6539app/appList/apiList.js\u4e2d`ip : 'http://127.0.0.1'`\u4e3a\u5bf9\u5e94ip\uff0c\u6700\u540e\u91cd\u542fServiceCenter\u5373\u53ef\u3002 /div \u6ce8\u610f\uff1aWindow\u548cLinux\u7248\u672c\u5747\u53ea\u652f\u630164\u4f4d\u7cfb\u7edf\u3002 \u4ee5Docker\u7684\u65b9\u5f0f\u8fd0\u884c bash docker pull servicecomb/service-center docker run -d -p 30100:30100 servicecomb/service-center:latest \u6b65\u9aa4 2 \u542f\u52a8\u672c\u5730\u670d\u52a1\u4e2d\u5fc3\u540e\uff0c\u5728\u670d\u52a1\u63d0\u4f9b/\u6d88\u8d39\u8005\u7684microservice.yaml\u6587\u4ef6\u4e2d\u914d\u7f6eServerCenter\u7684\u5730\u5740\u548c\u7aef\u53e3\uff0c\u793a\u4f8b\u4ee3\u7801\uff1a yaml servicecomb: service: registry: address: # \u670d\u52a1\u4e2d\u5fc3\u5730\u5740\u53ca\u7aef\u53e3 http://127.0.0.1:30100 \u6b65\u9aa4 3 \u5f00\u53d1\u670d\u52a1\u63d0\u4f9b/\u6d88\u8d39\u8005\uff0c\u542f\u52a8\u5fae\u670d\u52a1\u8fdb\u884c\u672c\u5730\u6d4b\u8bd5\u3002 ----\u7ed3\u675f Mock\u673a\u5236\u542f\u52a8\u670d\u52a1\u4e2d\u5fc3 \u5728\u672c\u8fdb\u7a0b\u5185\u5b58\u4e2d\u6a21\u62df\u4e00\u4e2a\u53ea\u80fd\u672c\u8fdb\u7a0b\u4f7f\u7528\u7684\u670d\u52a1\u4e2d\u5fc3\uff0c\u4e00\u822c\u662f\u5728\u6d4b\u8bd5\u573a\u666f\u4e2d\u4f7f\u7528\u3002 * ### \u8fdb\u7a0b\u5185\u8c03\u7528 \u53ea\u9700\u8981\u5728\u542f\u52a8ServiceComb\u5f15\u64ce\u4e4b\u524d\u58f0\u660e\u4e00\u4e0b\u5373\u53ef\u542f\u7528\uff1a System.setProperty( local.registry.file , notExistJustForceLocal ); \u8de8\u8fdb\u7a0b\u8c03\u7528 \u5982\u679c\u90e8\u7f72\u6bd4\u8f83\u7b80\u5355\uff0c\u5e76\u4e14\u90e8\u7f72\u4fe1\u606f\u662f\u9759\u6001\u7684\uff0c\u5373\u4f7f\u6709\u8de8\u8fdb\u7a0b\u8c03\u7528\u4e5f\u53ef\u4ee5\u4f7f\u7528\u672cMock\u673a\u5236 producer\u7aef\u4ecd\u7136\u50cf\u201c\u8fdb\u7a0b\u5185\u8c03\u7528\u201d\u4e00\u6837\u58f0\u660e\u5373\u53ef \u4f46\u662f\uff0c\u56e0\u4e3aMock\u5e76\u4e0d\u80fd\u8de8\u8fdb\u7a0b\u751f\u6548\uff0c\u6240\u4ee5consumer\u7aef\u7684Mock\uff0c\u9700\u8981\u63d0\u4f9b\u4e00\u4e2a\u672c\u5730\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u5728\u91cc\u9762\u63cf\u8ff0\u8c03\u7528\u76ee\u6807\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u5305\u62ec\u540d\u5b57\u3001\u7248\u672c\u3001\u5730\u5740\u3001schema id\u7b49\u7b49\u4fe1\u606f \u540c\u6837\uff0c\u56e0\u4e3aMock\u4e0d\u80fd\u8de8\u8fdb\u7a0b\uff0cconsumer\u4e5f\u65e0\u6cd5\u52a8\u6001\u53d6\u5f97producer\u7684\u5951\u7ea6\u4fe1\u606f\uff0c\u6240\u4ee5\uff0c\u9700\u8981\u5728\u672c\u5730\u63d0\u4f9b\u5951\u7ea6\u6587\u4ef6 \uff08\u8fd9\u4e2a\u573a\u666f\uff0c\u4f7f\u7528Mock\u670d\u52a1\u4e2d\u5fc3\uff0c\u6bd4\u4f7f\u7528standalone\u7684\u670d\u52a1\u4e2d\u5fc3\uff0c\u6210\u672c\u9ad8\u5f97\u591a\u5f97\u591a\uff0c\u4e0d\u5efa\u8bae\u4f7f\u7528\uff09 \u6b65\u9aa4 1 \u65b0\u5efa\u672c\u5730\u670d\u52a1\u4e2d\u5fc3\u5b9a\u4e49\u6587\u4ef6\uff0c\u5047\u8bbe\u540d\u5b57\u4e3aregistry.yaml\uff0c\u5185\u5bb9\u793a\u4f8b\u5982\u4e0b\uff1a yaml localserv: - id: \"100\" version: \"0.0.1\" appid: localservreg schemaIds: - hello instances: - endpoints: - rest://localhost:8080 - highway://localhost:7070 * \u6b65\u9aa4 2 consumer\u672c\u5730\u90e8\u7f72\u5951\u7ea6\u6587\u4ef6 \u53c2\u8003\uff1a \u5b9a\u4e49\u670d\u52a1\u5951\u7ea6 * \u6b65\u9aa4 3 \u5728consumer main\u51fd\u6570\uff0c\u542f\u52a8ServiceComb\u5f15\u64ce\u4e4b\u524d\u58f0\u660e\uff1a \u3000\u3000System.setProperty( local.registry.file , /path/registry.yaml ); setProperty\u7b2c\u4e8c\u4e2a\u53c2\u6570\u586b\u5199registry.yaml\u5728\u78c1\u76d8\u4e2d\u7684\u7cfb\u7edf\u7edd\u5bf9\u8def\u5f84\uff0c\u6ce8\u610f\u533a\u5206\u5728\u4e0d\u540c\u7cfb\u7edf\u4e0b\u4f7f\u7528\u5bf9\u5e94\u7684\u8def\u5f84\u5206\u9694\u7b26\u3002 \u901a\u8fc7\u8bbe\u7f6e\u73af\u5883\u4fe1\u606f\u65b9\u4fbf\u672c\u5730\u8c03\u8bd5 java chassis\u5728\u8bbe\u8ba1\u65f6\uff0c\u4e25\u683c\u4f9d\u8d56\u4e8e\u5951\u7ea6\uff0c\u6240\u4ee5\u6b63\u5e38\u6765\u8bf4\u5951\u7ea6\u53d8\u4e86\u5c31\u5fc5\u987b\u8981\u4fee\u6539\u5fae\u670d\u52a1\u7684\u7248\u672c\u3002\u4f46\u662f\u5982\u679c\u5f53\u524d\u8fd8\u662f\u5f00\u53d1\u6a21\u5f0f\uff0c\u90a3\u4e48\u4fee\u6539\u63a5\u53e3\u662f\u5f88\u6b63\u5e38\u7684\u60c5\u51b5\uff0c\u6bcf\u6b21\u90fd\u9700\u8981\u6539\u7248\u672c\u7684\u8bdd\uff0c\u5bf9\u7528\u6237\u6765\u8bf4\u975e\u5e38\u7684\u4e0d\u53cb\u597d\uff0c\u6240\u4ee5\u589e\u52a0\u4e86\u4e00\u4e2a\u73af\u5883\u8bbe\u7f6e\u3002\u5982\u679c\u5fae\u670d\u52a1\u914d\u7f6e\u6210\u5f00\u53d1\u73af\u5883\uff0c\u63a5\u53e3\u4fee\u6539\u4e86\uff08schema\u53d1\u751f\u4e86\u53d8\u5316\uff09\uff0c\u91cd\u542f\u5c31\u53ef\u4ee5\u6ce8\u518c\u5230\u670d\u52a1\u4e2d\u5fc3\uff0c\u800c\u4e0d\u7528\u4fee\u6539\u7248\u672c\u53f7\u3002\u4f46\u662f\u5982\u679c\u6709consumer\u5df2\u7ecf\u8c03\u7528\u4e86\u91cd\u542f\u4e4b\u524d\u7684\u670d\u52a1\uff0c\u90a3\u4e48consumer\u7aef\u9700\u8981\u91cd\u542f\u624d\u80fd\u83b7\u53d6\u6700\u65b0\u7684schema\u3002\u6bd4\u5982A - B\uff0cB\u63a5\u53e3\u8fdb\u884c\u4e86\u4fee\u6539\u5e76\u4e14\u91cd\u542f\uff0c\u90a3\u4e48A\u8fd9\u4e2a\u65f6\u5019\u8fd8\u662f\u4f7f\u7528B\u8001\u7684schema\uff0c\u8c03\u7528\u53ef\u80fd\u4f1a\u51fa\u9519\uff0c\u4ee5\u514d\u51fa\u73b0\u672a\u77e5\u5f02\u5e38\uff0cA\u4e5f\u9700\u8981\u91cd\u542f\u3002\u6709\u4e09\u79cd\u65b9\u5f0f\u53ef\u4ee5\u8bbe\u7f6e\uff0c\u63a8\u8350\u4f7f\u7528\u65b9\u6cd51 * \u65b9\u6cd51\uff1a\u901a\u8fc7JVM\u542f\u52a8\u53c2\u6570 -Dservice_description.environment=development \u8fdb\u884c\u8bbe\u7f6e \u65b9\u6cd52\uff1a\u901a\u8fc7microservice.yaml\u914d\u7f6e\u6587\u4ef6\u6765\u6307\u5b9a yaml service_description: environment: development \u65b9\u6cd53\uff1a\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u6765\u6307\u5b9a\uff08\u4ec5\u9650\u4e8eWindows\u7cfb\u7edf\uff09\uff0c\u6bd4\u5982\u5728Eclipse\u4e0b\u9762\u8fdb\u884c\u5982\u4e0b\u8bbe\u7f6e","title":"Local develop test"},{"location":"general-development/local-develop-test/#_1","text":"\u672c\u5c0f\u8282\u4ecb\u7ecd\u5982\u4f55\u5728\u5f00\u53d1\u8005\u672c\u5730\u8fdb\u884c\u6d88\u8d39\u8005/\u63d0\u4f9b\u8005\u5e94\u7528\u7684\u5f00\u53d1\u8c03\u8bd5\u3002\u5f00\u53d1\u670d\u52a1\u63d0\u4f9b\u8005\u8bf7\u53c2\u80033 \u5f00\u53d1\u670d\u52a1\u63d0\u4f9b\u8005\u7ae0\u8282\uff0c\u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005\u8bf7\u53c2\u80034 \u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005\u3002\u670d\u52a1\u63d0\u4f9b\u8005\u548c\u6d88\u8d39\u63d0\u4f9b\u8005\u5747\u9700\u8981\u8fde\u63a5\u5230\u5728\u8fdc\u7a0b\u7684\u670d\u52a1\u4e2d\u5fc3\uff0c\u4e3a\u4e86\u672c\u5730\u5fae\u670d\u52a1\u7684\u5f00\u53d1\u548c\u8c03\u8bd5\uff0c\u672c\u5c0f\u8282\u4ecb\u7ecd\u4e86\u4e24\u79cd\u642d\u5efa\u672c\u5730\u670d\u52a1\u4e2d\u5fc3\u7684\u65b9\u6cd5\u8fdb\u884c\u672c\u5730\u5fae\u670d\u52a1\u8c03\u8bd5\uff1a \u542f\u52a8\u672c\u5730\u670d\u52a1\u4e2d\u5fc3 \u901a\u8fc7local file\u6a21\u62df\u542f\u52a8\u670d\u52a1\u4e2d\u5fc3Mock\u673a\u5236 \u901a\u8fc7\u8bbe\u7f6e\u73af\u5883\u4fe1\u606f\u65b9\u4fbf\u672c\u5730\u8c03\u8bd5 \u670d\u52a1\u4e2d\u5fc3\u662f\u5fae\u670d\u52a1\u6846\u67b6\u4e2d\u7684\u91cd\u8981\u7ec4\u4ef6\uff0c\u7528\u4e8e\u670d\u52a1\u5143\u6570\u636e\u4ee5\u53ca\u670d\u52a1\u5b9e\u4f8b\u5143\u6570\u636e\u7684\u7ba1\u7406\u548c\u5904\u7406\u6ce8\u518c\u3001\u53d1\u73b0\u3002\u670d\u52a1\u4e2d\u5fc3\u4e0e\u5fae\u670d\u52a1\u63d0\u4f9b/\u6d88\u8d39\u8005\u7684\u903b\u8f91\u5173\u7cfb\u4e0b\u56fe\u6240\u793a\uff1a","title":"\u6982\u5ff5\u9610\u8ff0"},{"location":"general-development/local-develop-test/#_2","text":"\u6b65\u9aa4 1 \u542f\u52a8\u672c\u5730\u670d\u52a1\u4e2d\u5fc3 \u4ee5\u53ef\u6267\u884c\u6587\u4ef6\u7684\u65b9\u5f0f\u8fd0\u884c Windows Linux 1. \u4e0b\u8f7d \u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\u53ef\u6267\u884c\u6587\u4ef6\u538b\u7f29\u5305 2. \u89e3\u538b\u7f29\u5230\u5f53\u524d\u6587\u4ef6\u5939 3. \u8fdb\u5165\u89e3\u538b\u7f29\u540e\u7684\u76ee\u5f55\uff0c\u7136\u540e\u53cc\u51fb\u8fd0\u884c start-service-center.bat \u6587\u4ef6 1. \u4e0b\u8f7d\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3\u53ef\u6267\u884c\u6587\u4ef6\u538b\u7f29\u5305\u5e76\u89e3\u538b\u7f29 bash wget http://apache.org/dyn/closer.cgi/incubator/servicecomb/incubator-servicecomb-service-center/1.0.0-m1/apache-servicecomb-incubating-service-center-1.0.0-m1-linux-amd64.tar.gz tar xvf apache-servicecomb-incubating-service-center-1.0.0-m1-linux-amd64.tar.gz 2. \u8fd0\u884c\u670d\u52a1\u6ce8\u518c\u4e2d\u5fc3 bash bash apache-servicecomb-incubating-service-center-1.0.0-m1-linux-amd64/start-service-center.sh \u6ce8\u610f\uff1a\u524d\u7aef\uff08frontend\uff09\u5728Linux\u73af\u5883\u4e0b\u9ed8\u8ba4\u4f1a\u7ed1\u5b9aipv6\u5730\u5740\uff0c\u5bfc\u81f4\u6d4f\u89c8\u5668\u62a5\u9519\uff0c\u4fee\u590d\u529e\u6cd5\u4e3a\uff1a\u5148\u4fee\u6539conf/app.conf\u4e2d\u7684httpaddr\u4e3a\u5916\u90e8\u53ef\u8fbe\u7f51\u5361ip\uff0c\u4e4b\u540e\u4fee\u6539app/appList/apiList.js\u4e2d`ip : 'http://127.0.0.1'`\u4e3a\u5bf9\u5e94ip\uff0c\u6700\u540e\u91cd\u542fServiceCenter\u5373\u53ef\u3002 /div \u6ce8\u610f\uff1aWindow\u548cLinux\u7248\u672c\u5747\u53ea\u652f\u630164\u4f4d\u7cfb\u7edf\u3002 \u4ee5Docker\u7684\u65b9\u5f0f\u8fd0\u884c bash docker pull servicecomb/service-center docker run -d -p 30100:30100 servicecomb/service-center:latest \u6b65\u9aa4 2 \u542f\u52a8\u672c\u5730\u670d\u52a1\u4e2d\u5fc3\u540e\uff0c\u5728\u670d\u52a1\u63d0\u4f9b/\u6d88\u8d39\u8005\u7684microservice.yaml\u6587\u4ef6\u4e2d\u914d\u7f6eServerCenter\u7684\u5730\u5740\u548c\u7aef\u53e3\uff0c\u793a\u4f8b\u4ee3\u7801\uff1a yaml servicecomb: service: registry: address: # \u670d\u52a1\u4e2d\u5fc3\u5730\u5740\u53ca\u7aef\u53e3 http://127.0.0.1:30100 \u6b65\u9aa4 3 \u5f00\u53d1\u670d\u52a1\u63d0\u4f9b/\u6d88\u8d39\u8005\uff0c\u542f\u52a8\u5fae\u670d\u52a1\u8fdb\u884c\u672c\u5730\u6d4b\u8bd5\u3002 ----\u7ed3\u675f","title":"\u542f\u52a8\u672c\u5730\u670d\u52a1\u4e2d\u5fc3"},{"location":"general-development/local-develop-test/#mock","text":"\u5728\u672c\u8fdb\u7a0b\u5185\u5b58\u4e2d\u6a21\u62df\u4e00\u4e2a\u53ea\u80fd\u672c\u8fdb\u7a0b\u4f7f\u7528\u7684\u670d\u52a1\u4e2d\u5fc3\uff0c\u4e00\u822c\u662f\u5728\u6d4b\u8bd5\u573a\u666f\u4e2d\u4f7f\u7528\u3002 * ### \u8fdb\u7a0b\u5185\u8c03\u7528 \u53ea\u9700\u8981\u5728\u542f\u52a8ServiceComb\u5f15\u64ce\u4e4b\u524d\u58f0\u660e\u4e00\u4e0b\u5373\u53ef\u542f\u7528\uff1a System.setProperty( local.registry.file , notExistJustForceLocal );","title":"Mock\u673a\u5236\u542f\u52a8\u670d\u52a1\u4e2d\u5fc3"},{"location":"general-development/local-develop-test/#_3","text":"\u5982\u679c\u90e8\u7f72\u6bd4\u8f83\u7b80\u5355\uff0c\u5e76\u4e14\u90e8\u7f72\u4fe1\u606f\u662f\u9759\u6001\u7684\uff0c\u5373\u4f7f\u6709\u8de8\u8fdb\u7a0b\u8c03\u7528\u4e5f\u53ef\u4ee5\u4f7f\u7528\u672cMock\u673a\u5236 producer\u7aef\u4ecd\u7136\u50cf\u201c\u8fdb\u7a0b\u5185\u8c03\u7528\u201d\u4e00\u6837\u58f0\u660e\u5373\u53ef \u4f46\u662f\uff0c\u56e0\u4e3aMock\u5e76\u4e0d\u80fd\u8de8\u8fdb\u7a0b\u751f\u6548\uff0c\u6240\u4ee5consumer\u7aef\u7684Mock\uff0c\u9700\u8981\u63d0\u4f9b\u4e00\u4e2a\u672c\u5730\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u5728\u91cc\u9762\u63cf\u8ff0\u8c03\u7528\u76ee\u6807\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u5305\u62ec\u540d\u5b57\u3001\u7248\u672c\u3001\u5730\u5740\u3001schema id\u7b49\u7b49\u4fe1\u606f \u540c\u6837\uff0c\u56e0\u4e3aMock\u4e0d\u80fd\u8de8\u8fdb\u7a0b\uff0cconsumer\u4e5f\u65e0\u6cd5\u52a8\u6001\u53d6\u5f97producer\u7684\u5951\u7ea6\u4fe1\u606f\uff0c\u6240\u4ee5\uff0c\u9700\u8981\u5728\u672c\u5730\u63d0\u4f9b\u5951\u7ea6\u6587\u4ef6 \uff08\u8fd9\u4e2a\u573a\u666f\uff0c\u4f7f\u7528Mock\u670d\u52a1\u4e2d\u5fc3\uff0c\u6bd4\u4f7f\u7528standalone\u7684\u670d\u52a1\u4e2d\u5fc3\uff0c\u6210\u672c\u9ad8\u5f97\u591a\u5f97\u591a\uff0c\u4e0d\u5efa\u8bae\u4f7f\u7528\uff09 \u6b65\u9aa4 1 \u65b0\u5efa\u672c\u5730\u670d\u52a1\u4e2d\u5fc3\u5b9a\u4e49\u6587\u4ef6\uff0c\u5047\u8bbe\u540d\u5b57\u4e3aregistry.yaml\uff0c\u5185\u5bb9\u793a\u4f8b\u5982\u4e0b\uff1a yaml localserv: - id: \"100\" version: \"0.0.1\" appid: localservreg schemaIds: - hello instances: - endpoints: - rest://localhost:8080 - highway://localhost:7070 * \u6b65\u9aa4 2 consumer\u672c\u5730\u90e8\u7f72\u5951\u7ea6\u6587\u4ef6 \u53c2\u8003\uff1a \u5b9a\u4e49\u670d\u52a1\u5951\u7ea6 * \u6b65\u9aa4 3 \u5728consumer main\u51fd\u6570\uff0c\u542f\u52a8ServiceComb\u5f15\u64ce\u4e4b\u524d\u58f0\u660e\uff1a \u3000\u3000System.setProperty( local.registry.file , /path/registry.yaml ); setProperty\u7b2c\u4e8c\u4e2a\u53c2\u6570\u586b\u5199registry.yaml\u5728\u78c1\u76d8\u4e2d\u7684\u7cfb\u7edf\u7edd\u5bf9\u8def\u5f84\uff0c\u6ce8\u610f\u533a\u5206\u5728\u4e0d\u540c\u7cfb\u7edf\u4e0b\u4f7f\u7528\u5bf9\u5e94\u7684\u8def\u5f84\u5206\u9694\u7b26\u3002","title":"\u8de8\u8fdb\u7a0b\u8c03\u7528"},{"location":"general-development/local-develop-test/#_4","text":"java chassis\u5728\u8bbe\u8ba1\u65f6\uff0c\u4e25\u683c\u4f9d\u8d56\u4e8e\u5951\u7ea6\uff0c\u6240\u4ee5\u6b63\u5e38\u6765\u8bf4\u5951\u7ea6\u53d8\u4e86\u5c31\u5fc5\u987b\u8981\u4fee\u6539\u5fae\u670d\u52a1\u7684\u7248\u672c\u3002\u4f46\u662f\u5982\u679c\u5f53\u524d\u8fd8\u662f\u5f00\u53d1\u6a21\u5f0f\uff0c\u90a3\u4e48\u4fee\u6539\u63a5\u53e3\u662f\u5f88\u6b63\u5e38\u7684\u60c5\u51b5\uff0c\u6bcf\u6b21\u90fd\u9700\u8981\u6539\u7248\u672c\u7684\u8bdd\uff0c\u5bf9\u7528\u6237\u6765\u8bf4\u975e\u5e38\u7684\u4e0d\u53cb\u597d\uff0c\u6240\u4ee5\u589e\u52a0\u4e86\u4e00\u4e2a\u73af\u5883\u8bbe\u7f6e\u3002\u5982\u679c\u5fae\u670d\u52a1\u914d\u7f6e\u6210\u5f00\u53d1\u73af\u5883\uff0c\u63a5\u53e3\u4fee\u6539\u4e86\uff08schema\u53d1\u751f\u4e86\u53d8\u5316\uff09\uff0c\u91cd\u542f\u5c31\u53ef\u4ee5\u6ce8\u518c\u5230\u670d\u52a1\u4e2d\u5fc3\uff0c\u800c\u4e0d\u7528\u4fee\u6539\u7248\u672c\u53f7\u3002\u4f46\u662f\u5982\u679c\u6709consumer\u5df2\u7ecf\u8c03\u7528\u4e86\u91cd\u542f\u4e4b\u524d\u7684\u670d\u52a1\uff0c\u90a3\u4e48consumer\u7aef\u9700\u8981\u91cd\u542f\u624d\u80fd\u83b7\u53d6\u6700\u65b0\u7684schema\u3002\u6bd4\u5982A - B\uff0cB\u63a5\u53e3\u8fdb\u884c\u4e86\u4fee\u6539\u5e76\u4e14\u91cd\u542f\uff0c\u90a3\u4e48A\u8fd9\u4e2a\u65f6\u5019\u8fd8\u662f\u4f7f\u7528B\u8001\u7684schema\uff0c\u8c03\u7528\u53ef\u80fd\u4f1a\u51fa\u9519\uff0c\u4ee5\u514d\u51fa\u73b0\u672a\u77e5\u5f02\u5e38\uff0cA\u4e5f\u9700\u8981\u91cd\u542f\u3002\u6709\u4e09\u79cd\u65b9\u5f0f\u53ef\u4ee5\u8bbe\u7f6e\uff0c\u63a8\u8350\u4f7f\u7528\u65b9\u6cd51 * \u65b9\u6cd51\uff1a\u901a\u8fc7JVM\u542f\u52a8\u53c2\u6570 -Dservice_description.environment=development \u8fdb\u884c\u8bbe\u7f6e \u65b9\u6cd52\uff1a\u901a\u8fc7microservice.yaml\u914d\u7f6e\u6587\u4ef6\u6765\u6307\u5b9a yaml service_description: environment: development \u65b9\u6cd53\uff1a\u901a\u8fc7\u73af\u5883\u53d8\u91cf\u6765\u6307\u5b9a\uff08\u4ec5\u9650\u4e8eWindows\u7cfb\u7edf\uff09\uff0c\u6bd4\u5982\u5728Eclipse\u4e0b\u9762\u8fdb\u884c\u5982\u4e0b\u8bbe\u7f6e","title":"\u901a\u8fc7\u8bbe\u7f6e\u73af\u5883\u4fe1\u606f\u65b9\u4fbf\u672c\u5730\u8c03\u8bd5"},{"location":"general-development/metrics/","text":"\u4e00\u3001Metrics\u4ecb\u7ecd \u57fa\u4e8e netflix spectator Foundation-metrics\u901a\u8fc7SPI\u673a\u5236\u52a0\u8f7d\u6240\u6709MetricsInitializer\u5b9e\u73b0\uff0c\u5b9e\u73b0\u8005\u53ef\u4ee5\u901a\u8fc7MetricsInitializer\u4e2d\u7684getOrder\u89c4\u5212\u6267\u884c\u987a\u5e8f\uff0corder\u6570\u5b57\u8d8a\u5c0f\uff0c\u8d8a\u5148\u6267\u884c\u3002 Metrics-core\u5b9e\u73b03\u7c7bMetricsInitializer\uff1a DefaultRegistryInitializer: \u5b9e\u4f8b\u5316\u5e76\u6ce8\u518cspectator-reg-servo\uff0c\u8bbe\u7f6e\u8f83\u5c0f\u7684order\uff0c\u4fdd\u8bc1\u6bd4\u4e0b\u97622\u7c7bMetricsInitializer\u5148\u6267\u884c Meters Initializer: \u5b9e\u73b0TPS\u3001\u65f6\u5ef6\u3001\u7ebf\u7a0b\u6c60\u3001jvm\u8d44\u6e90\u7b49\u7b49\u6570\u636e\u7684\u7edf\u8ba1 Publisher: \u8f93\u51fa\u7edf\u8ba1\u7ed3\u679c\uff0c\u5185\u7f6e\u4e86\u65e5\u5fd7\u8f93\u51fa\uff0c\u4ee5\u53ca\u901a\u8fc7RESTful\u63a5\u53e3\u8f93\u51fa Metrics-prometheus\u63d0\u4f9b\u4e0eprometheus\u5bf9\u63a5\u7684\u80fd\u529b \u4e8c\u3001\u4f7f\u7528\u65b9\u6cd5 1.Maven\u4f9d\u8d56 dependency groupId org.apache.servicecomb /groupId artifactId metrics-core /artifactId /dependency \u5982\u679c\u4e0eprometheus\u96c6\u6210\uff0c\u5219\u8fd8\u9700\u8981\u52a0\u5165\u4f9d\u8d56 dependency groupId org.apache.servicecomb /groupId artifactId metrics-prometheus /artifactId /dependency \u6ce8\uff1a\u8bf7\u5c06version\u5b57\u6bb5\u4fee\u6539\u4e3a\u5b9e\u9645\u7248\u672c\u53f7\uff1b\u5982\u679c\u7248\u672c\u53f7\u5df2\u7ecf\u5728dependencyManagement\u4e2d\u58f0\u660e\uff0c\u5219\u8fd9\u91cc\u4e0d\u5fc5\u5199\u7248\u672c\u53f7 2.\u914d\u7f6e\u8bf4\u660e \u914d\u7f6e\u9879 \u9ed8\u8ba4\u503c \u542b\u4e49 servicecomb.metrics.window_time 60000 \u7edf\u8ba1\u5468\u671f\uff0c\u5355\u4f4d\u4e3a\u6beb\u79d2 TPS\u3001\u65f6\u5ef6\u7b49\u7b49\u5468\u671f\u6027\u7684\u6570\u636e\uff0c\u6bcf\u5468\u671f\u66f4\u65b0\u4e00\u6b21\uff0c\u5728\u5468\u671f\u5185\u83b7\u53d6\u5230\u7684\u503c\uff0c\u5b9e\u9645\u662f\u4e0a\u4e00\u5468\u671f\u7684\u503c servicecomb.metrics .invocation.latencyDistribution \u65f6\u5ef6\u5206\u5e03\u65f6\u95f4\u6bb5\u5b9a\u4e49\uff0c\u5355\u4f4d\u4e3a\u6beb\u79d2 \u4f8b\u5982\uff1a0,1,10,100,1000 \u8868\u793a\u5b9a\u4e49\u4e86\u4e0b\u5217\u65f6\u5ef6\u6bb5[0, 1),[1, 10),[10, 100),[100, 1000),[1000, ) servicecomb.metrics .Consumer.invocation.slow.enabled false \u662f\u5426\u5f00\u542fConsumer\u7aef\u7684\u6162\u8c03\u7528\u68c0\u6d4b \u901a\u8fc7\u589e\u52a0\u540e\u7f00.${service}.${schema}.${operation}\uff0c\u53ef\u4ee5\u652f\u63014\u7ea7\u4f18\u5148\u7ea7\u5b9a\u4e49 servicecomb.metrics .Consumer.invocation.slow.msTime 1000 \u65f6\u5ef6\u8d85\u8fc7\u914d\u7f6e\u503c\uff0c\u5219\u4f1a\u7acb\u5373\u8f93\u51fa\u65e5\u5fd7\uff0c\u8bb0\u5f55\u672c\u6b21\u8c03\u7528\u7684stage\u8017\u65f6\u4fe1\u606f \u901a\u8fc7\u589e\u52a0\u540e\u7f00.${service}.${schema}.${operation}\uff0c\u53ef\u4ee5\u652f\u63014\u7ea7\u4f18\u5148\u7ea7\u5b9a\u4e49 servicecomb.metrics .Provider.invocation.slow.enabled false \u662f\u5426\u5f00\u542fProvide\u7aef\u7684\u6162\u8c03\u7528\u68c0\u6d4b \u901a\u8fc7\u589e\u52a0\u540e\u7f00.${service}.${schema}.${operation}\uff0c\u53ef\u4ee5\u652f\u63014\u7ea7\u4f18\u5148\u7ea7\u5b9a\u4e49 servicecomb.metrics .Provider.invocation.slow.msTime 1000 \u65f6\u5ef6\u8d85\u8fc7\u914d\u7f6e\u503c\uff0c\u5219\u4f1a\u7acb\u5373\u8f93\u51fa\u65e5\u5fd7\uff0c\u8bb0\u5f55\u672c\u6b21\u8c03\u7528\u7684stage\u8017\u65f6\u4fe1\u606f \u901a\u8fc7\u589e\u52a0\u540e\u7f00.${service}.${schema}.${operation}\uff0c\u53ef\u4ee5\u652f\u63014\u7ea7\u4f18\u5148\u7ea7\u5b9a\u4e49 servicecomb.metrics .prometheus.address 0.0.0.0:9696 prometheus\u76d1\u542c\u5730\u5740 servicecomb.metrics.publisher.defaultLog .enabled false \u662f\u5426\u8f93\u51fa\u9ed8\u8ba4\u7684\u7edf\u8ba1\u65e5\u5fd7 servicecomb.metrics.publisher.defaultLog .endpoints.client.detail.enabled false \u662f\u5426\u8f93\u51fa\u6bcf\u4e00\u6761client endpoint\u7edf\u8ba1\u65e5\u5fd7\uff0c\u56e0\u4e3a\u8ddf\u76ee\u6807\u7684ip:port\u6570\u6709\u5173\uff0c\u53ef\u80fd\u4f1a\u6709\u5f88\u591a\u6570\u636e\uff0c\u6240\u4ee5\u9ed8\u8ba4\u4e0d\u8f93\u51fa 3.\u6162\u8c03\u7528\u68c0\u6d4b \u5f00\u542f\u6162\u8c03\u7528\u68c0\u6d4b\u540e\uff0c\u5982\u679c\u5b58\u5728\u6162\u8c03\u7528\uff0c\u5219\u4f1a\u7acb\u5373\u8f93\u51fa\u76f8\u5e94\u65e5\u5fd7\uff1a 2019-04-02 23:01:09,103\\[WARN]\\[pool-7-thread-74]\\[5ca37935c00ff2c7-350076] - slow(40 ms) invocation, CONSUMER highway perf1.impl.syncQuery http method: GET url : /v1/syncQuery/{id}/ server : highway://192.168.0.152:7070?login=true status code: 200 total : 50.760 ms prepare : 0.0 ms handlers request : 0.0 ms client filters request : 0.0 ms send request : 0.5 ms get connection : 0.0 ms write to buf : 0.5 ms wait response : 50.727 ms wake consumer : 0.23 ms client filters response: 0.2 ms handlers response : 0.0 ms (SlowInvocationLogger.java:121) \u5176\u4e2d5ca37935c00ff2c7-350076\u662f${traceId}-${invocationId}\u7684\u7ed3\u6784\uff0c\u5728log4j2\u6216logback\u7684\u8f93\u51fa\u683c\u5f0f\u4e2d\u901a\u8fc7%marker\u5f15\u7528 4.\u901a\u8fc7RESTful\u8bbf\u95ee \u53ea\u8981\u5fae\u670d\u52a1\u5f00\u653e\u4e86rest\u7aef\u53e3\uff0c\u5219\u4f7f\u7528\u6d4f\u89c8\u5668\u8bbf\u95eehttp://ip:port/metrics \u5373\u53ef\uff0c \u5c06\u4f1a\u5f97\u5230\u7c7b\u4f3c\u4e0b\u9762\u683c\u5f0f\u7684json\u6570\u636e\uff1a { servicecomb.vertx.endpoints(address=192.168.0.124:7070,statistic=connectCount,type=client) : 0.0, servicecomb.vertx.endpoints(address=192.168.0.124:7070,statistic=disconnectCount,type=client) : 0.0, servicecomb.vertx.endpoints(address=192.168.0.124:7070,statistic=connections,type=client) : 1.0, servicecomb.vertx.endpoints(address=192.168.0.124:7070,statistic=bytesRead,type=client) : 508011.0, servicecomb.vertx.endpoints(address=192.168.0.124:7070,statistic=bytesWritten,type=client) : 542163.0, servicecomb.vertx.endpoints(address=192.168.0.124:7070,statistic=queueCount,type=client) : 0.0, servicecomb.vertx.endpoints(address=0.0.0.0:7070,statistic=connectCount,type=server) : 0.0, servicecomb.vertx.endpoints(address=0.0.0.0:7070,statistic=disconnectCount,type=server) : 0.0, servicecomb.vertx.endpoints(address=0.0.0.0:7070,statistic=connections,type=server) : 1.0, servicecomb.vertx.endpoints(address=0.0.0.0:7070,statistic=bytesRead,type=server) : 542163.0, servicecomb.vertx.endpoints(address=0.0.0.0:7070,statistic=bytesWritten,type=server) : 508011.0, servicecomb.vertx.endpoints(address=0.0.0.0:7070,statistic=rejectByConnectionLimit,type=server) : 0.0, servicecomb.vertx.endpoints(address=localhost:8080,statistic=connectCount,type=server) : 0.0, servicecomb.vertx.endpoints(address=localhost:8080,statistic=disconnectCount,type=server) : 0.0, servicecomb.vertx.endpoints(address=localhost:8080,statistic=connections,type=server) : 0.0, servicecomb.vertx.endpoints(address=localhost:8080,statistic=bytesRead,type=server) : 0.0, servicecomb.vertx.endpoints(address=localhost:8080,statistic=bytesWritten,type=server) : 0.0, servicecomb.vertx.endpoints(address=localhost:8080,statistic=rejectByConnectionLimit,type=server) : 0.0, threadpool.completedTaskCount(id=cse.executor.groupThreadPool-group0) : 4320.0, threadpool.rejectedCount(id=cse.executor.groupThreadPool-group0) : 0.0, threadpool.taskCount(id=cse.executor.groupThreadPool-group0) : 4320.0, threadpool.currentThreadsBusy(id=cse.executor.groupThreadPool-group0) : 0.0, threadpool.poolSize(id=cse.executor.groupThreadPool-group0) : 4.0, threadpool.maxThreads(id=cse.executor.groupThreadPool-group0) : 10.0, threadpool.queueSize(id=cse.executor.groupThreadPool-group0) : 0.0, threadpool.corePoolSize(id=cse.executor.groupThreadPool-group0) : 4.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,scope=[0,1),status=200,transport=highway,type=latencyDistribution) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,scope=[1,3),status=200,transport=highway,type=latencyDistribution) : 0.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,scope=[3,10),status=200,transport=highway,type=latencyDistribution) : 0.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,scope=[10,100),status=200,transport=highway,type=latencyDistribution) : 0.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,scope=[100,),status=200,transport=highway,type=latencyDistribution) : 0.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,scope=[0,1),status=200,transport=highway,type=latencyDistribution) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,scope=[1,3),status=200,transport=highway,type=latencyDistribution) : 0.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,scope=[3,10),status=200,transport=highway,type=latencyDistribution) : 0.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,scope=[10,100),status=200,transport=highway,type=latencyDistribution) : 0.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,scope=[100,),status=200,transport=highway,type=latencyDistribution) : 0.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=total,statistic=count,status=200,transport=highway,type=stage) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=total,statistic=totalTime,status=200,transport=highway,type=stage) : 0.25269420000000004, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=total,statistic=max,status=200,transport=highway,type=stage) : 2.7110000000000003E-4, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=handlers_request,statistic=count,status=200,transport=highway,type=stage) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=handlers_request,statistic=totalTime,status=200,transport=highway,type=stage) : 0.0079627, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=handlers_request,statistic=max,status=200,transport=highway,type=stage) : 1.74E-5, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=handlers_response,statistic=count,status=200,transport=highway,type=stage) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=handlers_response,statistic=totalTime,status=200,transport=highway,type=stage) : 0.0060666, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=handlers_response,statistic=max,status=200,transport=highway,type=stage) : 1.08E-5, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=prepare,statistic=count,status=200,transport=highway,type=stage) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=prepare,statistic=totalTime,status=200,transport=highway,type=stage) : 0.016679600000000003, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=prepare,statistic=max,status=200,transport=highway,type=stage) : 2.68E-5, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=queue,statistic=count,status=200,transport=highway,type=stage) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=queue,statistic=totalTime,status=200,transport=highway,type=stage) : 0.08155480000000001, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=queue,statistic=max,status=200,transport=highway,type=stage) : 2.1470000000000001E-4, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=execution,statistic=count,status=200,transport=highway,type=stage) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=execution,statistic=totalTime,status=200,transport=highway,type=stage) : 0.0098285, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=execution,statistic=max,status=200,transport=highway,type=stage) : 4.3100000000000004E-5, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=server_filters_request,statistic=count,status=200,transport=highway,type=stage) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=server_filters_request,statistic=totalTime,status=200,transport=highway,type=stage) : 0.0170669, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=server_filters_request,statistic=max,status=200,transport=highway,type=stage) : 3.6400000000000004E-5, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=server_filters_response,statistic=count,status=200,transport=highway,type=stage) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=server_filters_response,statistic=totalTime,status=200,transport=highway,type=stage) : 0.0196985, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=server_filters_response,statistic=max,status=200,transport=highway,type=stage) : 4.8100000000000004E-5, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=producer_send_response,statistic=count,status=200,transport=highway,type=stage) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=producer_send_response,statistic=totalTime,status=200,transport=highway,type=stage) : 0.0880885, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=producer_send_response,statistic=max,status=200,transport=highway,type=stage) : 1.049E-4, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=total,statistic=count,status=200,transport=highway,type=stage) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=total,statistic=totalTime,status=200,transport=highway,type=stage) : 0.9796976000000001, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=total,statistic=max,status=200,transport=highway,type=stage) : 6.720000000000001E-4, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=handlers_request,statistic=count,status=200,transport=highway,type=stage) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=handlers_request,statistic=totalTime,status=200,transport=highway,type=stage) : 0.012601500000000002, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=handlers_request,statistic=max,status=200,transport=highway,type=stage) : 3.5000000000000004E-5, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=handlers_response,statistic=count,status=200,transport=highway,type=stage) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=handlers_response,statistic=totalTime,status=200,transport=highway,type=stage) : 0.0066785, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=handlers_response,statistic=max,status=200,transport=highway,type=stage) : 3.21E-5, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=prepare,statistic=count,status=200,transport=highway,type=stage) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=prepare,statistic=totalTime,status=200,transport=highway,type=stage) : 0.010363800000000001, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=prepare,statistic=max,status=200,transport=highway,type=stage) : 2.85E-5, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=client_filters_request,statistic=count,status=200,transport=highway,type=stage) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=client_filters_request,statistic=totalTime,status=200,transport=highway,type=stage) : 0.0060282, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=client_filters_request,statistic=max,status=200,transport=highway,type=stage) : 9.2E-6, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=consumer_send_request,statistic=count,status=200,transport=highway,type=stage) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=consumer_send_request,statistic=totalTime,status=200,transport=highway,type=stage) : 0.099984, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=consumer_send_request,statistic=max,status=200,transport=highway,type=stage) : 1.1740000000000001E-4, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=consumer_get_connection,statistic=count,status=200,transport=highway,type=stage) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=consumer_get_connection,statistic=totalTime,status=200,transport=highway,type=stage) : 0.006916800000000001, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=consumer_get_connection,statistic=max,status=200,transport=highway,type=stage) : 5.83E-5, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=consumer_write_to_buf,statistic=count,status=200,transport=highway,type=stage) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=consumer_write_to_buf,statistic=totalTime,status=200,transport=highway,type=stage) : 0.0930672, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=consumer_write_to_buf,statistic=max,status=200,transport=highway,type=stage) : 1.1580000000000001E-4, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=consumer_wait_response,statistic=count,status=200,transport=highway,type=stage) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=consumer_wait_response,statistic=totalTime,status=200,transport=highway,type=stage) : 0.7654931, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=consumer_wait_response,statistic=max,status=200,transport=highway,type=stage) : 5.547E-4, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=consumer_wake_consumer,statistic=count,status=200,transport=highway,type=stage) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=consumer_wake_consumer,statistic=totalTime,status=200,transport=highway,type=stage) : 0.0502085, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=consumer_wake_consumer,statistic=max,status=200,transport=highway,type=stage) : 3.7370000000000003E-4, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=client_filters_response,statistic=count,status=200,transport=highway,type=stage) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=client_filters_response,statistic=totalTime,status=200,transport=highway,type=stage) : 0.0227188, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=client_filters_response,statistic=max,status=200,transport=highway,type=stage) : 4.0E-5 } \u4e09\u3001\u7edf\u8ba1\u9879\u6c47\u603b 1. CPU Name Tag keys Tag values \u542b\u4e49 os type cpu \u5f53\u524d\u5468\u671f\u5185\u7cfb\u7edfCPU\u4f7f\u7528\u7387\uff0cSolaris\u6a21\u5f0f processCpu \u5f53\u524d\u5468\u671f\u5185\u5fae\u670d\u52a1\u8fdb\u7a0bCPU\u4f7f\u7528\u7387\uff0cIRIX\u6a21\u5f0f processCpu\u9664\u4ee5cpu\u8fd1\u4f3c\u7b49\u4e8e\u7cfb\u7edfCPU\u6570 2. NET Name Tag keys Tag values \u542b\u4e49 os type net statistic send \u5f53\u524d\u5468\u671f\u5185\u5e73\u5747\u6bcf\u79d2\u53d1\u9001\u7684\u5b57\u8282\u6570(Bps) receive \u5f53\u524d\u5468\u671f\u5185\u5e73\u5747\u6bcf\u79d2\u63a5\u6536\u7684\u5b57\u8282\u6570(Bps) sendPackets \u5f53\u524d\u5468\u671f\u5185\u5e73\u5747\u6bcf\u79d2\u53d1\u9001\u7684\u5305\u6570(pps) receivePackets \u5f53\u524d\u5468\u671f\u5185\u5e73\u5747\u6bcf\u79d2\u63a5\u6536\u7684\u5305\u6570(pps) interface \u7f51\u5361\u8bbe\u5907\u540d 3. vertx client endpoints Name Tag keys Tag values \u542b\u4e49 servicecomb .vertx .endpoints type client address ${ip}:${port} \u670d\u52a1\u7aef\u7684ip:port statistic connectCount \u5f53\u524d\u5468\u671f\u5185\u5171\u53d1\u8d77\u591a\u5c11\u6b21\u8fde\u63a5 disconnectCount \u5f53\u524d\u5468\u671f\u5185\u65ad\u8fde\u7684\u6b21\u6570 queueCount http\u8fde\u63a5\u6c60\u4e2d\u6b63\u5728\u7b49\u5f85\u83b7\u53d6\u8fde\u63a5\u7684\u8bf7\u6c42\u6570 connections \u5f53\u524d\u65f6\u523b\u7684\u8fde\u63a5\u6570 bytesRead \u5f53\u524d\u5468\u671f\u5185\u5e73\u5747\u6bcf\u79d2\u53d1\u9001\u7684\u5b57\u8282\u6570(Bps) \u4e1a\u52a1\u5c42\u7684\u7edf\u8ba1\uff0c\u76f8\u5bf9\u4ece\u7f51\u5361\u83b7\u53d6\u7684\u6570\u636e\uff0c\u8fd9\u91cc\u7684\u6570\u636e\u4e0d\u5305\u62ec\u5305\u5934\u7684\u5927\u5c0f \u5bf9\u4e8ehttp\u6d88\u606f\uff0c\u4e0d\u5305\u62echttp header\u5927\u5c0f bytesWritten \u5f53\u524d\u5468\u671f\u5185\u5e73\u5747\u6bcf\u79d2\u63a5\u6536\u7684\u5b57\u8282\u6570(Bps) \u4e1a\u52a1\u5c42\u7684\u7edf\u8ba1\uff0c\u76f8\u5bf9\u4ece\u7f51\u5361\u83b7\u53d6\u7684\u6570\u636e\uff0c\u8fd9\u91cc\u7684\u6570\u636e\u4e0d\u5305\u62ec\u5305\u5934\u7684\u5927\u5c0f \u5bf9\u4e8ehttp\u6d88\u606f\uff0c\u4e0d\u5305\u62echttp header\u5927\u5c0f 4. vertx server endpoints Name Tag keys Tag values \u542b\u4e49 servicecomb .vertx .endpoints type server address ${ip}:${port} \u76d1\u542c\u7684ip:port statistic connectCount \u5f53\u524d\u5468\u671f\u5185\u5171\u63a5\u5165\u591a\u5c11\u6b21\u8fde\u63a5 disconnectCount \u5f53\u524d\u5468\u671f\u5185\u65ad\u8fde\u7684\u6b21\u6570 rejectByConnectionLimit \u5f53\u524d\u5468\u671f\u5185\u56e0\u8d85\u51fa\u8fde\u63a5\u6570\u9650\u5236\u800c\u4e3b\u52a8\u65ad\u8fde\u7684\u6b21\u6570 connections \u5f53\u524d\u65f6\u523b\u7684\u8fde\u63a5\u6570 bytesRead \u5f53\u524d\u5468\u671f\u5185\u5e73\u5747\u6bcf\u79d2\u53d1\u9001\u7684\u5b57\u8282\u6570(Bps) \u4e1a\u52a1\u5c42\u7684\u7edf\u8ba1\uff0c\u76f8\u5bf9\u4ece\u7f51\u5361\u83b7\u53d6\u7684\u6570\u636e\uff0c\u8fd9\u91cc\u7684\u6570\u636e\u4e0d\u5305\u62ec\u5305\u5934\u7684\u5927\u5c0f \u5bf9\u4e8ehttp\u6d88\u606f\uff0c\u4e0d\u5305\u62echttp header\u5927\u5c0f bytesWritten \u5f53\u524d\u5468\u671f\u5185\u5e73\u5747\u6bcf\u79d2\u63a5\u6536\u7684\u5b57\u8282\u6570(Bps) \u4e1a\u52a1\u5c42\u7684\u7edf\u8ba1\uff0c\u76f8\u5bf9\u4ece\u7f51\u5361\u83b7\u53d6\u7684\u6570\u636e\uff0c\u8fd9\u91cc\u7684\u6570\u636e\u4e0d\u5305\u62ec\u5305\u5934\u7684\u5927\u5c0f \u5bf9\u4e8ehttp\u6d88\u606f\uff0c\u4e0d\u5305\u62echttp header\u5927\u5c0f 5. invocation \u65f6\u5ef6\u5206\u5e03 Name Tag keys Tag values \u542b\u4e49 servicecomb .invocation role CONSUMER\u3001PRODUCER\u3001EDGE \u662fCONSUMER\u3001PRODUCER\u8fd8\u662fEDGE\u7aef\u7684\u7edf\u8ba1 operation ${microserviceName} .${schemaId} .${operationName} \u8c03\u7528\u7684\u65b9\u6cd5\u540d transport highway\u6216rest \u8c03\u7528\u662f\u5728\u54ea\u4e2a\u4f20\u8f93\u901a\u9053\u4e0a\u53d1\u751f\u7684 status http status code type latencyDistribution \u8c03\u7528\u65f6\u5ef6\u5206\u5e03 scope [${min}, ${max}) \u5f53\u524d\u5468\u671f\u5185\u8c03\u7528\u65f6\u5ef6\u5927\u4e8e\u7b49\u4e8emin\uff0c\u5c0f\u4e8emax\u7684\u6b21\u6570 [${min},)\u8868\u793amax\u4e3a\u65e0\u9650\u5927 6. invocation consumer stage\u65f6\u5ef6 Name Tag keys Tag values \u542b\u4e49 servicecomb .invocation role CONSUMER CONSUMER\u7aef\u7684\u7edf\u8ba1 operation ${microserviceName} .${schemaId} .${operationName} \u8c03\u7528\u7684\u65b9\u6cd5\u540d transport highway\u6216rest \u8c03\u7528\u662f\u5728\u54ea\u4e2a\u4f20\u8f93\u901a\u9053\u4e0a\u53d1\u751f\u7684 status http status code type stage stage\u65f6\u5ef6 stage total \u5168\u6d41\u7a0b prepare \u521d\u59cb\u5316 handlers_request handler\u94fe\u8bf7\u6c42\u6d41\u7a0b client_filters_request http client filter\u94fe\u8bf7\u6c42\u6d41\u7a0b \u53ea\u6709\u8d70rest transport\u624d\u6709\u672c\u9636\u6bb5 consumer_send_request \u53d1\u9001\u8bf7\u6c42\u9636\u6bb5\uff0c\u5305\u62ecconsumer_get_connection\u548cconsumer_write_to_buf consumer_get_connection \u4ece\u8fde\u63a5\u6c60\u83b7\u53d6\u8fde\u63a5 consumer_write_to_buf \u5411\u7f51\u7edc\u7f13\u51b2\u533a\u5199\u6570\u636e consumer_wait_response \u7b49\u5f85\u670d\u52a1\u7aef\u5e94\u7b54 consumer_wake_consumer \u540c\u6b65\u6d41\u7a0b\u4e2d\uff0c\u6536\u5230\u5e94\u7b54\u540e\uff0c\u4ece\u5524\u9192\u7b49\u5f85\u7ebf\u7a0b\uff0c\u5230\u7b49\u5f85\u7ebf\u7a0b\u5f00\u59cb\u5904\u7406\u5e94\u7b54\u7684\u8017\u65f6 client_filters_response http client filter\u94fe\u5e94\u7b54\u6d41\u7a0b handlers_response handler\u94fe\u5e94\u7b54\u6d41\u7a0b statistic count \u5e73\u5747\u6bcf\u79d2\u8c03\u7528\u6b21\u6570\uff0c\u5373TPS count=\u7edf\u8ba1\u5468\u671f\u5185\u7684\u8c03\u7528\u6b21\u6570/\u5468\u671f\uff08\u79d2\uff09 totalTime \u5355\u4f4d\u4e3a\u79d2 totalTime=\u5f53\u524d\u5468\u671f\u5185\u7684\u8c03\u7528\u8017\u65f6\u603b\u65f6\u957f/\u5468\u671f\uff08\u79d2\uff09 totalTime\u9664\u4ee5count\u5373\u53ef\u5f97\u5230\u5e73\u5747\u65f6\u5ef6 max \u5355\u4f4d\u4e3a\u79d2 \u5f53\u524d\u5468\u671f\u5185\u6700\u5927\u8017\u65f6 7. invocation producer stage\u65f6\u5ef6 Name Tag keys Tag values \u542b\u4e49 servicecomb .invocation role PRODUCER PRODUCER\u7aef\u7684\u7edf\u8ba1 operation ${microserviceName} .${schemaId} .${operationName} \u8c03\u7528\u7684\u65b9\u6cd5\u540d transport highway\u6216rest \u8c03\u7528\u662f\u5728\u54ea\u4e2a\u4f20\u8f93\u901a\u9053\u4e0a\u53d1\u751f\u7684 status http status code type stage stage\u65f6\u5ef6 stage total \u5168\u6d41\u7a0b prepare \u521d\u59cb\u5316 queue \u4ec5\u5728\u4f7f\u7528\u7ebf\u7a0b\u6c60\u65f6\u6709\u610f\u4e49 \u8868\u793a\u8c03\u7528\u5728\u7ebf\u7a0b\u6c60\u4e2d\u6392\u961f\u7684\u65f6\u957f server_filters_request http server filter\u94fe\u8bf7\u6c42\u6d41\u7a0b \u53ea\u6709\u8d70rest transport\u624d\u6709\u672c\u9636\u6bb5 handlers_request handler\u94fe\u8bf7\u6c42\u6d41\u7a0b execution \u4e1a\u52a1\u65b9\u6cd5 handlers_response handler\u94fe\u5e94\u7b54\u6d41\u7a0b server_filters_response http server filter\u94fe\u5e94\u7b54\u6d41\u7a0b producer_send_response \u53d1\u9001\u5e94\u7b54 statistic count \u5e73\u5747\u6bcf\u79d2\u8c03\u7528\u6b21\u6570\uff0c\u5373TPS count=\u7edf\u8ba1\u5468\u671f\u5185\u7684\u8c03\u7528\u6b21\u6570/\u5468\u671f\uff08\u79d2\uff09 totalTime \u5355\u4f4d\u4e3a\u79d2 totalTime=\u5f53\u524d\u5468\u671f\u5185\u7684\u8c03\u7528\u8017\u65f6\u603b\u65f6\u957f/\u5468\u671f\uff08\u79d2\uff09 totalTime\u9664\u4ee5count\u5373\u53ef\u5f97\u5230\u5e73\u5747\u65f6\u5ef6 max \u5355\u4f4d\u4e3a\u79d2 \u5f53\u524d\u5468\u671f\u5185\u6700\u5927\u8017\u65f6 8. invocation edge stage\u65f6\u5ef6 Name Tag keys Tag values \u542b\u4e49 servicecomb .invocation role EDGE EDGE\u7684\u7edf\u8ba1 operation ${microserviceName} .${schemaId} .${operationName} \u8c03\u7528\u7684\u65b9\u6cd5\u540d transport highway\u6216rest \u8c03\u7528\u662f\u5728\u54ea\u4e2a\u4f20\u8f93\u901a\u9053\u4e0a\u53d1\u751f\u7684 status http status code type stage stage\u65f6\u5ef6 stage total \u5168\u6d41\u7a0b prepare \u521d\u59cb\u5316 queue \u4ec5\u5728\u4f7f\u7528\u7ebf\u7a0b\u6c60\u65f6\u6709\u610f\u4e49 \u8868\u793a\u8c03\u7528\u5728\u7ebf\u7a0b\u6c60\u4e2d\u6392\u961f\u7684\u65f6\u957f server_filters_request http server filter\u94fe\u8bf7\u6c42\u6d41\u7a0b handlers_request handler\u94fe\u8bf7\u6c42\u6d41\u7a0b client_filters_request http client filter\u94fe\u8bf7\u6c42\u6d41\u7a0b consumer_send_request \u53d1\u9001\u8bf7\u6c42\u9636\u6bb5\uff0c\u5305\u62ecconsumer_get_connection\u548cconsumer_write_to_buf consumer_get_connection \u4ece\u8fde\u63a5\u6c60\u83b7\u53d6\u8fde\u63a5 consumer_write_to_buf \u5411\u7f51\u7edc\u7f13\u51b2\u533a\u5199\u6570\u636e consumer_wait_response \u7b49\u5f85\u670d\u52a1\u7aef\u5e94\u7b54 consumer_wake_consumer \u540c\u6b65\u6d41\u7a0b\u4e2d\uff0c\u6536\u5230\u5e94\u7b54\u540e\uff0c\u4ece\u5524\u9192\u7b49\u5f85\u7ebf\u7a0b\uff0c\u5230\u7b49\u5f85\u7ebf\u7a0b\u5f00\u59cb\u5904\u7406\u5e94\u7b54\u7684\u8017\u65f6 client_filters_response http client filter\u94fe\u5e94\u7b54\u6d41\u7a0b handlers_response handler\u94fe\u5e94\u7b54\u6d41\u7a0b server_filters_response http server filter\u94fe\u5e94\u7b54\u6d41\u7a0b producer_send_response \u53d1\u9001\u5e94\u7b54 statistic count \u5e73\u5747\u6bcf\u79d2\u8c03\u7528\u6b21\u6570\uff0c\u5373TPS count=\u7edf\u8ba1\u5468\u671f\u5185\u7684\u8c03\u7528\u6b21\u6570/\u5468\u671f\uff08\u79d2\uff09 totalTime \u5355\u4f4d\u4e3a\u79d2 totalTime=\u5f53\u524d\u5468\u671f\u5185\u7684\u8c03\u7528\u8017\u65f6\u603b\u65f6\u957f/\u5468\u671f\uff08\u79d2\uff09 totalTime\u9664\u4ee5count\u5373\u53ef\u5f97\u5230\u5e73\u5747\u65f6\u5ef6 max \u5355\u4f4d\u4e3a\u79d2 \u5f53\u524d\u5468\u671f\u5185\u6700\u5927\u8017\u65f6 9. threadpool Name Tag keys Tag values \u542b\u4e49 threadpool.corePoolSize id ${threadPoolName} \u6700\u5c0f\u7ebf\u7a0b\u6570 threadpool.maxThreads \u6700\u5927\u5141\u8bb8\u7684\u7ebf\u7a0b\u6570 threadpool.poolSize \u5f53\u524d\u5b9e\u9645\u7ebf\u7a0b\u6570 threadpool.currentThreadsBusy \u5f53\u524d\u7684\u6d3b\u52a8\u7ebf\u7a0b\u6570\uff0c\u5373\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684\u4efb\u52a1\u6570 threadpool.queueSize \u5f53\u524d\u6b63\u5728\u6392\u961f\u7684\u4efb\u52a1\u6570 threadpool.rejectedCount \u5f53\u524d\u5468\u671f\u5185\u5e73\u5747\u6bcf\u79d2\u88ab\u62d2\u7edd\u7684\u4efb\u52a1\u6570 threadpool.taskCount \u7edf\u8ba1\u5468\u671f\u5185\u5e73\u5747\u6bcf\u79d2\u63d0\u4ea4\u7684\u4efb\u52a1\u6570 taskCount=\uff08completed + queue + active\uff09/\u5468\u671f\uff08\u79d2\uff09 threadpool.completedTaskCount \u7edf\u8ba1\u5468\u671f\u5185\u5e73\u5747\u6bcf\u79d2\u5b8c\u6210\u7684\u4efb\u52a1\u6570 completedTaskCount=completed/\u5468\u671f\uff08\u79d2\uff09 \u56db\u3001\u4e1a\u52a1\u5b9a\u5236 \u56e0\u4e3aServiceComb\u5df2\u7ecf\u521d\u59cb\u5316\u4e86servo\u7684registry\uff0c\u6240\u4ee5\u4e1a\u52a1\u4e0d\u5fc5\u518d\u521b\u5efaregistry \u5b9e\u73b0MetricsInitializer\u63a5\u53e3\uff0c\u5b9a\u4e49\u4e1a\u52a1\u7ea7\u7684Meters\uff0c\u6216\u5b9e\u73b0\u5b9a\u5236\u7684Publisher\uff0c\u518d\u901a\u8fc7SPI\u673a\u5236\u58f0\u660e\u81ea\u5df1\u7684\u5b9e\u73b0\u5373\u53ef\u3002 1.Meters: \u521b\u5efaMeters\u80fd\u529b\u5747\u7531spectator\u63d0\u4f9b\uff0c\u53ef\u67e5\u9605 netflix spectator \u6587\u6863 2.Publisher: \u5468\u671f\u6027\u8f93\u51fa\u7684\u573a\u666f\uff0c\u6bd4\u5982\u65e5\u5fd7\u573a\u666f\uff0c\u901a\u8fc7eventBus\u8ba2\u9605org.apache.servicecomb.foundation.metrics.PolledEvent\uff0cPolledEvent.getMeters()\u5373\u662f\u672c\u5468\u671f\u7684\u7edf\u8ba1\u7ed3\u679c \u975e\u5468\u671f\u6027\u8f93\u51fa\u7684\u573a\u666f\uff0c\u6bd4\u5982\u901a\u8fc7RESTful\u63a5\u53e3\u8bbf\u95ee\uff0c\u901a\u8fc7globalRegistry.iterator()\u5373\u53ef\u5f97\u5230\u672c\u5468\u671f\u7684\u7edf\u8ba1\u7ed3\u679c","title":"\u4e00\u3001Metrics\u4ecb\u7ecd"},{"location":"general-development/metrics/#metrics","text":"\u57fa\u4e8e netflix spectator Foundation-metrics\u901a\u8fc7SPI\u673a\u5236\u52a0\u8f7d\u6240\u6709MetricsInitializer\u5b9e\u73b0\uff0c\u5b9e\u73b0\u8005\u53ef\u4ee5\u901a\u8fc7MetricsInitializer\u4e2d\u7684getOrder\u89c4\u5212\u6267\u884c\u987a\u5e8f\uff0corder\u6570\u5b57\u8d8a\u5c0f\uff0c\u8d8a\u5148\u6267\u884c\u3002 Metrics-core\u5b9e\u73b03\u7c7bMetricsInitializer\uff1a DefaultRegistryInitializer: \u5b9e\u4f8b\u5316\u5e76\u6ce8\u518cspectator-reg-servo\uff0c\u8bbe\u7f6e\u8f83\u5c0f\u7684order\uff0c\u4fdd\u8bc1\u6bd4\u4e0b\u97622\u7c7bMetricsInitializer\u5148\u6267\u884c Meters Initializer: \u5b9e\u73b0TPS\u3001\u65f6\u5ef6\u3001\u7ebf\u7a0b\u6c60\u3001jvm\u8d44\u6e90\u7b49\u7b49\u6570\u636e\u7684\u7edf\u8ba1 Publisher: \u8f93\u51fa\u7edf\u8ba1\u7ed3\u679c\uff0c\u5185\u7f6e\u4e86\u65e5\u5fd7\u8f93\u51fa\uff0c\u4ee5\u53ca\u901a\u8fc7RESTful\u63a5\u53e3\u8f93\u51fa Metrics-prometheus\u63d0\u4f9b\u4e0eprometheus\u5bf9\u63a5\u7684\u80fd\u529b","title":"\u4e00\u3001Metrics\u4ecb\u7ecd"},{"location":"general-development/metrics/#_1","text":"","title":"\u4e8c\u3001\u4f7f\u7528\u65b9\u6cd5"},{"location":"general-development/metrics/#1maven","text":"dependency groupId org.apache.servicecomb /groupId artifactId metrics-core /artifactId /dependency \u5982\u679c\u4e0eprometheus\u96c6\u6210\uff0c\u5219\u8fd8\u9700\u8981\u52a0\u5165\u4f9d\u8d56 dependency groupId org.apache.servicecomb /groupId artifactId metrics-prometheus /artifactId /dependency \u6ce8\uff1a\u8bf7\u5c06version\u5b57\u6bb5\u4fee\u6539\u4e3a\u5b9e\u9645\u7248\u672c\u53f7\uff1b\u5982\u679c\u7248\u672c\u53f7\u5df2\u7ecf\u5728dependencyManagement\u4e2d\u58f0\u660e\uff0c\u5219\u8fd9\u91cc\u4e0d\u5fc5\u5199\u7248\u672c\u53f7","title":"1.Maven\u4f9d\u8d56"},{"location":"general-development/metrics/#2","text":"\u914d\u7f6e\u9879 \u9ed8\u8ba4\u503c \u542b\u4e49 servicecomb.metrics.window_time 60000 \u7edf\u8ba1\u5468\u671f\uff0c\u5355\u4f4d\u4e3a\u6beb\u79d2 TPS\u3001\u65f6\u5ef6\u7b49\u7b49\u5468\u671f\u6027\u7684\u6570\u636e\uff0c\u6bcf\u5468\u671f\u66f4\u65b0\u4e00\u6b21\uff0c\u5728\u5468\u671f\u5185\u83b7\u53d6\u5230\u7684\u503c\uff0c\u5b9e\u9645\u662f\u4e0a\u4e00\u5468\u671f\u7684\u503c servicecomb.metrics .invocation.latencyDistribution \u65f6\u5ef6\u5206\u5e03\u65f6\u95f4\u6bb5\u5b9a\u4e49\uff0c\u5355\u4f4d\u4e3a\u6beb\u79d2 \u4f8b\u5982\uff1a0,1,10,100,1000 \u8868\u793a\u5b9a\u4e49\u4e86\u4e0b\u5217\u65f6\u5ef6\u6bb5[0, 1),[1, 10),[10, 100),[100, 1000),[1000, ) servicecomb.metrics .Consumer.invocation.slow.enabled false \u662f\u5426\u5f00\u542fConsumer\u7aef\u7684\u6162\u8c03\u7528\u68c0\u6d4b \u901a\u8fc7\u589e\u52a0\u540e\u7f00.${service}.${schema}.${operation}\uff0c\u53ef\u4ee5\u652f\u63014\u7ea7\u4f18\u5148\u7ea7\u5b9a\u4e49 servicecomb.metrics .Consumer.invocation.slow.msTime 1000 \u65f6\u5ef6\u8d85\u8fc7\u914d\u7f6e\u503c\uff0c\u5219\u4f1a\u7acb\u5373\u8f93\u51fa\u65e5\u5fd7\uff0c\u8bb0\u5f55\u672c\u6b21\u8c03\u7528\u7684stage\u8017\u65f6\u4fe1\u606f \u901a\u8fc7\u589e\u52a0\u540e\u7f00.${service}.${schema}.${operation}\uff0c\u53ef\u4ee5\u652f\u63014\u7ea7\u4f18\u5148\u7ea7\u5b9a\u4e49 servicecomb.metrics .Provider.invocation.slow.enabled false \u662f\u5426\u5f00\u542fProvide\u7aef\u7684\u6162\u8c03\u7528\u68c0\u6d4b \u901a\u8fc7\u589e\u52a0\u540e\u7f00.${service}.${schema}.${operation}\uff0c\u53ef\u4ee5\u652f\u63014\u7ea7\u4f18\u5148\u7ea7\u5b9a\u4e49 servicecomb.metrics .Provider.invocation.slow.msTime 1000 \u65f6\u5ef6\u8d85\u8fc7\u914d\u7f6e\u503c\uff0c\u5219\u4f1a\u7acb\u5373\u8f93\u51fa\u65e5\u5fd7\uff0c\u8bb0\u5f55\u672c\u6b21\u8c03\u7528\u7684stage\u8017\u65f6\u4fe1\u606f \u901a\u8fc7\u589e\u52a0\u540e\u7f00.${service}.${schema}.${operation}\uff0c\u53ef\u4ee5\u652f\u63014\u7ea7\u4f18\u5148\u7ea7\u5b9a\u4e49 servicecomb.metrics .prometheus.address 0.0.0.0:9696 prometheus\u76d1\u542c\u5730\u5740 servicecomb.metrics.publisher.defaultLog .enabled false \u662f\u5426\u8f93\u51fa\u9ed8\u8ba4\u7684\u7edf\u8ba1\u65e5\u5fd7 servicecomb.metrics.publisher.defaultLog .endpoints.client.detail.enabled false \u662f\u5426\u8f93\u51fa\u6bcf\u4e00\u6761client endpoint\u7edf\u8ba1\u65e5\u5fd7\uff0c\u56e0\u4e3a\u8ddf\u76ee\u6807\u7684ip:port\u6570\u6709\u5173\uff0c\u53ef\u80fd\u4f1a\u6709\u5f88\u591a\u6570\u636e\uff0c\u6240\u4ee5\u9ed8\u8ba4\u4e0d\u8f93\u51fa","title":"2.\u914d\u7f6e\u8bf4\u660e"},{"location":"general-development/metrics/#3","text":"\u5f00\u542f\u6162\u8c03\u7528\u68c0\u6d4b\u540e\uff0c\u5982\u679c\u5b58\u5728\u6162\u8c03\u7528\uff0c\u5219\u4f1a\u7acb\u5373\u8f93\u51fa\u76f8\u5e94\u65e5\u5fd7\uff1a 2019-04-02 23:01:09,103\\[WARN]\\[pool-7-thread-74]\\[5ca37935c00ff2c7-350076] - slow(40 ms) invocation, CONSUMER highway perf1.impl.syncQuery http method: GET url : /v1/syncQuery/{id}/ server : highway://192.168.0.152:7070?login=true status code: 200 total : 50.760 ms prepare : 0.0 ms handlers request : 0.0 ms client filters request : 0.0 ms send request : 0.5 ms get connection : 0.0 ms write to buf : 0.5 ms wait response : 50.727 ms wake consumer : 0.23 ms client filters response: 0.2 ms handlers response : 0.0 ms (SlowInvocationLogger.java:121) \u5176\u4e2d5ca37935c00ff2c7-350076\u662f${traceId}-${invocationId}\u7684\u7ed3\u6784\uff0c\u5728log4j2\u6216logback\u7684\u8f93\u51fa\u683c\u5f0f\u4e2d\u901a\u8fc7%marker\u5f15\u7528","title":"3.\u6162\u8c03\u7528\u68c0\u6d4b"},{"location":"general-development/metrics/#4restful","text":"\u53ea\u8981\u5fae\u670d\u52a1\u5f00\u653e\u4e86rest\u7aef\u53e3\uff0c\u5219\u4f7f\u7528\u6d4f\u89c8\u5668\u8bbf\u95eehttp://ip:port/metrics \u5373\u53ef\uff0c \u5c06\u4f1a\u5f97\u5230\u7c7b\u4f3c\u4e0b\u9762\u683c\u5f0f\u7684json\u6570\u636e\uff1a { servicecomb.vertx.endpoints(address=192.168.0.124:7070,statistic=connectCount,type=client) : 0.0, servicecomb.vertx.endpoints(address=192.168.0.124:7070,statistic=disconnectCount,type=client) : 0.0, servicecomb.vertx.endpoints(address=192.168.0.124:7070,statistic=connections,type=client) : 1.0, servicecomb.vertx.endpoints(address=192.168.0.124:7070,statistic=bytesRead,type=client) : 508011.0, servicecomb.vertx.endpoints(address=192.168.0.124:7070,statistic=bytesWritten,type=client) : 542163.0, servicecomb.vertx.endpoints(address=192.168.0.124:7070,statistic=queueCount,type=client) : 0.0, servicecomb.vertx.endpoints(address=0.0.0.0:7070,statistic=connectCount,type=server) : 0.0, servicecomb.vertx.endpoints(address=0.0.0.0:7070,statistic=disconnectCount,type=server) : 0.0, servicecomb.vertx.endpoints(address=0.0.0.0:7070,statistic=connections,type=server) : 1.0, servicecomb.vertx.endpoints(address=0.0.0.0:7070,statistic=bytesRead,type=server) : 542163.0, servicecomb.vertx.endpoints(address=0.0.0.0:7070,statistic=bytesWritten,type=server) : 508011.0, servicecomb.vertx.endpoints(address=0.0.0.0:7070,statistic=rejectByConnectionLimit,type=server) : 0.0, servicecomb.vertx.endpoints(address=localhost:8080,statistic=connectCount,type=server) : 0.0, servicecomb.vertx.endpoints(address=localhost:8080,statistic=disconnectCount,type=server) : 0.0, servicecomb.vertx.endpoints(address=localhost:8080,statistic=connections,type=server) : 0.0, servicecomb.vertx.endpoints(address=localhost:8080,statistic=bytesRead,type=server) : 0.0, servicecomb.vertx.endpoints(address=localhost:8080,statistic=bytesWritten,type=server) : 0.0, servicecomb.vertx.endpoints(address=localhost:8080,statistic=rejectByConnectionLimit,type=server) : 0.0, threadpool.completedTaskCount(id=cse.executor.groupThreadPool-group0) : 4320.0, threadpool.rejectedCount(id=cse.executor.groupThreadPool-group0) : 0.0, threadpool.taskCount(id=cse.executor.groupThreadPool-group0) : 4320.0, threadpool.currentThreadsBusy(id=cse.executor.groupThreadPool-group0) : 0.0, threadpool.poolSize(id=cse.executor.groupThreadPool-group0) : 4.0, threadpool.maxThreads(id=cse.executor.groupThreadPool-group0) : 10.0, threadpool.queueSize(id=cse.executor.groupThreadPool-group0) : 0.0, threadpool.corePoolSize(id=cse.executor.groupThreadPool-group0) : 4.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,scope=[0,1),status=200,transport=highway,type=latencyDistribution) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,scope=[1,3),status=200,transport=highway,type=latencyDistribution) : 0.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,scope=[3,10),status=200,transport=highway,type=latencyDistribution) : 0.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,scope=[10,100),status=200,transport=highway,type=latencyDistribution) : 0.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,scope=[100,),status=200,transport=highway,type=latencyDistribution) : 0.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,scope=[0,1),status=200,transport=highway,type=latencyDistribution) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,scope=[1,3),status=200,transport=highway,type=latencyDistribution) : 0.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,scope=[3,10),status=200,transport=highway,type=latencyDistribution) : 0.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,scope=[10,100),status=200,transport=highway,type=latencyDistribution) : 0.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,scope=[100,),status=200,transport=highway,type=latencyDistribution) : 0.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=total,statistic=count,status=200,transport=highway,type=stage) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=total,statistic=totalTime,status=200,transport=highway,type=stage) : 0.25269420000000004, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=total,statistic=max,status=200,transport=highway,type=stage) : 2.7110000000000003E-4, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=handlers_request,statistic=count,status=200,transport=highway,type=stage) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=handlers_request,statistic=totalTime,status=200,transport=highway,type=stage) : 0.0079627, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=handlers_request,statistic=max,status=200,transport=highway,type=stage) : 1.74E-5, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=handlers_response,statistic=count,status=200,transport=highway,type=stage) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=handlers_response,statistic=totalTime,status=200,transport=highway,type=stage) : 0.0060666, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=handlers_response,statistic=max,status=200,transport=highway,type=stage) : 1.08E-5, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=prepare,statistic=count,status=200,transport=highway,type=stage) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=prepare,statistic=totalTime,status=200,transport=highway,type=stage) : 0.016679600000000003, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=prepare,statistic=max,status=200,transport=highway,type=stage) : 2.68E-5, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=queue,statistic=count,status=200,transport=highway,type=stage) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=queue,statistic=totalTime,status=200,transport=highway,type=stage) : 0.08155480000000001, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=queue,statistic=max,status=200,transport=highway,type=stage) : 2.1470000000000001E-4, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=execution,statistic=count,status=200,transport=highway,type=stage) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=execution,statistic=totalTime,status=200,transport=highway,type=stage) : 0.0098285, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=execution,statistic=max,status=200,transport=highway,type=stage) : 4.3100000000000004E-5, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=server_filters_request,statistic=count,status=200,transport=highway,type=stage) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=server_filters_request,statistic=totalTime,status=200,transport=highway,type=stage) : 0.0170669, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=server_filters_request,statistic=max,status=200,transport=highway,type=stage) : 3.6400000000000004E-5, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=server_filters_response,statistic=count,status=200,transport=highway,type=stage) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=server_filters_response,statistic=totalTime,status=200,transport=highway,type=stage) : 0.0196985, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=server_filters_response,statistic=max,status=200,transport=highway,type=stage) : 4.8100000000000004E-5, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=producer_send_response,statistic=count,status=200,transport=highway,type=stage) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=producer_send_response,statistic=totalTime,status=200,transport=highway,type=stage) : 0.0880885, servicecomb.invocation(operation=perf1.impl.syncQuery,role=PRODUCER,stage=producer_send_response,statistic=max,status=200,transport=highway,type=stage) : 1.049E-4, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=total,statistic=count,status=200,transport=highway,type=stage) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=total,statistic=totalTime,status=200,transport=highway,type=stage) : 0.9796976000000001, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=total,statistic=max,status=200,transport=highway,type=stage) : 6.720000000000001E-4, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=handlers_request,statistic=count,status=200,transport=highway,type=stage) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=handlers_request,statistic=totalTime,status=200,transport=highway,type=stage) : 0.012601500000000002, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=handlers_request,statistic=max,status=200,transport=highway,type=stage) : 3.5000000000000004E-5, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=handlers_response,statistic=count,status=200,transport=highway,type=stage) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=handlers_response,statistic=totalTime,status=200,transport=highway,type=stage) : 0.0066785, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=handlers_response,statistic=max,status=200,transport=highway,type=stage) : 3.21E-5, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=prepare,statistic=count,status=200,transport=highway,type=stage) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=prepare,statistic=totalTime,status=200,transport=highway,type=stage) : 0.010363800000000001, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=prepare,statistic=max,status=200,transport=highway,type=stage) : 2.85E-5, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=client_filters_request,statistic=count,status=200,transport=highway,type=stage) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=client_filters_request,statistic=totalTime,status=200,transport=highway,type=stage) : 0.0060282, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=client_filters_request,statistic=max,status=200,transport=highway,type=stage) : 9.2E-6, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=consumer_send_request,statistic=count,status=200,transport=highway,type=stage) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=consumer_send_request,statistic=totalTime,status=200,transport=highway,type=stage) : 0.099984, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=consumer_send_request,statistic=max,status=200,transport=highway,type=stage) : 1.1740000000000001E-4, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=consumer_get_connection,statistic=count,status=200,transport=highway,type=stage) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=consumer_get_connection,statistic=totalTime,status=200,transport=highway,type=stage) : 0.006916800000000001, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=consumer_get_connection,statistic=max,status=200,transport=highway,type=stage) : 5.83E-5, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=consumer_write_to_buf,statistic=count,status=200,transport=highway,type=stage) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=consumer_write_to_buf,statistic=totalTime,status=200,transport=highway,type=stage) : 0.0930672, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=consumer_write_to_buf,statistic=max,status=200,transport=highway,type=stage) : 1.1580000000000001E-4, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=consumer_wait_response,statistic=count,status=200,transport=highway,type=stage) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=consumer_wait_response,statistic=totalTime,status=200,transport=highway,type=stage) : 0.7654931, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=consumer_wait_response,statistic=max,status=200,transport=highway,type=stage) : 5.547E-4, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=consumer_wake_consumer,statistic=count,status=200,transport=highway,type=stage) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=consumer_wake_consumer,statistic=totalTime,status=200,transport=highway,type=stage) : 0.0502085, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=consumer_wake_consumer,statistic=max,status=200,transport=highway,type=stage) : 3.7370000000000003E-4, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=client_filters_response,statistic=count,status=200,transport=highway,type=stage) : 4269.0, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=client_filters_response,statistic=totalTime,status=200,transport=highway,type=stage) : 0.0227188, servicecomb.invocation(operation=perf1.impl.syncQuery,role=CONSUMER,stage=client_filters_response,statistic=max,status=200,transport=highway,type=stage) : 4.0E-5 }","title":"4.\u901a\u8fc7RESTful\u8bbf\u95ee"},{"location":"general-development/metrics/#_2","text":"","title":"\u4e09\u3001\u7edf\u8ba1\u9879\u6c47\u603b"},{"location":"general-development/metrics/#1-cpu","text":"Name Tag keys Tag values \u542b\u4e49 os type cpu \u5f53\u524d\u5468\u671f\u5185\u7cfb\u7edfCPU\u4f7f\u7528\u7387\uff0cSolaris\u6a21\u5f0f processCpu \u5f53\u524d\u5468\u671f\u5185\u5fae\u670d\u52a1\u8fdb\u7a0bCPU\u4f7f\u7528\u7387\uff0cIRIX\u6a21\u5f0f processCpu\u9664\u4ee5cpu\u8fd1\u4f3c\u7b49\u4e8e\u7cfb\u7edfCPU\u6570","title":"1. CPU"},{"location":"general-development/metrics/#2-net","text":"Name Tag keys Tag values \u542b\u4e49 os type net statistic send \u5f53\u524d\u5468\u671f\u5185\u5e73\u5747\u6bcf\u79d2\u53d1\u9001\u7684\u5b57\u8282\u6570(Bps) receive \u5f53\u524d\u5468\u671f\u5185\u5e73\u5747\u6bcf\u79d2\u63a5\u6536\u7684\u5b57\u8282\u6570(Bps) sendPackets \u5f53\u524d\u5468\u671f\u5185\u5e73\u5747\u6bcf\u79d2\u53d1\u9001\u7684\u5305\u6570(pps) receivePackets \u5f53\u524d\u5468\u671f\u5185\u5e73\u5747\u6bcf\u79d2\u63a5\u6536\u7684\u5305\u6570(pps) interface \u7f51\u5361\u8bbe\u5907\u540d","title":"2. NET"},{"location":"general-development/metrics/#3-vertx-client-endpoints","text":"Name Tag keys Tag values \u542b\u4e49 servicecomb .vertx .endpoints type client address ${ip}:${port} \u670d\u52a1\u7aef\u7684ip:port statistic connectCount \u5f53\u524d\u5468\u671f\u5185\u5171\u53d1\u8d77\u591a\u5c11\u6b21\u8fde\u63a5 disconnectCount \u5f53\u524d\u5468\u671f\u5185\u65ad\u8fde\u7684\u6b21\u6570 queueCount http\u8fde\u63a5\u6c60\u4e2d\u6b63\u5728\u7b49\u5f85\u83b7\u53d6\u8fde\u63a5\u7684\u8bf7\u6c42\u6570 connections \u5f53\u524d\u65f6\u523b\u7684\u8fde\u63a5\u6570 bytesRead \u5f53\u524d\u5468\u671f\u5185\u5e73\u5747\u6bcf\u79d2\u53d1\u9001\u7684\u5b57\u8282\u6570(Bps) \u4e1a\u52a1\u5c42\u7684\u7edf\u8ba1\uff0c\u76f8\u5bf9\u4ece\u7f51\u5361\u83b7\u53d6\u7684\u6570\u636e\uff0c\u8fd9\u91cc\u7684\u6570\u636e\u4e0d\u5305\u62ec\u5305\u5934\u7684\u5927\u5c0f \u5bf9\u4e8ehttp\u6d88\u606f\uff0c\u4e0d\u5305\u62echttp header\u5927\u5c0f bytesWritten \u5f53\u524d\u5468\u671f\u5185\u5e73\u5747\u6bcf\u79d2\u63a5\u6536\u7684\u5b57\u8282\u6570(Bps) \u4e1a\u52a1\u5c42\u7684\u7edf\u8ba1\uff0c\u76f8\u5bf9\u4ece\u7f51\u5361\u83b7\u53d6\u7684\u6570\u636e\uff0c\u8fd9\u91cc\u7684\u6570\u636e\u4e0d\u5305\u62ec\u5305\u5934\u7684\u5927\u5c0f \u5bf9\u4e8ehttp\u6d88\u606f\uff0c\u4e0d\u5305\u62echttp header\u5927\u5c0f","title":"3. vertx client endpoints"},{"location":"general-development/metrics/#4-vertx-server-endpoints","text":"Name Tag keys Tag values \u542b\u4e49 servicecomb .vertx .endpoints type server address ${ip}:${port} \u76d1\u542c\u7684ip:port statistic connectCount \u5f53\u524d\u5468\u671f\u5185\u5171\u63a5\u5165\u591a\u5c11\u6b21\u8fde\u63a5 disconnectCount \u5f53\u524d\u5468\u671f\u5185\u65ad\u8fde\u7684\u6b21\u6570 rejectByConnectionLimit \u5f53\u524d\u5468\u671f\u5185\u56e0\u8d85\u51fa\u8fde\u63a5\u6570\u9650\u5236\u800c\u4e3b\u52a8\u65ad\u8fde\u7684\u6b21\u6570 connections \u5f53\u524d\u65f6\u523b\u7684\u8fde\u63a5\u6570 bytesRead \u5f53\u524d\u5468\u671f\u5185\u5e73\u5747\u6bcf\u79d2\u53d1\u9001\u7684\u5b57\u8282\u6570(Bps) \u4e1a\u52a1\u5c42\u7684\u7edf\u8ba1\uff0c\u76f8\u5bf9\u4ece\u7f51\u5361\u83b7\u53d6\u7684\u6570\u636e\uff0c\u8fd9\u91cc\u7684\u6570\u636e\u4e0d\u5305\u62ec\u5305\u5934\u7684\u5927\u5c0f \u5bf9\u4e8ehttp\u6d88\u606f\uff0c\u4e0d\u5305\u62echttp header\u5927\u5c0f bytesWritten \u5f53\u524d\u5468\u671f\u5185\u5e73\u5747\u6bcf\u79d2\u63a5\u6536\u7684\u5b57\u8282\u6570(Bps) \u4e1a\u52a1\u5c42\u7684\u7edf\u8ba1\uff0c\u76f8\u5bf9\u4ece\u7f51\u5361\u83b7\u53d6\u7684\u6570\u636e\uff0c\u8fd9\u91cc\u7684\u6570\u636e\u4e0d\u5305\u62ec\u5305\u5934\u7684\u5927\u5c0f \u5bf9\u4e8ehttp\u6d88\u606f\uff0c\u4e0d\u5305\u62echttp header\u5927\u5c0f","title":"4. vertx server endpoints"},{"location":"general-development/metrics/#5-invocation","text":"Name Tag keys Tag values \u542b\u4e49 servicecomb .invocation role CONSUMER\u3001PRODUCER\u3001EDGE \u662fCONSUMER\u3001PRODUCER\u8fd8\u662fEDGE\u7aef\u7684\u7edf\u8ba1 operation ${microserviceName} .${schemaId} .${operationName} \u8c03\u7528\u7684\u65b9\u6cd5\u540d transport highway\u6216rest \u8c03\u7528\u662f\u5728\u54ea\u4e2a\u4f20\u8f93\u901a\u9053\u4e0a\u53d1\u751f\u7684 status http status code type latencyDistribution \u8c03\u7528\u65f6\u5ef6\u5206\u5e03 scope [${min}, ${max}) \u5f53\u524d\u5468\u671f\u5185\u8c03\u7528\u65f6\u5ef6\u5927\u4e8e\u7b49\u4e8emin\uff0c\u5c0f\u4e8emax\u7684\u6b21\u6570 [${min},)\u8868\u793amax\u4e3a\u65e0\u9650\u5927","title":"5. invocation \u65f6\u5ef6\u5206\u5e03"},{"location":"general-development/metrics/#6-invocation-consumer-stage","text":"Name Tag keys Tag values \u542b\u4e49 servicecomb .invocation role CONSUMER CONSUMER\u7aef\u7684\u7edf\u8ba1 operation ${microserviceName} .${schemaId} .${operationName} \u8c03\u7528\u7684\u65b9\u6cd5\u540d transport highway\u6216rest \u8c03\u7528\u662f\u5728\u54ea\u4e2a\u4f20\u8f93\u901a\u9053\u4e0a\u53d1\u751f\u7684 status http status code type stage stage\u65f6\u5ef6 stage total \u5168\u6d41\u7a0b prepare \u521d\u59cb\u5316 handlers_request handler\u94fe\u8bf7\u6c42\u6d41\u7a0b client_filters_request http client filter\u94fe\u8bf7\u6c42\u6d41\u7a0b \u53ea\u6709\u8d70rest transport\u624d\u6709\u672c\u9636\u6bb5 consumer_send_request \u53d1\u9001\u8bf7\u6c42\u9636\u6bb5\uff0c\u5305\u62ecconsumer_get_connection\u548cconsumer_write_to_buf consumer_get_connection \u4ece\u8fde\u63a5\u6c60\u83b7\u53d6\u8fde\u63a5 consumer_write_to_buf \u5411\u7f51\u7edc\u7f13\u51b2\u533a\u5199\u6570\u636e consumer_wait_response \u7b49\u5f85\u670d\u52a1\u7aef\u5e94\u7b54 consumer_wake_consumer \u540c\u6b65\u6d41\u7a0b\u4e2d\uff0c\u6536\u5230\u5e94\u7b54\u540e\uff0c\u4ece\u5524\u9192\u7b49\u5f85\u7ebf\u7a0b\uff0c\u5230\u7b49\u5f85\u7ebf\u7a0b\u5f00\u59cb\u5904\u7406\u5e94\u7b54\u7684\u8017\u65f6 client_filters_response http client filter\u94fe\u5e94\u7b54\u6d41\u7a0b handlers_response handler\u94fe\u5e94\u7b54\u6d41\u7a0b statistic count \u5e73\u5747\u6bcf\u79d2\u8c03\u7528\u6b21\u6570\uff0c\u5373TPS count=\u7edf\u8ba1\u5468\u671f\u5185\u7684\u8c03\u7528\u6b21\u6570/\u5468\u671f\uff08\u79d2\uff09 totalTime \u5355\u4f4d\u4e3a\u79d2 totalTime=\u5f53\u524d\u5468\u671f\u5185\u7684\u8c03\u7528\u8017\u65f6\u603b\u65f6\u957f/\u5468\u671f\uff08\u79d2\uff09 totalTime\u9664\u4ee5count\u5373\u53ef\u5f97\u5230\u5e73\u5747\u65f6\u5ef6 max \u5355\u4f4d\u4e3a\u79d2 \u5f53\u524d\u5468\u671f\u5185\u6700\u5927\u8017\u65f6","title":"6. invocation consumer stage\u65f6\u5ef6"},{"location":"general-development/metrics/#7-invocation-producer-stage","text":"Name Tag keys Tag values \u542b\u4e49 servicecomb .invocation role PRODUCER PRODUCER\u7aef\u7684\u7edf\u8ba1 operation ${microserviceName} .${schemaId} .${operationName} \u8c03\u7528\u7684\u65b9\u6cd5\u540d transport highway\u6216rest \u8c03\u7528\u662f\u5728\u54ea\u4e2a\u4f20\u8f93\u901a\u9053\u4e0a\u53d1\u751f\u7684 status http status code type stage stage\u65f6\u5ef6 stage total \u5168\u6d41\u7a0b prepare \u521d\u59cb\u5316 queue \u4ec5\u5728\u4f7f\u7528\u7ebf\u7a0b\u6c60\u65f6\u6709\u610f\u4e49 \u8868\u793a\u8c03\u7528\u5728\u7ebf\u7a0b\u6c60\u4e2d\u6392\u961f\u7684\u65f6\u957f server_filters_request http server filter\u94fe\u8bf7\u6c42\u6d41\u7a0b \u53ea\u6709\u8d70rest transport\u624d\u6709\u672c\u9636\u6bb5 handlers_request handler\u94fe\u8bf7\u6c42\u6d41\u7a0b execution \u4e1a\u52a1\u65b9\u6cd5 handlers_response handler\u94fe\u5e94\u7b54\u6d41\u7a0b server_filters_response http server filter\u94fe\u5e94\u7b54\u6d41\u7a0b producer_send_response \u53d1\u9001\u5e94\u7b54 statistic count \u5e73\u5747\u6bcf\u79d2\u8c03\u7528\u6b21\u6570\uff0c\u5373TPS count=\u7edf\u8ba1\u5468\u671f\u5185\u7684\u8c03\u7528\u6b21\u6570/\u5468\u671f\uff08\u79d2\uff09 totalTime \u5355\u4f4d\u4e3a\u79d2 totalTime=\u5f53\u524d\u5468\u671f\u5185\u7684\u8c03\u7528\u8017\u65f6\u603b\u65f6\u957f/\u5468\u671f\uff08\u79d2\uff09 totalTime\u9664\u4ee5count\u5373\u53ef\u5f97\u5230\u5e73\u5747\u65f6\u5ef6 max \u5355\u4f4d\u4e3a\u79d2 \u5f53\u524d\u5468\u671f\u5185\u6700\u5927\u8017\u65f6","title":"7. invocation producer stage\u65f6\u5ef6"},{"location":"general-development/metrics/#8-invocation-edge-stage","text":"Name Tag keys Tag values \u542b\u4e49 servicecomb .invocation role EDGE EDGE\u7684\u7edf\u8ba1 operation ${microserviceName} .${schemaId} .${operationName} \u8c03\u7528\u7684\u65b9\u6cd5\u540d transport highway\u6216rest \u8c03\u7528\u662f\u5728\u54ea\u4e2a\u4f20\u8f93\u901a\u9053\u4e0a\u53d1\u751f\u7684 status http status code type stage stage\u65f6\u5ef6 stage total \u5168\u6d41\u7a0b prepare \u521d\u59cb\u5316 queue \u4ec5\u5728\u4f7f\u7528\u7ebf\u7a0b\u6c60\u65f6\u6709\u610f\u4e49 \u8868\u793a\u8c03\u7528\u5728\u7ebf\u7a0b\u6c60\u4e2d\u6392\u961f\u7684\u65f6\u957f server_filters_request http server filter\u94fe\u8bf7\u6c42\u6d41\u7a0b handlers_request handler\u94fe\u8bf7\u6c42\u6d41\u7a0b client_filters_request http client filter\u94fe\u8bf7\u6c42\u6d41\u7a0b consumer_send_request \u53d1\u9001\u8bf7\u6c42\u9636\u6bb5\uff0c\u5305\u62ecconsumer_get_connection\u548cconsumer_write_to_buf consumer_get_connection \u4ece\u8fde\u63a5\u6c60\u83b7\u53d6\u8fde\u63a5 consumer_write_to_buf \u5411\u7f51\u7edc\u7f13\u51b2\u533a\u5199\u6570\u636e consumer_wait_response \u7b49\u5f85\u670d\u52a1\u7aef\u5e94\u7b54 consumer_wake_consumer \u540c\u6b65\u6d41\u7a0b\u4e2d\uff0c\u6536\u5230\u5e94\u7b54\u540e\uff0c\u4ece\u5524\u9192\u7b49\u5f85\u7ebf\u7a0b\uff0c\u5230\u7b49\u5f85\u7ebf\u7a0b\u5f00\u59cb\u5904\u7406\u5e94\u7b54\u7684\u8017\u65f6 client_filters_response http client filter\u94fe\u5e94\u7b54\u6d41\u7a0b handlers_response handler\u94fe\u5e94\u7b54\u6d41\u7a0b server_filters_response http server filter\u94fe\u5e94\u7b54\u6d41\u7a0b producer_send_response \u53d1\u9001\u5e94\u7b54 statistic count \u5e73\u5747\u6bcf\u79d2\u8c03\u7528\u6b21\u6570\uff0c\u5373TPS count=\u7edf\u8ba1\u5468\u671f\u5185\u7684\u8c03\u7528\u6b21\u6570/\u5468\u671f\uff08\u79d2\uff09 totalTime \u5355\u4f4d\u4e3a\u79d2 totalTime=\u5f53\u524d\u5468\u671f\u5185\u7684\u8c03\u7528\u8017\u65f6\u603b\u65f6\u957f/\u5468\u671f\uff08\u79d2\uff09 totalTime\u9664\u4ee5count\u5373\u53ef\u5f97\u5230\u5e73\u5747\u65f6\u5ef6 max \u5355\u4f4d\u4e3a\u79d2 \u5f53\u524d\u5468\u671f\u5185\u6700\u5927\u8017\u65f6","title":"8. invocation edge stage\u65f6\u5ef6"},{"location":"general-development/metrics/#9-threadpool","text":"Name Tag keys Tag values \u542b\u4e49 threadpool.corePoolSize id ${threadPoolName} \u6700\u5c0f\u7ebf\u7a0b\u6570 threadpool.maxThreads \u6700\u5927\u5141\u8bb8\u7684\u7ebf\u7a0b\u6570 threadpool.poolSize \u5f53\u524d\u5b9e\u9645\u7ebf\u7a0b\u6570 threadpool.currentThreadsBusy \u5f53\u524d\u7684\u6d3b\u52a8\u7ebf\u7a0b\u6570\uff0c\u5373\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684\u4efb\u52a1\u6570 threadpool.queueSize \u5f53\u524d\u6b63\u5728\u6392\u961f\u7684\u4efb\u52a1\u6570 threadpool.rejectedCount \u5f53\u524d\u5468\u671f\u5185\u5e73\u5747\u6bcf\u79d2\u88ab\u62d2\u7edd\u7684\u4efb\u52a1\u6570 threadpool.taskCount \u7edf\u8ba1\u5468\u671f\u5185\u5e73\u5747\u6bcf\u79d2\u63d0\u4ea4\u7684\u4efb\u52a1\u6570 taskCount=\uff08completed + queue + active\uff09/\u5468\u671f\uff08\u79d2\uff09 threadpool.completedTaskCount \u7edf\u8ba1\u5468\u671f\u5185\u5e73\u5747\u6bcf\u79d2\u5b8c\u6210\u7684\u4efb\u52a1\u6570 completedTaskCount=completed/\u5468\u671f\uff08\u79d2\uff09","title":"9. threadpool"},{"location":"general-development/metrics/#_3","text":"\u56e0\u4e3aServiceComb\u5df2\u7ecf\u521d\u59cb\u5316\u4e86servo\u7684registry\uff0c\u6240\u4ee5\u4e1a\u52a1\u4e0d\u5fc5\u518d\u521b\u5efaregistry \u5b9e\u73b0MetricsInitializer\u63a5\u53e3\uff0c\u5b9a\u4e49\u4e1a\u52a1\u7ea7\u7684Meters\uff0c\u6216\u5b9e\u73b0\u5b9a\u5236\u7684Publisher\uff0c\u518d\u901a\u8fc7SPI\u673a\u5236\u58f0\u660e\u81ea\u5df1\u7684\u5b9e\u73b0\u5373\u53ef\u3002","title":"\u56db\u3001\u4e1a\u52a1\u5b9a\u5236"},{"location":"general-development/metrics/#1meters","text":"\u521b\u5efaMeters\u80fd\u529b\u5747\u7531spectator\u63d0\u4f9b\uff0c\u53ef\u67e5\u9605 netflix spectator \u6587\u6863","title":"1.Meters:"},{"location":"general-development/metrics/#2publisher","text":"\u5468\u671f\u6027\u8f93\u51fa\u7684\u573a\u666f\uff0c\u6bd4\u5982\u65e5\u5fd7\u573a\u666f\uff0c\u901a\u8fc7eventBus\u8ba2\u9605org.apache.servicecomb.foundation.metrics.PolledEvent\uff0cPolledEvent.getMeters()\u5373\u662f\u672c\u5468\u671f\u7684\u7edf\u8ba1\u7ed3\u679c \u975e\u5468\u671f\u6027\u8f93\u51fa\u7684\u573a\u666f\uff0c\u6bd4\u5982\u901a\u8fc7RESTful\u63a5\u53e3\u8bbf\u95ee\uff0c\u901a\u8fc7globalRegistry.iterator()\u5373\u53ef\u5f97\u5230\u672c\u5468\u671f\u7684\u7edf\u8ba1\u7ed3\u679c","title":"2.Publisher:"},{"location":"general-development/microservice-invocation-chain/","text":"\u6982\u5ff5\u9610\u8ff0 \u5fae\u670d\u52a1\u67b6\u6784\u89e3\u51b3\u4e86\u5f88\u591a\u5355\u4f53\u5e94\u7528\u5e26\u6765\u7684\u95ee\u9898\uff0c\u4f46\u540c\u65f6\u4e5f\u9700\u8981\u6211\u4eec\u4ed8\u51fa\u989d\u5916\u7684\u4ee3\u4ef7\u3002\u7531\u4e8e\u7f51\u7edc\u7684\u4e0d\u7a33\u5b9a\u6027\u5e26\u6765\u7684\u8bf7\u6c42\u5904\u7406\u5ef6\u8fdf\u5c31\u662f\u4ee3\u4ef7\u4e4b\u4e00\u3002 \u5728\u5355\u4f53\u5e94\u7528\u4e2d\uff0c\u6240\u6709\u6a21\u5757\u90fd\u5728\u540c\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u8fd0\u884c\uff0c\u6240\u4ee5\u5e76\u6ca1\u6709\u6a21\u5757\u95f4\u4e92\u901a\u7684\u95ee\u9898\u3002\u4f46\u5fae\u670d\u52a1\u67b6\u6784\u4e2d\uff0c\u670d\u52a1\u95f4\u901a\u8fc7\u7f51\u7edc\u6c9f\u901a\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u5f97\u4e0d\u5904\u7406\u548c\u7f51\u7edc\u6709\u5173\u7684 \u95ee\u9898\uff0c\u4f8b\u5982\uff1a\u5ef6\u8fdf\u3001\u8d85\u65f6\u3001\u7f51\u7edc\u5206\u533a\u7b49\u3002 \u53e6\u5916\uff0c\u968f\u7740\u4e1a\u52a1\u7684\u6269\u5c55\u670d\u52a1\u589e\u591a\uff0c\u6211\u4eec\u5f88\u96be\u6d1e\u5bdf\u6570\u636e\u5982\u4f55\u5728\u86db\u7f51\u822c\u590d\u6742\u7684\u670d\u52a1\u7ed3\u6784\u4e2d\u6d41\u8f6c\u3002\u6211\u4eec\u5982\u4f55\u624d\u80fd\u6709\u6548\u7684\u76d1\u63a7\u7f51\u7edc\u5ef6\u8fdf\u5e76\u4e14\u53ef\u89c6\u5316\u670d\u52a1\u4e2d\u7684\u6570\u636e\u6d41\u8f6c\u5462\uff1f \u5206\u5e03\u5f0f\u8c03\u7528\u94fe\u8ffd\u8e2a \u7528\u4e8e\u6709\u6548\u5730\u76d1\u63a7\u5fae\u670d\u52a1\u7684\u7f51\u7edc\u5ef6\u65f6\u5e76\u53ef\u89c6\u5316\u5fae\u670d\u52a1\u4e2d\u7684\u6570\u636e\u6d41\u8f6c\u3002 Zipkin Zipkin \u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u8c03\u7528\u94fe\u8ffd\u8e2a\u7cfb\u7edf\u3002 \u5b83\u80fd\u5e2e\u52a9\u7528\u6237\u6536\u96c6\u65f6\u5e8f\u6570\u636e\u7528\u4ee5\u5b9a\u4f4d\u5fae\u670d\u52a1\u4e2d\u7684\u5ef6\u8fdf\u95ee\u9898\uff0c\u5b83\u540c\u65f6\u7ba1\u7406\u8ffd\u8e2a\u6570\u636e\u7684\u6536\u96c6 \u548c\u67e5\u8be2\u3002Zipkin \u7684\u8bbe\u8ba1\u57fa\u4e8e Google Dapper paper \u3002 ServiceComb \u96c6\u6210\u4e86 Zipkin \u63d0\u4f9b\u81ea\u52a8\u8c03\u7528\u94fe\u8ffd\u8e2a\u80fd\u529b\uff0c\u5982\u6b64\u4e00\u6765\u7528\u6237\u53ea\u9700\u8981\u4e13\u6ce8\u5b9e\u73b0\u5176\u4e1a\u52a1\u9700\u6c42\u3002 \u4f7f\u7528\u6b65\u9aa4: \u6dfb\u52a0\u4f9d\u8d56 \u57fa\u4e8e ServiceComb Java Chassis \u7684\u5fae\u670d\u52a1\u53ea\u9700\u8981\u6dfb\u52a0\u5982\u4e0b\u4f9d\u8d56\u5230 pom.xml\uff1a dependency groupId org.apache.servicecomb /groupId artifactId handler-tracing-zipkin /artifactId /dependency \u5982\u679c\u5fae\u670d\u52a1\u662f\u57fa\u4e8e Spring Cloud + Zuul \u7684 API \u7f51\u5173\uff0c\u4f8b\u5982 workshop demo \u4e2d\u7684 manager service \uff0c\u6211\u4eec\u8fd8\u9700\u8981\u52a0\u5165\u5982\u4e0b\u7684\u989d\u5916\u4f9d\u8d56\uff1a dependency groupId org.apache.servicecomb /groupId artifactId spring-cloud-zuul-zipkin /artifactId /dependency \u914d\u7f6e\u8ffd\u8e2a\u5904\u7406\u548c\u6570\u636e\u6536\u96c6 {#\u914d\u7f6e\u8ffd\u8e2a\u5904\u7406\u548c\u6570\u636e\u6536\u96c6} \u5728microservice.yaml\u6587\u4ef6\u4e2d\u8bbe\u7f6e\u8ffd\u8e2a\u5904\u7406\u5668\u548c\u6570\u636e\u6536\u96c6\u670d\u52a1\u5730\u5740 servicecomb: handler: chain: Consumer: default: tracing-consumer Provider: default: tracing-provider servicecomb: tracing: collector: address: http://zipkin.servicecomb.io:9411 \u5c31\u8fd9\u6837\uff0c\u5728\u52a0\u4e86\u4e24\u4e2a\u914d\u7f6e\u9879\uff0c\u6ca1\u6539\u52a8\u4e00\u884c\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u542f\u52a8\u4e86\u57fa\u4e8e Zipkin \u548c Java chassis \u7684\u5206\u5e03\u5f0f\u8c03\u7528\u94fe\u8ffd\u8e2a\u7684\u529f\u80fd\u3002 \u6ce8\u610f \u5982\u679c\u9879\u76ee\u4e2d\u7684\u5176\u4ed6\u4f9d\u8d56\u4e5f\u5f15\u5165\u4e86 zipkin \uff08\u4f8b\u5982 Spring Cloud\uff09\uff0c\u53ef\u80fd\u5bfc\u81f4 zipkin \u7248\u672c\u4e0d\u4e00\u81f4\u800c\u8fd0\u884c\u51fa\u9519\uff0c\u8fd9\u65f6\u9700\u8981\u5728\u9879\u76ee pom \u4e2d\u58f0\u660e zipkin \u7248\u672c\u3002","title":"Microservice invocation chain"},{"location":"general-development/microservice-invocation-chain/#_1","text":"\u5fae\u670d\u52a1\u67b6\u6784\u89e3\u51b3\u4e86\u5f88\u591a\u5355\u4f53\u5e94\u7528\u5e26\u6765\u7684\u95ee\u9898\uff0c\u4f46\u540c\u65f6\u4e5f\u9700\u8981\u6211\u4eec\u4ed8\u51fa\u989d\u5916\u7684\u4ee3\u4ef7\u3002\u7531\u4e8e\u7f51\u7edc\u7684\u4e0d\u7a33\u5b9a\u6027\u5e26\u6765\u7684\u8bf7\u6c42\u5904\u7406\u5ef6\u8fdf\u5c31\u662f\u4ee3\u4ef7\u4e4b\u4e00\u3002 \u5728\u5355\u4f53\u5e94\u7528\u4e2d\uff0c\u6240\u6709\u6a21\u5757\u90fd\u5728\u540c\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u8fd0\u884c\uff0c\u6240\u4ee5\u5e76\u6ca1\u6709\u6a21\u5757\u95f4\u4e92\u901a\u7684\u95ee\u9898\u3002\u4f46\u5fae\u670d\u52a1\u67b6\u6784\u4e2d\uff0c\u670d\u52a1\u95f4\u901a\u8fc7\u7f51\u7edc\u6c9f\u901a\uff0c\u56e0\u6b64\u6211\u4eec\u4e0d\u5f97\u4e0d\u5904\u7406\u548c\u7f51\u7edc\u6709\u5173\u7684 \u95ee\u9898\uff0c\u4f8b\u5982\uff1a\u5ef6\u8fdf\u3001\u8d85\u65f6\u3001\u7f51\u7edc\u5206\u533a\u7b49\u3002 \u53e6\u5916\uff0c\u968f\u7740\u4e1a\u52a1\u7684\u6269\u5c55\u670d\u52a1\u589e\u591a\uff0c\u6211\u4eec\u5f88\u96be\u6d1e\u5bdf\u6570\u636e\u5982\u4f55\u5728\u86db\u7f51\u822c\u590d\u6742\u7684\u670d\u52a1\u7ed3\u6784\u4e2d\u6d41\u8f6c\u3002\u6211\u4eec\u5982\u4f55\u624d\u80fd\u6709\u6548\u7684\u76d1\u63a7\u7f51\u7edc\u5ef6\u8fdf\u5e76\u4e14\u53ef\u89c6\u5316\u670d\u52a1\u4e2d\u7684\u6570\u636e\u6d41\u8f6c\u5462\uff1f \u5206\u5e03\u5f0f\u8c03\u7528\u94fe\u8ffd\u8e2a \u7528\u4e8e\u6709\u6548\u5730\u76d1\u63a7\u5fae\u670d\u52a1\u7684\u7f51\u7edc\u5ef6\u65f6\u5e76\u53ef\u89c6\u5316\u5fae\u670d\u52a1\u4e2d\u7684\u6570\u636e\u6d41\u8f6c\u3002","title":"\u6982\u5ff5\u9610\u8ff0"},{"location":"general-development/microservice-invocation-chain/#zipkin","text":"Zipkin \u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u8c03\u7528\u94fe\u8ffd\u8e2a\u7cfb\u7edf\u3002 \u5b83\u80fd\u5e2e\u52a9\u7528\u6237\u6536\u96c6\u65f6\u5e8f\u6570\u636e\u7528\u4ee5\u5b9a\u4f4d\u5fae\u670d\u52a1\u4e2d\u7684\u5ef6\u8fdf\u95ee\u9898\uff0c\u5b83\u540c\u65f6\u7ba1\u7406\u8ffd\u8e2a\u6570\u636e\u7684\u6536\u96c6 \u548c\u67e5\u8be2\u3002Zipkin \u7684\u8bbe\u8ba1\u57fa\u4e8e Google Dapper paper \u3002 ServiceComb \u96c6\u6210\u4e86 Zipkin \u63d0\u4f9b\u81ea\u52a8\u8c03\u7528\u94fe\u8ffd\u8e2a\u80fd\u529b\uff0c\u5982\u6b64\u4e00\u6765\u7528\u6237\u53ea\u9700\u8981\u4e13\u6ce8\u5b9e\u73b0\u5176\u4e1a\u52a1\u9700\u6c42\u3002","title":"Zipkin"},{"location":"general-development/microservice-invocation-chain/#_2","text":"","title":"\u4f7f\u7528\u6b65\u9aa4:"},{"location":"general-development/microservice-invocation-chain/#_3","text":"\u57fa\u4e8e ServiceComb Java Chassis \u7684\u5fae\u670d\u52a1\u53ea\u9700\u8981\u6dfb\u52a0\u5982\u4e0b\u4f9d\u8d56\u5230 pom.xml\uff1a dependency groupId org.apache.servicecomb /groupId artifactId handler-tracing-zipkin /artifactId /dependency \u5982\u679c\u5fae\u670d\u52a1\u662f\u57fa\u4e8e Spring Cloud + Zuul \u7684 API \u7f51\u5173\uff0c\u4f8b\u5982 workshop demo \u4e2d\u7684 manager service \uff0c\u6211\u4eec\u8fd8\u9700\u8981\u52a0\u5165\u5982\u4e0b\u7684\u989d\u5916\u4f9d\u8d56\uff1a dependency groupId org.apache.servicecomb /groupId artifactId spring-cloud-zuul-zipkin /artifactId /dependency","title":"\u6dfb\u52a0\u4f9d\u8d56"},{"location":"general-development/microservice-invocation-chain/#_4","text":"\u5728microservice.yaml\u6587\u4ef6\u4e2d\u8bbe\u7f6e\u8ffd\u8e2a\u5904\u7406\u5668\u548c\u6570\u636e\u6536\u96c6\u670d\u52a1\u5730\u5740 servicecomb: handler: chain: Consumer: default: tracing-consumer Provider: default: tracing-provider servicecomb: tracing: collector: address: http://zipkin.servicecomb.io:9411 \u5c31\u8fd9\u6837\uff0c\u5728\u52a0\u4e86\u4e24\u4e2a\u914d\u7f6e\u9879\uff0c\u6ca1\u6539\u52a8\u4e00\u884c\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u542f\u52a8\u4e86\u57fa\u4e8e Zipkin \u548c Java chassis \u7684\u5206\u5e03\u5f0f\u8c03\u7528\u94fe\u8ffd\u8e2a\u7684\u529f\u80fd\u3002 \u6ce8\u610f \u5982\u679c\u9879\u76ee\u4e2d\u7684\u5176\u4ed6\u4f9d\u8d56\u4e5f\u5f15\u5165\u4e86 zipkin \uff08\u4f8b\u5982 Spring Cloud\uff09\uff0c\u53ef\u80fd\u5bfc\u81f4 zipkin \u7248\u672c\u4e0d\u4e00\u81f4\u800c\u8fd0\u884c\u51fa\u9519\uff0c\u8fd9\u65f6\u9700\u8981\u5728\u9879\u76ee pom \u4e2d\u58f0\u660e zipkin \u7248\u672c\u3002","title":"\u914d\u7f6e\u8ffd\u8e2a\u5904\u7406\u548c\u6570\u636e\u6536\u96c6 {#\u914d\u7f6e\u8ffd\u8e2a\u5904\u7406\u548c\u6570\u636e\u6536\u96c6}"},{"location":"general-development/multienvironment/","text":"\u5fae\u670d\u52a1\u5b9e\u4f8b\u95f4\u591a\u73af\u5883\u9694\u79bb \u8fdb\u884c\u670d\u52a1\u53d1\u73b0\u7684\u65f6\u5019\uff0c\u5f00\u53d1\u8005\u9700\u8981\u4e86\u89e3\u672c\u5fae\u670d\u52a1\u80fd\u591f\u53d1\u73b0\u90a3\u4e9b\u5176\u4ed6\u670d\u52a1\u7684\u5b9e\u4f8b\u3002ServiceComb\u63d0\u4f9b\u4e86\u5206\u5c42\u6b21\u7684\u5b9e\u4f8b\u9694\u79bb\u3002 \u5fae\u670d\u52a1\u5b9e\u4f8b\u5206\u5c42\u7ba1\u7406 \u8981\u4e86\u89e3\u5b9e\u4f8b\u95f4\u7684\u9694\u79bb\u5c42\u6b21\uff0c\u9996\u5148\u9700\u8981\u4e86\u89e3ServiceComb\u5b9a\u4e49\u7684\u4e00\u4e2a\u4f53\u7cfb\u5b8c\u5907\u7684\u5fae\u670d\u52a1\u7cfb\u7edf\u7ed3\u6784\uff1a \u5728\u5fae\u670d\u52a1\u7cfb\u7edf\u7ed3\u6784\u4e2d\uff0c\u9876\u5c42\u662f\u9879\u76ee\uff08project\uff09\uff0c\u9879\u76ee\u4e2d\u7684\u5e94\u7528\u5206\u5c5e\u4e8e\u4e0d\u540c\u73af\u5883\uff08environment\uff09\uff0c\u5373\u6d4b\u8bd5\u548c\u751f\u4ea7\u73af\u5883\u53ef\u4ee5\u5206\u5f00\uff0c\u6bcf\u4e2a\u73af\u5883\u4e0b\u5305\u542b\u591a\u4e2a\u5e94\u7528\uff08application\uff09\uff0c\u5728\u67d0\u4e2a\u7279\u5b9a\u5e94\u7528\u7684\u7279\u5b9a\u73af\u5883\u4e2d\uff0c\u5305\u542b\u591a\u4e2a\u5fae\u670d\u52a1\uff08service\uff09\uff0c\u4e00\u4e2a\u5fae\u670d\u52a1\u53c8\u53ef\u4ee5\u540c\u65f6\u5b58\u5728\u591a\u4e2a\u7248\u672c\uff08version\uff09\u3002 \u4ee5\u4e0a\uff0c\u662f\u6240\u6709\u9759\u6001\u5143\u6570\u636e\u7684\u8303\u7574\uff0c\u67d0\u4e2a\u7279\u5b9a\u670d\u52a1\u7684\u7279\u5b9a\u7248\u672c\u5219\u5305\u542b\u591a\u4e2a\u5728\u8fd0\u884c\u65f6\u6ce8\u518c\u4e0a\u6765\u7684\u5fae\u670d\u52a1\u5b9e\u4f8b\uff0c\u56e0\u4e3a\u670d\u52a1\u5b9e\u4f8b\u7684\u4fe1\u606f\u5728\u8fd0\u884c\u65f6\u968f\u7740\u7cfb\u7edf\u7684\u4f38\u7f29\u3001\u6545\u969c\u7b49\u539f\u56e0\u662f\u52a8\u6001\u53d8\u5316\u7684\uff0c\u6240\u4ee5\u670d\u52a1\u5b9e\u4f8b\u7684\u8def\u7531\u4fe1\u606f\u53c8\u4e3a\u52a8\u6001\u6570\u636e\u3002\u901a\u8fc7\u5206\u5c42\u7ba1\u7406\u5fae\u670d\u52a1\u7684\u8fd9\u4e9b\u6570\u636e\uff0c\u4e5f\u5c31\u81ea\u7136\u800c\u7136\u5730\u5b9e\u73b0\u4e86\u5b9e\u4f8b\u4e4b\u95f4\u7684\u903b\u8f91\u9694\u79bb\u3002 * Project\u5bf9\u5e94\u5230\u534e\u4e3a\u4e91\u4e0a\u5404region\u4e0b\u521b\u5efa\u7684project\uff0c\u4e0d\u540c\u7684project\u4e92\u76f8\u9694\u79bb\uff0c\u5982\u679c\u8be5region\u4e0b\u6ca1\u6709\u65b0\u5efaproject\uff0c\u5219\u4ee3\u8868\u8be5region\uff1b\u4f8b\u5982\uff0c\u5728\u534e\u5317\u533a\uff08cn-north-1\uff09\u4e0b\u521b\u5efa\u4e00\u4e2a\u540d\u5b57\u4e3atianjing\u7684project\uff0c\u82e5\u60f3\u5fae\u670d\u52a1\u6ce8\u518c\u5230\u8be5project\u4e0b\uff0c\u53ef\u4ee5\u5728microservice.yaml\u6587\u4ef6\u91cc\u914d\u7f6e\uff1a servicecomb: credentials: project: cn-north-1_tianjing Environment\u8868\u793a\u5f53\u524d\u5fae\u670d\u52a1\u5b9e\u4f8b\u6240\u5c5e\u73af\u5883\uff0c\u53ef\u5728microservice.yaml\u6587\u4ef6\u91cc\u901a\u8fc7service_description.environment\u914d\u7f6e\u5f53\u524d\u5b9e\u4f8b\u73af\u5883\u3002 Application\u4ee3\u8868\u4e00\u4e2a\u8f6f\u4ef6\u5e94\u7528\u7684\u903b\u8f91\u5b9e\u4f53\uff0c\u8868\u793a\u4e00\u4e2a\u6709\u4e1a\u52a1\u529f\u80fd\u5448\u73b0\u7ed9\u7528\u6237\u7684\u8ba1\u7b97\u673a\u8f6f\u4ef6\u5e94\u7528\uff0c\u53ef\u5728microservice.yaml\u6587\u4ef6\u91cc\u901a\u8fc7APPLICATION_ID\u914d\u7f6e\u5e94\u7528\u540d\u3002 Service\u662f\u5bf9\u6309\u9700\u53d6\u7528\u7684\u529f\u80fd\u5bf9\u8c61\u7684\u4e00\u79cd\u63cf\u8ff0\uff0c\u4e00\u4e2a\u5e94\u7528\u4e0b\u5b58\u5728\u591a\u4e2a\u670d\u52a1\uff0c\u5404\u670d\u52a1\u95f4\u76f8\u4e92\u8c03\u7528\uff0c\u53ef\u5728microservice.yaml\u6587\u4ef6\u91cc\u901a\u8fc7service_description.name\u6307\u5b9a\u670d\u52a1\u540d\u3002 Version\u8868\u793a\u5f53\u524d\u670d\u52a1\u7684\u7248\u672c\uff0c\u4e00\u4e2a\u670d\u52a1\u4e0b\u53ef\u5b58\u5728\u591a\u4e2a\u7248\u672c\uff0c\u53ef\u5728microservice.yaml\u6587\u4ef6\u91cc\u901a\u8fc7service_description.version\u914d\u7f6e\u5f53\u524d\u5fae\u670d\u52a1\u7248\u672c\u53f7\uff1b\u6d88\u8d39\u7aef\u8fdb\u884c\u8bbf\u95ee\u65f6\uff0c\u9ed8\u8ba4\u6309\u7167\u8def\u7531\u89c4\u5219\u8fdb\u884c\u8bbf\u95ee\uff0c\u53ef\u4ee5\u5728\u6d88\u8d39\u7aef\u901a\u8fc7servicecomb.references.[providerName].version-rule\u8bbe\u7f6e\u7248\u672c\u89c4\u5219\u3002 \u5178\u578b\u573a\u666f \u5e94\u7528\u95f4\u9694\u79bb\u53ca\u8de8\u5e94\u7528\u8c03\u7528 \u529f\u80fd\u4ecb\u7ecd \u5728ServiceComb\u6846\u67b6\u4e2d\uff0c\u4e00\u4e2a\u5e94\u7528\u4e0b\u5305\u542b\u591a\u4e2a\u5fae\u670d\u52a1\u3002 \u540c\u4e00\u4e2a\u5fae\u670d\u52a1\u5b9e\u4f8b\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u516c\u5171\u670d\u52a1\u90e8\u7f72\u5230\u591a\u4e2a\u5e94\u7528\uff0c\u901a\u8fc7\u6307\u5b9a\u4e0d\u540c\u7684APPLICATION_ID\u6765\u5b9e\u73b0\u3002 \u4e0d\u540c\u7684\u5fae\u670d\u52a1\u5b9e\u4f8b\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u53ea\u5141\u8bb8\u5728\u540c\u4e00\u4e2a\u5e94\u7528\u91cc\u76f8\u4e92\u8c03\u7528\uff0c\u5f53\u7528\u6237\u9700\u8981\u4e0d\u540c\u5e94\u7528\u95f4\u7684\u5fae\u670d\u52a1\u76f8\u4e92\u8c03\u7528\u65f6\uff0c\u5c31\u9700\u8981\u5f00\u542f\u8de8\u5e94\u7528\u8c03\u7528\u529f\u80fd\u3002 \u914d\u7f6e\u8bf4\u660e\uff1a \u82e5\u8981\u5f00\u542f\u8de8\u5e94\u7528\u8c03\u7528\uff0c\u9996\u5148\u9700\u5728provider\u7aef\u7684microservice.yaml\u6587\u4ef6\u5f00\u542f\u8de8\u5e94\u7528\u8c03\u7528\u914d\u7f6e\u3002\u914d\u7f6e\u9879\u5982\u4e0b\uff1a service_description: properties: allowCrossApp: true Consumer\u7aef\u6307\u5b9a\u5fae\u670d\u52a1\u540d\u79f0\u8c03\u7528provider\u7684\u65f6\u5019\uff0c\u9700\u8981\u52a0\u4e0aprovider\u6240\u5c5e\u7684\u5e94\u7528ID\uff0c\u683c\u5f0f\u7531[microserviceName]\u53d8\u4e3a[appID]:[microserviceName]\u3002 \u4ee3\u7801\u793a\u4f8b\uff1a \u5047\u8bbeconsumer\u6240\u5c5e\u5e94\u7528\u4e3ahelloApp\uff0cprovider\u6240\u5c5e\u5e94\u7528\u4e3ahellApp2\uff0c\u5fae\u670d\u52a1\u540d\u79f0\u4e3ahelloProvider\u3002 * RestTemplate\u8c03\u7528\u65b9\u5f0f \u5f53consumer\u7aef\u4ee5RestTemplate\u65b9\u5f0f\u5f00\u53d1\u5fae\u670d\u52a1\u6d88\u8d39\u8005\u65f6\uff0c\u9700\u8981\u5728\u8c03\u7528\u7684URL\u4e2d\u5c06[microserviceName]\u6539\u4e3a[appID]:[microserviceName]\uff0c\u5982\u4e0b\uff1a RestTemplate restTemplate = RestTemplateBuilder.create(); ResponseEntity String responseEntity = restTemplate.getForEntity(\u201ccse://helloApp2:helloProvider/hello/sayHello?name={name}\u201d, String.class, \u201cServiceComb\u201d); RPC\u8c03\u7528\u65b9\u5f0f \u5f53consumer\u7aef\u4ee5RPC\u65b9\u5f0f\u5f00\u53d1\u5fae\u670d\u52a1\u6d88\u8d39\u8005\u65f6\uff0c\u58f0\u660e\u7684\u670d\u52a1\u63d0\u4f9b\u8005\u4ee3\u7406\u5982\u4e0b\uff1a @RpcReference(schemaId = \u201chello\u201d, microserviceName = \u201chelloApp2:helloProvider\u201d) private Hello hello; \u8de8\u5e94\u7528\u8c03\u7528\u4e0e\u540c\u5e94\u7528\u4e0b\u8c03\u7528\u5fae\u670d\u52a1\u7684\u65b9\u5f0f\u76f8\u540c\uff1a hello.sayHello(\u201cServiceComb\u201d); \u5178\u578b\u573a\u666f \u5f00\u53d1\u73af\u5883\u4e92\u76f8\u9694\u79bb\u53ca\u5feb\u901f\u5f00\u53d1 \u529f\u80fd\u4ecb\u7ecd ServiceComb\u6846\u67b6\u901a\u8fc7\u8bbe\u7f6eenvironment\uff0c\u53ef\u4ee5\u5c06\u5fae\u670d\u52a1\u5b9e\u4f8b\u6807\u8bb0\u4e3a\u5f00\u53d1\u3001\u6d4b\u8bd5\u3001\u9884\u751f\u4ea7\u3001\u751f\u4ea7\u73af\u5883\uff0c\u5b9e\u73b0\u4e86\u5728\u5b9e\u4f8b\u7ea7\u522b\u7684\u5929\u7136\u9694\u79bb\uff1b\u5ba2\u6237\u7aef\u5728\u67e5\u627e\u670d\u52a1\u7aef\u5b9e\u4f8b\u7684\u65f6\u5019\uff0c\u53ea\u80fd\u53d1\u73b0\u76f8\u540cenvironment\u4e0b\u7684\u670d\u52a1\u7aef\u5b9e\u4f8b\u3002 ServiceComb\u5728\u8bbe\u8ba1\u65f6\uff0c\u4e25\u683c\u4f9d\u8d56\u4e8e\u5951\u7ea6\uff0c\u6240\u4ee5\u6b63\u5e38\u60c5\u51b5\u4e0b\u5951\u7ea6\u53d8\u4e86\uff0c\u5c31\u5fc5\u987b\u8981\u4fee\u6539\u5fae\u670d\u52a1\u7684\u7248\u672c\u3002\u4f46\u662f\u5982\u679c\u5f53\u524d\u8fd8\u662f\u5f00\u53d1\u6a21\u5f0f\uff0c\u90a3\u4e48\u4fee\u6539\u63a5\u53e3\u5c31\u662f\u5f88\u6b63\u5e38\u7684\u60c5\u51b5\uff0c\u5f53\u4fee\u6539\u5b8c\u6bd5\u518d\u6b21\u542f\u52a8\u5f53\u524d\u670d\u52a1\u65f6\uff0c\u65b0\u751f\u6210\u7684\u5951\u7ea6\u548cService Center\u4e0a\u4fdd\u5b58\u7684\u65e7\u5951\u7ea6\u4f1a\u51b2\u7a81\u5e76\u62a5\u9519\uff0c\u5bfc\u81f4\u542f\u52a8\u5931\u8d25\uff0c\u5982\u679c\u6bcf\u6b21\u90fd\u901a\u8fc7\u4fee\u6539\u5fae\u670d\u52a1\u7248\u672c\u53f7\uff0c\u6216\u8005\u5220\u9664\u8be5\u670d\u52a1\u5728Service Center\u4e0a\u7684\u7f13\u5b58\u6570\u636e\u6765\u89e3\u51b3\uff0c\u663e\u7136\u5bf9\u5f00\u53d1\u4eba\u5458\u5f88\u4e0d\u53cb\u597d\u3002 ServiceComb\u6846\u67b6\u652f\u6301\u5728\u5f00\u53d1\u6001\u8fdb\u884c\u5fae\u670d\u52a1\u7684\u5feb\u901f\u8c03\u8bd5\uff0c\u901a\u8fc7\u5c06environment\u914d\u7f6e\u4e3adevelopment\u5373\u53ef\u3002\u5f53\u63a5\u53e3\u4fee\u6539\u4e86\uff08Schema\u53d1\u751f\u4e86\u53d8\u5316\uff09\uff0c\u91cd\u542f\u5c31\u53ef\u4ee5\u6b63\u5e38\u6ce8\u518c\u5230\u670d\u52a1\u4e2d\u5fc3\uff0c\u800c\u4e0d\u7528\u4fee\u6539\u7248\u672c\u53f7\u3002 \u4f46\u662f\u5982\u679c\u6709consumer\u5df2\u7ecf\u8c03\u7528\u4e86\u91cd\u542f\u4e4b\u524d\u7684\u670d\u52a1\uff0c\u90a3\u4e48consumer\u7aef\u4e5f\u9700\u8981\u91cd\u542f\u624d\u80fd\u83b7\u53d6\u6700\u65b0provider\u7684schema\uff1b\u6bd4\u5982A- B\uff0cB\u63a5\u53e3\u8fdb\u884c\u4e86\u4fee\u6539\u5e76\u4e14\u91cd\u542f\uff0c\u90a3\u4e48A\u8fd9\u4e2a\u65f6\u5019\u8fd8\u662f\u4f7f\u7528B\u4e4b\u524d\u7684schema\uff0c\u8c03\u7528\u53ef\u80fd\u4f1a\u51fa\u9519\uff0c\u4ee5\u514d\u51fa\u73b0\u672a\u77e5\u5f02\u5e38\uff0cA\u4e5f\u9700\u8981\u91cd\u542f\u3002 \u914d\u7f6e\u8bf4\u660e\uff1a \u4ec5\u652f\u6301\u4ee5\u4e0b\u679a\u4e3e\u503c\uff1adevelopment,testing,acceptance,production\uff0c\u4e0d\u914d\u7f6e\u7684\u60c5\u51b5\u4e0b\u7f3a\u7701\u503c\u4e3a\"\"\uff08\u7a7a\uff09\u3002 \u65b9\u6cd51\uff1a\u901a\u8fc7JVM\u542f\u52a8\u53c2\u6570-Dservice_description.environment=development\uff08\u679a\u4e3e\u503c\uff09\u8fdb\u884c\u8bbe\u7f6e\uff1b \u65b9\u6cd52\uff1a\u901a\u8fc7microservice.yaml\u914d\u7f6e\u6587\u4ef6\u6765\u6307\u5b9a\uff1a service_description: environment: development \u65b9\u6cd53\uff1a\u901a\u8fc7\u73af\u5883\u53d8\u91cfSERVICECOMB_ENV\u6765\u6307\u5b9a\uff08\u4ec5\u9650\u4e8ewindows\u7cfb\u7edf\uff09\uff0c\u82e5\u662f\u5f00\u53d1\u6001\uff0c\u5176\u503c\u914d\u7f6e\u4e3adevelopment\uff1b \u5178\u578b\u573a\u666f \u4e24\u5730\u4e09\u4e2d\u5fc3 \u529f\u80fd\u4ecb\u7ecd \u5728\u4ee5\u4e24\u5730\u4e09\u4e2d\u5fc3\u7684\u89e3\u51b3\u65b9\u6848\u8fdb\u884c\u8de8\u5730\u533a\u90e8\u7f72\u670d\u52a1\u7684\u573a\u666f\uff0c\u540c\u4e00\u5957\u670d\u52a1\u5b58\u5728\u4e8e\u591a\u4e2aavailableZone\u4e2d\uff0c\u9700\u8981\u5b9e\u73b0\u4f18\u5148\u8c03\u7528\u540c\u4e00\u4e2aAZ\u5185\u7684\u5e94\u7528\uff0c\u82e5\u672cAZ\u51fa\u73b0\u95ee\u9898\uff0c\u8981\u80fd\u591f\u8bbf\u95ee\u53e6\u4e00\u4e2aAZ\u4e0b\u7684\u5e94\u7528\uff0c\u4ece\u800c\u4fdd\u8bc1\u670d\u52a1\u7684\u53ef\u9760\u6027\u3002 ServiceComb\u63d0\u4f9b\u4e86\u6570\u636e\u4e2d\u5fc3\u914d\u7f6e\uff0c\u6765\u5b9e\u73b0\u5bf9\u5fae\u670d\u52a1\u7684\u5206\u533a\u548c\u7ba1\u7406\u3002\u6570\u636e\u4e2d\u5fc3\u5305\u542b3\u4e2a\u5c5e\u6027\uff1aservicecomb.datacenter.name, servicecomb.datacenter.region, servicecomb.datacenter.availableZone\uff0c\u6570\u636e\u4e2d\u5fc3\u4fe1\u606f\u4e0d\u63d0\u4f9b\u9694\u79bb\u80fd\u529b\uff0c\u5fae\u670d\u52a1\u53ef\u4ee5\u53d1\u73b0\u5176\u4ed6\u6570\u636e\u4e2d\u5fc3\u7684\u5b9e\u4f8b\u3002\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u542f\u7528\u5b9e\u4f8b\u4eb2\u548c\u6027\uff0c\u6765\u4f18\u5148\u5f80\u6307\u5b9a\u7684\u533a\u57df\u6216\u8005Zone\u53d1\u6d88\u606f\u3002 \u5ba2\u6237\u7aef\u5728\u8def\u7531\u7684\u65f6\u5019\uff0c\u4f1a\u4f18\u5148\u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230zone/region\u90fd\u76f8\u540c\u7684\u5b9e\u4f8b\uff0c\u7136\u540e\u662fregion\u76f8\u540c\uff0c\u4f46zone\u4e0d\u76f8\u540c\u7684\u5b9e\u4f8b\uff0c\u90fd\u4e0d\u76f8\u540c\u7684\u65f6\u5019\uff0c\u5219\u6309\u7167\u8def\u7531\u89c4\u5219\u9009\u62e9\u4e00\u4e2a\u3002\u4eb2\u548c\u6027\u4e0d\u662f\u903b\u8f91\u9694\u79bb\uff0c\u53ea\u8981\u5b9e\u4f8b\u4e4b\u95f4\u7f51\u7edc\u662f\u8054\u901a\u7684\uff0c\u90a3\u4e48\u90fd\u6709\u53ef\u80fd\u8bbf\u95ee\u5230\uff1b\u5982\u679c\u7f51\u7edc\u4e0d\u901a\uff0c\u5219\u4f1a\u8bbf\u95ee\u5931\u8d25\u3002 \u5728\u534e\u4e3a\u4e91\u4e0a\u90e8\u7f72\u65f6\uff0c\u53ef\u5c06region\u548cavailableZone\u7684\u503c\u4e0e\u534e\u4e3a\u4e91\u7684region\uff08\u4f8b\u5982\uff1acn-north-1\uff09\u548c\u53ef\u7528\u533a\u5bf9\u5e94\u8d77\u6765\uff0c\u4f46\u662f\u56e0\u4e3a\u534e\u4e3a\u4e91\u4e0a\u7684\u4e0d\u540cregion\u76ee\u524d\u7f51\u7edc\u4e0d\u4e92\u901a\uff0c\u6240\u4ee5\u6b64\u65f6\u4e0d\u652f\u6301\u8de8region\u8bbf\u95ee\uff1b\u9664\u4e86\u5bf9\u5e94\u534e\u4e3a\u4e91\u7684region\u503c\uff0c\u4e5f\u53ef\u4ee5\u81ea\u884c\u5b9a\u4e49\u5176\u4ed6\u503c\uff0c\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u4f5c\u76f8\u5e94\u8c03\u6574\uff0c\u975e\u5e38\u7075\u6d3b\u3002 \u914d\u7f6e\u8bf4\u660e\uff1a servicecomb: datacenter: name: mydatacenter region: my-Region availableZone: my-Zone","title":"\u5fae\u670d\u52a1\u5b9e\u4f8b\u95f4\u591a\u73af\u5883\u9694\u79bb"},{"location":"general-development/multienvironment/#_1","text":"\u8fdb\u884c\u670d\u52a1\u53d1\u73b0\u7684\u65f6\u5019\uff0c\u5f00\u53d1\u8005\u9700\u8981\u4e86\u89e3\u672c\u5fae\u670d\u52a1\u80fd\u591f\u53d1\u73b0\u90a3\u4e9b\u5176\u4ed6\u670d\u52a1\u7684\u5b9e\u4f8b\u3002ServiceComb\u63d0\u4f9b\u4e86\u5206\u5c42\u6b21\u7684\u5b9e\u4f8b\u9694\u79bb\u3002","title":"\u5fae\u670d\u52a1\u5b9e\u4f8b\u95f4\u591a\u73af\u5883\u9694\u79bb"},{"location":"general-development/multienvironment/#_2","text":"\u8981\u4e86\u89e3\u5b9e\u4f8b\u95f4\u7684\u9694\u79bb\u5c42\u6b21\uff0c\u9996\u5148\u9700\u8981\u4e86\u89e3ServiceComb\u5b9a\u4e49\u7684\u4e00\u4e2a\u4f53\u7cfb\u5b8c\u5907\u7684\u5fae\u670d\u52a1\u7cfb\u7edf\u7ed3\u6784\uff1a \u5728\u5fae\u670d\u52a1\u7cfb\u7edf\u7ed3\u6784\u4e2d\uff0c\u9876\u5c42\u662f\u9879\u76ee\uff08project\uff09\uff0c\u9879\u76ee\u4e2d\u7684\u5e94\u7528\u5206\u5c5e\u4e8e\u4e0d\u540c\u73af\u5883\uff08environment\uff09\uff0c\u5373\u6d4b\u8bd5\u548c\u751f\u4ea7\u73af\u5883\u53ef\u4ee5\u5206\u5f00\uff0c\u6bcf\u4e2a\u73af\u5883\u4e0b\u5305\u542b\u591a\u4e2a\u5e94\u7528\uff08application\uff09\uff0c\u5728\u67d0\u4e2a\u7279\u5b9a\u5e94\u7528\u7684\u7279\u5b9a\u73af\u5883\u4e2d\uff0c\u5305\u542b\u591a\u4e2a\u5fae\u670d\u52a1\uff08service\uff09\uff0c\u4e00\u4e2a\u5fae\u670d\u52a1\u53c8\u53ef\u4ee5\u540c\u65f6\u5b58\u5728\u591a\u4e2a\u7248\u672c\uff08version\uff09\u3002 \u4ee5\u4e0a\uff0c\u662f\u6240\u6709\u9759\u6001\u5143\u6570\u636e\u7684\u8303\u7574\uff0c\u67d0\u4e2a\u7279\u5b9a\u670d\u52a1\u7684\u7279\u5b9a\u7248\u672c\u5219\u5305\u542b\u591a\u4e2a\u5728\u8fd0\u884c\u65f6\u6ce8\u518c\u4e0a\u6765\u7684\u5fae\u670d\u52a1\u5b9e\u4f8b\uff0c\u56e0\u4e3a\u670d\u52a1\u5b9e\u4f8b\u7684\u4fe1\u606f\u5728\u8fd0\u884c\u65f6\u968f\u7740\u7cfb\u7edf\u7684\u4f38\u7f29\u3001\u6545\u969c\u7b49\u539f\u56e0\u662f\u52a8\u6001\u53d8\u5316\u7684\uff0c\u6240\u4ee5\u670d\u52a1\u5b9e\u4f8b\u7684\u8def\u7531\u4fe1\u606f\u53c8\u4e3a\u52a8\u6001\u6570\u636e\u3002\u901a\u8fc7\u5206\u5c42\u7ba1\u7406\u5fae\u670d\u52a1\u7684\u8fd9\u4e9b\u6570\u636e\uff0c\u4e5f\u5c31\u81ea\u7136\u800c\u7136\u5730\u5b9e\u73b0\u4e86\u5b9e\u4f8b\u4e4b\u95f4\u7684\u903b\u8f91\u9694\u79bb\u3002 * Project\u5bf9\u5e94\u5230\u534e\u4e3a\u4e91\u4e0a\u5404region\u4e0b\u521b\u5efa\u7684project\uff0c\u4e0d\u540c\u7684project\u4e92\u76f8\u9694\u79bb\uff0c\u5982\u679c\u8be5region\u4e0b\u6ca1\u6709\u65b0\u5efaproject\uff0c\u5219\u4ee3\u8868\u8be5region\uff1b\u4f8b\u5982\uff0c\u5728\u534e\u5317\u533a\uff08cn-north-1\uff09\u4e0b\u521b\u5efa\u4e00\u4e2a\u540d\u5b57\u4e3atianjing\u7684project\uff0c\u82e5\u60f3\u5fae\u670d\u52a1\u6ce8\u518c\u5230\u8be5project\u4e0b\uff0c\u53ef\u4ee5\u5728microservice.yaml\u6587\u4ef6\u91cc\u914d\u7f6e\uff1a servicecomb: credentials: project: cn-north-1_tianjing Environment\u8868\u793a\u5f53\u524d\u5fae\u670d\u52a1\u5b9e\u4f8b\u6240\u5c5e\u73af\u5883\uff0c\u53ef\u5728microservice.yaml\u6587\u4ef6\u91cc\u901a\u8fc7service_description.environment\u914d\u7f6e\u5f53\u524d\u5b9e\u4f8b\u73af\u5883\u3002 Application\u4ee3\u8868\u4e00\u4e2a\u8f6f\u4ef6\u5e94\u7528\u7684\u903b\u8f91\u5b9e\u4f53\uff0c\u8868\u793a\u4e00\u4e2a\u6709\u4e1a\u52a1\u529f\u80fd\u5448\u73b0\u7ed9\u7528\u6237\u7684\u8ba1\u7b97\u673a\u8f6f\u4ef6\u5e94\u7528\uff0c\u53ef\u5728microservice.yaml\u6587\u4ef6\u91cc\u901a\u8fc7APPLICATION_ID\u914d\u7f6e\u5e94\u7528\u540d\u3002 Service\u662f\u5bf9\u6309\u9700\u53d6\u7528\u7684\u529f\u80fd\u5bf9\u8c61\u7684\u4e00\u79cd\u63cf\u8ff0\uff0c\u4e00\u4e2a\u5e94\u7528\u4e0b\u5b58\u5728\u591a\u4e2a\u670d\u52a1\uff0c\u5404\u670d\u52a1\u95f4\u76f8\u4e92\u8c03\u7528\uff0c\u53ef\u5728microservice.yaml\u6587\u4ef6\u91cc\u901a\u8fc7service_description.name\u6307\u5b9a\u670d\u52a1\u540d\u3002 Version\u8868\u793a\u5f53\u524d\u670d\u52a1\u7684\u7248\u672c\uff0c\u4e00\u4e2a\u670d\u52a1\u4e0b\u53ef\u5b58\u5728\u591a\u4e2a\u7248\u672c\uff0c\u53ef\u5728microservice.yaml\u6587\u4ef6\u91cc\u901a\u8fc7service_description.version\u914d\u7f6e\u5f53\u524d\u5fae\u670d\u52a1\u7248\u672c\u53f7\uff1b\u6d88\u8d39\u7aef\u8fdb\u884c\u8bbf\u95ee\u65f6\uff0c\u9ed8\u8ba4\u6309\u7167\u8def\u7531\u89c4\u5219\u8fdb\u884c\u8bbf\u95ee\uff0c\u53ef\u4ee5\u5728\u6d88\u8d39\u7aef\u901a\u8fc7servicecomb.references.[providerName].version-rule\u8bbe\u7f6e\u7248\u672c\u89c4\u5219\u3002","title":"\u5fae\u670d\u52a1\u5b9e\u4f8b\u5206\u5c42\u7ba1\u7406"},{"location":"general-development/multienvironment/#_3","text":"","title":"\u5178\u578b\u573a\u666f"},{"location":"general-development/multienvironment/#_4","text":"","title":"\u5e94\u7528\u95f4\u9694\u79bb\u53ca\u8de8\u5e94\u7528\u8c03\u7528"},{"location":"general-development/multienvironment/#_5","text":"\u5728ServiceComb\u6846\u67b6\u4e2d\uff0c\u4e00\u4e2a\u5e94\u7528\u4e0b\u5305\u542b\u591a\u4e2a\u5fae\u670d\u52a1\u3002 \u540c\u4e00\u4e2a\u5fae\u670d\u52a1\u5b9e\u4f8b\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u516c\u5171\u670d\u52a1\u90e8\u7f72\u5230\u591a\u4e2a\u5e94\u7528\uff0c\u901a\u8fc7\u6307\u5b9a\u4e0d\u540c\u7684APPLICATION_ID\u6765\u5b9e\u73b0\u3002 \u4e0d\u540c\u7684\u5fae\u670d\u52a1\u5b9e\u4f8b\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u53ea\u5141\u8bb8\u5728\u540c\u4e00\u4e2a\u5e94\u7528\u91cc\u76f8\u4e92\u8c03\u7528\uff0c\u5f53\u7528\u6237\u9700\u8981\u4e0d\u540c\u5e94\u7528\u95f4\u7684\u5fae\u670d\u52a1\u76f8\u4e92\u8c03\u7528\u65f6\uff0c\u5c31\u9700\u8981\u5f00\u542f\u8de8\u5e94\u7528\u8c03\u7528\u529f\u80fd\u3002","title":"\u529f\u80fd\u4ecb\u7ecd"},{"location":"general-development/multienvironment/#_6","text":"\u82e5\u8981\u5f00\u542f\u8de8\u5e94\u7528\u8c03\u7528\uff0c\u9996\u5148\u9700\u5728provider\u7aef\u7684microservice.yaml\u6587\u4ef6\u5f00\u542f\u8de8\u5e94\u7528\u8c03\u7528\u914d\u7f6e\u3002\u914d\u7f6e\u9879\u5982\u4e0b\uff1a service_description: properties: allowCrossApp: true Consumer\u7aef\u6307\u5b9a\u5fae\u670d\u52a1\u540d\u79f0\u8c03\u7528provider\u7684\u65f6\u5019\uff0c\u9700\u8981\u52a0\u4e0aprovider\u6240\u5c5e\u7684\u5e94\u7528ID\uff0c\u683c\u5f0f\u7531[microserviceName]\u53d8\u4e3a[appID]:[microserviceName]\u3002","title":"\u914d\u7f6e\u8bf4\u660e\uff1a"},{"location":"general-development/multienvironment/#_7","text":"\u5047\u8bbeconsumer\u6240\u5c5e\u5e94\u7528\u4e3ahelloApp\uff0cprovider\u6240\u5c5e\u5e94\u7528\u4e3ahellApp2\uff0c\u5fae\u670d\u52a1\u540d\u79f0\u4e3ahelloProvider\u3002 * RestTemplate\u8c03\u7528\u65b9\u5f0f \u5f53consumer\u7aef\u4ee5RestTemplate\u65b9\u5f0f\u5f00\u53d1\u5fae\u670d\u52a1\u6d88\u8d39\u8005\u65f6\uff0c\u9700\u8981\u5728\u8c03\u7528\u7684URL\u4e2d\u5c06[microserviceName]\u6539\u4e3a[appID]:[microserviceName]\uff0c\u5982\u4e0b\uff1a RestTemplate restTemplate = RestTemplateBuilder.create(); ResponseEntity String responseEntity = restTemplate.getForEntity(\u201ccse://helloApp2:helloProvider/hello/sayHello?name={name}\u201d, String.class, \u201cServiceComb\u201d); RPC\u8c03\u7528\u65b9\u5f0f \u5f53consumer\u7aef\u4ee5RPC\u65b9\u5f0f\u5f00\u53d1\u5fae\u670d\u52a1\u6d88\u8d39\u8005\u65f6\uff0c\u58f0\u660e\u7684\u670d\u52a1\u63d0\u4f9b\u8005\u4ee3\u7406\u5982\u4e0b\uff1a @RpcReference(schemaId = \u201chello\u201d, microserviceName = \u201chelloApp2:helloProvider\u201d) private Hello hello; \u8de8\u5e94\u7528\u8c03\u7528\u4e0e\u540c\u5e94\u7528\u4e0b\u8c03\u7528\u5fae\u670d\u52a1\u7684\u65b9\u5f0f\u76f8\u540c\uff1a hello.sayHello(\u201cServiceComb\u201d);","title":"\u4ee3\u7801\u793a\u4f8b\uff1a"},{"location":"general-development/multienvironment/#_8","text":"","title":"\u5178\u578b\u573a\u666f"},{"location":"general-development/multienvironment/#_9","text":"","title":"\u5f00\u53d1\u73af\u5883\u4e92\u76f8\u9694\u79bb\u53ca\u5feb\u901f\u5f00\u53d1"},{"location":"general-development/multienvironment/#_10","text":"ServiceComb\u6846\u67b6\u901a\u8fc7\u8bbe\u7f6eenvironment\uff0c\u53ef\u4ee5\u5c06\u5fae\u670d\u52a1\u5b9e\u4f8b\u6807\u8bb0\u4e3a\u5f00\u53d1\u3001\u6d4b\u8bd5\u3001\u9884\u751f\u4ea7\u3001\u751f\u4ea7\u73af\u5883\uff0c\u5b9e\u73b0\u4e86\u5728\u5b9e\u4f8b\u7ea7\u522b\u7684\u5929\u7136\u9694\u79bb\uff1b\u5ba2\u6237\u7aef\u5728\u67e5\u627e\u670d\u52a1\u7aef\u5b9e\u4f8b\u7684\u65f6\u5019\uff0c\u53ea\u80fd\u53d1\u73b0\u76f8\u540cenvironment\u4e0b\u7684\u670d\u52a1\u7aef\u5b9e\u4f8b\u3002 ServiceComb\u5728\u8bbe\u8ba1\u65f6\uff0c\u4e25\u683c\u4f9d\u8d56\u4e8e\u5951\u7ea6\uff0c\u6240\u4ee5\u6b63\u5e38\u60c5\u51b5\u4e0b\u5951\u7ea6\u53d8\u4e86\uff0c\u5c31\u5fc5\u987b\u8981\u4fee\u6539\u5fae\u670d\u52a1\u7684\u7248\u672c\u3002\u4f46\u662f\u5982\u679c\u5f53\u524d\u8fd8\u662f\u5f00\u53d1\u6a21\u5f0f\uff0c\u90a3\u4e48\u4fee\u6539\u63a5\u53e3\u5c31\u662f\u5f88\u6b63\u5e38\u7684\u60c5\u51b5\uff0c\u5f53\u4fee\u6539\u5b8c\u6bd5\u518d\u6b21\u542f\u52a8\u5f53\u524d\u670d\u52a1\u65f6\uff0c\u65b0\u751f\u6210\u7684\u5951\u7ea6\u548cService Center\u4e0a\u4fdd\u5b58\u7684\u65e7\u5951\u7ea6\u4f1a\u51b2\u7a81\u5e76\u62a5\u9519\uff0c\u5bfc\u81f4\u542f\u52a8\u5931\u8d25\uff0c\u5982\u679c\u6bcf\u6b21\u90fd\u901a\u8fc7\u4fee\u6539\u5fae\u670d\u52a1\u7248\u672c\u53f7\uff0c\u6216\u8005\u5220\u9664\u8be5\u670d\u52a1\u5728Service Center\u4e0a\u7684\u7f13\u5b58\u6570\u636e\u6765\u89e3\u51b3\uff0c\u663e\u7136\u5bf9\u5f00\u53d1\u4eba\u5458\u5f88\u4e0d\u53cb\u597d\u3002 ServiceComb\u6846\u67b6\u652f\u6301\u5728\u5f00\u53d1\u6001\u8fdb\u884c\u5fae\u670d\u52a1\u7684\u5feb\u901f\u8c03\u8bd5\uff0c\u901a\u8fc7\u5c06environment\u914d\u7f6e\u4e3adevelopment\u5373\u53ef\u3002\u5f53\u63a5\u53e3\u4fee\u6539\u4e86\uff08Schema\u53d1\u751f\u4e86\u53d8\u5316\uff09\uff0c\u91cd\u542f\u5c31\u53ef\u4ee5\u6b63\u5e38\u6ce8\u518c\u5230\u670d\u52a1\u4e2d\u5fc3\uff0c\u800c\u4e0d\u7528\u4fee\u6539\u7248\u672c\u53f7\u3002 \u4f46\u662f\u5982\u679c\u6709consumer\u5df2\u7ecf\u8c03\u7528\u4e86\u91cd\u542f\u4e4b\u524d\u7684\u670d\u52a1\uff0c\u90a3\u4e48consumer\u7aef\u4e5f\u9700\u8981\u91cd\u542f\u624d\u80fd\u83b7\u53d6\u6700\u65b0provider\u7684schema\uff1b\u6bd4\u5982A- B\uff0cB\u63a5\u53e3\u8fdb\u884c\u4e86\u4fee\u6539\u5e76\u4e14\u91cd\u542f\uff0c\u90a3\u4e48A\u8fd9\u4e2a\u65f6\u5019\u8fd8\u662f\u4f7f\u7528B\u4e4b\u524d\u7684schema\uff0c\u8c03\u7528\u53ef\u80fd\u4f1a\u51fa\u9519\uff0c\u4ee5\u514d\u51fa\u73b0\u672a\u77e5\u5f02\u5e38\uff0cA\u4e5f\u9700\u8981\u91cd\u542f\u3002","title":"\u529f\u80fd\u4ecb\u7ecd"},{"location":"general-development/multienvironment/#_11","text":"\u4ec5\u652f\u6301\u4ee5\u4e0b\u679a\u4e3e\u503c\uff1adevelopment,testing,acceptance,production\uff0c\u4e0d\u914d\u7f6e\u7684\u60c5\u51b5\u4e0b\u7f3a\u7701\u503c\u4e3a\"\"\uff08\u7a7a\uff09\u3002 \u65b9\u6cd51\uff1a\u901a\u8fc7JVM\u542f\u52a8\u53c2\u6570-Dservice_description.environment=development\uff08\u679a\u4e3e\u503c\uff09\u8fdb\u884c\u8bbe\u7f6e\uff1b \u65b9\u6cd52\uff1a\u901a\u8fc7microservice.yaml\u914d\u7f6e\u6587\u4ef6\u6765\u6307\u5b9a\uff1a service_description: environment: development \u65b9\u6cd53\uff1a\u901a\u8fc7\u73af\u5883\u53d8\u91cfSERVICECOMB_ENV\u6765\u6307\u5b9a\uff08\u4ec5\u9650\u4e8ewindows\u7cfb\u7edf\uff09\uff0c\u82e5\u662f\u5f00\u53d1\u6001\uff0c\u5176\u503c\u914d\u7f6e\u4e3adevelopment\uff1b","title":"\u914d\u7f6e\u8bf4\u660e\uff1a"},{"location":"general-development/multienvironment/#_12","text":"","title":"\u5178\u578b\u573a\u666f"},{"location":"general-development/multienvironment/#_13","text":"","title":"\u4e24\u5730\u4e09\u4e2d\u5fc3"},{"location":"general-development/multienvironment/#_14","text":"\u5728\u4ee5\u4e24\u5730\u4e09\u4e2d\u5fc3\u7684\u89e3\u51b3\u65b9\u6848\u8fdb\u884c\u8de8\u5730\u533a\u90e8\u7f72\u670d\u52a1\u7684\u573a\u666f\uff0c\u540c\u4e00\u5957\u670d\u52a1\u5b58\u5728\u4e8e\u591a\u4e2aavailableZone\u4e2d\uff0c\u9700\u8981\u5b9e\u73b0\u4f18\u5148\u8c03\u7528\u540c\u4e00\u4e2aAZ\u5185\u7684\u5e94\u7528\uff0c\u82e5\u672cAZ\u51fa\u73b0\u95ee\u9898\uff0c\u8981\u80fd\u591f\u8bbf\u95ee\u53e6\u4e00\u4e2aAZ\u4e0b\u7684\u5e94\u7528\uff0c\u4ece\u800c\u4fdd\u8bc1\u670d\u52a1\u7684\u53ef\u9760\u6027\u3002 ServiceComb\u63d0\u4f9b\u4e86\u6570\u636e\u4e2d\u5fc3\u914d\u7f6e\uff0c\u6765\u5b9e\u73b0\u5bf9\u5fae\u670d\u52a1\u7684\u5206\u533a\u548c\u7ba1\u7406\u3002\u6570\u636e\u4e2d\u5fc3\u5305\u542b3\u4e2a\u5c5e\u6027\uff1aservicecomb.datacenter.name, servicecomb.datacenter.region, servicecomb.datacenter.availableZone\uff0c\u6570\u636e\u4e2d\u5fc3\u4fe1\u606f\u4e0d\u63d0\u4f9b\u9694\u79bb\u80fd\u529b\uff0c\u5fae\u670d\u52a1\u53ef\u4ee5\u53d1\u73b0\u5176\u4ed6\u6570\u636e\u4e2d\u5fc3\u7684\u5b9e\u4f8b\u3002\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u542f\u7528\u5b9e\u4f8b\u4eb2\u548c\u6027\uff0c\u6765\u4f18\u5148\u5f80\u6307\u5b9a\u7684\u533a\u57df\u6216\u8005Zone\u53d1\u6d88\u606f\u3002 \u5ba2\u6237\u7aef\u5728\u8def\u7531\u7684\u65f6\u5019\uff0c\u4f1a\u4f18\u5148\u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230zone/region\u90fd\u76f8\u540c\u7684\u5b9e\u4f8b\uff0c\u7136\u540e\u662fregion\u76f8\u540c\uff0c\u4f46zone\u4e0d\u76f8\u540c\u7684\u5b9e\u4f8b\uff0c\u90fd\u4e0d\u76f8\u540c\u7684\u65f6\u5019\uff0c\u5219\u6309\u7167\u8def\u7531\u89c4\u5219\u9009\u62e9\u4e00\u4e2a\u3002\u4eb2\u548c\u6027\u4e0d\u662f\u903b\u8f91\u9694\u79bb\uff0c\u53ea\u8981\u5b9e\u4f8b\u4e4b\u95f4\u7f51\u7edc\u662f\u8054\u901a\u7684\uff0c\u90a3\u4e48\u90fd\u6709\u53ef\u80fd\u8bbf\u95ee\u5230\uff1b\u5982\u679c\u7f51\u7edc\u4e0d\u901a\uff0c\u5219\u4f1a\u8bbf\u95ee\u5931\u8d25\u3002 \u5728\u534e\u4e3a\u4e91\u4e0a\u90e8\u7f72\u65f6\uff0c\u53ef\u5c06region\u548cavailableZone\u7684\u503c\u4e0e\u534e\u4e3a\u4e91\u7684region\uff08\u4f8b\u5982\uff1acn-north-1\uff09\u548c\u53ef\u7528\u533a\u5bf9\u5e94\u8d77\u6765\uff0c\u4f46\u662f\u56e0\u4e3a\u534e\u4e3a\u4e91\u4e0a\u7684\u4e0d\u540cregion\u76ee\u524d\u7f51\u7edc\u4e0d\u4e92\u901a\uff0c\u6240\u4ee5\u6b64\u65f6\u4e0d\u652f\u6301\u8de8region\u8bbf\u95ee\uff1b\u9664\u4e86\u5bf9\u5e94\u534e\u4e3a\u4e91\u7684region\u503c\uff0c\u4e5f\u53ef\u4ee5\u81ea\u884c\u5b9a\u4e49\u5176\u4ed6\u503c\uff0c\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u4f5c\u76f8\u5e94\u8c03\u6574\uff0c\u975e\u5e38\u7075\u6d3b\u3002","title":"\u529f\u80fd\u4ecb\u7ecd"},{"location":"general-development/multienvironment/#_15","text":"servicecomb: datacenter: name: mydatacenter region: my-Region availableZone: my-Zone","title":"\u914d\u7f6e\u8bf4\u660e\uff1a"},{"location":"general-development/produceprocess/","text":"\u8fd4\u56de\u503c\u5e8f\u5217\u5316\u6269\u5c55 \u6982\u5ff5\u9610\u8ff0 \u5f53\u524dREST\u901a\u9053\u8fd4\u56de\u503c\u652f\u6301application/json\u548ctext/plain\u4e24\u79cd\u683c\u5f0f\uff0c\u652f\u6301\u5f00\u53d1\u4eba\u5458\u6269\u5c55\u548c\u91cd\u5199\uff0c\u670d\u52a1\u63d0\u4f9b\u8005\u901a\u8fc7produces\u58f0\u660e\u53ef\u63d0\u4f9b\u5e8f\u5217\u5316\u80fd\u529b\uff0c\u670d\u52a1\u6d88\u8d39\u8005\u901a\u8fc7\u8bf7\u6c42\u7684Accept\u5934\u6307\u660e\u8fd4\u56de\u503c\u5e8f\u5217\u5316\u65b9\u5f0f\uff0c\u9ed8\u8ba4\u8fd4\u56deapplication/json\u683c\u5f0f\u7684\u6570\u636e\u3002 \u5f00\u53d1\u8bf4\u660e \u6269\u5c55 \u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u6839\u636e\u4e1a\u52a1\u9700\u8981\uff0c\u901a\u8fc7\u7f16\u7a0b\u7684\u65b9\u5f0f\u6765\u6269\u5c55\u8fd4\u56de\u503c\u5e8f\u5217\u5316\u65b9\u5f0f\u3002\u5b9e\u65bd\u6b65\u9aa4\u5982\u4e0b\uff0c\u4ee5\u6269\u5c55\u652f\u6301application/xml\u683c\u5f0f\u4e3a\u4f8b\uff1a 1.\u5b9e\u73b0\u63a5\u53e3 ProduceProcessor getName()\u8fd4\u56de\u5f53\u524d\u6269\u5c55\u7684\u6570\u636e\u7c7b\u578b\u540d getOrder()\u8fd4\u56de\u5f53\u524d\u6570\u636e\u7c7b\u578b\u4f18\u5148\u7ea7\uff0c\u6709\u591a\u4e2a\u540c\u540d\u5b9e\u73b0\u7c7b\u65f6\u751f\u6548\uff0c\u53ea\u52a0\u8f7d\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\uff0c\u6570\u5b57\u8d8a\u5c0f\u4f18\u5148\u7ea7\u8d8a\u9ad8 doEncodeResponse(OutputStream output, Object result)\u628aresult\u5bf9\u8c61\u7f16\u7801\u6210output\uff0c\u6b64\u5904\u903b\u8f91\u9700\u8981\u81ea\u884c\u5b9e\u73b0 doDecodeResponse(InputStream input, JavaType type)\u628ainput\u89e3\u6790\u6210\u76f8\u5e94\u5bf9\u8c61\uff0c\u6b64\u5904\u903b\u8f91\u9700\u8981\u81ea\u884c\u5b9e\u73b0 ```java public class ProduceAppXmlProcessor implements ProduceProcessor { @Override public String getName() { return MediaType.APPLICATION_XML; } @Override public int getOrder() { return 0; } @Override public void doEncodeResponse(OutputStream output, Object result) throws Exception { output.write(JAXBUtils.convertToXml(result).getBytes()); } @Override public Object doDecodeResponse(InputStream input, JavaType type) throws Exception { return JAXBUtils.convertToJavaBean(input, type); } } ``` 2.\u6dfb\u52a0\u914d\u7f6e\u6587\u4ef6 \u5728resources\u4e0bMETA-INF/services/\u6587\u4ef6\u5939\u65b0\u5efa\u6587\u4ef6xxx.ProduceProcessor\uff08xxx\u4e3a\u63a5\u53e3\u7684\u5305\u540d\uff09\uff0c\u5185\u5bb9\u586b\u5199xxx.ProduceAppXmlProcessor\uff08xxx\u4e3a\u5b9e\u73b0\u7c7b\u7684\u5305\u540d\uff09\u3002 \u91cd\u5199 \u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u5bf9\u73b0\u6709\u7684application/json\u548ctext/plain\u4e24\u79cd\u683c\u5f0f\u5b9e\u73b0\u903b\u8f91\u8fdb\u884c\u91cd\u5199\uff0c\u4e5f\u53ef\u4ee5\u5bf9\u81ea\u884c\u6269\u5c55\u7684\u683c\u5f0f\u8fdb\u884c\u91cd\u5199\uff0c\u4ee5\u91cd\u5199xml\u5e8f\u5217\u5316\u65b9\u5f0f\u4e3a\u4f8b\uff1a 1.\u521b\u5efa\u4e00\u4e2a\u540c\u540d\u7c7b ProduceAppXmlProcessor \uff0c\u5b9e\u73b0\u63a5\u53e3 ProduceProcessor 2.\u91cd\u5199 doEncodeResponse \u548c doDecodeResponse \u65b9\u6cd5\u91cc\u7684\u7f16\u89e3\u7801\u903b\u8f91 3.\u66f4\u6539getOrder\u65b9\u6cd5\u91cc\u7684\u8fd4\u56de\u503c\uff0c\u8981\u6bd4\u539f\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u5c0f\uff0c\u4f8b\u5982\u8fd4\u56de-1\uff0capplication/json\u548ctext/plain\u7684\u539f\u65b9\u6cd5\u8fd4\u56de\u503c\u9ed8\u8ba4\u90fd\u4e3a0 4.\u5728resources\u4e0bMETA-INF/services/\u6587\u4ef6\u5939\u65b0\u5efa\u6587\u4ef6xxx.ProduceProcessor\uff08xxx\u4e3a\u63a5\u53e3\u7684\u5305\u540d\uff09\uff0c\u5185\u5bb9\u586b\u5199xxx.ProduceAppXmlProcessor\uff08xxx\u4e3a\u5b9e\u73b0\u7c7b\u7684\u5305\u540d\uff09\u3002 \u9a8c\u8bc1 \u670d\u52a1\u63d0\u4f9b\u8005\u901a\u8fc7produces\u58f0\u660e\u53ef\u63d0\u4f9bxml\u5e8f\u5217\u5316\u80fd\u529b java @RequestMapping(path = \"/appXml\", method = RequestMethod.POST, produces = MediaType.APPLICATION_XML_VALUE) public JAXBPerson appXml(@RequestBody JAXBPerson person) { return person; } \u670d\u52a1\u6d88\u8d39\u8005\u901a\u8fc7\u8bf7\u6c42\u7684Accept\u5934\u6307\u660e\u8fd4\u56de\u503cxml\u5e8f\u5217\u5316\u65b9\u5f0f java private void testCodeFirstAppXml(RestTemplate template, String cseUrlPrefix) { JAXBPerson person = new JAXBPerson(\"jake\", 22, \"it\", \"60kg\"); person.setJob(new JAXBJob(\"developer\", \"coding\")); HttpHeaders headers = new HttpHeaders(); headers.add(\"Accept\", MediaType.APPLICATION_XML_VALUE); HttpEntity JAXBPerson requestEntity = new HttpEntity (person, headers); ResponseEntity JAXBPerson resEntity = template.exchange(cseUrlPrefix + \"appXml\", HttpMethod.POST, requestEntity, JAXBPerson.class); TestMgr.check(person, resEntity.getBody()); }","title":"\u8fd4\u56de\u503c\u5e8f\u5217\u5316\u6269\u5c55"},{"location":"general-development/produceprocess/#_1","text":"","title":"\u8fd4\u56de\u503c\u5e8f\u5217\u5316\u6269\u5c55"},{"location":"general-development/produceprocess/#_2","text":"\u5f53\u524dREST\u901a\u9053\u8fd4\u56de\u503c\u652f\u6301application/json\u548ctext/plain\u4e24\u79cd\u683c\u5f0f\uff0c\u652f\u6301\u5f00\u53d1\u4eba\u5458\u6269\u5c55\u548c\u91cd\u5199\uff0c\u670d\u52a1\u63d0\u4f9b\u8005\u901a\u8fc7produces\u58f0\u660e\u53ef\u63d0\u4f9b\u5e8f\u5217\u5316\u80fd\u529b\uff0c\u670d\u52a1\u6d88\u8d39\u8005\u901a\u8fc7\u8bf7\u6c42\u7684Accept\u5934\u6307\u660e\u8fd4\u56de\u503c\u5e8f\u5217\u5316\u65b9\u5f0f\uff0c\u9ed8\u8ba4\u8fd4\u56deapplication/json\u683c\u5f0f\u7684\u6570\u636e\u3002","title":"\u6982\u5ff5\u9610\u8ff0"},{"location":"general-development/produceprocess/#_3","text":"","title":"\u5f00\u53d1\u8bf4\u660e"},{"location":"general-development/produceprocess/#_4","text":"\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u6839\u636e\u4e1a\u52a1\u9700\u8981\uff0c\u901a\u8fc7\u7f16\u7a0b\u7684\u65b9\u5f0f\u6765\u6269\u5c55\u8fd4\u56de\u503c\u5e8f\u5217\u5316\u65b9\u5f0f\u3002\u5b9e\u65bd\u6b65\u9aa4\u5982\u4e0b\uff0c\u4ee5\u6269\u5c55\u652f\u6301application/xml\u683c\u5f0f\u4e3a\u4f8b\uff1a 1.\u5b9e\u73b0\u63a5\u53e3 ProduceProcessor getName()\u8fd4\u56de\u5f53\u524d\u6269\u5c55\u7684\u6570\u636e\u7c7b\u578b\u540d getOrder()\u8fd4\u56de\u5f53\u524d\u6570\u636e\u7c7b\u578b\u4f18\u5148\u7ea7\uff0c\u6709\u591a\u4e2a\u540c\u540d\u5b9e\u73b0\u7c7b\u65f6\u751f\u6548\uff0c\u53ea\u52a0\u8f7d\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\uff0c\u6570\u5b57\u8d8a\u5c0f\u4f18\u5148\u7ea7\u8d8a\u9ad8 doEncodeResponse(OutputStream output, Object result)\u628aresult\u5bf9\u8c61\u7f16\u7801\u6210output\uff0c\u6b64\u5904\u903b\u8f91\u9700\u8981\u81ea\u884c\u5b9e\u73b0 doDecodeResponse(InputStream input, JavaType type)\u628ainput\u89e3\u6790\u6210\u76f8\u5e94\u5bf9\u8c61\uff0c\u6b64\u5904\u903b\u8f91\u9700\u8981\u81ea\u884c\u5b9e\u73b0 ```java public class ProduceAppXmlProcessor implements ProduceProcessor { @Override public String getName() { return MediaType.APPLICATION_XML; } @Override public int getOrder() { return 0; } @Override public void doEncodeResponse(OutputStream output, Object result) throws Exception { output.write(JAXBUtils.convertToXml(result).getBytes()); } @Override public Object doDecodeResponse(InputStream input, JavaType type) throws Exception { return JAXBUtils.convertToJavaBean(input, type); } } ``` 2.\u6dfb\u52a0\u914d\u7f6e\u6587\u4ef6 \u5728resources\u4e0bMETA-INF/services/\u6587\u4ef6\u5939\u65b0\u5efa\u6587\u4ef6xxx.ProduceProcessor\uff08xxx\u4e3a\u63a5\u53e3\u7684\u5305\u540d\uff09\uff0c\u5185\u5bb9\u586b\u5199xxx.ProduceAppXmlProcessor\uff08xxx\u4e3a\u5b9e\u73b0\u7c7b\u7684\u5305\u540d\uff09\u3002","title":"\u6269\u5c55"},{"location":"general-development/produceprocess/#_5","text":"\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u5bf9\u73b0\u6709\u7684application/json\u548ctext/plain\u4e24\u79cd\u683c\u5f0f\u5b9e\u73b0\u903b\u8f91\u8fdb\u884c\u91cd\u5199\uff0c\u4e5f\u53ef\u4ee5\u5bf9\u81ea\u884c\u6269\u5c55\u7684\u683c\u5f0f\u8fdb\u884c\u91cd\u5199\uff0c\u4ee5\u91cd\u5199xml\u5e8f\u5217\u5316\u65b9\u5f0f\u4e3a\u4f8b\uff1a 1.\u521b\u5efa\u4e00\u4e2a\u540c\u540d\u7c7b ProduceAppXmlProcessor \uff0c\u5b9e\u73b0\u63a5\u53e3 ProduceProcessor 2.\u91cd\u5199 doEncodeResponse \u548c doDecodeResponse \u65b9\u6cd5\u91cc\u7684\u7f16\u89e3\u7801\u903b\u8f91 3.\u66f4\u6539getOrder\u65b9\u6cd5\u91cc\u7684\u8fd4\u56de\u503c\uff0c\u8981\u6bd4\u539f\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u5c0f\uff0c\u4f8b\u5982\u8fd4\u56de-1\uff0capplication/json\u548ctext/plain\u7684\u539f\u65b9\u6cd5\u8fd4\u56de\u503c\u9ed8\u8ba4\u90fd\u4e3a0 4.\u5728resources\u4e0bMETA-INF/services/\u6587\u4ef6\u5939\u65b0\u5efa\u6587\u4ef6xxx.ProduceProcessor\uff08xxx\u4e3a\u63a5\u53e3\u7684\u5305\u540d\uff09\uff0c\u5185\u5bb9\u586b\u5199xxx.ProduceAppXmlProcessor\uff08xxx\u4e3a\u5b9e\u73b0\u7c7b\u7684\u5305\u540d\uff09\u3002","title":"\u91cd\u5199"},{"location":"general-development/produceprocess/#_6","text":"\u670d\u52a1\u63d0\u4f9b\u8005\u901a\u8fc7produces\u58f0\u660e\u53ef\u63d0\u4f9bxml\u5e8f\u5217\u5316\u80fd\u529b java @RequestMapping(path = \"/appXml\", method = RequestMethod.POST, produces = MediaType.APPLICATION_XML_VALUE) public JAXBPerson appXml(@RequestBody JAXBPerson person) { return person; } \u670d\u52a1\u6d88\u8d39\u8005\u901a\u8fc7\u8bf7\u6c42\u7684Accept\u5934\u6307\u660e\u8fd4\u56de\u503cxml\u5e8f\u5217\u5316\u65b9\u5f0f java private void testCodeFirstAppXml(RestTemplate template, String cseUrlPrefix) { JAXBPerson person = new JAXBPerson(\"jake\", 22, \"it\", \"60kg\"); person.setJob(new JAXBJob(\"developer\", \"coding\")); HttpHeaders headers = new HttpHeaders(); headers.add(\"Accept\", MediaType.APPLICATION_XML_VALUE); HttpEntity JAXBPerson requestEntity = new HttpEntity (person, headers); ResponseEntity JAXBPerson resEntity = template.exchange(cseUrlPrefix + \"appXml\", HttpMethod.POST, requestEntity, JAXBPerson.class); TestMgr.check(person, resEntity.getBody()); }","title":"\u9a8c\u8bc1"},{"location":"general-development/proxy/","text":"\u4ee3\u7406\u8bbe\u7f6e \u4f5c\u4e3a\u4e00\u540d\u5f00\u53d1\u8005\uff0c\u5728\u516c\u53f8\u5f00\u53d1\u73af\u5883\uff0c\u53ef\u80fd\u662f\u901a\u8fc7\u516c\u53f8\u4ee3\u7406\u7f51\u7edc\u63a5\u5165\u5230\u56e0\u7279\u7f51\u3002\u5982\u679c\u8c03\u8bd5\u670d\u52a1\u65f6\u8fd8\u5fc5\u987b\u4f9d\u8d56\u7f51\u4e0a\u8d44\u6e90\uff0c\u6bd4\u5982\u76f4\u63a5\u8fde\u63a5\u5171\u6709\u4e91\u670d\u52a1\u4e2d\u5fc3\uff0c\u90a3\u4e48\u5c31\u5fc5\u987b\u914d\u7f6e\u4ee3\u7406\u3002 \u914d\u7f6e\u65b9\u5f0f\uff0c\u5728 microservice.yaml \u6587\u4ef6\u589e\u52a0 proxy \u914d\u7f6e\uff1a servicecomb: proxy: enable: true #\u662f\u5426\u5f00\u542f\u4ee3\u7406 host: yourproxyaddress #\u4ee3\u7406\u5730\u5740 port: 80 #\u4ee3\u7406\u7aef\u53e3 username: yourname #\u7528\u6237\u540d passwd: yourpassword #\u5bc6\u7801 \u6709\u4e9b\u7528\u6237\u9700\u8981\u901a\u8fc7\u52a0\u5bc6\u4fdd\u62a4\u5bc6\u7801\u4fe1\u606f\u3002\u53ef\u4ee5\u901a\u8fc7\u5b9e\u73b0SPI\u6269\u5c55\u6765\u5b9e\u73b0\u3002\u9700\u8981\u6269\u5c55\u7684SPI\u63a5\u53e3\u540d\u79f0\u4e3a\uff1aorg.apache.servicecomb.foundation.common.encrypt.Encryption\uff0c\u5b9e\u73b0 decode \u63a5\u53e3\u5373\u53ef\u3002","title":"\u4ee3\u7406\u8bbe\u7f6e"},{"location":"general-development/proxy/#_1","text":"\u4f5c\u4e3a\u4e00\u540d\u5f00\u53d1\u8005\uff0c\u5728\u516c\u53f8\u5f00\u53d1\u73af\u5883\uff0c\u53ef\u80fd\u662f\u901a\u8fc7\u516c\u53f8\u4ee3\u7406\u7f51\u7edc\u63a5\u5165\u5230\u56e0\u7279\u7f51\u3002\u5982\u679c\u8c03\u8bd5\u670d\u52a1\u65f6\u8fd8\u5fc5\u987b\u4f9d\u8d56\u7f51\u4e0a\u8d44\u6e90\uff0c\u6bd4\u5982\u76f4\u63a5\u8fde\u63a5\u5171\u6709\u4e91\u670d\u52a1\u4e2d\u5fc3\uff0c\u90a3\u4e48\u5c31\u5fc5\u987b\u914d\u7f6e\u4ee3\u7406\u3002 \u914d\u7f6e\u65b9\u5f0f\uff0c\u5728 microservice.yaml \u6587\u4ef6\u589e\u52a0 proxy \u914d\u7f6e\uff1a servicecomb: proxy: enable: true #\u662f\u5426\u5f00\u542f\u4ee3\u7406 host: yourproxyaddress #\u4ee3\u7406\u5730\u5740 port: 80 #\u4ee3\u7406\u7aef\u53e3 username: yourname #\u7528\u6237\u540d passwd: yourpassword #\u5bc6\u7801 \u6709\u4e9b\u7528\u6237\u9700\u8981\u901a\u8fc7\u52a0\u5bc6\u4fdd\u62a4\u5bc6\u7801\u4fe1\u606f\u3002\u53ef\u4ee5\u901a\u8fc7\u5b9e\u73b0SPI\u6269\u5c55\u6765\u5b9e\u73b0\u3002\u9700\u8981\u6269\u5c55\u7684SPI\u63a5\u53e3\u540d\u79f0\u4e3a\uff1aorg.apache.servicecomb.foundation.common.encrypt.Encryption\uff0c\u5b9e\u73b0 decode \u63a5\u53e3\u5373\u53ef\u3002","title":"\u4ee3\u7406\u8bbe\u7f6e"},{"location":"general-development/reactive/","text":"\u7b80\u5355\u540c\u6b65\u6a21\u5f0f\u7684Producer\uff1a \u793a\u4f8b\u4ee3\u7801\uff1a @GetMapping(path = /hello/{name} ) public String hello(@PathVariable(name = name ) String name){ return hello + name; } \u4e0e\u6b64\u5bf9\u5e94\u7684\u5904\u7406\u6d41\u7a0b\u5982\u4e0b\uff1a \u8fd9\u662f\u4f20\u7edf\u5178\u578b\u7684\u5de5\u4f5c\u6a21\u578b\uff0c\u6838\u5fc3\u601d\u60f3\u662f\u4e0d\u963b\u585e\u7f51\u7edc\u7ebf\u7a0b\uff0c\u5c06\u4e1a\u52a1\u653e\u5728\u72ec\u7acb\u7684\u7ebf\u7a0b\u4e2d\u5904\u7406\uff08\u4e3a\u4e86\u7b80\u5316\u8868\u8fbe\uff0cexecutor\u4e2d\u53ea\u753b\u4e00\u4e2a\u7ebf\u7a0b\uff09 \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6b64\u6a21\u5f0f\u95ee\u9898\u4e0d\u5927\u3002 \u5d4c\u5957\u540c\u6b65\u8c03\u7528\uff1a \u4e0d\u662f\u6240\u6709\u7684\u4e1a\u52a1\u90fd\u662f\u7b80\u5355\u5904\u7406\u4e00\u4e0b\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u5e94\u7b54\uff0c\u53ef\u80fd\u8fd8\u9700\u8981\u8c03\u7528\u5176\u4ed6\u5fae\u670d\u52a1. \u793a\u4f8b\u4ee3\u7801\uff1a public interface Intf{ String hello(String name); } @GetMapping(path = /hello/{name} ) public String hello(@PathVariable(name = name ) String name){ return from remote: hello + intf.hello(name); } \u4e0e\u6b64\u5bf9\u5e94\u7684\u5904\u7406\u6d41\u7a0b\u5982\u4e0b\uff1a \u6839\u636e\u8fd9\u4e2a\u6d41\u7a0b\u7684\u7279\u70b9\uff0c\u53ef\u4ee5\u770b\u5230\u4f1a\u4ea7\u751f\u4ee5\u4e0b\u7ed3\u679c\uff1a \u56e0\u4e3a\u662f\u540c\u6b65\u8c03\u7528\uff0c\u5728\u201cOther microservices\u201d\u672a\u5e94\u7b54\u4e4b\u524d\u201cMicroservice A\u201d\u7684\u8c03\u7528\u7ebf\u7a0b\u4e00\u76f4\u5904\u4e8e\u963b\u585e\u7b49\u5f85\u72b6\u6001\uff0c\u4e0d\u5904\u7406\u4efb\u4f55\u5176\u4ed6\u4e8b\u52a1 \u5f53Executor\u4e2d\u6240\u6709\u7ebf\u7a0b\u90fd\u5728\u7b49\u5f85\u8fdc\u7a0b\u5e94\u7b54\u65f6\uff0c\u6240\u6709\u65b0\u7684\u8bf7\u6c42\u90fd\u53ea\u80fd\u5728Queue\u4e2d\u6392\u961f\uff0c\u5f97\u4e0d\u5230\u5904\u7406\uff0c\u6b64\u65f6\u6574\u4e2a\u7cfb\u7edf\u76f8\u5f53\u4e8e\u505c\u6b62\u5de5\u4f5c\u4e86 \u8981\u589e\u52a0\u5904\u7406\u80fd\u529b\uff0c\u53ea\u80fd\u589e\u52a0Executor\u4e2d\u7684\u7ebf\u7a0b\u6570\uff0c\u800c\u64cd\u4f5c\u7cfb\u7edf\u5e76\u4e0d\u80fd\u65e0\u9650\u5730\u589e\u52a0\u7ebf\u7a0b\u6570\uff0c\u4e8b\u5b9e\u4e0a\u589e\u52a0\u7ebf\u7a0b\u6570\u5e26\u6765\u7684\u6536\u76ca\u662f\u4e00\u4e2a\u629b\u7269\u7ebf\u6a21\u578b\uff0c\u8d85\u51fa\u4e00\u5b9a\u7684\u4e34\u754c\u503c\u540e\uff0c\u7cfb\u7edf\u7684\u5904\u7406\u80fd\u529b\u5176\u5b9e\u4f1a\u4e0b\u964d\uff0c\u800c\u8fd9\u4e2a\u4e34\u754c\u503c\u5e76\u4e0d\u4f1a\u592a\u5927 \u5f53\u4e1a\u52a1\u903b\u8f91\u4e2d\uff0c\u9700\u8981\u591a\u6b21\u8fdb\u884c\u8fdc\u7a0b\u540c\u6b65\u64cd\u4f5c\u65f6\uff0c\u4f1a\u66f4\u52a0\u6076\u5316\u8fd9\u4e2a\u73b0\u8c61 \u5d4c\u5957\u540c\u6b65\u8c03\u7528\u7684\u201c\u9519\u8bef\u201d\u4f18\u5316\uff1a \u9488\u5bf9\u524d\u4e00\u573a\u666f\uff0c\u6709\u4eba\u4f1a\u8ba4\u4e3a\u5c06\u201cInvoke producer method\u201d\u4e22\u8fdb\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u6c60\uff0c\u53ef\u4ee5\u89e3\u51b3\u95ee\u9898\uff0c\u5305\u62ec\u4ee5\u4e0b\u5904\u7406\u65b9\u5f0f\uff1a \u5728producer method\u6253\u6807\u6ce8@Async\uff0c\u7531AOP\u8d1f\u8d23\u5c06\u5bf9\u8be5\u65b9\u6cd5\u7684\u8c03\u7528\u4e22\u8fdb\u5176\u4ed6\u7ebf\u7a0b\u6c60\u53bb \u5728producer method\u5185\u90e8\u901a\u8fc7\u4e1a\u52a1\u4ee3\u7801\u8f6c\u79fb\u7ebf\u7a0b \u5f62\u6210\u4ee5\u4e0b\u6d41\u7a0b\uff1a \u6839\u636e\u8fd9\u4e2a\u6d41\u7a0b\u7684\u7279\u70b9\uff0c\u53ef\u4ee5\u770b\u5230\u4f1a\u4ea7\u751f\u4ee5\u4e0b\u7ed3\u679c\uff1a \u201cInvoke producer method\u201d\u5fc5\u987b\u7acb\u5373\u8fd4\u56de\uff0c\u5426\u5219Executor\u7ebf\u7a0b\u8fd8\u662f\u5f97\u4e0d\u5230\u91ca\u653e \u201cInvoke producer method\u201d\u5fc5\u987b\u63d0\u4f9b\u4e00\u4e2a\u65b0\u7684\u673a\u5236\u544a\u77e5\u8c03\u7528\u6d41\u7a0b\u81ea\u5df1\u7684\u8fd4\u56de\u503c\uff0c\u4e0d\u662f\u6700\u7ec8\u8fd4\u56de\u503c\uff08\u5f53\u524d\u6ca1\u6709\u8fd9\u4e2a\u673a\u5236\uff09 \u867d\u7136Executor\u7ebf\u7a0b\u91ca\u653e\u4e86\uff0c\u4f46\u662fCustomer Executor\uff0c\u5176\u5b9e\u8fd8\u662f\u963b\u585e\u4f4f\uff0c\u5728\u7b49\u5f85\u8fdc\u7aef\u5e94\u7b54\uff0c\u6574\u4e2a\u7cfb\u7edf\u7684\u963b\u585e\u72b6\u6001\u5e76\u6ca1\u6709\u5f97\u5230\u6539\u53d8\uff1b\u800c\u4e14\u8fd8\u51ed\u7a7a\u591a\u4e86\u4e00\u6b21\u7ebf\u7a0b\u5207\u6362 \u8be5\u673a\u5236\u770b\u4e0a\u53bb\uff0c\u552f\u4e00\u7684\u4f5c\u7528\uff0c\u662f\u91ca\u653e\u4e86executor\u7ebf\u7a0b\uff0c\u8ba9executor\u7ebf\u7a0b\u6709\u673a\u4f1a\u5904\u7406\u5176\u4ed6\u8bf7\u6c42\uff0c\u8fd9\u76f8\u5f53\u4e8e\u9694\u79bb\u4ed3\u7684\u6982\u5ff5\uff0c\u5904\u7406\u901f\u5ea6\u6162\u7684\u4e1a\u52a1\u4e0d\u8981\u5f71\u54cd\u5176\u4ed6\u4e1a\u52a1\uff1b\u4f46\u662f\u8fd9\u4e2a\u6982\u5ff5serviceComb\u662f\u53ef\u4ee5\u76f4\u63a5\u652f\u6301\u7684\uff0c\u53ef\u4ee5\u914d\u7f6e\u6307\u5b9a\u7684\u4e1a\u52a1\u65b9\u6cd5\u72ec\u5360\u5168\u65b0\u7684executor\uff0c\u8fd9\u6837\u6574\u4e2a\u6d41\u7a0b\u5c31\u8ddf\u201c\u5d4c\u5957\u540c\u6b65\u8c03\u7528\u201d\u5b8c\u5168\u4e00\u6837\uff0c\u6d41\u7a0b\u66f4\u7b80\u5355\uff0c\u800c\u4e0d\u9700\u8981\u5728\u201cInvoke producer method\u201d\u5c42\u6b21\u6765\u505a\u8fd9\u4e2a\u4e8b\u60c5 \u7eafReactive\u673a\u5236 \u793a\u4f8b\u4ee3\u7801\uff1a public interface Intf{ CompletableFuture String hello(String name); } @GetMapping(path = /hello/{name} ) public CompletableFuture String hello(@PathVariable(name = name ) String name){ CompletableFuture String future = new CompletableFuture (); intf.hello(name).whenComplete((result, exception) - { if (exception == null) { future.complete( from remote: + result); return; } future.completeExceptionally(exception); }); return future; } \u4e0e\u6b64\u5bf9\u5e94\u7684\u5904\u7406\u6d41\u7a0b\u5982\u4e0b\uff1a \u4e0e\u4f20\u7edf\u6d41\u7a0b\u4e0d\u540c\u7684\u662f\uff0c\u6240\u6709\u529f\u80fd\u90fd\u5728eventloop\u4e2d\u6267\u884c\uff0c\u5e76\u4e0d\u4f1a\u8fdb\u884c\u7ebf\u7a0b\u5207\u6362 \u6a59\u8272\u7bad\u5934\u8d70\u5b8c\u540e\uff0c\u5bf9\u672c\u7ebf\u7a0b\u7684\u5360\u7528\u5373\u5b8c\u6210\u4e86\uff0c\u4e0d\u4f1a\u963b\u585e\u7b49\u5f85\u5e94\u7b54\uff0c\u8be5\u7ebf\u7a0b\u53ef\u4ee5\u5904\u7406\u5176\u4ed6\u4efb\u52a1 \u5f53\u6536\u5230\u8fdc\u7aef\u5e94\u7b54\u540e\uff0c\u7531\u7f51\u7edc\u6570\u636e\u9a71\u52a8\u5f00\u59cb\u8d70\u7ea2\u8272\u7bad\u5934\u7684\u5e94\u7b54\u6d41\u7a0b \u53ea\u8981\u6709\u4efb\u52a1\uff0c\u7ebf\u7a0b\u5c31\u4e0d\u4f1a\u505c\u6b62\uff0c\u4f1a\u4e00\u76f4\u6267\u884c\u4efb\u52a1\uff0c\u53ef\u4ee5\u5145\u5206\u5229\u7528cpu\u8d44\u6e90\uff0c\u4e5f\u4e0d\u4f1a\u4ea7\u751f\u591a\u4f59\u7684\u7ebf\u7a0b\u5207\u6362\uff0c\u53bb\u65e0\u8c13\u5730\u6d88\u8017cpu\u3002 \u56e0\u4e3a\u540c\u6b65\u6a21\u5f0f\u4e0b\uff0c\u9700\u8981\u5927\u91cf\u7684\u7ebf\u7a0b\u6765\u63d0\u5347\u5e76\u53d1\u5ea6\uff0c\u800c\u5927\u91cf\u7684\u7ebf\u7a0b\u53c8\u5e26\u6765\u7ebf\u7a0b\u5207\u6362\u7684\u989d\u5916\u6d88\u8017\u3002 \u6d4b\u8bd5\u6570\u636e\u8868\u660e\uff0creactive\u6a21\u5f0f\uff0c\u53ea\u9700\u8981\u6d88\u8017\u540c\u6b65\u6a21\u5f0f\u4e0d\u5230\u4e00\u534a\u7684cpu\uff0c\u5373\u53ef\u8fbe\u5230\u6216\u8d85\u8fc7\u540c\u6b65\u6a21\u5f0f\u7684tps\uff0c\u5e76\u4e14\u65f6\u5ef6\u66f4\u4f4e\u3002 \u6df7\u5408Reactive\u673a\u5236 Reactvie\u8981\u6c42\uff1a\u6240\u6709\u5728eventloop\u4e2d\u6267\u884c\u7684\u903b\u8f91\uff0c\u4e0d\u5141\u8bb8\u6709\u4efb\u4f55\u7684\u963b\u585e\u52a8\u4f5c\uff0c\u5305\u62ec\u4e0d\u9650\u4e8ewait\u3001sleep\u3001\u5de8\u5927\u5faa\u73af\u3001\u540c\u6b65\u67e5\u8be2DB\u7b49\u7b49\u3002 serviceComb\u5e95\u5c42\u662f\u57fa\u4e8evertx\u7684\uff0cvertx\u751f\u6001\u4e2d\u6709jdbc\u3001mq\u3001zooKeeper\u7b49\u7b49\u5404\u79cd\u4e30\u5bcc\u7ec4\u4ef6\u7684reactive\u9a71\u52a8\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u90fd\u53ef\u4ee5\u6ee1\u8db3\u8981\u6c42\u3002 \u4f46\u662f\u6709\u7684\u573a\u666f\u4e0b\uff0c\u786e\u5b9e\u6709\u7684\u540c\u6b65\u64cd\u4f5c\u65e0\u6cd5\u907f\u514d\uff0c\u6bd4\u5982\uff1a \u79c1\u6709\u7684\u5b89\u5168\u52a0\u56fa\u7684redis\uff0c\u53ea\u63d0\u4f9b\u4e86\u540c\u6b65\u9a71\u52a8 \u8f83\u590d\u6742\u7684\u4e1a\u52a1\u8fd0\u7b97 \u2026\u2026 \u6b64\u65f6\uff0c\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u540c\u6b65\u7684\u903b\u8f91\u62bd\u53d6\u51fa\u6765\u653e\u5230\u7ebf\u7a0b\u6c60\u4e2d\u53bb\u5904\u7406\uff0c\u800c\u5176\u4ed6\u90e8\u5206\u4ecd\u7136\u4f7f\u7528reactive\u7684\u6d41\u7a0b\u3002 \u5173\u4e8ereactive\u7684\u4e00\u4e9b\u8bf4\u660e\uff1a Producer\uff1a producer\u662f\u5426\u4f7f\u7528reactive\u4e0econsumer\u5982\u4f55\u8c03\u7528\uff0c\u6ca1\u6709\u4efb\u4f55\u8054\u7cfb \u5f53operation\u8fd4\u56de\u503c\u4e3aCompletableFuture\u7c7b\u578b\u65f6\uff0c\u9ed8\u8ba4\u6b64operation\u5de5\u4f5c\u4e8ereactive\u6a21\u5f0f\uff0c\u6b64\u65f6\u5982\u679c\u9700\u8981\u5f3a\u5236\u6b64operation\u5de5\u4f5c\u4e8e\u7ebf\u7a0b\u6c60\u6a21\u5f0f\uff0c\u9700\u8981\u5728microservice.yaml\u4e2d\u660e\u786e\u914d\u7f6e\uff1b\u5047\u8bbe\u67d0operation\uff0c\u5176schemaId\u4e3asid\uff0coperationId\u4e3aasyncQuery\uff0c\u5219\u9700\u8981\u8fdb\u884c\u4ee5\u4e0b\u914d\u7f6e\uff1a servicecomb: executors: Provider: sid.asyncQuery: cse.executor.groupThreadPool \u8fd9\u91cc\u7684cse.executor.groupThreadPool\u662fserviceComb\u5185\u7f6e\u7684\u9ed8\u8ba4\u7ebf\u7a0b\u6c60\uff0c\u7528\u6237\u53ef\u4ee5\u4efb\u610f\u6307\u5b9a\u4e3a\u81ea\u5df1\u7684\u5b9a\u5236\u7ebf\u7a0b\u6c60\u3002 Consumer\uff1a consumer\u662f\u5426\u4f7f\u7528reactive\u4e0eproducer\u5982\u4f55\u5b9e\u73b0\uff0c\u6ca1\u6709\u4efb\u4f55\u8054\u7cfb \u5f53\u524d\u53ea\u652f\u6301\u900f\u660eRPC\u6a21\u5f0f\uff0c\u4f7f\u7528JDK\u539f\u751f\u7684CompletableFuture\u6765\u627f\u8f7d\u6b64\u529f\u80fd completableFuture\u7684when\u3001then\u7b49\u7b49\u529f\u80fd\u90fd\u53ef\u76f4\u63a5\u4f7f\u7528 \u4f46\u662fcompletableFuture\u7684async\u7cfb\u5217\u529f\u80fd\uff0c\u5176\u5b9e\u662f\u53e6\u5916\u542f\u7ebf\u7a0b\u6c60\u6765\u6267\u884c\u529f\u80fd\uff0c\u4e0d\u5efa\u8bae\u4f7f\u7528 \u5173\u4e8eRxJava Observable\u7684\u652f\u6301\u540e\u7eed\u4f1a\u52a0\u5165 \u5173\u4e8eAsyncRestTemplate\u7684\u652f\u6301\u540e\u7eed\u4f1a\u52a0\u5165","title":"Reactive"},{"location":"general-development/reactive/#producer","text":"\u793a\u4f8b\u4ee3\u7801\uff1a @GetMapping(path = /hello/{name} ) public String hello(@PathVariable(name = name ) String name){ return hello + name; } \u4e0e\u6b64\u5bf9\u5e94\u7684\u5904\u7406\u6d41\u7a0b\u5982\u4e0b\uff1a \u8fd9\u662f\u4f20\u7edf\u5178\u578b\u7684\u5de5\u4f5c\u6a21\u578b\uff0c\u6838\u5fc3\u601d\u60f3\u662f\u4e0d\u963b\u585e\u7f51\u7edc\u7ebf\u7a0b\uff0c\u5c06\u4e1a\u52a1\u653e\u5728\u72ec\u7acb\u7684\u7ebf\u7a0b\u4e2d\u5904\u7406\uff08\u4e3a\u4e86\u7b80\u5316\u8868\u8fbe\uff0cexecutor\u4e2d\u53ea\u753b\u4e00\u4e2a\u7ebf\u7a0b\uff09 \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6b64\u6a21\u5f0f\u95ee\u9898\u4e0d\u5927\u3002","title":"\u7b80\u5355\u540c\u6b65\u6a21\u5f0f\u7684Producer\uff1a"},{"location":"general-development/reactive/#_1","text":"\u4e0d\u662f\u6240\u6709\u7684\u4e1a\u52a1\u90fd\u662f\u7b80\u5355\u5904\u7406\u4e00\u4e0b\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u5e94\u7b54\uff0c\u53ef\u80fd\u8fd8\u9700\u8981\u8c03\u7528\u5176\u4ed6\u5fae\u670d\u52a1. \u793a\u4f8b\u4ee3\u7801\uff1a public interface Intf{ String hello(String name); } @GetMapping(path = /hello/{name} ) public String hello(@PathVariable(name = name ) String name){ return from remote: hello + intf.hello(name); } \u4e0e\u6b64\u5bf9\u5e94\u7684\u5904\u7406\u6d41\u7a0b\u5982\u4e0b\uff1a \u6839\u636e\u8fd9\u4e2a\u6d41\u7a0b\u7684\u7279\u70b9\uff0c\u53ef\u4ee5\u770b\u5230\u4f1a\u4ea7\u751f\u4ee5\u4e0b\u7ed3\u679c\uff1a \u56e0\u4e3a\u662f\u540c\u6b65\u8c03\u7528\uff0c\u5728\u201cOther microservices\u201d\u672a\u5e94\u7b54\u4e4b\u524d\u201cMicroservice A\u201d\u7684\u8c03\u7528\u7ebf\u7a0b\u4e00\u76f4\u5904\u4e8e\u963b\u585e\u7b49\u5f85\u72b6\u6001\uff0c\u4e0d\u5904\u7406\u4efb\u4f55\u5176\u4ed6\u4e8b\u52a1 \u5f53Executor\u4e2d\u6240\u6709\u7ebf\u7a0b\u90fd\u5728\u7b49\u5f85\u8fdc\u7a0b\u5e94\u7b54\u65f6\uff0c\u6240\u6709\u65b0\u7684\u8bf7\u6c42\u90fd\u53ea\u80fd\u5728Queue\u4e2d\u6392\u961f\uff0c\u5f97\u4e0d\u5230\u5904\u7406\uff0c\u6b64\u65f6\u6574\u4e2a\u7cfb\u7edf\u76f8\u5f53\u4e8e\u505c\u6b62\u5de5\u4f5c\u4e86 \u8981\u589e\u52a0\u5904\u7406\u80fd\u529b\uff0c\u53ea\u80fd\u589e\u52a0Executor\u4e2d\u7684\u7ebf\u7a0b\u6570\uff0c\u800c\u64cd\u4f5c\u7cfb\u7edf\u5e76\u4e0d\u80fd\u65e0\u9650\u5730\u589e\u52a0\u7ebf\u7a0b\u6570\uff0c\u4e8b\u5b9e\u4e0a\u589e\u52a0\u7ebf\u7a0b\u6570\u5e26\u6765\u7684\u6536\u76ca\u662f\u4e00\u4e2a\u629b\u7269\u7ebf\u6a21\u578b\uff0c\u8d85\u51fa\u4e00\u5b9a\u7684\u4e34\u754c\u503c\u540e\uff0c\u7cfb\u7edf\u7684\u5904\u7406\u80fd\u529b\u5176\u5b9e\u4f1a\u4e0b\u964d\uff0c\u800c\u8fd9\u4e2a\u4e34\u754c\u503c\u5e76\u4e0d\u4f1a\u592a\u5927 \u5f53\u4e1a\u52a1\u903b\u8f91\u4e2d\uff0c\u9700\u8981\u591a\u6b21\u8fdb\u884c\u8fdc\u7a0b\u540c\u6b65\u64cd\u4f5c\u65f6\uff0c\u4f1a\u66f4\u52a0\u6076\u5316\u8fd9\u4e2a\u73b0\u8c61","title":"\u5d4c\u5957\u540c\u6b65\u8c03\u7528\uff1a"},{"location":"general-development/reactive/#_2","text":"\u9488\u5bf9\u524d\u4e00\u573a\u666f\uff0c\u6709\u4eba\u4f1a\u8ba4\u4e3a\u5c06\u201cInvoke producer method\u201d\u4e22\u8fdb\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u6c60\uff0c\u53ef\u4ee5\u89e3\u51b3\u95ee\u9898\uff0c\u5305\u62ec\u4ee5\u4e0b\u5904\u7406\u65b9\u5f0f\uff1a \u5728producer method\u6253\u6807\u6ce8@Async\uff0c\u7531AOP\u8d1f\u8d23\u5c06\u5bf9\u8be5\u65b9\u6cd5\u7684\u8c03\u7528\u4e22\u8fdb\u5176\u4ed6\u7ebf\u7a0b\u6c60\u53bb \u5728producer method\u5185\u90e8\u901a\u8fc7\u4e1a\u52a1\u4ee3\u7801\u8f6c\u79fb\u7ebf\u7a0b \u5f62\u6210\u4ee5\u4e0b\u6d41\u7a0b\uff1a \u6839\u636e\u8fd9\u4e2a\u6d41\u7a0b\u7684\u7279\u70b9\uff0c\u53ef\u4ee5\u770b\u5230\u4f1a\u4ea7\u751f\u4ee5\u4e0b\u7ed3\u679c\uff1a \u201cInvoke producer method\u201d\u5fc5\u987b\u7acb\u5373\u8fd4\u56de\uff0c\u5426\u5219Executor\u7ebf\u7a0b\u8fd8\u662f\u5f97\u4e0d\u5230\u91ca\u653e \u201cInvoke producer method\u201d\u5fc5\u987b\u63d0\u4f9b\u4e00\u4e2a\u65b0\u7684\u673a\u5236\u544a\u77e5\u8c03\u7528\u6d41\u7a0b\u81ea\u5df1\u7684\u8fd4\u56de\u503c\uff0c\u4e0d\u662f\u6700\u7ec8\u8fd4\u56de\u503c\uff08\u5f53\u524d\u6ca1\u6709\u8fd9\u4e2a\u673a\u5236\uff09 \u867d\u7136Executor\u7ebf\u7a0b\u91ca\u653e\u4e86\uff0c\u4f46\u662fCustomer Executor\uff0c\u5176\u5b9e\u8fd8\u662f\u963b\u585e\u4f4f\uff0c\u5728\u7b49\u5f85\u8fdc\u7aef\u5e94\u7b54\uff0c\u6574\u4e2a\u7cfb\u7edf\u7684\u963b\u585e\u72b6\u6001\u5e76\u6ca1\u6709\u5f97\u5230\u6539\u53d8\uff1b\u800c\u4e14\u8fd8\u51ed\u7a7a\u591a\u4e86\u4e00\u6b21\u7ebf\u7a0b\u5207\u6362 \u8be5\u673a\u5236\u770b\u4e0a\u53bb\uff0c\u552f\u4e00\u7684\u4f5c\u7528\uff0c\u662f\u91ca\u653e\u4e86executor\u7ebf\u7a0b\uff0c\u8ba9executor\u7ebf\u7a0b\u6709\u673a\u4f1a\u5904\u7406\u5176\u4ed6\u8bf7\u6c42\uff0c\u8fd9\u76f8\u5f53\u4e8e\u9694\u79bb\u4ed3\u7684\u6982\u5ff5\uff0c\u5904\u7406\u901f\u5ea6\u6162\u7684\u4e1a\u52a1\u4e0d\u8981\u5f71\u54cd\u5176\u4ed6\u4e1a\u52a1\uff1b\u4f46\u662f\u8fd9\u4e2a\u6982\u5ff5serviceComb\u662f\u53ef\u4ee5\u76f4\u63a5\u652f\u6301\u7684\uff0c\u53ef\u4ee5\u914d\u7f6e\u6307\u5b9a\u7684\u4e1a\u52a1\u65b9\u6cd5\u72ec\u5360\u5168\u65b0\u7684executor\uff0c\u8fd9\u6837\u6574\u4e2a\u6d41\u7a0b\u5c31\u8ddf\u201c\u5d4c\u5957\u540c\u6b65\u8c03\u7528\u201d\u5b8c\u5168\u4e00\u6837\uff0c\u6d41\u7a0b\u66f4\u7b80\u5355\uff0c\u800c\u4e0d\u9700\u8981\u5728\u201cInvoke producer method\u201d\u5c42\u6b21\u6765\u505a\u8fd9\u4e2a\u4e8b\u60c5","title":"\u5d4c\u5957\u540c\u6b65\u8c03\u7528\u7684\u201c\u9519\u8bef\u201d\u4f18\u5316\uff1a"},{"location":"general-development/reactive/#reactive","text":"\u793a\u4f8b\u4ee3\u7801\uff1a public interface Intf{ CompletableFuture String hello(String name); } @GetMapping(path = /hello/{name} ) public CompletableFuture String hello(@PathVariable(name = name ) String name){ CompletableFuture String future = new CompletableFuture (); intf.hello(name).whenComplete((result, exception) - { if (exception == null) { future.complete( from remote: + result); return; } future.completeExceptionally(exception); }); return future; } \u4e0e\u6b64\u5bf9\u5e94\u7684\u5904\u7406\u6d41\u7a0b\u5982\u4e0b\uff1a \u4e0e\u4f20\u7edf\u6d41\u7a0b\u4e0d\u540c\u7684\u662f\uff0c\u6240\u6709\u529f\u80fd\u90fd\u5728eventloop\u4e2d\u6267\u884c\uff0c\u5e76\u4e0d\u4f1a\u8fdb\u884c\u7ebf\u7a0b\u5207\u6362 \u6a59\u8272\u7bad\u5934\u8d70\u5b8c\u540e\uff0c\u5bf9\u672c\u7ebf\u7a0b\u7684\u5360\u7528\u5373\u5b8c\u6210\u4e86\uff0c\u4e0d\u4f1a\u963b\u585e\u7b49\u5f85\u5e94\u7b54\uff0c\u8be5\u7ebf\u7a0b\u53ef\u4ee5\u5904\u7406\u5176\u4ed6\u4efb\u52a1 \u5f53\u6536\u5230\u8fdc\u7aef\u5e94\u7b54\u540e\uff0c\u7531\u7f51\u7edc\u6570\u636e\u9a71\u52a8\u5f00\u59cb\u8d70\u7ea2\u8272\u7bad\u5934\u7684\u5e94\u7b54\u6d41\u7a0b \u53ea\u8981\u6709\u4efb\u52a1\uff0c\u7ebf\u7a0b\u5c31\u4e0d\u4f1a\u505c\u6b62\uff0c\u4f1a\u4e00\u76f4\u6267\u884c\u4efb\u52a1\uff0c\u53ef\u4ee5\u5145\u5206\u5229\u7528cpu\u8d44\u6e90\uff0c\u4e5f\u4e0d\u4f1a\u4ea7\u751f\u591a\u4f59\u7684\u7ebf\u7a0b\u5207\u6362\uff0c\u53bb\u65e0\u8c13\u5730\u6d88\u8017cpu\u3002 \u56e0\u4e3a\u540c\u6b65\u6a21\u5f0f\u4e0b\uff0c\u9700\u8981\u5927\u91cf\u7684\u7ebf\u7a0b\u6765\u63d0\u5347\u5e76\u53d1\u5ea6\uff0c\u800c\u5927\u91cf\u7684\u7ebf\u7a0b\u53c8\u5e26\u6765\u7ebf\u7a0b\u5207\u6362\u7684\u989d\u5916\u6d88\u8017\u3002 \u6d4b\u8bd5\u6570\u636e\u8868\u660e\uff0creactive\u6a21\u5f0f\uff0c\u53ea\u9700\u8981\u6d88\u8017\u540c\u6b65\u6a21\u5f0f\u4e0d\u5230\u4e00\u534a\u7684cpu\uff0c\u5373\u53ef\u8fbe\u5230\u6216\u8d85\u8fc7\u540c\u6b65\u6a21\u5f0f\u7684tps\uff0c\u5e76\u4e14\u65f6\u5ef6\u66f4\u4f4e\u3002","title":"\u7eafReactive\u673a\u5236"},{"location":"general-development/reactive/#reactive_1","text":"Reactvie\u8981\u6c42\uff1a\u6240\u6709\u5728eventloop\u4e2d\u6267\u884c\u7684\u903b\u8f91\uff0c\u4e0d\u5141\u8bb8\u6709\u4efb\u4f55\u7684\u963b\u585e\u52a8\u4f5c\uff0c\u5305\u62ec\u4e0d\u9650\u4e8ewait\u3001sleep\u3001\u5de8\u5927\u5faa\u73af\u3001\u540c\u6b65\u67e5\u8be2DB\u7b49\u7b49\u3002 serviceComb\u5e95\u5c42\u662f\u57fa\u4e8evertx\u7684\uff0cvertx\u751f\u6001\u4e2d\u6709jdbc\u3001mq\u3001zooKeeper\u7b49\u7b49\u5404\u79cd\u4e30\u5bcc\u7ec4\u4ef6\u7684reactive\u9a71\u52a8\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u90fd\u53ef\u4ee5\u6ee1\u8db3\u8981\u6c42\u3002 \u4f46\u662f\u6709\u7684\u573a\u666f\u4e0b\uff0c\u786e\u5b9e\u6709\u7684\u540c\u6b65\u64cd\u4f5c\u65e0\u6cd5\u907f\u514d\uff0c\u6bd4\u5982\uff1a \u79c1\u6709\u7684\u5b89\u5168\u52a0\u56fa\u7684redis\uff0c\u53ea\u63d0\u4f9b\u4e86\u540c\u6b65\u9a71\u52a8 \u8f83\u590d\u6742\u7684\u4e1a\u52a1\u8fd0\u7b97 \u2026\u2026 \u6b64\u65f6\uff0c\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u540c\u6b65\u7684\u903b\u8f91\u62bd\u53d6\u51fa\u6765\u653e\u5230\u7ebf\u7a0b\u6c60\u4e2d\u53bb\u5904\u7406\uff0c\u800c\u5176\u4ed6\u90e8\u5206\u4ecd\u7136\u4f7f\u7528reactive\u7684\u6d41\u7a0b\u3002","title":"\u6df7\u5408Reactive\u673a\u5236"},{"location":"general-development/reactive/#reactive_2","text":"Producer\uff1a producer\u662f\u5426\u4f7f\u7528reactive\u4e0econsumer\u5982\u4f55\u8c03\u7528\uff0c\u6ca1\u6709\u4efb\u4f55\u8054\u7cfb \u5f53operation\u8fd4\u56de\u503c\u4e3aCompletableFuture\u7c7b\u578b\u65f6\uff0c\u9ed8\u8ba4\u6b64operation\u5de5\u4f5c\u4e8ereactive\u6a21\u5f0f\uff0c\u6b64\u65f6\u5982\u679c\u9700\u8981\u5f3a\u5236\u6b64operation\u5de5\u4f5c\u4e8e\u7ebf\u7a0b\u6c60\u6a21\u5f0f\uff0c\u9700\u8981\u5728microservice.yaml\u4e2d\u660e\u786e\u914d\u7f6e\uff1b\u5047\u8bbe\u67d0operation\uff0c\u5176schemaId\u4e3asid\uff0coperationId\u4e3aasyncQuery\uff0c\u5219\u9700\u8981\u8fdb\u884c\u4ee5\u4e0b\u914d\u7f6e\uff1a servicecomb: executors: Provider: sid.asyncQuery: cse.executor.groupThreadPool \u8fd9\u91cc\u7684cse.executor.groupThreadPool\u662fserviceComb\u5185\u7f6e\u7684\u9ed8\u8ba4\u7ebf\u7a0b\u6c60\uff0c\u7528\u6237\u53ef\u4ee5\u4efb\u610f\u6307\u5b9a\u4e3a\u81ea\u5df1\u7684\u5b9a\u5236\u7ebf\u7a0b\u6c60\u3002 Consumer\uff1a consumer\u662f\u5426\u4f7f\u7528reactive\u4e0eproducer\u5982\u4f55\u5b9e\u73b0\uff0c\u6ca1\u6709\u4efb\u4f55\u8054\u7cfb \u5f53\u524d\u53ea\u652f\u6301\u900f\u660eRPC\u6a21\u5f0f\uff0c\u4f7f\u7528JDK\u539f\u751f\u7684CompletableFuture\u6765\u627f\u8f7d\u6b64\u529f\u80fd completableFuture\u7684when\u3001then\u7b49\u7b49\u529f\u80fd\u90fd\u53ef\u76f4\u63a5\u4f7f\u7528 \u4f46\u662fcompletableFuture\u7684async\u7cfb\u5217\u529f\u80fd\uff0c\u5176\u5b9e\u662f\u53e6\u5916\u542f\u7ebf\u7a0b\u6c60\u6765\u6267\u884c\u529f\u80fd\uff0c\u4e0d\u5efa\u8bae\u4f7f\u7528 \u5173\u4e8eRxJava Observable\u7684\u652f\u6301\u540e\u7eed\u4f1a\u52a0\u5165 \u5173\u4e8eAsyncRestTemplate\u7684\u652f\u6301\u540e\u7eed\u4f1a\u52a0\u5165","title":"\u5173\u4e8ereactive\u7684\u4e00\u4e9b\u8bf4\u660e\uff1a"},{"location":"general-development/report-framework-version/","text":"\u6982\u5ff5\u9610\u8ff0 \u4e3a\u65b9\u4fbf\u6cbb\u7406\uff0c\u4f7f\u7528ServiceComb\u8fdb\u884c\u5f00\u53d1\uff0c\u4f1a\u5c06\u5f53\u524d\u4f7f\u7528\u7684ServiceComb\u7248\u672c\u53f7\u4e0a\u62a5\u81f3\u670d\u52a1\u4e2d\u5fc3\uff0c\u5e76\u4e14\u652f\u6301\u5176\u4ed6\u6846\u67b6\u96c6\u6210ServiceComb\u65f6\u4e0a\u62a5\u5176\u4ed6\u6846\u67b6\u7684\u7248\u672c\u53f7\u3002 \u793a\u4f8b\u4ee3\u7801 \u6b65\u9aa41 \u9996\u5148\u5b9e\u73b0\u5f00\u6e90\u6846\u67b6ServiceComb\u7684Versions\u63a5\u53e3\uff0c\u5b9e\u73b0\u8be5\u63a5\u53e3\u4e0b\u7684loadVersion\u65b9\u6cd5\uff0c\u5373\u53ef\u5c06\u7248\u672c\u540d\u79f0\u548c\u7248\u672c\u53f7\u4f5c\u4e3a\u952e\u503c\u5bf9\u8fd4\u56de public class MyVersion implements Versions{ @Override public Map String, String loadVersion() { Map String, String map = new HashMap (); map.put( My , this.getClass().getPackage().getImplementationVersion()); return map; } } \u6b65\u9aa42 \u4e3a\u4e86\u4f7f\u7528SPI\u673a\u5236\u8ba9\u8be5\u8fd4\u56de\u5bf9\u8c61\u88abServiceComb\u8bfb\u53d6\u5230\uff0c\u9700\u8981\u5728META-INF\u4e2d\u589e\u52a0services\u6587\u4ef6\u5939\uff0c\u5e76\u5728\u5176\u4e2d\u589e\u52a0\u4e00\u4e2a\u6587\u4ef6\uff0c\u4ee5\u6240\u5b9e\u73b0\u63a5\u53e3x.x.x.Versions(\u5e26\u5305\u540d)\u4e3a\u540d\uff0c\u4ee5\u5177\u4f53\u5b9e\u73b0\u7c7bx.x.x.CseVersion(\u5e26\u5305\u540d)\u4e3a\u5185\u5bb9 \u5f53\u670d\u52a1\u6ce8\u518c\u5230ServiceCenter\u65f6\uff0c\u4f1a\u643a\u5e26\u6240\u6709\u7248\u672c\u53f7\u4fe1\u606f { serviceId : xxx , appId : xxx , registerBy : SDK , framework : { name : servicecomb-java-chassis , version : My:x.x.x;ServiceComb:x.x.x } } \u5907\u6ce8 \u4e0a\u62a5\u7684\u7248\u672c\u53f7\u53ef\u4ee5\u81ea\u5b9a\u4e49\uff0c\u4e5f\u53ef\u4ee5\u4ecepom\u6216jar\u5305\u7684MANIFEST.MF\u91cc\u8bfb\u53d6\uff0c\u5982\u679c\u4f7f\u7528.class.getPackage().getImplementationVersion()\u4eceMANIFEST.MF\u83b7\u53d6\u7248\u672c\u53f7\uff0c\u5219\u9700\u8981\u5728pom\u6587\u4ef6\u4e2d\u628amaven-jar-plugin\u7684archive\u5143\u7d20addDefaultImplementationEntries\u548caddDefaultSpecificationEntries\u8bbe\u7f6e\u4e3atrue plugin groupId org.apache.maven.plugins /groupId artifactId maven-jar-plugin /artifactId configuration archive manifest addDefaultImplementationEntries true /addDefaultImplementationEntries addDefaultSpecificationEntries true /addDefaultSpecificationEntries /manifest /archive /configuration /plugin","title":"Report framework version"},{"location":"general-development/report-framework-version/#_1","text":"\u4e3a\u65b9\u4fbf\u6cbb\u7406\uff0c\u4f7f\u7528ServiceComb\u8fdb\u884c\u5f00\u53d1\uff0c\u4f1a\u5c06\u5f53\u524d\u4f7f\u7528\u7684ServiceComb\u7248\u672c\u53f7\u4e0a\u62a5\u81f3\u670d\u52a1\u4e2d\u5fc3\uff0c\u5e76\u4e14\u652f\u6301\u5176\u4ed6\u6846\u67b6\u96c6\u6210ServiceComb\u65f6\u4e0a\u62a5\u5176\u4ed6\u6846\u67b6\u7684\u7248\u672c\u53f7\u3002","title":"\u6982\u5ff5\u9610\u8ff0"},{"location":"general-development/report-framework-version/#_2","text":"\u6b65\u9aa41 \u9996\u5148\u5b9e\u73b0\u5f00\u6e90\u6846\u67b6ServiceComb\u7684Versions\u63a5\u53e3\uff0c\u5b9e\u73b0\u8be5\u63a5\u53e3\u4e0b\u7684loadVersion\u65b9\u6cd5\uff0c\u5373\u53ef\u5c06\u7248\u672c\u540d\u79f0\u548c\u7248\u672c\u53f7\u4f5c\u4e3a\u952e\u503c\u5bf9\u8fd4\u56de public class MyVersion implements Versions{ @Override public Map String, String loadVersion() { Map String, String map = new HashMap (); map.put( My , this.getClass().getPackage().getImplementationVersion()); return map; } } \u6b65\u9aa42 \u4e3a\u4e86\u4f7f\u7528SPI\u673a\u5236\u8ba9\u8be5\u8fd4\u56de\u5bf9\u8c61\u88abServiceComb\u8bfb\u53d6\u5230\uff0c\u9700\u8981\u5728META-INF\u4e2d\u589e\u52a0services\u6587\u4ef6\u5939\uff0c\u5e76\u5728\u5176\u4e2d\u589e\u52a0\u4e00\u4e2a\u6587\u4ef6\uff0c\u4ee5\u6240\u5b9e\u73b0\u63a5\u53e3x.x.x.Versions(\u5e26\u5305\u540d)\u4e3a\u540d\uff0c\u4ee5\u5177\u4f53\u5b9e\u73b0\u7c7bx.x.x.CseVersion(\u5e26\u5305\u540d)\u4e3a\u5185\u5bb9 \u5f53\u670d\u52a1\u6ce8\u518c\u5230ServiceCenter\u65f6\uff0c\u4f1a\u643a\u5e26\u6240\u6709\u7248\u672c\u53f7\u4fe1\u606f { serviceId : xxx , appId : xxx , registerBy : SDK , framework : { name : servicecomb-java-chassis , version : My:x.x.x;ServiceComb:x.x.x } } \u5907\u6ce8 \u4e0a\u62a5\u7684\u7248\u672c\u53f7\u53ef\u4ee5\u81ea\u5b9a\u4e49\uff0c\u4e5f\u53ef\u4ee5\u4ecepom\u6216jar\u5305\u7684MANIFEST.MF\u91cc\u8bfb\u53d6\uff0c\u5982\u679c\u4f7f\u7528.class.getPackage().getImplementationVersion()\u4eceMANIFEST.MF\u83b7\u53d6\u7248\u672c\u53f7\uff0c\u5219\u9700\u8981\u5728pom\u6587\u4ef6\u4e2d\u628amaven-jar-plugin\u7684archive\u5143\u7d20addDefaultImplementationEntries\u548caddDefaultSpecificationEntries\u8bbe\u7f6e\u4e3atrue plugin groupId org.apache.maven.plugins /groupId artifactId maven-jar-plugin /artifactId configuration archive manifest addDefaultImplementationEntries true /addDefaultImplementationEntries addDefaultSpecificationEntries true /addDefaultSpecificationEntries /manifest /archive /configuration /plugin","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"general-development/secret-field/","text":"\u573a\u666f\u63cf\u8ff0 \u7531\u4e8eHTTP\u534f\u8bae\u7684\u975e\u5b89\u5168\u6027\uff0c\u5728\u7f51\u7edc\u4e2d\u4f20\u8f93\u7684\u6570\u636e\u80fd\u8f7b\u6613\u88ab\u5404\u79cd\u6293\u5305\u5de5\u5177\u76d1\u542c\u3002\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u4e1a\u52a1\u5bf9\u5e94\u7528\u6216\u670d\u52a1\u95f4\u4f20\u8f93\u7684\u654f\u611f\u6570\u636e\u6709\u8f83\u9ad8\u7684\u5b89\u5168\u8981\u6c42\uff0c\u8fd9\u7c7b\u6570\u636e\u9700\u8981\u7279\u522b\u7684\u52a0\u5bc6\u4fdd\u62a4\uff08\u4e1a\u52a1\u4e0d\u540c\u5bf9\u7b97\u6cd5\u8981\u6c42\u4e0d\u540c\uff09\uff0c\u8fd9\u6837\u5373\u4f7f\u5185\u5bb9\u88ab\u622a\u83b7\uff0c\u4e5f\u53ef\u4ee5\u4fdd\u62a4\u5176\u4e2d\u7684\u654f\u611f\u6570\u636e\u4e0d\u88ab\u8f7b\u6613\u83b7\u53d6\u3002 \u89e3\u51b3\u65b9\u6cd5 \u670d\u52a1\u95f4\u7684\u901a\u4fe1\u79bb\u5f00\u4e0d\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\uff0c\u5bf9\u4e8e\u4e0a\u8ff0\u7684\u573a\u666f\uff0c\u4f7f\u7528jackson\u7c7b\u5e93\u63d0\u4f9b\u7684 @JsonSerialize \u548c @JsonDeserialize \u6ce8\u89e3\u529f\u80fd\uff0c\u5bf9\u654f\u611f\u6570\u636e\u5b9a\u5236\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u65b9\u6cd5\uff0c\u5e76\u5728\u5b9a\u5236\u5316\u7684\u65b9\u6cd5\u4e2d\u5b9e\u73b0\u52a0\u89e3\u5bc6\u529f\u80fd\u3002 \u6ce8\u89e3\u63cf\u8ff0\u53c2\u8003\uff1a\u5728 https://github.com/FasterXML/jackson-databind/wiki \u4e2d\u67e5\u627e\u5bf9\u5e94\u7248\u672c\u7684Javadocs \u793a\u4f8b 1.\u5bf9 Person \u5bf9\u8c61\u4e2d\u7684 name \u5c5e\u6027\uff0c\u901a\u8fc7\u6ce8\u89e3\u8bbe\u5b9a\u4f7f\u7528\u7279\u5b9a\u7684\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u65b9\u6cd5\u3002\u6ce8\uff1a\u6b64\u5904\u6f14\u793a\u5982\u4f55\u4f7f\u7528\uff0c\u4e0d\u6d89\u53ca\u52a0\u89e3\u5bc6\u76f8\u5173\u3002 public class Person { private int usrId; //\u6307\u5b9a\u6570\u636e name \u4f7f\u7528\u7279\u5b9a\u7684\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u65b9\u6cd5 @JsonSerialize(using = SecretSerialize.class) @JsonDeserialize(using = SecretDeserialize.class) private String name; public int getUsrId() { return usrId; } public void setUsrId(int usrId) { this.usrId = usrId; } public String getName() { return name; } public void setName(String name) { this.name = name; } @Override public String toString() { return Person{ + usrId= + usrId + , name=' + name + '\\'' + '}'; } } 2.\u5b9a\u4e49 SecretSerialize \u7c7b \u548c SecretDeserialize \u7c7b\uff0c\u5e76\u91cd\u5199\u5176\u65b9\u6cd5 public class SecretSerialize extends JsonSerializer String { //\u91cd\u5199 name \u7684\u5e8f\u5217\u5316\u65b9\u6cd5\uff0c\u53ef\u5728\u6b64\u5b9e\u73b0\u7528\u6237\u5b9a\u5236\u7684\u52a0\u89e3\u5bc6\u6216\u5176\u4ed6\u64cd\u4f5c @Override public void serialize(String value, JsonGenerator gen, SerializerProvider serializers) throws IOException, JsonProcessingException { //\u5728\u6570\u636e name \u540e\u589e\u52a04\u4e2a\u7279\u5b9a\u5b57\u7b26 value = value + #@ ; //\u6267\u884c\u5e8f\u5217\u5316\u64cd\u4f5c gen.writeString(value); } } public class SecretDeserialize extends JsonDeserializer String { //\u91cd\u5199 name \u7684\u53cd\u5e8f\u5217\u5316\u65b9\u6cd5\uff0c\u4e0eserialize\u5e8f\u5217\u5316\u65b9\u6cd5\u5339\u914d\uff0c\u6309\u7528\u6237\u5b9a\u5236\u7684\u89c4\u5219\u83b7\u53d6\u771f\u5b9e\u6570\u636e @Override public String deserialize(JsonParser p, DeserializationContext ctxt) throws IOException, JsonProcessingException { //\u83b7\u53d6\u53cd\u5e8f\u5217\u5316\u6570\u636e\uff0c\u9664\u53bb4\u4e2a\u7279\u5b9a\u5b57\u7b26\uff0c\u83b7\u53d6\u771f\u5b9e\u7684 name String value = p.getValueAsString(); value = value.substring(0, value.length() - 4); return value; } }","title":"Secret field"},{"location":"general-development/secret-field/#_1","text":"\u7531\u4e8eHTTP\u534f\u8bae\u7684\u975e\u5b89\u5168\u6027\uff0c\u5728\u7f51\u7edc\u4e2d\u4f20\u8f93\u7684\u6570\u636e\u80fd\u8f7b\u6613\u88ab\u5404\u79cd\u6293\u5305\u5de5\u5177\u76d1\u542c\u3002\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u4e1a\u52a1\u5bf9\u5e94\u7528\u6216\u670d\u52a1\u95f4\u4f20\u8f93\u7684\u654f\u611f\u6570\u636e\u6709\u8f83\u9ad8\u7684\u5b89\u5168\u8981\u6c42\uff0c\u8fd9\u7c7b\u6570\u636e\u9700\u8981\u7279\u522b\u7684\u52a0\u5bc6\u4fdd\u62a4\uff08\u4e1a\u52a1\u4e0d\u540c\u5bf9\u7b97\u6cd5\u8981\u6c42\u4e0d\u540c\uff09\uff0c\u8fd9\u6837\u5373\u4f7f\u5185\u5bb9\u88ab\u622a\u83b7\uff0c\u4e5f\u53ef\u4ee5\u4fdd\u62a4\u5176\u4e2d\u7684\u654f\u611f\u6570\u636e\u4e0d\u88ab\u8f7b\u6613\u83b7\u53d6\u3002","title":"\u573a\u666f\u63cf\u8ff0"},{"location":"general-development/secret-field/#_2","text":"\u670d\u52a1\u95f4\u7684\u901a\u4fe1\u79bb\u5f00\u4e0d\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\uff0c\u5bf9\u4e8e\u4e0a\u8ff0\u7684\u573a\u666f\uff0c\u4f7f\u7528jackson\u7c7b\u5e93\u63d0\u4f9b\u7684 @JsonSerialize \u548c @JsonDeserialize \u6ce8\u89e3\u529f\u80fd\uff0c\u5bf9\u654f\u611f\u6570\u636e\u5b9a\u5236\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u65b9\u6cd5\uff0c\u5e76\u5728\u5b9a\u5236\u5316\u7684\u65b9\u6cd5\u4e2d\u5b9e\u73b0\u52a0\u89e3\u5bc6\u529f\u80fd\u3002 \u6ce8\u89e3\u63cf\u8ff0\u53c2\u8003\uff1a\u5728 https://github.com/FasterXML/jackson-databind/wiki \u4e2d\u67e5\u627e\u5bf9\u5e94\u7248\u672c\u7684Javadocs","title":"\u89e3\u51b3\u65b9\u6cd5"},{"location":"general-development/secret-field/#_3","text":"1.\u5bf9 Person \u5bf9\u8c61\u4e2d\u7684 name \u5c5e\u6027\uff0c\u901a\u8fc7\u6ce8\u89e3\u8bbe\u5b9a\u4f7f\u7528\u7279\u5b9a\u7684\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u65b9\u6cd5\u3002\u6ce8\uff1a\u6b64\u5904\u6f14\u793a\u5982\u4f55\u4f7f\u7528\uff0c\u4e0d\u6d89\u53ca\u52a0\u89e3\u5bc6\u76f8\u5173\u3002 public class Person { private int usrId; //\u6307\u5b9a\u6570\u636e name \u4f7f\u7528\u7279\u5b9a\u7684\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u65b9\u6cd5 @JsonSerialize(using = SecretSerialize.class) @JsonDeserialize(using = SecretDeserialize.class) private String name; public int getUsrId() { return usrId; } public void setUsrId(int usrId) { this.usrId = usrId; } public String getName() { return name; } public void setName(String name) { this.name = name; } @Override public String toString() { return Person{ + usrId= + usrId + , name=' + name + '\\'' + '}'; } } 2.\u5b9a\u4e49 SecretSerialize \u7c7b \u548c SecretDeserialize \u7c7b\uff0c\u5e76\u91cd\u5199\u5176\u65b9\u6cd5 public class SecretSerialize extends JsonSerializer String { //\u91cd\u5199 name \u7684\u5e8f\u5217\u5316\u65b9\u6cd5\uff0c\u53ef\u5728\u6b64\u5b9e\u73b0\u7528\u6237\u5b9a\u5236\u7684\u52a0\u89e3\u5bc6\u6216\u5176\u4ed6\u64cd\u4f5c @Override public void serialize(String value, JsonGenerator gen, SerializerProvider serializers) throws IOException, JsonProcessingException { //\u5728\u6570\u636e name \u540e\u589e\u52a04\u4e2a\u7279\u5b9a\u5b57\u7b26 value = value + #@ ; //\u6267\u884c\u5e8f\u5217\u5316\u64cd\u4f5c gen.writeString(value); } } public class SecretDeserialize extends JsonDeserializer String { //\u91cd\u5199 name \u7684\u53cd\u5e8f\u5217\u5316\u65b9\u6cd5\uff0c\u4e0eserialize\u5e8f\u5217\u5316\u65b9\u6cd5\u5339\u914d\uff0c\u6309\u7528\u6237\u5b9a\u5236\u7684\u89c4\u5219\u83b7\u53d6\u771f\u5b9e\u6570\u636e @Override public String deserialize(JsonParser p, DeserializationContext ctxt) throws IOException, JsonProcessingException { //\u83b7\u53d6\u53cd\u5e8f\u5217\u5316\u6570\u636e\uff0c\u9664\u53bb4\u4e2a\u7279\u5b9a\u5b57\u7b26\uff0c\u83b7\u53d6\u771f\u5b9e\u7684 name String value = p.getValueAsString(); value = value.substring(0, value.length() - 4); return value; } }","title":"\u793a\u4f8b"},{"location":"general-development/service-information-printer/","text":"\u670d\u52a1\u4fe1\u606f\u6253\u5370 \u6982\u5ff5\u9610\u8ff0 \u4e3a\u4e86\u4f7f\u7528\u6237\u53ef\u4ee5\u66f4\u5feb\u6377\uff0c\u65b9\u4fbf\u7684\u83b7\u5f97\u670d\u52a1\u4fe1\u606f\uff0c\u5c06\u670d\u52a1\u4fe1\u606f\u8fdb\u884c\u6574\u7406\uff0c\u5e76\u5728\u65e5\u5fd7\u4e2d\u6253\u5370\u51fa\u6765 \u6548\u679c \u4e0d\u8bba\u670d\u52a1\u521b\u5efa\u6210\u529f\u4e0e\u5426\uff0c\u670d\u52a1\u4fe1\u606f\u90fd\u4f1a\u5728\u65e5\u5fd7\u4fe1\u606f\u7684\u672b\u5c3e\u88ab\u81ea\u52a8\u6253\u51fa\uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u641c\u7d22\"Service Information is shown below\"\u8fdb\u884c\u5b9a\u4f4d 2019-08-21 16:37:14,859 [INFO] Service information is shown below: service center: [http://127.0.0.1:30100] config center: [http://127.0.0.1:30113] AppID: Restful-Service-HelloWorld ServiceName: restful_provider Version: 0.0.1 Environment: production ServiceID: a3344e9ad4557f883b36d7f53e33306fbc0a54ad InstanceID; e0765a8ec3ee11e9910d0255ac105780 org.apache.servicecomb.core.SCBEngine$1.afterRegistryInstance(SCBEngine.java:243) \u6269\u5c55 \u76f8\u5173\u7684\u63a5\u53e3 \u63a5\u53e3BootUpInformationCollector collect(): \u8fd4\u56de\u4e00\u4e2astring\uff0c\u4e5f\u5c31\u662f\u670d\u52a1\u4e2d\u9700\u8981\u6253\u5370\u7684\u4fe1\u606f getOrder(): \u8fd4\u56deBootUpInformationCollector\u5b9e\u73b0\u7c7b\u7684\u4f18\u5148\u7ea7\uff0c\u6570\u5b57\u8d8a\u5c0f\u4f18\u5148\u7ea7\u8d8a\u9ad8 \u7528\u6237\u6269\u5c55 \u7528\u6237\u5982\u679c\u9700\u8981\u5bf9\u6253\u5370\u4fe1\u606f\u8fdb\u884c\u8fdb\u4e00\u6b65\u6269\u5c55\uff0c\u9700\u8981 1. \u6839\u636eBootUpInformationCollector\u521b\u5efa\u65b0\u7684\u7c7b\uff0c\u5e76\u8d4b\u4e88\u5408\u9002\u7684order\u3002 2. \u521b\u5efaSPI\u6587\u4ef6 \u6837\u4f8b \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5b9e\u73b0\u7c7bHelloCollector public class HelloCollector implements BootUpInformationCollector { @Override public String collect() { return Hello! ; } @Override public int getOrder() { return 5; } } \u7531\u4e8eorder\u662f5\uff0c\u6240\u4ee5\u8fd9\u4e2a\u7c7b\u4f1a\u5728\u5730\u5740\u4fe1\u606f\uff08order 0\uff09\u548c\u670d\u52a1\u4fe1\u606f\uff08order 200\uff09\u4e4b\u95f4\u88ab\u6253\u51fa 2. \u521b\u5efaSPI\u6587\u4ef6 \u5728resources/META-INF/services\u4e2d\u521b\u5efa\u65b0\u7684SPI\u6587\u4ef6 \u540d\u5b57\uff1aorg.apache.servicecomb.core.bootup.BootUpInformationCollector \u5185\u5bb9\uff1a(HelloCollector\u7684\u7c7b\u540d) 3. \u8fd0\u884c\u6548\u679c 2019-08-21 16:37:14,859 [INFO] Service information is shown below: service center: [http://127.0.0.1:30100] config center: [http://127.0.0.1:30113] Hello! AppID: Restful-Service-HelloWorld ServiceName: restful_provider Version: 0.0.1 Environment: production ServiceID: a3344e9ad4557f883b36d7f53e33306fbc0a54ad InstanceID; e0765a8ec3ee11e9910d0255ac105780 org.apache.servicecomb.core.SCBEngine$1.afterRegistryInstance(SCBEngine.java:243)","title":"\u670d\u52a1\u4fe1\u606f\u6253\u5370"},{"location":"general-development/service-information-printer/#_1","text":"","title":"\u670d\u52a1\u4fe1\u606f\u6253\u5370"},{"location":"general-development/service-information-printer/#_2","text":"\u4e3a\u4e86\u4f7f\u7528\u6237\u53ef\u4ee5\u66f4\u5feb\u6377\uff0c\u65b9\u4fbf\u7684\u83b7\u5f97\u670d\u52a1\u4fe1\u606f\uff0c\u5c06\u670d\u52a1\u4fe1\u606f\u8fdb\u884c\u6574\u7406\uff0c\u5e76\u5728\u65e5\u5fd7\u4e2d\u6253\u5370\u51fa\u6765","title":"\u6982\u5ff5\u9610\u8ff0"},{"location":"general-development/service-information-printer/#_3","text":"\u4e0d\u8bba\u670d\u52a1\u521b\u5efa\u6210\u529f\u4e0e\u5426\uff0c\u670d\u52a1\u4fe1\u606f\u90fd\u4f1a\u5728\u65e5\u5fd7\u4fe1\u606f\u7684\u672b\u5c3e\u88ab\u81ea\u52a8\u6253\u51fa\uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u641c\u7d22\"Service Information is shown below\"\u8fdb\u884c\u5b9a\u4f4d 2019-08-21 16:37:14,859 [INFO] Service information is shown below: service center: [http://127.0.0.1:30100] config center: [http://127.0.0.1:30113] AppID: Restful-Service-HelloWorld ServiceName: restful_provider Version: 0.0.1 Environment: production ServiceID: a3344e9ad4557f883b36d7f53e33306fbc0a54ad InstanceID; e0765a8ec3ee11e9910d0255ac105780 org.apache.servicecomb.core.SCBEngine$1.afterRegistryInstance(SCBEngine.java:243)","title":"\u6548\u679c"},{"location":"general-development/service-information-printer/#_4","text":"","title":"\u6269\u5c55"},{"location":"general-development/service-information-printer/#_5","text":"\u63a5\u53e3BootUpInformationCollector collect(): \u8fd4\u56de\u4e00\u4e2astring\uff0c\u4e5f\u5c31\u662f\u670d\u52a1\u4e2d\u9700\u8981\u6253\u5370\u7684\u4fe1\u606f getOrder(): \u8fd4\u56deBootUpInformationCollector\u5b9e\u73b0\u7c7b\u7684\u4f18\u5148\u7ea7\uff0c\u6570\u5b57\u8d8a\u5c0f\u4f18\u5148\u7ea7\u8d8a\u9ad8","title":"\u76f8\u5173\u7684\u63a5\u53e3"},{"location":"general-development/service-information-printer/#_6","text":"\u7528\u6237\u5982\u679c\u9700\u8981\u5bf9\u6253\u5370\u4fe1\u606f\u8fdb\u884c\u8fdb\u4e00\u6b65\u6269\u5c55\uff0c\u9700\u8981 1. \u6839\u636eBootUpInformationCollector\u521b\u5efa\u65b0\u7684\u7c7b\uff0c\u5e76\u8d4b\u4e88\u5408\u9002\u7684order\u3002 2. \u521b\u5efaSPI\u6587\u4ef6","title":"\u7528\u6237\u6269\u5c55"},{"location":"general-development/service-information-printer/#_7","text":"\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5b9e\u73b0\u7c7bHelloCollector public class HelloCollector implements BootUpInformationCollector { @Override public String collect() { return Hello! ; } @Override public int getOrder() { return 5; } } \u7531\u4e8eorder\u662f5\uff0c\u6240\u4ee5\u8fd9\u4e2a\u7c7b\u4f1a\u5728\u5730\u5740\u4fe1\u606f\uff08order 0\uff09\u548c\u670d\u52a1\u4fe1\u606f\uff08order 200\uff09\u4e4b\u95f4\u88ab\u6253\u51fa 2. \u521b\u5efaSPI\u6587\u4ef6 \u5728resources/META-INF/services\u4e2d\u521b\u5efa\u65b0\u7684SPI\u6587\u4ef6 \u540d\u5b57\uff1aorg.apache.servicecomb.core.bootup.BootUpInformationCollector \u5185\u5bb9\uff1a(HelloCollector\u7684\u7c7b\u540d) 3. \u8fd0\u884c\u6548\u679c 2019-08-21 16:37:14,859 [INFO] Service information is shown below: service center: [http://127.0.0.1:30100] config center: [http://127.0.0.1:30113] Hello! AppID: Restful-Service-HelloWorld ServiceName: restful_provider Version: 0.0.1 Environment: production ServiceID: a3344e9ad4557f883b36d7f53e33306fbc0a54ad InstanceID; e0765a8ec3ee11e9910d0255ac105780 org.apache.servicecomb.core.SCBEngine$1.afterRegistryInstance(SCBEngine.java:243)","title":"\u6837\u4f8b"},{"location":"general-development/shutdown/","text":"\u4f18\u96c5\u505c\u673a ServiceComb\u662f\u901a\u8fc7JDK\u7684ShutdownHook\u6765\u5b8c\u6210\u4f18\u96c5\u505c\u673a\u7684\u3002 \u4f7f\u7528\u573a\u666f \u4f18\u96c5\u505c\u673a\u53ef\u4ee5\u89e3\u51b3\u4ee5\u4e0b\u573a\u666f\uff1a * KILL PID * \u5e94\u7528\u610f\u5916\u81ea\u52a8\u9000\u51fa\uff08System.exit(n)\uff09 \u4f18\u96c5\u505c\u673a\u89e3\u51b3\u4e0d\u4e86\u4ee5\u4e0b\u573a\u666f\uff1a * KILL -9 PID \u6216 taskkill /f /pid \u6548\u679c \u89e6\u53d1\u4f18\u96c5\u505c\u673a\u65f6\uff1a * \u670d\u52a1\u63d0\u4f9b\u8005\uff1a * \u6807\u8bb0\u5f53\u524d\u670d\u52a1\u72b6\u6001\u4e3aSTOPPING\uff0c\u4e0d\u63a5\u53d7\u65b0\u7684\u5ba2\u6237\u7aef\u8bf7\u6c42\uff0c\u65b0\u7684\u5ba2\u6237\u7aef\u8bbf\u95ee\u8bf7\u6c42\u4f1a\u5728\u5ba2\u6237\u7aef\u76f4\u63a5\u62a5\u9519\uff0c\u5ba2\u6237\u7aef\u914d\u5408\u91cd\u8bd5\u673a\u5236\u53ef\u91cd\u8bd5\u5176\u4ed6\u5b9e\u4f8b\uff1b * \u7b49\u5f85\u5f53\u524d\u5df2\u8fd0\u884c\u7ebf\u7a0b\u6267\u884c\u5b8c\u6bd5\uff0c\u5982\u679c\u8bbe\u7f6e\u4e86provider\u7aef\u8d85\u65f6\uff0c\u8d85\u65f6\u5219\u5f3a\u5236\u5173\u95ed\uff1b * \u670d\u52a1\u6d88\u8d39\u8005\uff1a * \u6807\u8bb0\u5f53\u524d\u670d\u52a1\u72b6\u6001\u4e3aSTOPPING\uff0c\u76f4\u63a5\u62d2\u7edd\u65b0\u7684\u8c03\u7528\u8bf7\u6c42\uff1b * \u7b49\u5f85\u5f53\u524d\u5df2\u53d1\u9001\u8bf7\u6c42\u7684\u54cd\u5e94\uff0c\u5982\u679c\u8d85\u8fc7\u5ba2\u6237\u7aef\u63a5\u6536\u54cd\u5e94\u7684\u8d85\u65f6\u65f6\u95f4\uff08\u9ed8\u8ba430\u79d2\uff09\uff0c\u5219\u5f3a\u5236\u5173\u95ed\uff1b \u539f\u7406 \u89e6\u53d1\u4f18\u96c5\u505c\u673a\u65f6\uff0c\u4f1a\u4f9d\u6b21\u6267\u884c\u4ee5\u4e0b\u6b65\u9aa4\uff1a 1. \u7ed9\u6240\u6709listener\u4e0b\u53d1BEFORE_CLOSE\u4e8b\u4ef6\uff0c\u901a\u77e5listener\u5904\u7406\u5bf9\u5e94\u4e8b\u4ef6\uff1b 2. \u5c06\u5f53\u524d\u670d\u52a1\u72b6\u6001\u6807\u8bb0\u4e3aSTOPPING\uff1b 3. \u4ece\u670d\u52a1\u4e2d\u5fc3\u6ce8\u9500\u5f53\u524d\u5fae\u670d\u52a1\u5b9e\u4f8b\uff0c\u5e76\u5173\u95edregistry\u5bf9\u5e94vertx\uff1b 4. \u7b49\u5f85\u6240\u6709\u5f53\u524d\u5df2\u5b58\u5728invocation\u8c03\u7528\u5b8c\u6210\uff1b 5. \u5173\u95edconfig-center\u548ctransport\u5bf9\u5e94vertx\uff1b 6. \u7ed9\u6240\u6709listener\u4e0b\u53d1AFTER_CLOSE\u4e8b\u4ef6\uff0c\u901a\u77e5listener\u5904\u7406\u5bf9\u5e94\u4e8b\u4ef6\uff1b 7. \u5c06\u5f53\u524d\u670d\u52a1\u72b6\u6001\u6807\u8bb0\u4e3aDOWN\uff1b\u4f18\u96c5\u505c\u673a\u7ed3\u675f\uff1b","title":"\u4f18\u96c5\u505c\u673a"},{"location":"general-development/shutdown/#_1","text":"ServiceComb\u662f\u901a\u8fc7JDK\u7684ShutdownHook\u6765\u5b8c\u6210\u4f18\u96c5\u505c\u673a\u7684\u3002","title":"\u4f18\u96c5\u505c\u673a"},{"location":"general-development/shutdown/#_2","text":"\u4f18\u96c5\u505c\u673a\u53ef\u4ee5\u89e3\u51b3\u4ee5\u4e0b\u573a\u666f\uff1a * KILL PID * \u5e94\u7528\u610f\u5916\u81ea\u52a8\u9000\u51fa\uff08System.exit(n)\uff09 \u4f18\u96c5\u505c\u673a\u89e3\u51b3\u4e0d\u4e86\u4ee5\u4e0b\u573a\u666f\uff1a * KILL -9 PID \u6216 taskkill /f /pid","title":"\u4f7f\u7528\u573a\u666f"},{"location":"general-development/shutdown/#_3","text":"\u89e6\u53d1\u4f18\u96c5\u505c\u673a\u65f6\uff1a * \u670d\u52a1\u63d0\u4f9b\u8005\uff1a * \u6807\u8bb0\u5f53\u524d\u670d\u52a1\u72b6\u6001\u4e3aSTOPPING\uff0c\u4e0d\u63a5\u53d7\u65b0\u7684\u5ba2\u6237\u7aef\u8bf7\u6c42\uff0c\u65b0\u7684\u5ba2\u6237\u7aef\u8bbf\u95ee\u8bf7\u6c42\u4f1a\u5728\u5ba2\u6237\u7aef\u76f4\u63a5\u62a5\u9519\uff0c\u5ba2\u6237\u7aef\u914d\u5408\u91cd\u8bd5\u673a\u5236\u53ef\u91cd\u8bd5\u5176\u4ed6\u5b9e\u4f8b\uff1b * \u7b49\u5f85\u5f53\u524d\u5df2\u8fd0\u884c\u7ebf\u7a0b\u6267\u884c\u5b8c\u6bd5\uff0c\u5982\u679c\u8bbe\u7f6e\u4e86provider\u7aef\u8d85\u65f6\uff0c\u8d85\u65f6\u5219\u5f3a\u5236\u5173\u95ed\uff1b * \u670d\u52a1\u6d88\u8d39\u8005\uff1a * \u6807\u8bb0\u5f53\u524d\u670d\u52a1\u72b6\u6001\u4e3aSTOPPING\uff0c\u76f4\u63a5\u62d2\u7edd\u65b0\u7684\u8c03\u7528\u8bf7\u6c42\uff1b * \u7b49\u5f85\u5f53\u524d\u5df2\u53d1\u9001\u8bf7\u6c42\u7684\u54cd\u5e94\uff0c\u5982\u679c\u8d85\u8fc7\u5ba2\u6237\u7aef\u63a5\u6536\u54cd\u5e94\u7684\u8d85\u65f6\u65f6\u95f4\uff08\u9ed8\u8ba430\u79d2\uff09\uff0c\u5219\u5f3a\u5236\u5173\u95ed\uff1b","title":"\u6548\u679c"},{"location":"general-development/shutdown/#_4","text":"\u89e6\u53d1\u4f18\u96c5\u505c\u673a\u65f6\uff0c\u4f1a\u4f9d\u6b21\u6267\u884c\u4ee5\u4e0b\u6b65\u9aa4\uff1a 1. \u7ed9\u6240\u6709listener\u4e0b\u53d1BEFORE_CLOSE\u4e8b\u4ef6\uff0c\u901a\u77e5listener\u5904\u7406\u5bf9\u5e94\u4e8b\u4ef6\uff1b 2. \u5c06\u5f53\u524d\u670d\u52a1\u72b6\u6001\u6807\u8bb0\u4e3aSTOPPING\uff1b 3. \u4ece\u670d\u52a1\u4e2d\u5fc3\u6ce8\u9500\u5f53\u524d\u5fae\u670d\u52a1\u5b9e\u4f8b\uff0c\u5e76\u5173\u95edregistry\u5bf9\u5e94vertx\uff1b 4. \u7b49\u5f85\u6240\u6709\u5f53\u524d\u5df2\u5b58\u5728invocation\u8c03\u7528\u5b8c\u6210\uff1b 5. \u5173\u95edconfig-center\u548ctransport\u5bf9\u5e94vertx\uff1b 6. \u7ed9\u6240\u6709listener\u4e0b\u53d1AFTER_CLOSE\u4e8b\u4ef6\uff0c\u901a\u77e5listener\u5904\u7406\u5bf9\u5e94\u4e8b\u4ef6\uff1b 7. \u5c06\u5f53\u524d\u670d\u52a1\u72b6\u6001\u6807\u8bb0\u4e3aDOWN\uff1b\u4f18\u96c5\u505c\u673a\u7ed3\u675f\uff1b","title":"\u539f\u7406"},{"location":"general-development/thread-model/","text":"\u7ebf\u7a0b\u6a21\u578b \u6982\u5ff5\u9610\u8ff0 \u672c\u5c0f\u8282\u4e3b\u8981\u4ecb\u7ecdserviceComb\u5fae\u670d\u52a1\u7684\u5b8c\u6574\u7ebf\u7a0b\u6a21\u578b \u540c\u6b65\u6a21\u5f0f\u4e0b\u7684\u7ebf\u7a0b\u6a21\u578b reactive\u6a21\u5f0f\u4e0b\u7684\u7ebf\u7a0b\u6a21\u578b \u7ebf\u7a0b\u76f8\u5173\u914d\u7f6e\uff1a REST over Vertx Highway \u540c\u6b65\u6a21\u5f0f\u4e0b\u670d\u52a1\u7aef\u4e1a\u52a1\u7ebf\u7a0b\u6c60","title":"\u7ebf\u7a0b\u6a21\u578b"},{"location":"general-development/thread-model/#_1","text":"","title":"\u7ebf\u7a0b\u6a21\u578b"},{"location":"general-development/thread-model/#_2","text":"\u672c\u5c0f\u8282\u4e3b\u8981\u4ecb\u7ecdserviceComb\u5fae\u670d\u52a1\u7684\u5b8c\u6574\u7ebf\u7a0b\u6a21\u578b","title":"\u6982\u5ff5\u9610\u8ff0"},{"location":"general-development/thread-model/#_3","text":"","title":"\u540c\u6b65\u6a21\u5f0f\u4e0b\u7684\u7ebf\u7a0b\u6a21\u578b"},{"location":"general-development/thread-model/#reactive","text":"\u7ebf\u7a0b\u76f8\u5173\u914d\u7f6e\uff1a REST over Vertx Highway \u540c\u6b65\u6a21\u5f0f\u4e0b\u670d\u52a1\u7aef\u4e1a\u52a1\u7ebf\u7a0b\u6c60","title":"reactive\u6a21\u5f0f\u4e0b\u7684\u7ebf\u7a0b\u6a21\u578b"},{"location":"general-development/types/","text":"","title":"Types"},{"location":"general-development/upload-download/","text":"\u901a\u8fc7\u6d4f\u89c8\u5668\u4e0a\u4f20\u4e0b\u8f7d\u6587\u4ef6\uff0c\u662f\u975e\u5e38\u666e\u904d\u7684\u5e94\u7528\u573a\u666f\u3002java-chassis\u57fa\u4e8eREST\u63d0\u4f9b\u4e86\u4e0a\u4f20\u4e0b\u8f7d\u529f\u80fd\uff1a \u5728\u5b9a\u4e49\u670d\u52a1\u63d0\u4f9b\u8005\u7684\u65f6\u5019\uff0c\u53ea\u5141\u8bb8\u91c7\u7528Spring MVC \u6216\u8005 Jax RS\u6a21\u5f0f\u3002 \u5f00\u53d1\u670d\u52a1\u6d88\u8d39\u8005\u4e0d\u53d7\u9650\u5236\uff0c\u53ef\u4ee5\u4f7f\u7528\u900f\u660eRPC\u6216\u8005RestTemplate\u3002 \u5728\u5b9a\u4e49\u901a\u4fe1\u6a21\u578b\u7684\u65f6\u5019\uff0c\u53ea\u5141\u8bb8\u4f7f\u7528REST over Vert.x \u6216\u8005 REST over Servlet\uff0c\u4e0d\u80fd\u591f\u4f7f\u7528HIGHWAY\u534f\u8bae\u3002 \u4e0a\u4f20\u4e0b\u8f7d\u6587\u4ef6\u529f\u80fd\u9ed8\u8ba4\u662f\u5173\u95ed\u7684\u3002\u9700\u8981\u914d\u7f6eservicecomb.uploads.directory\u542f\u7528\uff0c\u5982\u679c\u901a\u8fc7\u8fb9\u7f18\u670d\u52a1(Edge Service)\u8f6c\u53d1\u8bf7\u6c42\uff0c\u8fb9\u7f18\u670d\u52a1\u4e5f\u9700\u8981\u8fd9\u4e2a\u914d\u7f6e\u9879\u3002 \u901a\u8fc7HTTP FORM\u7684\u65b9\u5f0f\u4e0a\u4f20\u6587\u4ef6\uff08\u4e00\u822c\u91c7\u7528POST\uff09\uff1b\u901a\u8fc7GET\u4e0b\u8f7d\u6587\u4ef6\u3002 \u672c\u7ae0\u8282\u5305\u542b\u5982\u4e0b\u5185\u5bb9\uff1a \u6587\u4ef6\u4e0a\u4f20\u5f00\u53d1\u6307\u5bfc \u6587\u4ef6\u4e0b\u8f7d\u5f00\u53d1\u6307\u5bfc","title":"Upload download"},{"location":"general-development/visit-sc/","text":"\u6982\u5ff5\u9610\u8ff0 \u7cfb\u7edf\u901a\u8fc7 \u670d\u52a1\u4e2d\u5fc3 \u5b9e\u73b0\u670d\u52a1\u4e4b\u95f4\u7684\u53d1\u73b0\u3002\u670d\u52a1\u542f\u52a8\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u5411\u670d\u52a1\u4e2d\u5fc3\u8fdb\u884c\u6ce8\u518c\u3002\u5728\u8c03\u7528\u5176\u4ed6\u670d\u52a1\u7684\u65f6\u5019\uff0c\u4f1a\u4ece\u670d\u52a1\u4e2d\u5fc3\u67e5\u8be2\u5176\u4ed6\u670d\u52a1\u7684\u5b9e\u4f8b\u4fe1\u606f\uff0c\u6bd4\u5982\u8bbf\u95ee\u5730\u5740\u3001\u4f7f\u7528\u7684\u534f\u8bae\u4ee5\u53ca\u5176\u4ed6\u53c2\u6570\u3002\u670d\u52a1\u4e2d\u5fc3\u652f\u6301\u4f7f\u7528PULL\u548cPUSH\u4e24\u79cd\u6a21\u5f0f\u901a\u77e5\u5b9e\u4f8b\u53d8\u5316\u3002 \u5f00\u53d1\u8005\u53ef\u4ee5\u914d\u7f6e\u670d\u52a1\u4e2d\u5fc3\u96c6\u7fa4\u5730\u5740\u3001\u8fde\u63a5\u53c2\u6570\u4ee5\u53ca\u5fc3\u8df3\u7ba1\u7406\u7b49\u3002 \u914d\u7f6e\u8bf4\u660e \u88681-1\u8bbf\u95ee\u914d\u7f6e\u4e2d\u5fc3\u5e38\u7528\u7684\u914d\u7f6e\u9879 \u914d\u7f6e\u9879 \u53c2\u8003/\u9ed8\u8ba4\u503c \u53d6\u503c\u8303\u56f4 \u662f\u5426\u5fc5\u9009 \u542b\u4e49 \u6ce8\u610f servicecomb.service.registry.address http://127.0.0.1:30100 \u662f \u670d\u52a1\u4e2d\u5fc3\u7684\u5730\u5740\u4fe1\u606f\uff0c\u53ef\u4ee5\u914d\u7f6e\u591a\u4e2a\uff0c\u7528\u9017\u53f7\u5206\u9694\u3002 servicecomb.service.registry.instance.watch true \u5426 \u662f\u5426\u91c7\u7528PUSH\u6a21\u5f0f\u76d1\u542c\u5b9e\u4f8b\u53d8\u5316\u3002\u4e3afalse\u7684\u65f6\u5019\u8868\u793a\u4f7f\u7528PULL\u6a21\u5f0f\u3002 servicecomb.service.registry.autodiscovery false \u5426 \u662f\u5426\u81ea\u52a8\u53d1\u73b0\u670d\u52a1\u4e2d\u5fc3\u7684\u5730\u5740\u3002\u5f53\u9700\u8981\u914d\u7f6e\u90e8\u5206\u5730\u5740\uff0c\u5176\u4ed6\u5730\u5740\u7531\u914d\u7f6e\u7684\u670d\u52a1\u4e2d\u5fc3\u5b9e\u4f8b\u53d1\u73b0\u7684\u65f6\u5019\uff0c\u5f00\u542f\u8fd9\u4e2a\u914d\u7f6e\u3002 servicecomb.service.registry.instance.healthCheck.interval 30 \u5426 \u5fc3\u8df3\u95f4\u9694\u3002 servicecomb.service.registry.instance.healthCheck.times 3 \u5426 \u5141\u8bb8\u7684\u5fc3\u8df3\u5931\u8d25\u6b21\u6570\u3002\u5f53\u8fde\u7eed\u7b2ctimes+1\u6b21\u5fc3\u8df3\u4ecd\u7136\u5931\u8d25\u65f6\u5219\u5b9e\u4f8b\u88absc\u4e0b\u7ebf\u3002\u5373interval * (times + 1)\u51b3\u5b9a\u4e86\u5b9e\u4f8b\u88ab\u81ea\u52a8\u6ce8\u9500\u7684\u65f6\u95f4\u3002\u5982\u679c\u670d\u52a1\u4e2d\u5fc3\u7b49\u5f85\u8fd9\u4e48\u957f\u7684\u65f6\u95f4\u6ca1\u6709\u6536\u53d6\u5230\u5fc3\u8df3\uff0c\u4f1a\u6ce8\u9500\u5b9e\u4f8b\u3002 servicecomb.service.registry.instance.empty.protection true \u5426 \u5f53\u4ece\u670d\u52a1\u4e2d\u5fc3\u67e5\u8be2\u5230\u7684\u5730\u5740\u4e3a\u7a7a\u7684\u65f6\u5019\uff0c\u662f\u5426\u8986\u76d6\u672c\u5730\u7f13\u5b58\u3002\u8fd9\u4e2a\u662f\u4e00\u79cd\u53ef\u9760\u6027\u4fdd\u62a4\u673a\u5236\uff0c\u907f\u514d\u5b9e\u4f8b\u5f02\u5e38\u6279\u91cf\u4e0b\u7ebf\u5bfc\u81f4\u7684\u8bf7\u6c42\u5931\u8d25\u3002 servicecomb.service.registry.client.timeout.connection 30000 \u8fde\u63a5\u8d85\u65f6\u65f6\u95f4 \u5355\u4f4d\u6beb\u79d2 servicecomb.service.registry.client.timeout.request 30000 \u8bf7\u6c42\u8d85\u65f6\u65f6\u95f4 \u5355\u4f4d\u6beb\u79d2 servicecomb.service.registry.client.timeout.idle 60 \u8fde\u63a5\u95f2\u7f6e\u8d85\u65f6\u65f6\u95f4 \u5355\u4f4d\u79d2 servicecomb.service.registry.client.timeout.heartbeat 3000 \u5fc3\u8df3\u8d85\u65f6\u65f6\u95f4 \u5355\u4f4d\u6beb\u79d2 servicecomb.service.registry.client.instances 1 \u5426 Service Registry\u5ba2\u6237\u7aefVerticle\u90e8\u7f72\u5b9e\u4f8b\u7684\u4e2a\u6570 servicecomb.service.registry.client.eventLoopPoolSize 4 \u5426 Service Registry\u5ba2\u6237\u7aefEvent Loop\u7ebf\u7a0b\u6c60\u5927\u5c0f servicecomb.service.registry.client.workerPoolSize 4 \u5426 Service Registry\u5ba2\u6237\u7aefWorker\u7ebf\u7a0b\u6c60\u5927\u5c0f","title":"Visit sc"},{"location":"general-development/visit-sc/#_1","text":"\u7cfb\u7edf\u901a\u8fc7 \u670d\u52a1\u4e2d\u5fc3 \u5b9e\u73b0\u670d\u52a1\u4e4b\u95f4\u7684\u53d1\u73b0\u3002\u670d\u52a1\u542f\u52a8\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u5411\u670d\u52a1\u4e2d\u5fc3\u8fdb\u884c\u6ce8\u518c\u3002\u5728\u8c03\u7528\u5176\u4ed6\u670d\u52a1\u7684\u65f6\u5019\uff0c\u4f1a\u4ece\u670d\u52a1\u4e2d\u5fc3\u67e5\u8be2\u5176\u4ed6\u670d\u52a1\u7684\u5b9e\u4f8b\u4fe1\u606f\uff0c\u6bd4\u5982\u8bbf\u95ee\u5730\u5740\u3001\u4f7f\u7528\u7684\u534f\u8bae\u4ee5\u53ca\u5176\u4ed6\u53c2\u6570\u3002\u670d\u52a1\u4e2d\u5fc3\u652f\u6301\u4f7f\u7528PULL\u548cPUSH\u4e24\u79cd\u6a21\u5f0f\u901a\u77e5\u5b9e\u4f8b\u53d8\u5316\u3002 \u5f00\u53d1\u8005\u53ef\u4ee5\u914d\u7f6e\u670d\u52a1\u4e2d\u5fc3\u96c6\u7fa4\u5730\u5740\u3001\u8fde\u63a5\u53c2\u6570\u4ee5\u53ca\u5fc3\u8df3\u7ba1\u7406\u7b49\u3002","title":"\u6982\u5ff5\u9610\u8ff0"},{"location":"general-development/visit-sc/#_2","text":"","title":"\u914d\u7f6e\u8bf4\u660e"},{"location":"general-development/visit-sc/#1-1","text":"\u914d\u7f6e\u9879 \u53c2\u8003/\u9ed8\u8ba4\u503c \u53d6\u503c\u8303\u56f4 \u662f\u5426\u5fc5\u9009 \u542b\u4e49 \u6ce8\u610f servicecomb.service.registry.address http://127.0.0.1:30100 \u662f \u670d\u52a1\u4e2d\u5fc3\u7684\u5730\u5740\u4fe1\u606f\uff0c\u53ef\u4ee5\u914d\u7f6e\u591a\u4e2a\uff0c\u7528\u9017\u53f7\u5206\u9694\u3002 servicecomb.service.registry.instance.watch true \u5426 \u662f\u5426\u91c7\u7528PUSH\u6a21\u5f0f\u76d1\u542c\u5b9e\u4f8b\u53d8\u5316\u3002\u4e3afalse\u7684\u65f6\u5019\u8868\u793a\u4f7f\u7528PULL\u6a21\u5f0f\u3002 servicecomb.service.registry.autodiscovery false \u5426 \u662f\u5426\u81ea\u52a8\u53d1\u73b0\u670d\u52a1\u4e2d\u5fc3\u7684\u5730\u5740\u3002\u5f53\u9700\u8981\u914d\u7f6e\u90e8\u5206\u5730\u5740\uff0c\u5176\u4ed6\u5730\u5740\u7531\u914d\u7f6e\u7684\u670d\u52a1\u4e2d\u5fc3\u5b9e\u4f8b\u53d1\u73b0\u7684\u65f6\u5019\uff0c\u5f00\u542f\u8fd9\u4e2a\u914d\u7f6e\u3002 servicecomb.service.registry.instance.healthCheck.interval 30 \u5426 \u5fc3\u8df3\u95f4\u9694\u3002 servicecomb.service.registry.instance.healthCheck.times 3 \u5426 \u5141\u8bb8\u7684\u5fc3\u8df3\u5931\u8d25\u6b21\u6570\u3002\u5f53\u8fde\u7eed\u7b2ctimes+1\u6b21\u5fc3\u8df3\u4ecd\u7136\u5931\u8d25\u65f6\u5219\u5b9e\u4f8b\u88absc\u4e0b\u7ebf\u3002\u5373interval * (times + 1)\u51b3\u5b9a\u4e86\u5b9e\u4f8b\u88ab\u81ea\u52a8\u6ce8\u9500\u7684\u65f6\u95f4\u3002\u5982\u679c\u670d\u52a1\u4e2d\u5fc3\u7b49\u5f85\u8fd9\u4e48\u957f\u7684\u65f6\u95f4\u6ca1\u6709\u6536\u53d6\u5230\u5fc3\u8df3\uff0c\u4f1a\u6ce8\u9500\u5b9e\u4f8b\u3002 servicecomb.service.registry.instance.empty.protection true \u5426 \u5f53\u4ece\u670d\u52a1\u4e2d\u5fc3\u67e5\u8be2\u5230\u7684\u5730\u5740\u4e3a\u7a7a\u7684\u65f6\u5019\uff0c\u662f\u5426\u8986\u76d6\u672c\u5730\u7f13\u5b58\u3002\u8fd9\u4e2a\u662f\u4e00\u79cd\u53ef\u9760\u6027\u4fdd\u62a4\u673a\u5236\uff0c\u907f\u514d\u5b9e\u4f8b\u5f02\u5e38\u6279\u91cf\u4e0b\u7ebf\u5bfc\u81f4\u7684\u8bf7\u6c42\u5931\u8d25\u3002 servicecomb.service.registry.client.timeout.connection 30000 \u8fde\u63a5\u8d85\u65f6\u65f6\u95f4 \u5355\u4f4d\u6beb\u79d2 servicecomb.service.registry.client.timeout.request 30000 \u8bf7\u6c42\u8d85\u65f6\u65f6\u95f4 \u5355\u4f4d\u6beb\u79d2 servicecomb.service.registry.client.timeout.idle 60 \u8fde\u63a5\u95f2\u7f6e\u8d85\u65f6\u65f6\u95f4 \u5355\u4f4d\u79d2 servicecomb.service.registry.client.timeout.heartbeat 3000 \u5fc3\u8df3\u8d85\u65f6\u65f6\u95f4 \u5355\u4f4d\u6beb\u79d2 servicecomb.service.registry.client.instances 1 \u5426 Service Registry\u5ba2\u6237\u7aefVerticle\u90e8\u7f72\u5b9e\u4f8b\u7684\u4e2a\u6570 servicecomb.service.registry.client.eventLoopPoolSize 4 \u5426 Service Registry\u5ba2\u6237\u7aefEvent Loop\u7ebf\u7a0b\u6c60\u5927\u5c0f servicecomb.service.registry.client.workerPoolSize 4 \u5426 Service Registry\u5ba2\u6237\u7aefWorker\u7ebf\u7a0b\u6c60\u5927\u5c0f","title":"\u88681-1\u8bbf\u95ee\u914d\u7f6e\u4e2d\u5fc3\u5e38\u7528\u7684\u914d\u7f6e\u9879"},{"location":"packaging/standalone/","text":"\u6982\u5ff5\u9610\u8ff0 \u4e00\u4e2aStandalone\u7684\u5bb9\u5668\uff0c\u4ee5\u7b80\u5355\u7684Main\u52a0\u8f7dSpring\u542f\u52a8\uff0c\u56e0\u4e3a\u670d\u52a1\u901a\u5e38\u4e0d\u9700\u8981Tomcat/JBoss\u7b49Web\u5bb9\u5668\u7684\u7279\u6027\uff0c\u6ca1\u5fc5\u8981\u7528Web\u5bb9\u5668\u53bb\u52a0\u8f7d\u670d\u52a1\u3002\u5fae\u6846\u67b6\u63d0\u4f9b\u4e86standalone\u90e8\u7f72\u8fd0\u884c\u6a21\u5f0f\uff0c\u670d\u52a1\u5bb9\u5668\u53ea\u662f\u4e00\u4e2a\u7b80\u5355\u7684Main\u65b9\u6cd5\uff0c\u5e76\u52a0\u8f7d\u4e00\u4e2a\u7b80\u5355\u7684Spring\u5bb9\u5668\uff0c\u7528\u4e8e\u66b4\u9732\u670d\u52a1\u3002 \u64cd\u4f5c\u6b65\u9aa4 \u6b65\u9aa41 \u7f16\u5199Main\u51fd\u6570\uff0c\u521d\u59cb\u5316\u65e5\u5fd7\u548c\u52a0\u8f7d\u670d\u52a1\u914d\u7f6e\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a import org.apache.servicecomb.foundation.common.utils.BeanUtils; import org.apache.servicecomb.foundation.common.utils.Log4jUtils; public class MainServer { public static void main(String[] args) throws Exception { \u3000Log4jUtils.init(); # \u65e5\u5fd7\u521d\u59cb\u5316 \u3000BeanUtils.init(); # Spring bean\u521d\u59cb\u5316 } } \u6b65\u9aa42 \u8fd0\u884cMainServer\u5373\u53ef\u542f\u52a8\u8be5\u5fae\u670d\u52a1\u8fdb\u7a0b\uff0c\u5411\u5916\u66b4\u9732\u670d\u52a1\u3002 \u6ce8\u610f\u4e8b\u9879 \u5982\u679c\u4f7f\u7528\u7684\u662frest\u7f51\u7edc\u901a\u9053\uff0c\u9700\u8981\u5c06pom\u4e2d\u7684transport\u6539\u4e3a\u4f7f\u7528cse-transport-rest-vertx\u5305","title":"\u4ee5standalone\u6a21\u5f0f\u6253\u5305"},{"location":"packaging/standalone/#_1","text":"\u4e00\u4e2aStandalone\u7684\u5bb9\u5668\uff0c\u4ee5\u7b80\u5355\u7684Main\u52a0\u8f7dSpring\u542f\u52a8\uff0c\u56e0\u4e3a\u670d\u52a1\u901a\u5e38\u4e0d\u9700\u8981Tomcat/JBoss\u7b49Web\u5bb9\u5668\u7684\u7279\u6027\uff0c\u6ca1\u5fc5\u8981\u7528Web\u5bb9\u5668\u53bb\u52a0\u8f7d\u670d\u52a1\u3002\u5fae\u6846\u67b6\u63d0\u4f9b\u4e86standalone\u90e8\u7f72\u8fd0\u884c\u6a21\u5f0f\uff0c\u670d\u52a1\u5bb9\u5668\u53ea\u662f\u4e00\u4e2a\u7b80\u5355\u7684Main\u65b9\u6cd5\uff0c\u5e76\u52a0\u8f7d\u4e00\u4e2a\u7b80\u5355\u7684Spring\u5bb9\u5668\uff0c\u7528\u4e8e\u66b4\u9732\u670d\u52a1\u3002","title":"\u6982\u5ff5\u9610\u8ff0"},{"location":"packaging/standalone/#_2","text":"\u6b65\u9aa41 \u7f16\u5199Main\u51fd\u6570\uff0c\u521d\u59cb\u5316\u65e5\u5fd7\u548c\u52a0\u8f7d\u670d\u52a1\u914d\u7f6e\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a import org.apache.servicecomb.foundation.common.utils.BeanUtils; import org.apache.servicecomb.foundation.common.utils.Log4jUtils; public class MainServer { public static void main(String[] args) throws Exception { \u3000Log4jUtils.init(); # \u65e5\u5fd7\u521d\u59cb\u5316 \u3000BeanUtils.init(); # Spring bean\u521d\u59cb\u5316 } } \u6b65\u9aa42 \u8fd0\u884cMainServer\u5373\u53ef\u542f\u52a8\u8be5\u5fae\u670d\u52a1\u8fdb\u7a0b\uff0c\u5411\u5916\u66b4\u9732\u670d\u52a1\u3002","title":"\u64cd\u4f5c\u6b65\u9aa4"},{"location":"packaging/standalone/#_3","text":"\u5982\u679c\u4f7f\u7528\u7684\u662frest\u7f51\u7edc\u901a\u9053\uff0c\u9700\u8981\u5c06pom\u4e2d\u7684transport\u6539\u4e3a\u4f7f\u7528cse-transport-rest-vertx\u5305","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"packaging/web-container/","text":"\u6982\u5ff5\u9610\u8ff0 \u5982\u679c\u9700\u8981\u5c06\u8be5\u5fae\u670d\u52a1\u52a0\u8f7d\u5230web\u5bb9\u5668\u4e2d\u542f\u52a8\u8fd0\u884c\u65f6\uff0c\u9700\u8981\u65b0\u5efa\u4e00\u4e2aservlet\u5de5\u7a0b\u5305\u88c5\u4e00\u4e0b\uff0c\u8be5servlet\u5de5\u7a0b\uff0c\u6839\u636e\u9700\u8981\uff0c\u53ef\u4ee5\u4e0d\u5199\u6216\u5199\u5c11\u91cf\u7684\u5f15\u5bfc\u4ee3\u7801\u5373\u53ef\u3002 \u5f00\u53d1\u793a\u4f8b \u53c2\u8003\u201c\u5f00\u53d1\u670d\u52a1\u63d0\u4f9b\u8005\u201d - \u201c\u901a\u4fe1\u534f\u8bae\" - \"REST over Servlet\"\u7ae0\u8282\u3002 \u6ce8\u610f\u4e8b\u9879 Restful\u8c03\u7528\u5e94\u8be5\u4e0eweb\u5bb9\u5668\u4e2d\u5176\u4ed6\u9759\u6001\u8d44\u6e90\u8c03\u7528\uff08\u6bd4\u5982html\u3001js\u7b49\u7b49\uff09\u9694\u79bb\u5f00\u6765\uff0c\u6240\u4ee5webroot\u540e\u4e00\u6bb5\u5e94\u8be5\u8fd8\u6709\u4e00\u5c42\u5173\u952e\u5b57\uff0c\u6bd4\u5982\u4e0a\u9762web.xml\u4e2d\u4e3e\u7684\u4f8b\u5b50\uff08/test/rest\uff09\u4e2d\u7684rest\u3002 \u4ee5tomcat\u4e3a\u4f8b\uff0c\u9ed8\u8ba4\u6bcf\u4e2awar\u5305\u90fd\u6709\u4e0d\u540c\u7684webroot\uff0c\u8fd9\u4e2awebroot\u9700\u8981\u662fbasePath\u7684\u524d\u7f00\uff0c\u6bd4\u5982webroot\u4e3atest\uff0c\u5219\u8be5\u5fae\u670d\u52a1\u6240\u6709\u7684\u5951\u7ea6\u90fd\u5fc5\u987b\u4ee5/test\u6253\u5934\u3002 \u5f53\u5fae\u670d\u52a1\u52a0\u8f7d\u5728web\u5bb9\u5668\u4e2d\uff0c\u5e76\u76f4\u63a5\u4f7f\u7528web\u5bb9\u5668\u5f00\u7684http\u3001https\u7aef\u53e3\u65f6\uff0c\u56e0\u4e3a\u662f\u4f7f\u7528\u7684web\u5bb9\u5668\u7684\u901a\u4fe1\u901a\u9053\uff0c\u6240\u4ee5\u9700\u8981\u6ee1\u8db3web\u5bb9\u5668\u7684\u89c4\u5219\u3002","title":"\u4ee5WEB\u5bb9\u5668\u6a21\u5f0f\u6253\u5305"},{"location":"packaging/web-container/#_1","text":"\u5982\u679c\u9700\u8981\u5c06\u8be5\u5fae\u670d\u52a1\u52a0\u8f7d\u5230web\u5bb9\u5668\u4e2d\u542f\u52a8\u8fd0\u884c\u65f6\uff0c\u9700\u8981\u65b0\u5efa\u4e00\u4e2aservlet\u5de5\u7a0b\u5305\u88c5\u4e00\u4e0b\uff0c\u8be5servlet\u5de5\u7a0b\uff0c\u6839\u636e\u9700\u8981\uff0c\u53ef\u4ee5\u4e0d\u5199\u6216\u5199\u5c11\u91cf\u7684\u5f15\u5bfc\u4ee3\u7801\u5373\u53ef\u3002","title":"\u6982\u5ff5\u9610\u8ff0"},{"location":"packaging/web-container/#_2","text":"\u53c2\u8003\u201c\u5f00\u53d1\u670d\u52a1\u63d0\u4f9b\u8005\u201d - \u201c\u901a\u4fe1\u534f\u8bae\" - \"REST over Servlet\"\u7ae0\u8282\u3002","title":"\u5f00\u53d1\u793a\u4f8b"},{"location":"packaging/web-container/#_3","text":"Restful\u8c03\u7528\u5e94\u8be5\u4e0eweb\u5bb9\u5668\u4e2d\u5176\u4ed6\u9759\u6001\u8d44\u6e90\u8c03\u7528\uff08\u6bd4\u5982html\u3001js\u7b49\u7b49\uff09\u9694\u79bb\u5f00\u6765\uff0c\u6240\u4ee5webroot\u540e\u4e00\u6bb5\u5e94\u8be5\u8fd8\u6709\u4e00\u5c42\u5173\u952e\u5b57\uff0c\u6bd4\u5982\u4e0a\u9762web.xml\u4e2d\u4e3e\u7684\u4f8b\u5b50\uff08/test/rest\uff09\u4e2d\u7684rest\u3002 \u4ee5tomcat\u4e3a\u4f8b\uff0c\u9ed8\u8ba4\u6bcf\u4e2awar\u5305\u90fd\u6709\u4e0d\u540c\u7684webroot\uff0c\u8fd9\u4e2awebroot\u9700\u8981\u662fbasePath\u7684\u524d\u7f00\uff0c\u6bd4\u5982webroot\u4e3atest\uff0c\u5219\u8be5\u5fae\u670d\u52a1\u6240\u6709\u7684\u5951\u7ea6\u90fd\u5fc5\u987b\u4ee5/test\u6253\u5934\u3002 \u5f53\u5fae\u670d\u52a1\u52a0\u8f7d\u5728web\u5bb9\u5668\u4e2d\uff0c\u5e76\u76f4\u63a5\u4f7f\u7528web\u5bb9\u5668\u5f00\u7684http\u3001https\u7aef\u53e3\u65f6\uff0c\u56e0\u4e3a\u662f\u4f7f\u7528\u7684web\u5bb9\u5668\u7684\u901a\u4fe1\u901a\u9053\uff0c\u6240\u4ee5\u9700\u8981\u6ee1\u8db3web\u5bb9\u5668\u7684\u89c4\u5219\u3002","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"question-and-answer/faq/","text":"Q: \u7528IntelliJ\u7684\u514d\u8d39\u7248\u5f00\u53d1\uff0c\u6709\u4ec0\u4e48\u95ee\u9898\uff1f A: \u6ca1\u6709\u95ee\u9898\uff0c\u4f7f\u7528IntelliJ \u5f00\u53d1\uff0c\u53ef\u53c2\u8003 Setup Developer Environment \u8fdb\u884c\u76f8\u5e94\u7684\u73af\u5883\u914d\u7f6e\u3002 Q: \u5951\u7ea6\u751f\u6210\u4f1a\u62a5\u9519Caused by: java.lang.Error: OperationId must be unique\uff0c\u4e0d\u652f\u6301\u51fd\u6570\u91cd\u8f7d\uff1f A: \u652f\u6301\u51fd\u6570\u91cd\u8f7d\uff0c\u4f46\u662f\u9700\u8981\u6ce8\u610f\u6bcf\u4e2a\u63a5\u53e3\u5fc5\u987b\u6709\u552f\u4e00\u7684operation id\u3002\u53ef\u4ee5\u52a0\u4e0a @ApiOperation \u6807\u7b7e\u7ed9\u91cd\u8f7d\u7684\u63a5\u53e3\u6307\u5b9a\u552f\u4e00\u7684 operation id\u3002 Q: \u4f7f\u7528 spring-boot-starter-provider \u8fd9\u4e2a\u4f9d\u8d56\u65f6\uff0c\u5728 application.yml \u6587\u4ef6\u4e2d\u58f0\u660e\u7684 spring.main.web-application \u5c5e\u6027\u5e76\u6ca1\u6709\u751f\u6548\uff1f A: \u6700\u8fd1\u7248\u672c\u53ea\u652f\u6301 spring boot 2\uff0c \u53ef\u4ee5\u901a\u8fc7 ApplicationBuilder \u521b\u5efa\u8fd0\u884c\u73af\u5883\u3002 \u53c2\u8003 \u5728Spring Boot\u4e2d\u4f7f\u7528java chassis \u3002 Q: \u5982\u4f55\u81ea\u5b9a\u4e49\u67d0\u4e2aJava\u65b9\u6cd5\u5bf9\u5e94\u7684REST\u63a5\u53e3\u91cc\u7684HTTP Status Code\uff1f A: \u5bf9\u4e8e\u6b63\u5e38\u7684\u8fd4\u56de\u503c\uff0c\u53ef\u4ee5\u901a\u8fc7SwaggerAnnotation\u5b9e\u73b0\uff0c\u4f8b\u5982\uff1a @ApiResponse(code = 300, response = String.class, message = \"\") public int test(int x) { return 100; } \u5bf9\u4e8e\u5f02\u5e38\u7684\u8fd4\u56de\u503c\uff0c\u53ef\u4ee5\u901a\u8fc7\u629b\u51fa\u81ea\u5b9a\u4e49\u7684InvocationException\u5b9e\u73b0\uff0c\u4f8b\u5982\uff1a public String testException(int code) { String strCode = String.valueOf(code); switch (code) { case 200: return strCode; case 456: throw new InvocationException(code, strCode, strCode + \" error\"); case 556: throw new InvocationException(code, strCode, Arrays.asList(strCode + \" error\")); case 557: throw new InvocationException(code, strCode, Arrays.asList(Arrays.asList(strCode + \" error\"))); default: break; } return \"not expected\"; } Q: \u5982\u4f55\u5b9a\u5236\u81ea\u5df1\u5fae\u670d\u52a1\u7684\u65e5\u5fd7\u914d\u7f6e? A: ServiceComb\u4e0d\u7ed1\u5b9a\u65e5\u5fd7\u5668\uff0c\u53ea\u662f\u4f7f\u7528\u4e86slf4j\uff0c\u7528\u6237\u53ef\u4ee5\u81ea\u7531\u9009\u62e9log4j/log4j2/logback\u7b49\u7b49\u3002ServiceComb\u63d0\u4f9b\u4e86\u4e00\u4e2alog4j\u7684\u6269\u5c55\uff0c\u5728\u6807\u51c6log4j\u7684\u57fa\u7840\u4e0a\uff0c\u652f\u6301log4j\u7684properties\u6587\u4ef6\u7684\u589e\u91cf\u914d\u7f6e\u3002 \u9ed8\u8ba4\u4ee5\u89c4\u5219\uff1a\"classpath*:config/log4j.properties\"\u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6 \u5b9e\u9645\u4f1a\u641c\u7d22\u51faclasspath\u4e2d\u6240\u6709\u7684 config/log4j.properties\u548cconfig/log4j.*.properties , \u4ece\u641c\u7d22\u51fa\u7684\u6587\u4ef6\u4e2d\u5207\u51fa \\* \u7684\u90e8\u5206\uff0c\u8fdb\u884calpha\u6392\u5e8f\uff0c\u7136\u540e\u6309\u987a\u5e8f\u52a0\u8f7d\uff0c\u6700\u540e\u5408\u6210\u7684\u6587\u4ef6\u4f5c\u4e3alog4j\u7684\u914d\u7f6e\u6587\u4ef6\u3002 \u5982\u679c\u8981\u4f7f\u7528ServiceComb\u7684log4j\u6269\u5c55\uff0c\u5219\u9700\u8981\u8c03\u7528Log4jUtils.init\uff0c\u5426\u5219\u5b8c\u5168\u6309\u6807\u51c6\u7684\u65e5\u5fd7\u5668\u7684\u89c4\u5219\u4f7f\u7528\u3002 Q: \u5f53\u670d\u52a1\u914d\u7f6e\u4e86\u591a\u4e2atransport\u7684\u65f6\u5019\uff0c\u5728\u8fd0\u884c\u65f6\u662f\u600e\u4e48\u9009\u62e9\u4f7f\u7528\u54ea\u4e2atransport\u7684\uff1f A: ServiceComb\u7684consumer\u3001transport\u3001handler\u3001producer\u4e4b\u95f4\u662f\u89e3\u8026\u7684\uff0c\u5404\u529f\u80fd\u4e4b\u95f4\u901a\u8fc7\u5951\u7ea6\u5b9a\u4e49\u8054\u5408\u5728\u4e00\u8d77\u5de5\u4f5c\u7684\uff0c\u5373\uff1a consumer\u4f7f\u7528\u900f\u660erpc\uff0c\u8fd8\u662fspringmvc\u5f00\u53d1\u4e0e\u4f7f\u7528highway\uff0c\u8fd8\u662fRESTful\u5728\u7f51\u7edc\u4e0a\u4f20\u8f93\u6ca1\u6709\u5173\u7cfb\u4e0eproducer\u662f\u4f7f\u7528\u900f\u660erpc\uff0c\u8fd8\u662fjaxrs\uff0c \u6216\u8005\u662fspringmvc\u5f00\u53d1\uff0c\u4e5f\u6ca1\u6709\u5173\u7cfbhandler\u4e5f\u4e0d\u611f\u77e5\uff0c\u4e1a\u52a1\u5f00\u53d1\u65b9\u5f0f\u4ee5\u53ca\u4f20\u8f93\u65b9\u5f0f\u3002consumer\u8bbf\u95eeproducer\uff0c\u5728\u8fd0\u884c\u65f6\u7684transport\u9009\u62e9\u4e0a\uff0c \u603b\u89c4\u5219\u4e3a\uff1acnsumer\u7684transport\u4e0eproducer\u7684endpoint\u53d6\u4ea4\u96c6\uff0c\u5982\u679c\u4ea4\u96c6\u540e\uff0c\u8fd8\u6709\u591a\u4e2atransport\u53ef\u9009\u62e9\uff0c\u5219\u8f6e\u6d41\u4f7f\u7528\uff0c\u5206\u89e3\u5f00\u6765\uff0c\u5b58\u5728\u4ee5\u4e0b\u573a\u666f\uff1a \u5f53\u4e00\u4e2a\u5fae\u670d\u52a1producer\u540c\u65f6\u5f00\u653e\u4e86highway\u4ee5\u53caRESTful\u7684endpoint consumer\u8fdb\u7a0b\u4e2d\u53ea\u90e8\u7f72\u4e86highway transport jar\uff0c\u5219\u53ea\u4f1a\u8bbf\u95eeproducer\u7684highway endpoint consumer\u8fdb\u7a0b\u4e2d\u53ea\u90e8\u7f72\u4e86RESTful transport jar\uff0c\u5219\u53ea\u4f1a\u8bbf\u95eeproducer\u7684RESTful endpoint consumer\u8fdb\u7a0b\u4e2d\uff0c\u540c\u65f6\u90e8\u7f72\u4e86highway\u548cRESTful transport jar\uff0c\u5219\u4f1a\u8f6e\u6d41\u8bbf\u95eeproducer\u7684highway\u3001RESTful endpoint \u5982\u679cconsumer\u60f3\u56fa\u5b9a\u4f7f\u7528\u67d0\u4e2atransport\u8bbf\u95eeproducer\uff0c\u53ef\u4ee5\u5728consumer\u8fdb\u7a0b\u7684microservice.yaml\u4e2d\u914d\u7f6e\uff0c\u6307\u5b9atransport\u7684\u540d\u79f0: servicecomb: references: service_name : transport: highway \u5f53\u4e00\u4e2a\u5fae\u670d\u52a1producer\u53ea\u5f00\u653e\u4e86highway\u7684endpoint consumer\u8fdb\u7a0b\u53ea\u90e8\u7f72\u4e86highway transport jar\uff0c\u5219\u6b63\u5e38\u4f7f\u7528highway\u8bbf\u95ee consumer\u8fdb\u7a0b\u53ea\u90e8\u7f72\u4e86RESTful transport jar\uff0c\u5219\u65e0\u6cd5\u8bbf\u95ee consumer\u8fdb\u7a0b\u540c\u65f6\u90e8\u7f72\u4e86highway\u548cRESTful transport jar\uff0c\u5219\u6b63\u5e38\u4f7f\u7528highway\u8bbf\u95ee \u5f53\u4e00\u4e2a\u5fae\u670d\u52a1producer\u53ea\u5f00\u653e\u4e86RESTful\u7684endpoint consumer\u8fdb\u7a0b\u53ea\u90e8\u7f72\u4e86highway transport jar\uff0c\u5219\u65e0\u6cd5\u8bbf\u95ee consumer\u8fdb\u7a0b\u53ea\u90e8\u7f72\u4e86RESTful transport jar\uff0c\u5219\u6b63\u5e38\u4f7f\u7528RESTful\u8bbf\u95ee consumer\u8fdb\u7a0b\u540c\u65f6\u90e8\u7f72\u4e86highway\u548cRESTful transport jar\uff0c\u5219\u6b63\u5e38\u4f7f\u7528RESTful\u8bbf\u95ee Q: ServiceComb\u5fae\u670d\u52a1\u6846\u67b6\u670d\u52a1\u8c03\u7528\u662f\u5426\u4f7f\u7528\u957f\u8fde\u63a5? A: http\u4f7f\u7528\u7684\u662f\u957f\u8fde\u63a5\uff08\u6709\u8d85\u65f6\u65f6\u95f4\uff09\uff0chighway\u65b9\u5f0f\u4f7f\u7528\u7684\u662f\u957f\u8fde\u63a5\uff08\u4e00\u76f4\u4fdd\u6301\uff09\u3002 Q: \u670d\u52a1\u65ad\u8fde\u670d\u52a1\u4e2d\u5fc3\u6ce8\u518c\u4fe1\u606f\u662f\u5426\u81ea\u52a8\u5220\u9664 A: \u670d\u52a1\u4e2d\u5fc3\u5fc3\u8df3\u68c0\u6d4b\u5230\u670d\u52a1\u5b9e\u4f8b\u4e0d\u53ef\u7528\uff0c\u53ea\u4f1a\u79fb\u9664\u670d\u52a1\u5b9e\u4f8b\u4fe1\u606f\uff0c\u670d\u52a1\u7684\u9759\u6001\u6570\u636e\u4e0d\u4f1a\u79fb\u9664\u3002 Q: \u5982\u679c\u4f7f\u7528tomcat\u65b9\u5f0f\u96c6\u6210ServiceComb\u5fae\u670d\u52a1\u6846\u67b6\uff0c\u5982\u4f55\u5b9e\u73b0\u670d\u52a1\u6ce8\u518c A: \u5982\u679c\u4f7f\u7528ServiceComb sdk servlet\u65b9\u5f0f\uff08\u4f7f\u7528transport-rest-servlet\u4f9d\u8d56\uff09\u5236\u4f5c\u4e3awar\u5305\u90e8\u7f72\u5230tomcat\uff0c\u9700\u8981\u4fdd\u8bc1\uff0c \u670d\u52a1\u63cf\u8ff0\u6587\u4ef6\uff08microservice.yaml\uff09\u4e2drest\u7aef\u53e3\u914d\u7f6e\u548c\u5916\u7f6e\u5bb9\u5668\u4e00\u81f4\u624d\u80fd\u5b9e\u73b0\u8be5\u670d\u52a1\u7684\u6b63\u786e\u6ce8\u518c\u3002\u5426\u5219\u65e0\u6cd5\u611f\u77e5tomcat\u5f00\u653e\u7aef\u53e3\u3002 Q: \u5982\u679c\u4f7f\u7528tomcat\u65b9\u5f0f\u96c6\u6210ServiceComb\u5fae\u670d\u52a1\u6846\u67b6\uff0c\u670d\u52a1\u6ce8\u518c\u7684\u65f6\u5019\u5982\u4f55\u5c06war\u5305\u90e8\u7f72\u7684\u4e0a\u4e0b\u6587\u6ce8\u518c\u5230\u670d\u52a1\u4e2d\u5fc3 A: \u53d1\u5e03\u670d\u52a1\u63a5\u53e3\u7684\u65f6\u5019\u9700\u8981\u5c06war\u5305\u90e8\u7f72\u7684\u4e0a\u4e0b\u6587\uff08context\uff09\u653e\u5728baseurl\u6700\u524d\u9762\uff0c\u8fd9\u6837\u624d\u80fd\u4fdd\u8bc1\u6ce8\u518c\u5230\u670d\u52a1\u4e2d\u5fc3\u7684\u8def\u5f84\u662f\u5b8c\u6574\u7684\u8def\u5f84\uff08\u5305\u542b\u4e86\u4e0a\u4e0b\u6587\uff09\u3002\u793a\u4f8b\uff1a @path(/{context}/xxx) class ServiceA Q: ServiceComb\u5fae\u670d\u52a1\u6846\u67b6\u5982\u4f55\u5b9e\u73b0\u6570\u636e\u591a\u4e2a\u5fae\u670d\u52a1\u95f4\u900f\u4f20 A: \u900f\u4f20\u6570\u636e\u585e\u5165\uff1a CseHttpEntity xxxx.class httpEntity = new CseHttpEntity (xxx); //\u900f\u4f20\u5185\u5bb9 httpEntity.addContext(\"contextKey\",\"contextValue\"); ResponseEntity String responseEntity = RestTemplateBuilder.create() .exchange(\"cse://springmvc/springmvchello/sayhello\",HttpMethod.POST,httpEntity,String.class); \u900f\u4f20\u6570\u636e\u83b7\u53d6\uff1a @Override @RequestMapping(path=\"/sayhello\",method = RequestMethod.POST) public String sayHello(@RequestBody Person person,InvocationContext context){ //\u900f\u4f20\u6570\u636e\u83b7\u53d6 context.getContext(); return \"Hello person \" + person.getName(); } Q: ServiceComb body Model\u90e8\u5206\u66b4\u9732 A: \u4e00\u4e2a\u63a5\u53e3\u5bf9\u5e94\u7684body\u5bf9\u8c61\u4e2d\uff0c\u53ef\u80fd\u6709\u4e00\u4e9b\u5c5e\u6027\u662f\u5185\u90e8\u7684\uff0c\u4e0d\u60f3\u5f00\u653e\u51fa\u53bb\uff0c\u751f\u6210schema\u7684\u65f6\u5019\u4e0d\u8981\u5e26\u51fa\u53bb\uff0c\u4f7f\u7528\uff1a @ApiModelProperty(hidden = true) Q: \u670d\u52a1\u8d85\u65f6\u8bbe\u7f6e A: \u5728\u5fae\u670d\u52a1\u63cf\u8ff0\u6587\u4ef6\uff08microservice.yaml\uff09\u4e2d\u6dfb\u52a0\u5982\u4e0b\u914d\u7f6e\uff1a servicecomb: request: timeout: 30000 Q: URL \u5730\u5740\u5c31\u53ef\u4ee5\u552f\u4e00\u5b9a\u4f4d\uff0c\u4e3a\u4ec0\u4e48\u8981\u52a0\u4e0a\u4e00\u4e2aschema\uff1f A: schema \u662f\u7528\u6765\u5339\u914d\u670d\u52a1\u5951\u7ea6\u7684\uff0c\u7528\u6765\u4fdd\u8bc1\u670d\u52a1\u7aef\u548c\u6d88\u8d39\u7aef\u5951\u7ea6\u517c\u5bb9\uff0c\u6bcf\u4e2a\u5951\u7ea6\u9700\u8981\u4e00\u4e2a\u552f\u4e00ID\uff0c\u5728\u670d\u52a1\u4e2d\u5fc3\u5b58\u50a8\u3002 schema\u6620\u5c04\u5230java\u7684interface\u6982\u5ff5\uff0c\u5728consumer\u4f7f\u7528\u900f\u660erpc\u6a21\u5f0f\u5f00\u53d1\u65f6\uff0c\u53ef\u4ee5\u627e\u5230\u662f\u5fae\u670d\u52a1\u91cc\u7684\u54ea\u4e2aoperation\u3002schema\u4e4b\u95f4\u7684\u65b9\u6cd5\u540d\u662f\u6ca1\u6709\u552f\u4e00\u6027\u8981\u6c42\u7684\u3002 operation qualified name\u662f\u6cbb\u7406\u7684key\uff0c\u800cURL \u56e0\u4e3apath\u53c2\u6570\u7684\u5b58\u5728\uff0c\u6ca1\u529e\u6cd5\u76f4\u63a5\u67e5\u627e\uff0c\u800cqualified name\u662f\u4e0d\u4f1a\u53d8\u7684\u3002\u6cbb\u7406\u662f\u4e0d\u533a\u5206\u4f20\u8f93\u7684\uff0c\u5982\u679c\u6cbb\u7406\u6309URL \u8d70\uff0c\u90a3\u4e48highway\u8c03\u8fdb\u6765\u65f6\uff0c\u8fd8\u5f97\u6839\u636e\u53c2\u6570\u53cd\u5411\u6784\u9020\u51faurl\uff0c\u518d\u6765\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\uff0c\u592a\u6298\u817e\u4e86\u3002 http\u53ea\u662f\u4e00\u79cd\u4f20\u8f93\u901a\u9053\uff0c\u8fd8\u6709\u522b\u7684\u4f20\u8f93\u901a\u9053\u4e0d\u9700\u8981\u6620\u5c04\u5230URL\u7684\u3002 Q: rest\u5ba2\u6237\u7aef\u8c03\u7528\u7684\u65f6\u5019\uff0c\u5b9e\u9645\u4e0a\u53ea\u5e26\u4e0a\u4e86\u670d\u52a1\u540d\u548cURL\uff0c\u5e76\u4e0d\u9700\u8981\u6307\u5b9aschema id\u7684\uff0c \u800c\u5b9e\u9645\u4e0a\u6839\u636e\u8fd9\u4e2aURL\u4e5f\u80fd\u627e\u5230\u5177\u4f53\u5951\u7ea6\u7684\uff0c\u6240\u4ee5\u6307\u5b9aschema id\u4f5c\u7528\u4f55\u5728\uff1f A: \u7531\u4e8e\u900f\u660erpc\u662f\u63a5\u53e3\u5f0f\u8c03\u7528\uff0c\u5e76\u6ca1\u6709URL\uff0c\u5185\u90e8\u5b9e\u9645\u90fd\u5f52\u4e00\u5316\u5230operation\u6765\u63cf\u8ff0\u7684\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u7ed3\u5408schema id\u552f\u4e00\u5b9a\u4f4d\u5230\u5177\u4f53\u7684\u8bf7\u6c42\u5904\u7406\u4e2d\u3002 Q: Transport\u662f\u4e2a\u4ec0\u4e48\u6982\u5ff5\uff1f\u7528\u6765\u5e72\u4ec0\u4e48\u7684\uff1f A: transport\u8d1f\u8d23\u7f16\u89e3\u7801\uff0c\u4ee5\u53ca\u4f20\u8f93\u3002\u901a\u4fe1\u6a21\u578b\u6709rest\u548chighway\u4e24\u79cd\uff0chighway\u5bf9\u5e94\u7684\u662f\u79c1\u6709\u534f\u8bae\uff0c\u4f7f\u7528protobuf\u7f16\u7801\uff0crest\u7528\u7684\u662fjson\u3002highway\u548crest\u90fd\u662f\u57fa\u4e8evertx\u505a\u7684\uff0cvertx\u662f\u57fa\u4e8enetty\u7684\u3002 Q: ServiceComb\u548c\u670d\u52a1\u4e2d\u5fc3\u662f\u600e\u4e48\u4ea4\u4e92\u7684? A: \u8d70rest\uff0c\u4e3b\u8981\u8d1f\u8d23\u6ce8\u518c\uff0c\u53d6\u6570\u636e\u548c\u5fc3\u8df3\u7b49\uff1bwatch\u4e8b\u4ef6\u8d70websocket\uff0cwatch\u4e8b\u4ef6\u662f\u89c2\u5bdf\u670d\u52a1\u4e2d\u5fc3\u5b9e\u4f8b\u4fe1\u606f\u6709\u6ca1\u6709\u53d8\u66f4\u3002 Q: \u6709\u7c7b\u4f3cdubbo\u90a3\u79cd\u6cbb\u7406\u4e2d\u5fc3\u5417\uff1f A: bizkeeper\u662f\u4e00\u4e2ahandler\uff0c\u662f\u6cbb\u7406\u7684\u5176\u4e2d\u4e00\u4e2a\u5185\u5bb9\u3002\u6cbb\u7406\u53ef\u4ee5\u901a\u8fc7handler\u6269\u5c55\u3002 Q: service path\u600e\u4e48\u7406\u89e3\uff1f A: \u6bcf\u4e2a\u5fae\u670d\u52a1\u6709\u4e00\u4e2aservicePathManager\uff0c\u6bcf\u4e00\u4e2aschema\u5c06\u81ea\u5df1\u7684path\u6ce8\u518c\u8fdb\u53bb\u3002 Q: \u6d4f\u89c8\u5668\u80fd\u76f4\u63a5\u8bbf\u95ee\u5fae\u670d\u52a1Endpoint\u5417\uff1f A: \u53ef\u4ee5\uff0crestful\u53d1\u5e03\u7684\u5fae\u670d\u52a1Endpoint\uff0c\u53ef\u4ee5\u76f4\u63a5\u5728\u6d4f\u89c8\u5668\u4e2d\u4f7f\u7528HTTP\u52a0service path\u8bbf\u95ee\u63d0\u4f9bget\u65b9\u6cd5\u7684\u670d\u52a1\uff0c\u5982\u679c\u662f\u8bbf\u95ee\u5176\u4ed6Http\u65b9\u6cd5\u63d0\u4f9b\u7684\u670d\u52a1\u5efa\u8bae\u5b89\u88c5\u4f7f\u7528 Postman \u3002 Q: \u5951\u7ea6\u751f\u6210\u65f6\uff0c\u9700\u8981\u5f3a\u5236\u5e26\u4e0a\u7248\u672c\u53f7\u548c\u8bed\u8a00\u5417\uff1f A: \u5951\u7ea6\u662f\u5c5e\u4e8e\u5fae\u670d\u52a1\u7684\uff0c\u5fae\u670d\u52a1\u672c\u6765\u5c31\u6709\u7248\u672c\uff0c\u4f46\u8bed\u8a00\u662f\u4e0d\u5e94\u8be5\u5e26\u4e0a\u7248\u672c\u53f7\u7684\u3002\u5e94\u8be5\u5951\u7ea6\u8981\u6c42\u4e0e\u8bed\u8a00\u65e0\u5173\u3002\u5951\u7ea6\u201c\u6ca1\u6709\u7248\u672c\u201d\uff0c\u5951\u7ea6\u7684\u7248\u672c\u4f53\u73b0\u5728\u5fae\u670d\u52a1\u4e0a\uff0c\u5b9e\u4f8b\u80fd\u627e\u5230\u6240\u5c5e\u7684\u5fae\u670d\u52a1\u7684\u7248\u672c\uff0c\u5c31\u80fd\u627e\u5230\u4e00\u4e2a\u786e\u5b9a\u7684\u5951\u7ea6\u3002 Q: \u5982\u679c\u540c\u65f6\u5f15\u5165\u4e86 transport-rest-servlet \u548c transport-rest-vertx \u7684\u4f9d\u8d56\uff0c\u90a3\u4e48\u5b83\u600e\u4e48\u51b3\u5b9a\u91c7\u7528\u54ea\u4e00\u4e2a\uff1f A: \u5982\u679c\u7aef\u53e3\u6ca1\u88ab\u5360\u7528\uff0c\u5c31\u7528vertx\uff1b\u5982\u679c\u88ab\u5360\u7528\u4e86\uff0c\u5c31\u7528servlet\u3002 Q: qps\u6d41\u63a7\u8bbe\u8ba1\u65f6\u662f\u51fa\u4e8e\u4ec0\u4e48\u573a\u666f\u8003\u8651\u7684\uff1f A: \u9650\u6d41\u6709\u4e24\u4e2a\u4e3b\u8981\u4f5c\u7528\uff0c\u7b2c\u4e00\u901a\u8fc7\u7ed9\u4e0d\u540c\u7684\u6d88\u8d39\u8005\u9650\u6d41\u4fdd\u8bc1\u5bf9\u4e00\u4e9b\u91cd\u70b9\u670d\u52a1\u7684\u670d\u52a1\u6548\u679c\uff0c\u7b2c\u4e8c\u9632\u6b62\u96ea\u5d29\u6548\u5e94\u3002\u53ef\u6839\u636e\u670d\u52a1\u7684\u91cd\u8981\u6027\u6765\u51b3\u5b9a\u6c34\u7ba1\u7684\u7c97\u7ec6\uff0cServiceComb\u662f\u652f\u6301\u6d88\u8d39\u7aef\u9650\u6d41\u548c\u670d\u52a1\u7aef\u9650\u6d41\u4e24\u79cd\u9650\u6d41\u65b9\u5f0f\u7684\uff0c\u6d88\u8d39\u7aef\u9650\u6d41\u53ef\u4ee5\u505a\u5230\u6bd4\u8f83\u7cbe\u7ec6\u7684\u63a7\u5236\u3002 Q: \u5982\u679c\u670d\u52a1\u7aef\u662f\u94fe\u5f0f\u8c03\u7528\uff0c\u5373\u7c7b\u4f3ca- b- c\uff0c\u90a3\u8bbe\u7f6e\u4e86qps \u6d41\u63a7\u4f1a\u4e0d\u4f1a\u9020\u6210\u6c34\u7ba1\u7c97\u7ec6\u4e0d\u5747\u7684\u4e8b\u60c5\uff1f A: \u4e00\u822c\u91c7\u53d6\u7684\u6a21\u5f0f\u662f\u5148\u6d4b\u91cf\u518d\u8bbe\u7f6e\u3002qps\u8bbe\u7f6e\u6700\u7ec8\u662f\u7ed3\u5408\u6574\u4f53\u4e1a\u52a1\u9700\u6c42\u6765\u8fdb\u884c\u8c03\u63a7\u7684\uff0c\u800c\u4e0d\u662f\u5c31\u5355\u4e2a\u8282\u70b9\u6765\u8fdb\u884c\u8bbe\u7f6e\u3002 Q: \u5982\u4f55\u5728\u5951\u7ea6DTO\u4e2d\u5ffd\u7565\u4e2d\u6307\u5b9a\u7684\u5c5e\u6027\uff1f A: \u53ef\u4ee5\u4f7f\u7528@JsonIgnore\u6ce8\u89e3\u6807\u8bb0\u9700\u8981\u5ffd\u7565\u7684\u5c5e\u6027\uff0c \u4f8b\u5982: public class OutputForTest{ @JsonIgnore private String outputId = null; private String inputId = null; ... }","title":"FAQ"},{"location":"question-and-answer/interface-compatibility/","text":"\u5fae\u670d\u52a1\u63a5\u53e3\u517c\u5bb9\u5e38\u89c1\u95ee\u9898 \u5728\u8fdb\u884c\u5fae\u670d\u52a1\u6301\u7eed\u8fed\u4ee3\u5f00\u53d1\u7684\u8fc7\u7a0b\u4e2d\uff0c\u7531\u4e8e\u65b0\u7279\u6027\u4e0d\u505c\u7684\u52a0\u5165\uff0c\u4e00\u4e9b\u8fc7\u65f6\u7684\u7279\u6027\u4e0d\u505c\u7684\u4fee\u6539\uff0c\u63a5\u53e3\u517c\u5bb9\u95ee\u9898\u9762\u4e34\u5de8\u5927\u7684\u6311\u6218\uff0c\u7279\u522b\u662f\u5728\u5141\u8bb8\u591a\u7248\u672c\u5171\u5b58\uff08\u7070\u5ea6\u53d1\u5e03\uff09\u7684\u73af\u5883\u3002\u672c\u7ae0\u8282\u4e3b\u8981\u63cf\u8ff0\u63a5\u53e3\u517c\u5bb9\u7ba1\u7406\u7684\u4e00\u4e9b\u5b9e\u8df5\u5efa\u8bae\uff0c\u4ee5\u53ca\u5728\u4f7f\u7528ServiceComb\u8fc7\u7a0b\u4e2d\u78b0\u5230\u4e86\u517c\u5bb9\u6027\u95ee\u9898\u7684\u89e3\u51b3\u529e\u6cd5\u3002\u7531\u4e8e\u5fae\u670d\u52a1\u4e00\u822c\u90fd\u901a\u8fc7REST\u63a5\u53e3\u5bf9\u5916\u63d0\u4f9b\u670d\u52a1\uff0c\u6ca1\u6709\u7279\u6b8a\u8bf4\u660e\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u91cc\u7684\u63a5\u53e3\u90fd\u6307REST\u63a5\u53e3\u3002 \u4fdd\u8bc1\u63a5\u53e3\u517c\u5bb9\u7684\u5b9e\u8df5 \u4e3a\u4e86\u9632\u6b62\u63a5\u53e3\u517c\u5bb9\u95ee\u9898\uff0c\u5f00\u53d1\u8005\u5728\u8fdb\u884c\u63a5\u53e3\u53d8\u66f4\uff08\u65b0\u589e\u3001\u4fee\u6539\u3001\u5220\u9664\u7b49\uff09\u7684\u65f6\u5019\uff0c\u5efa\u8bae\u9075\u5faa\u4e0b\u9762\u7684\u4e00\u4e9b\u539f\u5219\u3002 \u53ea\u589e\u52a0\u63a5\u53e3\uff0c\u4e0d\u4fee\u6539\u3001\u4e0d\u5220\u9664\u63a5\u53e3\u3002 \u4f5c\u4e3aProvider\uff0c\u589e\u52a0\u63a5\u53e3\u7684\u65f6\u5019\uff0c\u76f8\u5e94\u7684\u5c06\u5fae\u670d\u52a1\u7248\u672c\u53f7\u9012\u589e\uff0c\u6bd4\u5982\u5c062.1.2\u4fee\u6539\u4e3a2.1.3\u3002\u7248\u672c\u53f7\u6309\u7167\u89c4\u8303\u4f7f\u7528x.y.z\u7684\u683c\u5f0f\uff0c\u53ea\u5305\u542b\u6570\u5b57\u4fbf\u4e8e\u7ba1\u7406\uff0c\u5efa\u8bae\u6bcf\u4f4d\u6570\u5b57\u4e0d\u5927\u4e8e125\u3002 \u4f5c\u4e3aConsumer\uff0c\u4f7f\u7528Provider\u7684\u65b0\u63a5\u53e3\u65f6\u5019\uff0c\u6307\u5b9aProvider\u7684\u6700\u5c0f\u7248\u672c\u53f7\u3002\u6bd4\u5982\uff1a servicecomb: references: ProviderMicroserviceName: # \u4fee\u6539\u4e3aProvide\u7684\u5fae\u670d\u52a1\u540d\u79f0 version-rule: 2.1.3+ \u5176\u4e2dserviceName\u4e3aProvider\u7684\u5fae\u670d\u52a1\u540d\u79f0\u3002 \u5728\u670d\u52a1\u4e2d\u5fc3\uff0c\u5b9a\u671f\u6e05\u7406\u4e0d\u518d\u4f7f\u7528\u7684\u8001\u7248\u672c\u7684\u5fae\u670d\u52a1\u4fe1\u606f\u3002 \u5982\u679c\u5fae\u670d\u52a1\u7684\u7248\u672c\u53f7\u6ca1\u6709\u53d8\u5316\uff0c\u5fae\u670d\u52a1\u542f\u52a8\u7684\u65f6\u5019\uff0c\u4e0d\u4f1a\u8986\u76d6\u670d\u52a1\u4e2d\u5fc3\u7684\u8001\u7248\u672c\u6570\u636e\uff0c\u4eceConsumer\u7684\u89d2\u5ea6\uff0c\u770b\u5230\u7684\u662f\u8001\u7248\u672c\u63a5\u53e3\u3002ServiceComb\u7f3a\u7701\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u51fa\u73b0\u63a5\u53e3\u53d8\u66f4\uff0c\u5e76\u4e14\u5fae\u670d\u52a1\u7248\u672c\u53f7\u6ca1\u6709\u4fee\u6539\uff0c\u542f\u52a8\u4f1a\u5931\u8d25\uff0c\u8fd9\u6837\u5c31\u5f3a\u5236\u8981\u6c42\u5f00\u53d1\u8005\u5fc5\u987b\u4fee\u6539\u7248\u672c\u53f7\uff0c\u907f\u514d\u5c06\u95ee\u9898\u9057\u6f0f\u5230\u751f\u4ea7\u73af\u8282\u3002\u5bf9\u4e8e\u65b0\u9879\u76ee\uff0c\u63a5\u53e3\u4fee\u6539\u548c\u8c03\u6574\u53ef\u80fd\u975e\u5e38\u9891\u7e41\uff0c\u5efa\u8bae\u589e\u52a0\u5982\u4e0b\u914d\u7f6e\uff0c\u53ef\u4ee5\u4e0d\u7528\u4fee\u6539\u7248\u672c\u53f7\uff1a service_description: environment: development \u8fd9\u4e2a\u914d\u7f6e\u9879\u4f7f\u5f97Provider\u5f00\u53d1\u7b80\u5355\u4e86\uff0c\u5982\u679cConsumer\u5df2\u7ecf\u542f\u52a8\uff0c\u5e76\u4e14\u5e0c\u671b\u8c03\u7528\u65b0\u7684\u63a5\u53e3\uff0c\u90a3\u4e48Consumer\u4ecd\u7136\u9700\u8981\u91cd\u542f\u3002 \u63a5\u53e3\u517c\u5bb9\u5e38\u89c1\u95ee\u9898\u53ca\u5176\u89e3\u51b3\u529e\u6cd5 \u5f00\u53d1\u9636\u6bb5\uff0c\u7531\u4e8e\u5b58\u5728\u9891\u7e41\u7684\u63a5\u53e3\u4fee\u6539\uff0c\u53c8\u4e0d\u60f3\u9891\u7e41\u4fee\u6539\u7248\u672c\u53f7\uff0c\u5bb9\u6613\u672c\u5730\u548c\u670d\u52a1\u4e2d\u5fc3\u5951\u7ea6\u4e0d\u4e00\u81f4\uff0c\u4e14\u5951\u7ea6\u672a\u88ab\u5141\u8bb8\u66f4\u65b0\u5230\u670d\u52a1\u4e2d\u5fc3\uff0c\u5bfc\u81f4\u8c03\u8bd5\u7684\u65f6\u5019\u63a5\u53e3\u8c03\u7528\u5931\u8d25\u7684\u60c5\u51b5\u3002 \u63a8\u8350\u4f7f\u7528ServiceComb\u63d0\u4f9b\u4e86\u5fae\u670d\u52a1\u6309environment\u533a\u5206\u3001\u9694\u79bb\u7684\u80fd\u529b(\u5f53\u524d\u652f\u6301development\u548cproduction)\uff0c\u5141\u8bb8\u5904\u4e8edevelopment\u73af\u5883\u7684\u5fae\u670d\u52a1\u5728\u4e0d\u5347\u7ea7\u7248\u672c\u7684\u60c5\u51b5\u4e0b\uff0c\u4ec5\u9700\u91cd\u542f\u670d\u52a1\u5373\u53ef\u91cd\u65b0\u6ce8\u518c\u5951\u7ea6\u5230\u670d\u52a1\u4e2d\u5fc3\u3002 \u6240\u6709\u5fae\u670d\u52a1\u5728microservice.yaml\u4e2d\u589e\u5982\u4e0b\u914d\u7f6e\uff0c\u4e14\u9700\u8981\u5728Provider\u542f\u52a8\u540e\uff0c\u518d\u91cd\u542fConsumer(\u82e5\u8bf7\u6c42\u8d70edge\uff0c\u9700\u8981\u91cd\u542fedge\u670d\u52a1)\uff1a service_description: name: xxx-service version: 0.0.1 environment: development \u5f00\u53d1\u9636\u6bb5\uff0c\u7531\u4e8e\u5b58\u5728\u9891\u7e41\u7684\u63a5\u53e3\u4fee\u6539\uff0c\u4e5f\u4e0d\u4f1a\u6e05\u7406\u670d\u52a1\u4e2d\u5fc3\u7684\u6570\u636e\uff0c\u5bb9\u6613\u51fa\u73b0\u8c03\u8bd5\u7684\u65f6\u5019\u63a5\u53e3\u8c03\u7528\u5931\u8d25\u7684\u60c5\u51b5\u3002 \u63a8\u8350\u4f7f\u7528\u534e\u4e3a\u516c\u6709\u4e91\u5728\u7ebf\u7684\u670d\u52a1\u4e2d\u5fc3\uff0c\u53ef\u4ee5\u76f4\u63a5\u767b\u5f55\u4f7f\u7528\u5fae\u670d\u52a1\u5f15\u64ce\u63d0\u4f9b\u7684\u5fae\u670d\u52a1\u7ba1\u7406\u529f\u80fd\u5220\u9664\u5fae\u670d\u52a1\u6216\u5fae\u670d\u52a1\u5b9e\u4f8b\u3002\u5fae\u670d\u52a1\u5f15\u64ce\u4e5f\u63d0\u4f9b\u4e86 \u672c\u5730\u8f7b\u91cf\u5316\u670d\u52a1\u4e2d\u5fc3 \uff0c\u5c06\u670d\u52a1\u505c\u6b62\u540e\u5373\u53ef\u6e05\u7406\u670d\u52a1\u4e2d\u5fc3\u6570\u636e\u3002\u670d\u52a1\u4e2d\u5fc3\u53ca\u5176frontend\u4ee3\u7801\u5df2\u5f00\u6e90\uff0c \u9879\u76ee\u5730\u5740 \u3002 \u53d1\u5e03\u9636\u6bb5\uff0c\u9700\u8981\u5ba1\u89c6\u4e0b\u63a5\u53e3\u517c\u5bb9\u7684\u5b9e\u8df5\u7684\u6b65\u9aa4\uff0c\u786e\u4fdd\u4e0d\u5728\u7ebf\u4e0a\u5f15\u5165\u63a5\u53e3\u517c\u5bb9\u95ee\u9898\u3002\u5982\u679c\u4e0d\u5c0f\u5fc3\u6f0f\u4e86\u5176\u4e2d\u7684\u67d0\u4e2a\u6b65\u9aa4\uff0c\u5219\u53ef\u80fd\u5bfc\u81f4\u5982\u4e0b\u4e00\u4e9b\u63a5\u53e3\u517c\u5bb9\u95ee\u9898\uff1a [ ] \u5982\u679c\u4fee\u6539\u3001\u5220\u9664\u63a5\u53e3\uff1a\u5bfc\u81f4\u4e00\u4e9b\u8001\u7684Consumer\u5c06\u8bf7\u6c42\u8def\u7531\u5230\u65b0\u7684Provider\uff0c\u8c03\u7528\u5931\u8d25\u3002 \u89e3\u51b3\u529e\u6cd5\uff1a\u6307\u5b9aProvider\u7684\u7248\u672c\u53f7\u3001\u6216\u4fee\u6539Consumer\u9002\u914d\u65b0\u7684Provider\u3002 [ ] \u5982\u679c\u5fd8\u8bb0\u4fee\u6539\u5fae\u670d\u52a1\u7248\u672c\u53f7\uff1a\u5bfc\u81f4\u4e00\u4e9b\u65b0\u7684Consumer\u5c06\u8bf7\u6c42\u8def\u7531\u5230\u8001\u7684Provider\uff0c\u8c03\u7528\u5931\u8d25\u3002 \u89e3\u51b3\u529e\u6cd5\uff1a\u5347\u7ea7Provider\u7248\u672c\u53f7\u3001\u5220\u9664\u8001\u7684Provider\u5b9e\u4f8b\u3001\u91cd\u542fConsumer\u3002 [ ] \u5982\u679c\u5fd8\u8bb0\u914d\u7f6eConsumer\u7684\u6700\u5c0f\u4f9d\u8d56\u7248\u672c\uff1a\u5f53\u90e8\u7f72\u987a\u5e8f\u4e3a\u5148\u505c\u6b62Consumer\uff0c\u518d\u542f\u52a8Consumer\uff0c\u518d\u505c\u6b62Provider\uff0c\u518d\u542f\u52a8Provider\u7684\u60c5\u51b5\uff0cConsumer\u65e0\u6cd5\u83b7\u53d6\u5230\u65b0\u63a5\u53e3\u4fe1\u606f\uff0c\u5c31\u91c7\u7528\u4e86\u8001\u63a5\u53e3\uff0c\u5f53Provider\u542f\u52a8\u4ee5\u540e\uff0cConsumer\u53d1\u8d77\u5bf9\u65b0\u63a5\u53e3\u7684\u8c03\u7528\u4f1a\u5931\u8d25\uff1b\u6216\u8005\u5728Provider\u6ca1\u542f\u52a8\u524d\uff0c\u8c03\u7528\u65b0\u63a5\u53e3\u5931\u8d25\u7b49\u3002 \u89e3\u51b3\u529e\u6cd5\uff1a\u5efa\u8bae\u5148\u542f\u52a8Provider\uff0c\u518d\u542f\u52a8Consumer\u3002 \u901a\u7528\u89c4\u907f\u63aa\u65bd\uff1a\u51fa\u73b0\u7684\u63a5\u53e3\u517c\u5bb9\u95ee\u9898\u4e0d\u540c\uff0c\u5904\u7406\u65b9\u5f0f\u4f1a\u6709\u5dee\u5f02\u3002\u6781\u7aef\u60c5\u51b5\uff0c\u53ea\u9700\u8981\u6e05\u7406Provider\u3001Consumer\u7684\u5fae\u670d\u52a1\u4fe1\u606f\uff0c\u7136\u540e\u91cd\u542f\u5fae\u670d\u52a1\u5373\u53ef\u3002\u5f53\u670d\u52a1\u8c03\u7528\u5173\u7cfb\u590d\u6742\u7684\u60c5\u51b5\u4e0b\uff0c\u63a5\u53e3\u517c\u5bb9\u95ee\u9898\u5f71\u54cd\u8303\u56f4\u4f1a\u66f4\u52a0\u5e7f\u6cdb\uff0c\u540c\u65f6\u6e05\u7406Provider\u3001Consumer\u6570\u636e\u4f1a\u53d8\u5f97\u590d\u6742\uff0c\u56e0\u6b64\u5efa\u8bae\u9075\u5faa\u4e0a\u9762\u7684\u89c4\u8303\uff0c\u907f\u514d\u4e0d\u517c\u5bb9\u7684\u60c5\u51b5\u53d1\u751f\u3002 \u5e38\u89c1\u7684\u63a5\u53e3\u4e0d\u517c\u5bb9\u60c5\u51b5\u7684\u65e5\u5fd7 consumer method [com.huawei.paas.cse.demo.CodeFirstPojoIntf:testUserMap] not exist in swagger \u53ef\u80fd\u662fProvider\u589e\u52a0\u4e86\u63a5\u53e3\uff0c\u4f46\u662f\u6ca1\u6709\u66f4\u65b0\u7248\u672c\u53f7\u3002\u9700\u8981\u5220\u9664\u5fae\u670d\u52a1\u6570\u636e\u6216\u8005\u66f4\u65b0\u7248\u672c\u53f7\u540e\u91cd\u65b0\u542f\u52a8Provider\uff0c\u5e76\u91cd\u542fConsumer\u3002 \u5951\u7ea6\u6216\u63a5\u53e3\u53d8\u66f4(\u542b\u589e\u5220\u67e5\u6539\u3001\u53c2\u6570\u53d8\u5316\u7b49)\uff0c\u4f46environment\u672a\u8bbe\u5b9a\u4e3adevelopment\uff0c\u5951\u7ea6\u4e0d\u5141\u8bb8\u66f4\u65b0\u3002schemaId\u4e3adownload\u3001upload\u7684\u4e24\u4e2a\u5951\u7ea6\u5df2\u5b58\u5728\uff0c\u4f46\u65b0\u589e\u7684schemaId\u4e3aTaskTemplateController\u7684\u65e0\u6cd5\u6ce8\u518c\uff0c\u76f8\u5e94\u63a5\u53e3\u81ea\u7136\u4f1a\u8c03\u7528\u5931\u8d25\u3002\u9700\u8981\u5347\u7ea7\u7248\u672c\u53f7\uff0c\u6216\u6307\u5b9aenvironment\u4e3adevelopment\u3002 2018-06-14 22:51:55,239 [ERROR] SchemaIds is different between local and service center. Please change microservice version. id=1f4c94c66fe011e8945700ff37174dd4 appId=uploadapp, name=upload-service, version=0.0.1, local schemaIds=[download, upload, TaskTemplateController], service center schemaIds=[download, upload] org.apache.servicecomb.serviceregistry.task.MicroserviceRegisterTask.checkSchemaIdSet(MicroserviceRegisterTask.java:116) 2018-06-14 22:51:55,243 [INFO] schemaId download exists true org.apache.servicecomb.serviceregistry.task.MicroserviceRegisterTask.registerSchemas(MicroserviceRegisterTask.java:144) 2018-06-14 22:51:55,246 [INFO] schemaId upload exists true org.apache.servicecomb.serviceregistry.task.MicroserviceRegisterTask.registerSchemas(MicroserviceRegisterTask.java:144) 2018-06-14 22:51:55,249 [WARN] get response for org.apache.servicecomb.serviceregistry.api.response.GetExistenceResponse failed, 400:Bad Request, { errorCode : 400016 , errorMessage : Schema does not exist , detail : schema does not exist. } org.apache.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$null$0(ServiceRegistryClientImpl.java:118) 2018-06-14 22:51:55,250 [INFO] schemaId TaskTemplateController exists false org.apache.servicecomb.serviceregistry.task.MicroserviceRegisterTask.registerSchemas(MicroserviceRegisterTask.java:144) 2018-06-14 22:51:55,258 [ERROR] Register schema 1f4c94c66fe011e8945700ff37174dd4/TaskTemplateController failed, statusCode: 400, statusMessage: Bad Request, description: { errorCode : 400014 , errorMessage : Undefined schema id , detail : schemaId non-exist\uff0c can't be added, environment is production } . org.apache.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.registerSchema(ServiceRegistryClientImpl.java:306) Provider\u65e0\u53ef\u7528\u7248\u672c\uff0c\u8bf7\u67e5Provider\u548cConsumer\u662f\u5426\u5c5e\u4e8e\u540c\u4e00environment(\u9ed8\u8ba4\u4e3aProduction)\uff0c\u4e14\u6210\u529f\u6ce8\u518c\u5230\u670d\u52a1\u4e2d\u5fc3\u3002 2018-06-15 11:03:56,045 [ERROR] invoke failed, invocation=PRODUCER rest customer-service.reactiveClient.hello org.apache.servicecomb.swagger.invocation.exception.DefaultExceptionToResponseConverter.convert(DefaultExceptionToResponseConverter.java:35) java.lang.IllegalStateException: Probably invoke a service before it is registered, appId=uploadapp, name=upload-service at org.apache.servicecomb.core.definition.schema.ConsumerSchemaFactory.getOrCreateMicroserviceMeta(ConsumerSchemaFactory.java:90) at org.apache.servicecomb.core.provider.consumer.ReferenceConfig. init (ReferenceConfig.java:36) at org.apache.servicecomb.core.provider.consumer.ConsumerProviderManager.getReferenceConfig(ConsumerProviderManager.java:82) \u672c\u5730\u5f00\u53d1\u8c03\u8bd5\u65f6\u65e0\u6cd5\u4f7f\u7528\u90e8\u5206\u4e91\u4e0a\u4eea\u8868\u76d8\u529f\u80fd\uff0c\u4f1a\u51fa\u73b0\u4e0b\u8ff0\u5f02\u5e38\uff0c\u4e0d\u5f71\u54cd\u529f\u80fd\uff0c\u53ef\u4ee5\u5ffd\u7565\u3002\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6eservicecomb.monitor.client.enable\u4e3afalse\u7981\u7528\u4eea\u8868\u76d8\u529f\u80fd\u3002 2018-06-14 22:23:59,407 [WARN] { errorCode : 400012 , errorMessage : Micro-service does not exist , detail : provider not exist, consumer 8e24bc416fde11e8945700ff37174dd4 find provider default/CseMonitoring/latest } org.apache.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$null$4(ServiceRegistryClientImpl.java:199) 2018-06-14 22:23:59,408 [ERROR] Can not find any instances from service center due to previous errors. service=default/CseMonitoring/latest org.apache.servicecomb.serviceregistry.registry.AbstractServiceRegistry.findServiceInstances(AbstractServiceRegistry.java:256) \u4e0b\u9762\u4e24\u79cd\u9519\u8bef(\u524d\u8005\u76f4\u63a5\u6d88\u8d39upload-service\uff0c\u540e\u8005\u901a\u8fc7edge-service\u6d88\u8d39upload-service)\u5747\u8868\u793a\u63a5\u53e3\u672a\u6ce8\u518c\u5230\u670d\u52a1\u4e2d\u5fc3\u6216\u6d88\u8d39\u8005\u672a\u62ff\u5230\u6700\u65b0\u5951\u7ea6\uff0c\u8c03\u7528\u62a5locate path failed. \u8bf7\u6392\u9664\uff1a1\u3001Provider\u5bf9\u5e94\u63a5\u53e3\u5951\u7ea6\u5df2\u6ce8\u518c\u5230\u670d\u52a1\u4e2d\u5fc3\uff0c\u5185\u5bb9\u4e0e\u672c\u5730\u5e94\u7528\u542f\u52a8\u65f6\u8f93\u51fa\u4e00\u81f4\uff1b2\u3001\u786e\u4fddConsumer\u548cedge-service\u5728Provider\u542f\u52a8\u540e\uff0c\u624b\u52a8\u91cd\u542f\u4ee5\u91cd\u65b0\u83b7\u53d6Provider\u5951\u7ea6\u4fe1\u606f\uff1b3\u3001Debug\u542f\u52a8Consumer\uff0c\u627e\u5230ConsumerSchemaFactory\u7c7b\u4e2d\u7684loadSwagger\uff08\u4f4d\u4e8eservicecomb\u7684java-chassis-core\u5305\u4e2d\uff09\uff0c\u67e5\u770bschemaContent\u5185\u5bb9\u662f\u5426\u62ff\u5230Consumer\u5bf9\u5e94\u5951\u7ea6\u5185\u5bb9\u3002 2018-06-15 14:52:45,312 [ERROR] locate path failed, status:Not Found, http method:GET, path:/favicon.ico/, microserviceName:upload-service org.apache.servicecomb.common.rest.locator.OperationLocator.locate(OperationLocator.java:72) 2018-06-15 14:56:35,342 [ERROR] locate path failed, status:Not Found, http method:POST, path:/taskTemplate/uploadTaskTemplate/, microserviceName:upload-service org.apache.servicecomb.common.rest.locator.OperationLocator.locate(OperationLocator.java:72) 2018-06-15 14:56:35,344 [ERROR] edge server failed. org.apache.servicecomb.edge.core.AbstractEdgeDispatcher.onFailure(AbstractEdgeDispatcher.java:33) InvocationException: code=404;msg=CommonExceptionData [message=Not Found] at org.apache.servicecomb.common.rest.locator.OperationLocator.locate(OperationLocator.java:77) at org.apache.servicecomb.common.rest.locator.ServicePathManager.consumerLocateOperation(ServicePathManager.java:107) at org.apache.servicecomb.edge.core.EdgeInvocation.locateOperation(EdgeInvocation.java:114) at org.apache.servicecomb.common.rest.AbstractRestInvocation.findRestOperation(AbstractRestInvocation.java:77) at org.apache.servicecomb.edge.core.EdgeInvocation.edgeInvoke(EdgeInvocation.java:66) at com.huawei.cse.houseapp.edge.ApiDispatcher.onRequest(ApiDispatcher.java:84) at io.vertx.ext.web.impl.RouteImpl.handleContext(RouteImpl.java:223) \u6d88\u8d39\u63a5\u53e3\u65f6Content-Type\u4e0d\u4e00\u81f4\u5c06\u62a5\u53c2\u6570\u975e\u6cd5\uff0c\u5982\u524d\u7aef\u4f7f\u7528form-data\uff0cProvider\u9700\u8981application/json 2018-06-27 14:51:13,939 [ERROR] invoke failed, invocation=PRODUCER rest loadbalance-isolation-server.hello.sayHello org.apache.servicecomb.swagger.invocation.exception.DefaultExceptionToResponseConverter.convert(DefaultExceptionToResponseConverter.java:35) java.lang.IllegalArgumentException: argument type mismatch at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498)","title":"\u5fae\u670d\u52a1\u63a5\u53e3\u517c\u5bb9\u5e38\u89c1\u95ee\u9898"},{"location":"question-and-answer/interface-compatibility/#_1","text":"\u5728\u8fdb\u884c\u5fae\u670d\u52a1\u6301\u7eed\u8fed\u4ee3\u5f00\u53d1\u7684\u8fc7\u7a0b\u4e2d\uff0c\u7531\u4e8e\u65b0\u7279\u6027\u4e0d\u505c\u7684\u52a0\u5165\uff0c\u4e00\u4e9b\u8fc7\u65f6\u7684\u7279\u6027\u4e0d\u505c\u7684\u4fee\u6539\uff0c\u63a5\u53e3\u517c\u5bb9\u95ee\u9898\u9762\u4e34\u5de8\u5927\u7684\u6311\u6218\uff0c\u7279\u522b\u662f\u5728\u5141\u8bb8\u591a\u7248\u672c\u5171\u5b58\uff08\u7070\u5ea6\u53d1\u5e03\uff09\u7684\u73af\u5883\u3002\u672c\u7ae0\u8282\u4e3b\u8981\u63cf\u8ff0\u63a5\u53e3\u517c\u5bb9\u7ba1\u7406\u7684\u4e00\u4e9b\u5b9e\u8df5\u5efa\u8bae\uff0c\u4ee5\u53ca\u5728\u4f7f\u7528ServiceComb\u8fc7\u7a0b\u4e2d\u78b0\u5230\u4e86\u517c\u5bb9\u6027\u95ee\u9898\u7684\u89e3\u51b3\u529e\u6cd5\u3002\u7531\u4e8e\u5fae\u670d\u52a1\u4e00\u822c\u90fd\u901a\u8fc7REST\u63a5\u53e3\u5bf9\u5916\u63d0\u4f9b\u670d\u52a1\uff0c\u6ca1\u6709\u7279\u6b8a\u8bf4\u660e\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u91cc\u7684\u63a5\u53e3\u90fd\u6307REST\u63a5\u53e3\u3002","title":"\u5fae\u670d\u52a1\u63a5\u53e3\u517c\u5bb9\u5e38\u89c1\u95ee\u9898"},{"location":"question-and-answer/interface-compatibility/#_2","text":"\u4e3a\u4e86\u9632\u6b62\u63a5\u53e3\u517c\u5bb9\u95ee\u9898\uff0c\u5f00\u53d1\u8005\u5728\u8fdb\u884c\u63a5\u53e3\u53d8\u66f4\uff08\u65b0\u589e\u3001\u4fee\u6539\u3001\u5220\u9664\u7b49\uff09\u7684\u65f6\u5019\uff0c\u5efa\u8bae\u9075\u5faa\u4e0b\u9762\u7684\u4e00\u4e9b\u539f\u5219\u3002 \u53ea\u589e\u52a0\u63a5\u53e3\uff0c\u4e0d\u4fee\u6539\u3001\u4e0d\u5220\u9664\u63a5\u53e3\u3002 \u4f5c\u4e3aProvider\uff0c\u589e\u52a0\u63a5\u53e3\u7684\u65f6\u5019\uff0c\u76f8\u5e94\u7684\u5c06\u5fae\u670d\u52a1\u7248\u672c\u53f7\u9012\u589e\uff0c\u6bd4\u5982\u5c062.1.2\u4fee\u6539\u4e3a2.1.3\u3002\u7248\u672c\u53f7\u6309\u7167\u89c4\u8303\u4f7f\u7528x.y.z\u7684\u683c\u5f0f\uff0c\u53ea\u5305\u542b\u6570\u5b57\u4fbf\u4e8e\u7ba1\u7406\uff0c\u5efa\u8bae\u6bcf\u4f4d\u6570\u5b57\u4e0d\u5927\u4e8e125\u3002 \u4f5c\u4e3aConsumer\uff0c\u4f7f\u7528Provider\u7684\u65b0\u63a5\u53e3\u65f6\u5019\uff0c\u6307\u5b9aProvider\u7684\u6700\u5c0f\u7248\u672c\u53f7\u3002\u6bd4\u5982\uff1a servicecomb: references: ProviderMicroserviceName: # \u4fee\u6539\u4e3aProvide\u7684\u5fae\u670d\u52a1\u540d\u79f0 version-rule: 2.1.3+ \u5176\u4e2dserviceName\u4e3aProvider\u7684\u5fae\u670d\u52a1\u540d\u79f0\u3002 \u5728\u670d\u52a1\u4e2d\u5fc3\uff0c\u5b9a\u671f\u6e05\u7406\u4e0d\u518d\u4f7f\u7528\u7684\u8001\u7248\u672c\u7684\u5fae\u670d\u52a1\u4fe1\u606f\u3002 \u5982\u679c\u5fae\u670d\u52a1\u7684\u7248\u672c\u53f7\u6ca1\u6709\u53d8\u5316\uff0c\u5fae\u670d\u52a1\u542f\u52a8\u7684\u65f6\u5019\uff0c\u4e0d\u4f1a\u8986\u76d6\u670d\u52a1\u4e2d\u5fc3\u7684\u8001\u7248\u672c\u6570\u636e\uff0c\u4eceConsumer\u7684\u89d2\u5ea6\uff0c\u770b\u5230\u7684\u662f\u8001\u7248\u672c\u63a5\u53e3\u3002ServiceComb\u7f3a\u7701\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u51fa\u73b0\u63a5\u53e3\u53d8\u66f4\uff0c\u5e76\u4e14\u5fae\u670d\u52a1\u7248\u672c\u53f7\u6ca1\u6709\u4fee\u6539\uff0c\u542f\u52a8\u4f1a\u5931\u8d25\uff0c\u8fd9\u6837\u5c31\u5f3a\u5236\u8981\u6c42\u5f00\u53d1\u8005\u5fc5\u987b\u4fee\u6539\u7248\u672c\u53f7\uff0c\u907f\u514d\u5c06\u95ee\u9898\u9057\u6f0f\u5230\u751f\u4ea7\u73af\u8282\u3002\u5bf9\u4e8e\u65b0\u9879\u76ee\uff0c\u63a5\u53e3\u4fee\u6539\u548c\u8c03\u6574\u53ef\u80fd\u975e\u5e38\u9891\u7e41\uff0c\u5efa\u8bae\u589e\u52a0\u5982\u4e0b\u914d\u7f6e\uff0c\u53ef\u4ee5\u4e0d\u7528\u4fee\u6539\u7248\u672c\u53f7\uff1a service_description: environment: development \u8fd9\u4e2a\u914d\u7f6e\u9879\u4f7f\u5f97Provider\u5f00\u53d1\u7b80\u5355\u4e86\uff0c\u5982\u679cConsumer\u5df2\u7ecf\u542f\u52a8\uff0c\u5e76\u4e14\u5e0c\u671b\u8c03\u7528\u65b0\u7684\u63a5\u53e3\uff0c\u90a3\u4e48Consumer\u4ecd\u7136\u9700\u8981\u91cd\u542f\u3002","title":"\u4fdd\u8bc1\u63a5\u53e3\u517c\u5bb9\u7684\u5b9e\u8df5"},{"location":"question-and-answer/interface-compatibility/#_3","text":"\u5f00\u53d1\u9636\u6bb5\uff0c\u7531\u4e8e\u5b58\u5728\u9891\u7e41\u7684\u63a5\u53e3\u4fee\u6539\uff0c\u53c8\u4e0d\u60f3\u9891\u7e41\u4fee\u6539\u7248\u672c\u53f7\uff0c\u5bb9\u6613\u672c\u5730\u548c\u670d\u52a1\u4e2d\u5fc3\u5951\u7ea6\u4e0d\u4e00\u81f4\uff0c\u4e14\u5951\u7ea6\u672a\u88ab\u5141\u8bb8\u66f4\u65b0\u5230\u670d\u52a1\u4e2d\u5fc3\uff0c\u5bfc\u81f4\u8c03\u8bd5\u7684\u65f6\u5019\u63a5\u53e3\u8c03\u7528\u5931\u8d25\u7684\u60c5\u51b5\u3002 \u63a8\u8350\u4f7f\u7528ServiceComb\u63d0\u4f9b\u4e86\u5fae\u670d\u52a1\u6309environment\u533a\u5206\u3001\u9694\u79bb\u7684\u80fd\u529b(\u5f53\u524d\u652f\u6301development\u548cproduction)\uff0c\u5141\u8bb8\u5904\u4e8edevelopment\u73af\u5883\u7684\u5fae\u670d\u52a1\u5728\u4e0d\u5347\u7ea7\u7248\u672c\u7684\u60c5\u51b5\u4e0b\uff0c\u4ec5\u9700\u91cd\u542f\u670d\u52a1\u5373\u53ef\u91cd\u65b0\u6ce8\u518c\u5951\u7ea6\u5230\u670d\u52a1\u4e2d\u5fc3\u3002 \u6240\u6709\u5fae\u670d\u52a1\u5728microservice.yaml\u4e2d\u589e\u5982\u4e0b\u914d\u7f6e\uff0c\u4e14\u9700\u8981\u5728Provider\u542f\u52a8\u540e\uff0c\u518d\u91cd\u542fConsumer(\u82e5\u8bf7\u6c42\u8d70edge\uff0c\u9700\u8981\u91cd\u542fedge\u670d\u52a1)\uff1a service_description: name: xxx-service version: 0.0.1 environment: development \u5f00\u53d1\u9636\u6bb5\uff0c\u7531\u4e8e\u5b58\u5728\u9891\u7e41\u7684\u63a5\u53e3\u4fee\u6539\uff0c\u4e5f\u4e0d\u4f1a\u6e05\u7406\u670d\u52a1\u4e2d\u5fc3\u7684\u6570\u636e\uff0c\u5bb9\u6613\u51fa\u73b0\u8c03\u8bd5\u7684\u65f6\u5019\u63a5\u53e3\u8c03\u7528\u5931\u8d25\u7684\u60c5\u51b5\u3002 \u63a8\u8350\u4f7f\u7528\u534e\u4e3a\u516c\u6709\u4e91\u5728\u7ebf\u7684\u670d\u52a1\u4e2d\u5fc3\uff0c\u53ef\u4ee5\u76f4\u63a5\u767b\u5f55\u4f7f\u7528\u5fae\u670d\u52a1\u5f15\u64ce\u63d0\u4f9b\u7684\u5fae\u670d\u52a1\u7ba1\u7406\u529f\u80fd\u5220\u9664\u5fae\u670d\u52a1\u6216\u5fae\u670d\u52a1\u5b9e\u4f8b\u3002\u5fae\u670d\u52a1\u5f15\u64ce\u4e5f\u63d0\u4f9b\u4e86 \u672c\u5730\u8f7b\u91cf\u5316\u670d\u52a1\u4e2d\u5fc3 \uff0c\u5c06\u670d\u52a1\u505c\u6b62\u540e\u5373\u53ef\u6e05\u7406\u670d\u52a1\u4e2d\u5fc3\u6570\u636e\u3002\u670d\u52a1\u4e2d\u5fc3\u53ca\u5176frontend\u4ee3\u7801\u5df2\u5f00\u6e90\uff0c \u9879\u76ee\u5730\u5740 \u3002 \u53d1\u5e03\u9636\u6bb5\uff0c\u9700\u8981\u5ba1\u89c6\u4e0b\u63a5\u53e3\u517c\u5bb9\u7684\u5b9e\u8df5\u7684\u6b65\u9aa4\uff0c\u786e\u4fdd\u4e0d\u5728\u7ebf\u4e0a\u5f15\u5165\u63a5\u53e3\u517c\u5bb9\u95ee\u9898\u3002\u5982\u679c\u4e0d\u5c0f\u5fc3\u6f0f\u4e86\u5176\u4e2d\u7684\u67d0\u4e2a\u6b65\u9aa4\uff0c\u5219\u53ef\u80fd\u5bfc\u81f4\u5982\u4e0b\u4e00\u4e9b\u63a5\u53e3\u517c\u5bb9\u95ee\u9898\uff1a [ ] \u5982\u679c\u4fee\u6539\u3001\u5220\u9664\u63a5\u53e3\uff1a\u5bfc\u81f4\u4e00\u4e9b\u8001\u7684Consumer\u5c06\u8bf7\u6c42\u8def\u7531\u5230\u65b0\u7684Provider\uff0c\u8c03\u7528\u5931\u8d25\u3002 \u89e3\u51b3\u529e\u6cd5\uff1a\u6307\u5b9aProvider\u7684\u7248\u672c\u53f7\u3001\u6216\u4fee\u6539Consumer\u9002\u914d\u65b0\u7684Provider\u3002 [ ] \u5982\u679c\u5fd8\u8bb0\u4fee\u6539\u5fae\u670d\u52a1\u7248\u672c\u53f7\uff1a\u5bfc\u81f4\u4e00\u4e9b\u65b0\u7684Consumer\u5c06\u8bf7\u6c42\u8def\u7531\u5230\u8001\u7684Provider\uff0c\u8c03\u7528\u5931\u8d25\u3002 \u89e3\u51b3\u529e\u6cd5\uff1a\u5347\u7ea7Provider\u7248\u672c\u53f7\u3001\u5220\u9664\u8001\u7684Provider\u5b9e\u4f8b\u3001\u91cd\u542fConsumer\u3002 [ ] \u5982\u679c\u5fd8\u8bb0\u914d\u7f6eConsumer\u7684\u6700\u5c0f\u4f9d\u8d56\u7248\u672c\uff1a\u5f53\u90e8\u7f72\u987a\u5e8f\u4e3a\u5148\u505c\u6b62Consumer\uff0c\u518d\u542f\u52a8Consumer\uff0c\u518d\u505c\u6b62Provider\uff0c\u518d\u542f\u52a8Provider\u7684\u60c5\u51b5\uff0cConsumer\u65e0\u6cd5\u83b7\u53d6\u5230\u65b0\u63a5\u53e3\u4fe1\u606f\uff0c\u5c31\u91c7\u7528\u4e86\u8001\u63a5\u53e3\uff0c\u5f53Provider\u542f\u52a8\u4ee5\u540e\uff0cConsumer\u53d1\u8d77\u5bf9\u65b0\u63a5\u53e3\u7684\u8c03\u7528\u4f1a\u5931\u8d25\uff1b\u6216\u8005\u5728Provider\u6ca1\u542f\u52a8\u524d\uff0c\u8c03\u7528\u65b0\u63a5\u53e3\u5931\u8d25\u7b49\u3002 \u89e3\u51b3\u529e\u6cd5\uff1a\u5efa\u8bae\u5148\u542f\u52a8Provider\uff0c\u518d\u542f\u52a8Consumer\u3002 \u901a\u7528\u89c4\u907f\u63aa\u65bd\uff1a\u51fa\u73b0\u7684\u63a5\u53e3\u517c\u5bb9\u95ee\u9898\u4e0d\u540c\uff0c\u5904\u7406\u65b9\u5f0f\u4f1a\u6709\u5dee\u5f02\u3002\u6781\u7aef\u60c5\u51b5\uff0c\u53ea\u9700\u8981\u6e05\u7406Provider\u3001Consumer\u7684\u5fae\u670d\u52a1\u4fe1\u606f\uff0c\u7136\u540e\u91cd\u542f\u5fae\u670d\u52a1\u5373\u53ef\u3002\u5f53\u670d\u52a1\u8c03\u7528\u5173\u7cfb\u590d\u6742\u7684\u60c5\u51b5\u4e0b\uff0c\u63a5\u53e3\u517c\u5bb9\u95ee\u9898\u5f71\u54cd\u8303\u56f4\u4f1a\u66f4\u52a0\u5e7f\u6cdb\uff0c\u540c\u65f6\u6e05\u7406Provider\u3001Consumer\u6570\u636e\u4f1a\u53d8\u5f97\u590d\u6742\uff0c\u56e0\u6b64\u5efa\u8bae\u9075\u5faa\u4e0a\u9762\u7684\u89c4\u8303\uff0c\u907f\u514d\u4e0d\u517c\u5bb9\u7684\u60c5\u51b5\u53d1\u751f\u3002","title":"\u63a5\u53e3\u517c\u5bb9\u5e38\u89c1\u95ee\u9898\u53ca\u5176\u89e3\u51b3\u529e\u6cd5"},{"location":"question-and-answer/interface-compatibility/#_4","text":"consumer method [com.huawei.paas.cse.demo.CodeFirstPojoIntf:testUserMap] not exist in swagger \u53ef\u80fd\u662fProvider\u589e\u52a0\u4e86\u63a5\u53e3\uff0c\u4f46\u662f\u6ca1\u6709\u66f4\u65b0\u7248\u672c\u53f7\u3002\u9700\u8981\u5220\u9664\u5fae\u670d\u52a1\u6570\u636e\u6216\u8005\u66f4\u65b0\u7248\u672c\u53f7\u540e\u91cd\u65b0\u542f\u52a8Provider\uff0c\u5e76\u91cd\u542fConsumer\u3002 \u5951\u7ea6\u6216\u63a5\u53e3\u53d8\u66f4(\u542b\u589e\u5220\u67e5\u6539\u3001\u53c2\u6570\u53d8\u5316\u7b49)\uff0c\u4f46environment\u672a\u8bbe\u5b9a\u4e3adevelopment\uff0c\u5951\u7ea6\u4e0d\u5141\u8bb8\u66f4\u65b0\u3002schemaId\u4e3adownload\u3001upload\u7684\u4e24\u4e2a\u5951\u7ea6\u5df2\u5b58\u5728\uff0c\u4f46\u65b0\u589e\u7684schemaId\u4e3aTaskTemplateController\u7684\u65e0\u6cd5\u6ce8\u518c\uff0c\u76f8\u5e94\u63a5\u53e3\u81ea\u7136\u4f1a\u8c03\u7528\u5931\u8d25\u3002\u9700\u8981\u5347\u7ea7\u7248\u672c\u53f7\uff0c\u6216\u6307\u5b9aenvironment\u4e3adevelopment\u3002 2018-06-14 22:51:55,239 [ERROR] SchemaIds is different between local and service center. Please change microservice version. id=1f4c94c66fe011e8945700ff37174dd4 appId=uploadapp, name=upload-service, version=0.0.1, local schemaIds=[download, upload, TaskTemplateController], service center schemaIds=[download, upload] org.apache.servicecomb.serviceregistry.task.MicroserviceRegisterTask.checkSchemaIdSet(MicroserviceRegisterTask.java:116) 2018-06-14 22:51:55,243 [INFO] schemaId download exists true org.apache.servicecomb.serviceregistry.task.MicroserviceRegisterTask.registerSchemas(MicroserviceRegisterTask.java:144) 2018-06-14 22:51:55,246 [INFO] schemaId upload exists true org.apache.servicecomb.serviceregistry.task.MicroserviceRegisterTask.registerSchemas(MicroserviceRegisterTask.java:144) 2018-06-14 22:51:55,249 [WARN] get response for org.apache.servicecomb.serviceregistry.api.response.GetExistenceResponse failed, 400:Bad Request, { errorCode : 400016 , errorMessage : Schema does not exist , detail : schema does not exist. } org.apache.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$null$0(ServiceRegistryClientImpl.java:118) 2018-06-14 22:51:55,250 [INFO] schemaId TaskTemplateController exists false org.apache.servicecomb.serviceregistry.task.MicroserviceRegisterTask.registerSchemas(MicroserviceRegisterTask.java:144) 2018-06-14 22:51:55,258 [ERROR] Register schema 1f4c94c66fe011e8945700ff37174dd4/TaskTemplateController failed, statusCode: 400, statusMessage: Bad Request, description: { errorCode : 400014 , errorMessage : Undefined schema id , detail : schemaId non-exist\uff0c can't be added, environment is production } . org.apache.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.registerSchema(ServiceRegistryClientImpl.java:306) Provider\u65e0\u53ef\u7528\u7248\u672c\uff0c\u8bf7\u67e5Provider\u548cConsumer\u662f\u5426\u5c5e\u4e8e\u540c\u4e00environment(\u9ed8\u8ba4\u4e3aProduction)\uff0c\u4e14\u6210\u529f\u6ce8\u518c\u5230\u670d\u52a1\u4e2d\u5fc3\u3002 2018-06-15 11:03:56,045 [ERROR] invoke failed, invocation=PRODUCER rest customer-service.reactiveClient.hello org.apache.servicecomb.swagger.invocation.exception.DefaultExceptionToResponseConverter.convert(DefaultExceptionToResponseConverter.java:35) java.lang.IllegalStateException: Probably invoke a service before it is registered, appId=uploadapp, name=upload-service at org.apache.servicecomb.core.definition.schema.ConsumerSchemaFactory.getOrCreateMicroserviceMeta(ConsumerSchemaFactory.java:90) at org.apache.servicecomb.core.provider.consumer.ReferenceConfig. init (ReferenceConfig.java:36) at org.apache.servicecomb.core.provider.consumer.ConsumerProviderManager.getReferenceConfig(ConsumerProviderManager.java:82) \u672c\u5730\u5f00\u53d1\u8c03\u8bd5\u65f6\u65e0\u6cd5\u4f7f\u7528\u90e8\u5206\u4e91\u4e0a\u4eea\u8868\u76d8\u529f\u80fd\uff0c\u4f1a\u51fa\u73b0\u4e0b\u8ff0\u5f02\u5e38\uff0c\u4e0d\u5f71\u54cd\u529f\u80fd\uff0c\u53ef\u4ee5\u5ffd\u7565\u3002\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6eservicecomb.monitor.client.enable\u4e3afalse\u7981\u7528\u4eea\u8868\u76d8\u529f\u80fd\u3002 2018-06-14 22:23:59,407 [WARN] { errorCode : 400012 , errorMessage : Micro-service does not exist , detail : provider not exist, consumer 8e24bc416fde11e8945700ff37174dd4 find provider default/CseMonitoring/latest } org.apache.servicecomb.serviceregistry.client.http.ServiceRegistryClientImpl.lambda$null$4(ServiceRegistryClientImpl.java:199) 2018-06-14 22:23:59,408 [ERROR] Can not find any instances from service center due to previous errors. service=default/CseMonitoring/latest org.apache.servicecomb.serviceregistry.registry.AbstractServiceRegistry.findServiceInstances(AbstractServiceRegistry.java:256) \u4e0b\u9762\u4e24\u79cd\u9519\u8bef(\u524d\u8005\u76f4\u63a5\u6d88\u8d39upload-service\uff0c\u540e\u8005\u901a\u8fc7edge-service\u6d88\u8d39upload-service)\u5747\u8868\u793a\u63a5\u53e3\u672a\u6ce8\u518c\u5230\u670d\u52a1\u4e2d\u5fc3\u6216\u6d88\u8d39\u8005\u672a\u62ff\u5230\u6700\u65b0\u5951\u7ea6\uff0c\u8c03\u7528\u62a5locate path failed. \u8bf7\u6392\u9664\uff1a1\u3001Provider\u5bf9\u5e94\u63a5\u53e3\u5951\u7ea6\u5df2\u6ce8\u518c\u5230\u670d\u52a1\u4e2d\u5fc3\uff0c\u5185\u5bb9\u4e0e\u672c\u5730\u5e94\u7528\u542f\u52a8\u65f6\u8f93\u51fa\u4e00\u81f4\uff1b2\u3001\u786e\u4fddConsumer\u548cedge-service\u5728Provider\u542f\u52a8\u540e\uff0c\u624b\u52a8\u91cd\u542f\u4ee5\u91cd\u65b0\u83b7\u53d6Provider\u5951\u7ea6\u4fe1\u606f\uff1b3\u3001Debug\u542f\u52a8Consumer\uff0c\u627e\u5230ConsumerSchemaFactory\u7c7b\u4e2d\u7684loadSwagger\uff08\u4f4d\u4e8eservicecomb\u7684java-chassis-core\u5305\u4e2d\uff09\uff0c\u67e5\u770bschemaContent\u5185\u5bb9\u662f\u5426\u62ff\u5230Consumer\u5bf9\u5e94\u5951\u7ea6\u5185\u5bb9\u3002 2018-06-15 14:52:45,312 [ERROR] locate path failed, status:Not Found, http method:GET, path:/favicon.ico/, microserviceName:upload-service org.apache.servicecomb.common.rest.locator.OperationLocator.locate(OperationLocator.java:72) 2018-06-15 14:56:35,342 [ERROR] locate path failed, status:Not Found, http method:POST, path:/taskTemplate/uploadTaskTemplate/, microserviceName:upload-service org.apache.servicecomb.common.rest.locator.OperationLocator.locate(OperationLocator.java:72) 2018-06-15 14:56:35,344 [ERROR] edge server failed. org.apache.servicecomb.edge.core.AbstractEdgeDispatcher.onFailure(AbstractEdgeDispatcher.java:33) InvocationException: code=404;msg=CommonExceptionData [message=Not Found] at org.apache.servicecomb.common.rest.locator.OperationLocator.locate(OperationLocator.java:77) at org.apache.servicecomb.common.rest.locator.ServicePathManager.consumerLocateOperation(ServicePathManager.java:107) at org.apache.servicecomb.edge.core.EdgeInvocation.locateOperation(EdgeInvocation.java:114) at org.apache.servicecomb.common.rest.AbstractRestInvocation.findRestOperation(AbstractRestInvocation.java:77) at org.apache.servicecomb.edge.core.EdgeInvocation.edgeInvoke(EdgeInvocation.java:66) at com.huawei.cse.houseapp.edge.ApiDispatcher.onRequest(ApiDispatcher.java:84) at io.vertx.ext.web.impl.RouteImpl.handleContext(RouteImpl.java:223) \u6d88\u8d39\u63a5\u53e3\u65f6Content-Type\u4e0d\u4e00\u81f4\u5c06\u62a5\u53c2\u6570\u975e\u6cd5\uff0c\u5982\u524d\u7aef\u4f7f\u7528form-data\uff0cProvider\u9700\u8981application/json 2018-06-27 14:51:13,939 [ERROR] invoke failed, invocation=PRODUCER rest loadbalance-isolation-server.hello.sayHello org.apache.servicecomb.swagger.invocation.exception.DefaultExceptionToResponseConverter.convert(DefaultExceptionToResponseConverter.java:35) java.lang.IllegalArgumentException: argument type mismatch at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498)","title":"\u5e38\u89c1\u7684\u63a5\u53e3\u4e0d\u517c\u5bb9\u60c5\u51b5\u7684\u65e5\u5fd7"},{"location":"question-and-answer/question_answer/","text":"\u95ee\u9898\u63cf\u8ff0\uff1a\u5982\u4f55\u81ea\u5b9a\u4e49\u67d0\u4e2aJava\u65b9\u6cd5\u5bf9\u5e94\u7684REST\u63a5\u53e3\u91cc\u7684HTTP Status Code\uff1f \u89e3\u51b3\u65b9\u6cd5\uff1a \u5bf9\u4e8e\u6b63\u5e38\u7684\u8fd4\u56de\u503c\uff0c\u53ef\u4ee5\u901a\u8fc7SwaggerAnnotation\u5b9e\u73b0\uff0c\u4f8b\u5982\uff1a @ApiResponse(code = 300, response = String.class, message = ) public int test(int x) { return 100; } \u5bf9\u4e8e\u5f02\u5e38\u7684\u8fd4\u56de\u503c\uff0c\u53ef\u4ee5\u901a\u8fc7\u629b\u51fa\u81ea\u5b9a\u4e49\u7684InvocationException\u5b9e\u73b0\uff0c\u4f8b\u5982\uff1a\u3001 public String testException(int code) { String strCode = String.valueOf(code); switch (code) { case 200: return strCode; case 456: throw new InvocationException(code, strCode, strCode + error ); case 556: throw new InvocationException(code, strCode, Arrays.asList(strCode + error )); case 557: throw new InvocationException(code, strCode, Arrays.asList(Arrays.asList(strCode + error ))); default: break; } return not expected ; } \u95ee\u9898\u63cf\u8ff0\uff1a \u5982\u4f55\u5b9a\u5236\u81ea\u5df1\u5fae\u670d\u52a1\u7684\u65e5\u5fd7\u914d\u7f6e \u89e3\u51b3\u65b9\u6cd5\uff1a ServiceComb\u4e0d\u7ed1\u5b9a\u65e5\u5fd7\u5668\uff0c\u53ea\u662f\u4f7f\u7528\u4e86slf4j\uff0c\u7528\u6237\u53ef\u4ee5\u81ea\u7531\u9009\u62e9log4j/log4j2/logback\u7b49\u7b49\u3002ServiceComb\u63d0\u4f9b\u4e86\u4e00\u4e2alog4j\u7684\u6269\u5c55\uff0c\u5728\u6807\u51c6log4j\u7684\u57fa\u7840\u4e0a\uff0c\u652f\u6301log4j\u7684properties\u6587\u4ef6\u7684\u589e\u91cf\u914d\u7f6e\u3002 \u9ed8\u8ba4\u4ee5\u89c4\u5219\uff1a\"classpath*:config/log4j.properties\"\u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6 \u5b9e\u9645\u4f1a\u641c\u7d22\u51faclasspath\u4e2d\u6240\u6709\u7684 config/log4j.properties\u548cconfig/log4j.*.properties , \u4ece\u641c\u7d22\u51fa\u7684\u6587\u4ef6\u4e2d\u5207\u51fa \\* \u7684\u90e8\u5206\uff0c\u8fdb\u884calpha\u6392\u5e8f\uff0c\u7136\u540e\u6309\u987a\u5e8f\u52a0\u8f7d\uff0c\u6700\u540e\u5408\u6210\u7684\u6587\u4ef6\u4f5c\u4e3alog4j\u7684\u914d\u7f6e\u6587\u4ef6\u3002 \u5982\u679c\u8981\u4f7f\u7528ServiceComb\u7684log4j\u6269\u5c55\uff0c\u5219\u9700\u8981\u8c03\u7528Log4jUtils.init\uff0c\u5426\u5219\u5b8c\u5168\u6309\u6807\u51c6\u7684\u65e5\u5fd7\u5668\u7684\u89c4\u5219\u4f7f\u7528\u3002 \u95ee\u9898\u63cf\u8ff0\uff1a \u5f53\u670d\u52a1\u914d\u7f6e\u4e86\u591a\u4e2atransport\u7684\u65f6\u5019\uff0c\u5728\u8fd0\u884c\u65f6\u662f\u600e\u4e48\u9009\u62e9\u4f7f\u7528\u54ea\u4e2atransport\u7684\uff1f \u89e3\u51b3\u65b9\u6cd5\uff1a ServiceComb\u7684consumer\u3001transport\u3001handler\u3001producer\u4e4b\u95f4\u662f\u89e3\u8026\u7684\uff0c\u5404\u529f\u80fd\u4e4b\u95f4\u901a\u8fc7\u5951\u7ea6\u5b9a\u4e49\u8054\u5408\u5728\u4e00\u8d77\u5de5\u4f5c\u7684\uff0c\u5373\uff1a consumer\u4f7f\u7528\u900f\u660erpc\uff0c\u8fd8\u662fspringmvc\u5f00\u53d1\u4e0e\u4f7f\u7528highway\uff0c\u8fd8\u662fRESTful\u5728\u7f51\u7edc\u4e0a\u4f20\u8f93\u6ca1\u6709\u5173\u7cfb\u4e0eproducer\u662f\u4f7f\u7528\u900f\u660erpc\uff0c\u8fd8\u662fjaxrs\uff0c\u6216\u8005\u662fspringmvc\u5f00\u53d1\uff0c\u4e5f\u6ca1\u6709\u5173\u7cfbhandler\u4e5f\u4e0d\u611f\u77e5\uff0c\u4e1a\u52a1\u5f00\u53d1\u65b9\u5f0f\u4ee5\u53ca\u4f20\u8f93\u65b9\u5f0f consumer\u8bbf\u95eeproducer\uff0c\u5728\u8fd0\u884c\u65f6\u7684transport\u9009\u62e9\u4e0a\uff0c\u603b\u89c4\u5219\u4e3a\uff1a consumer\u7684transport\u4e0eproducer\u7684endpoint\u53d6\u4ea4\u96c6\uff0c\u5982\u679c\u4ea4\u96c6\u540e\uff0c\u8fd8\u6709\u591a\u4e2atransport\u53ef\u9009\u62e9\uff0c\u5219\u8f6e\u6d41\u4f7f\u7528 \u5206\u89e3\u5f00\u6765\uff0c\u5b58\u5728\u4ee5\u4e0b\u573a\u666f\uff1a \u5f53\u4e00\u4e2a\u5fae\u670d\u52a1producer\u540c\u65f6\u5f00\u653e\u4e86highway\u4ee5\u53caRESTful\u7684endpoint consumer\u8fdb\u7a0b\u4e2d\u53ea\u90e8\u7f72\u4e86highway transport jar\uff0c\u5219\u53ea\u4f1a\u8bbf\u95eeproducer\u7684highway endpoint consumer\u8fdb\u7a0b\u4e2d\u53ea\u90e8\u7f72\u4e86RESTful transport jar\uff0c\u5219\u53ea\u4f1a\u8bbf\u95eeproducer\u7684RESTful endpoint consumer\u8fdb\u7a0b\u4e2d\uff0c\u540c\u65f6\u90e8\u7f72\u4e86highway\u548cRESTful transport jar\uff0c\u5219\u4f1a\u8f6e\u6d41\u8bbf\u95eeproducer\u7684highway\u3001RESTful endpoint \u5982\u679c\uff0c\u6b64\u65f6consumer\u60f3\u56fa\u5b9a\u4f7f\u7528\u67d0\u4e2atransport\u8bbf\u95eeproducer\uff0c\u53ef\u4ee5\u5728consumer\u8fdb\u7a0b\u7684microservice.yaml\u4e2d\u914d\u7f6e\uff0c\u6307\u5b9atransport\u7684\u540d\u79f0: servicecomb: references: service_name : transport: highway \u5f53\u4e00\u4e2a\u5fae\u670d\u52a1producer\u53ea\u5f00\u653e\u4e86highway\u7684endpoint consumer\u8fdb\u7a0b\u53ea\u90e8\u7f72\u4e86highway transport jar\uff0c\u5219\u6b63\u5e38\u4f7f\u7528higway\u8bbf\u95ee consumer\u8fdb\u7a0b\u53ea\u90e8\u7f72\u4e86RESTful transport jar\uff0c\u5219\u65e0\u6cd5\u8bbf\u95ee consumer\u8fdb\u7a0b\u540c\u65f6\u90e8\u7f72\u4e86highway\u548cRESTful transport jar\uff0c\u5219\u6b63\u5e38\u4f7f\u7528highway\u8bbf\u95ee \u5f53\u4e00\u4e2a\u5fae\u670d\u52a1producer\u53ea\u5f00\u653e\u4e86RESTful\u7684endpoint consumer\u8fdb\u7a0b\u53ea\u90e8\u7f72\u4e86highway transport jar\uff0c\u5219\u65e0\u6cd5\u8bbf\u95ee consumer\u8fdb\u7a0b\u53ea\u90e8\u7f72\u4e86RESTful transport jar\uff0c\u5219\u6b63\u5e38\u4f7f\u7528RESTful\u8bbf\u95ee consumer\u8fdb\u7a0b\u540c\u65f6\u90e8\u7f72\u4e86highway\u548cRESTful transport jar\uff0c\u5219\u6b63\u5e38\u4f7f\u7528RESTful\u8bbf\u95ee \u95ee\u9898\u63cf\u8ff0\uff1a swagger body\u53c2\u6570\u7c7b\u578b\u5b9a\u4e49\u9519\u8bef\uff0c\u5bfc\u81f4\u670d\u52a1\u4e2d\u5fc3\u6ce8\u518c\u7684\u5185\u5bb9\u6ca1\u6709\u7c7b\u578b\u4fe1\u606f \u73b0\u8c61\u63cf\u8ff0: \u5b9a\u4e49\u5982\u4e0b\u63a5\u53e3\uff0c\u5c06\u53c2\u6570\u653e\u5230body\u4f20\u9012 /testInherate: post: operationId: testInherate parameters: - in: body name: xxxxx required: false type: string responses: 200: description: response of 200 schema: $ref: #/definitions/ReponseImpl \u91c7\u7528\u4e0a\u9762\u65b9\u5f0f\u5b9a\u4e49\u63a5\u53e3\u3002\u5728\u670d\u52a1\u6ce8\u518c\u4ee5\u540e\uff0c\u4ece\u670d\u52a1\u4e2d\u5fc3\u67e5\u8be2\u4e0b\u6765\u7684\u63a5\u53e3type: string \u4e22\u5931\uff0c\u53d8\u6210\u4e86\uff1a /testInherate: post: operationId: testInherate parameters: - in: body name: xxxxx required: false responses: 200: description: response of 200 schema: $ref: #/definitions/ReponseImpl \u5982\u679c\u5ba2\u6237\u7aef\u6ca1\u6709\u653e\u7f6eswagger\uff0c\u8fd8\u4f1a\u62a5\u544a\u5982\u4e0b\u5f02\u5e38\uff1a Caused by: java.lang.ClassFormatError: Method \"testInherate\" in class ? has illegal signature \" \u89e3\u51b3\u65b9\u6cd5\uff1a \u5b9a\u4e49body\u53c2\u6570\u7684\u7c7b\u578b\u7684\u65f6\u5019\uff0c\u9700\u8981\u4f7f\u7528schema\uff0c\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528type\u3002 /testInherate: post: operationId: testInherate parameters: - in: body name: request required: false schema: type: string responses: 200: description: response of 200 schema: $ref: #/definitions/ReponseImpl \u95ee\u9898\u63cf\u8ff0\uff1a\u5fae\u670d\u52a1\u6846\u67b6\u670d\u52a1\u8c03\u7528\u662f\u5426\u4f7f\u7528\u957f\u8fde\u63a5 \u89e3\u51b3\u65b9\u6cd5\uff1a http\u4f7f\u7528\u7684\u662f\u957f\u8fde\u63a5\uff08\u6709\u8d85\u65f6\u65f6\u95f4\uff09\uff0chighway\u65b9\u5f0f\u4f7f\u7528\u7684\u662f\u957f\u8fde\u63a5\uff08\u4e00\u76f4\u4fdd\u6301\uff09\u3002 \u95ee\u9898\u63cf\u8ff0\uff1a\u670d\u52a1\u65ad\u8fde\u670d\u52a1\u4e2d\u5fc3\u6ce8\u518c\u4fe1\u606f\u662f\u5426\u81ea\u52a8\u5220\u9664 \u89e3\u51b3\u65b9\u6cd5\uff1a \u670d\u52a1\u4e2d\u5fc3\u5fc3\u8df3\u68c0\u6d4b\u5230\u670d\u52a1\u5b9e\u4f8b\u4e0d\u53ef\u7528\uff0c\u53ea\u4f1a\u79fb\u9664\u670d\u52a1\u5b9e\u4f8b\u4fe1\u606f\uff0c\u670d\u52a1\u7684\u9759\u6001\u6570\u636e\u4e0d\u4f1a\u79fb\u9664\u3002 \u95ee\u9898\u63cf\u8ff0\uff1a\u5fae\u670d\u52a1\u6846\u67b6\u5982\u4f55\u5b9e\u73b0\u6570\u636e\u591a\u4e2a\u5fae\u670d\u52a1\u95f4\u900f\u4f20 \u89e3\u51b3\u65b9\u6cd5\uff1a \u900f\u4f20\u6570\u636e\u585e\u5165\uff1a CseHttpEntity xxxx.class httpEntity = new CseHttpEntity (xxx); //\u900f\u4f20\u5185\u5bb9 httpEntity.addContext( contextKey , contextValue ); ResponseEntity String responseEntity = RestTemplateBuilder.create().exchange( cse://springmvc/springmvchello/sayhello ,HttpMethod.POST,httpEntity,String.class); \u900f\u4f20\u6570\u636e\u83b7\u53d6\uff1a @Override @RequestMapping(path= /sayhello ,method = RequestMethod.POST) public String sayHello(@RequestBody Person person,InvocationContext context){ //\u900f\u4f20\u6570\u636e\u83b7\u53d6 context.getContext(); return Hello person + person.getName(); } \u95ee\u9898\u63cf\u8ff0\uff1a\u5fae\u670d\u52a1\u6846\u67b6\u670d\u52a1\u5982\u4f55\u81ea\u5b9a\u4e49\u8fd4\u56de\u72b6\u6001\u7801 \u89e3\u51b3\u65b9\u6cd5\uff1a @Override @RequestMapping(path = /sayhello ,method = RequestMethod.POST) public String sayHello(@RequestBody Person person){ InvocationContext context = ContextUtils.getInvocationContext(); //\u81ea\u5b9a\u4e49\u72b6\u6001\u7801 context.setStatus(Status.CREATED); return Hello person +person.getName(); } \u95ee\u9898\u63cf\u8ff0\uff1a body Model\u90e8\u5206\u66b4\u9732 \u89e3\u51b3\u65b9\u6cd5\uff1a \u4e00\u4e2a\u63a5\u53e3\u5bf9\u5e94\u7684body\u5bf9\u8c61\u4e2d\uff0c\u53ef\u80fd\u6709\u4e00\u4e9b\u5c5e\u6027\u662f\u5185\u90e8\u7684\uff0c\u4e0d\u60f3\u5f00\u653e\u51fa\u53bb\uff0c\u751f\u6210schema\u7684\u65f6\u5019\u4e0d\u8981\u5e26\u51fa\u53bb\uff0c\u4f7f\u7528\uff1a @ApiModelProperty(hidden = true) \u95ee\u9898\u63cf\u8ff0\uff1a\u6846\u67b6\u83b7\u53d6\u8fdc\u7aefconsumer\u7684\u5730\u5740 \u89e3\u51b3\u65b9\u6cd5\uff1a \u5982\u679c\u4f7f\u7528http rest\u65b9\u5f0f\uff08\u4f7f\u7528transport-rest-vertx\u4f9d\u8d56\uff09\u53ef\u4ee5\u7528\u4e0b\u9762\u8fd9\u79cd\u65b9\u5f0f\u83b7\u53d6\uff1a HttpServletRequest request = (HttpServletRequest) invocation.getHandlerContext().get(RestConst.REST_REQUEST); String host = request.getRemoteHost(); \u5b9e\u9645\u573a\u666f\u662f\u62ff\u6700\u5916\u5c42\u7684\u5730\u5740\uff0c\u6240\u4ee5\u5e94\u8be5\u662fLB\u4f20\u5165\u5230edgeservice\uff0cedgeService\u518d\u653e\u5230context\u5916\u4e0b\u4f20\u9012\u3002 \u95ee\u9898\u63cf\u8ff0\uff1a\u5bf9handler\u63cf\u8ff0 \u89e3\u51b3\u65b9\u6cd5\uff1a consumer\u9ed8\u8ba4\u7684handler\u662fsimpleLB\uff0c\u6ca1\u6709\u914d\u7f6e\u7684\u65f6\u5019handler\u94fe\u4f1a\u4f7f\u7528\u8fd9\u4e2a\uff0c\u5982\u679c\u914d\u7f6e\u4e86handler\uff0c\u91cc\u9762\u4e00\u5b9a\u8981\u5305\u542blb\u7684handler\uff0c\u5426\u5219\u8c03\u7528\u62a5\u9519\uff0c\u9700\u8981\u5728\u6587\u6863\u91cc\u9762\u8fdb\u884c\u8bf4\u660e\u3002 \u95ee\u9898\u63cf\u8ff0\uff1anetty\u7248\u672c\u95ee\u9898 \u89e3\u51b3\u65b9\u6cd5\uff1a netty3\u548cnetty4\u662f\u5b8c\u5168\u4e0d\u540c\u7684\u4e09\u65b9\u4ef6\uff0c\u56e0\u4e3a\u5750\u6807\u8ddfpackage\u90fd\u4e0d\u76f8\u540c\uff0c\u6240\u4ee5\u53ef\u4ee5\u5171\u5b58\uff0c\u4f46\u662f\u8981\u6ce8\u610f\u5c0f\u7248\u672c\u95ee\u9898\uff0c\u5c0f\u7248\u672c\u5fc5\u987b\u4f7f\u7528\u7684\u7248\u672c\u3002 \u95ee\u9898\u63cf\u8ff0\uff1a\u670d\u52a1\u8d85\u65f6\u8bbe\u7f6e \u89e3\u51b3\u65b9\u6cd5\uff1a \u5728\u5fae\u670d\u52a1\u63cf\u8ff0\u6587\u4ef6\uff08microservice.yaml\uff09\u4e2d\u6dfb\u52a0\u5982\u4e0b\u914d\u7f6e\uff1a servicecomb: request: timeout: 30000 \u95ee\u9898\u63cf\u8ff0\uff1a\u670d\u52a1\u6cbb\u7406\u7684\u5904\u7406\u94fe\u987a\u5e8f\u662f\u5426\u6709\u8981\u6c42\uff1f \u89e3\u51b3\u65b9\u6cd5\uff1a \u5904\u7406\u94fe\u7684\u987a\u5e8f\u4e0d\u540c\uff0c\u90a3\u4e48\u7cfb\u7edf\u5de5\u4f5c\u884c\u4e3a\u4e5f\u4e0d\u540c\u3002 \u4e0b\u9762\u5217\u4e3e\u4e00\u4e0b\u5e38\u89c1\u95ee\u9898\u3002 1\u3001loadbalance\u548cbizkeeper-consumer \u8fd9\u4e24\u4e2a\u987a\u5e8f\u53ef\u4ee5\u968f\u673a\u7ec4\u5408\u3002\u4f46\u662f\u884c\u4e3a\u662f\u4e0d\u4e00\u6837\u7684\u3002 \u5f53loadbalance\u5728\u524d\u9762\u7684\u65f6\u5019\uff0c\u90a3\u4e48loadbalance\u63d0\u4f9b\u7684\u91cd\u8bd5\u529f\u80fd\u4f1a\u5728bizkeeper-consumer\u629b\u51fa\u5f02\u5e38\u65f6\u53d1\u751f\uff0c\u6bd4\u5982\u8d85\u65f6\u7b49\u3002\u4f46\u662f\u5982\u679c\u5df2\u7ecf\u505a\u4e86fallbackpolicy\u914d\u7f6e\uff0c\u6bd4\u5982returnnull\uff0c\u90a3\u4e48loadbalance\u5219\u4e0d\u4f1a\u91cd\u8bd5\u3002 \u5982\u679cloadbalance\u5728\u540e\u9762\uff0c\u90a3\u4e48loadbalance\u7684\u91cd\u8bd5\u4f1a\u5ef6\u957f\u8d85\u65f6\u65f6\u95f4\uff0c\u5373\u4f7f\u91cd\u8bd5\u6210\u529f\uff0c\u5982\u679cbizkeeper-consumer\u8bbe\u7f6e\u7684\u8d85\u65f6\u65f6\u95f4\u4e0d\u591f\uff0c\u90a3\u4e48\u6700\u7ec8\u7684\u8c03\u7528\u7ed3\u679c\u4e5f\u662f\u5931\u8d25\u3002 2\u3001tracing-consumer\uff0csla-consumer\uff0ctracing-provider\uff0csla-provider \u8fd9\u4e9b\u5904\u7406\u94fe\u5efa\u8bae\u653e\u5230\u5904\u7406\u94fe\u7684\u6700\u5f00\u59cb\u4f4d\u7f6e\uff0c\u4fdd\u8bc1\u6210\u529f\u3001\u5931\u8d25\u7684\u60c5\u51b5\u90fd\u53ef\u4ee5\u8bb0\u5f55\u65e5\u5fd7\uff08\u7531\u4e8e\u8bb0\u5f55\u65e5\u5fd7\u9700\u8981IP\u7b49\u4fe1\u606f\uff0c\u5bf9\u4e8e\u6d88\u8d39\u8005\uff0c\u53ea\u80fd\u653e\u5230loadbalance\u540e\u9762\uff09\u3002 \u5982\u679c\u4e0d\u9700\u8981\u8bb0\u5f55\u5ba2\u6237\u7aef\u8fd4\u56de\u7684\u5f02\u5e38\uff0c\u5219\u53ef\u4ee5\u653e\u5230\u672b\u5c3e\uff0c\u53ea\u5173\u6ce8\u7f51\u7edc\u5c42\u8fd4\u56de\u7684\u9519\u8bef\u3002\u4f46\u662f\u5982\u679cbizkeeper-consumer\u7b49\u8d85\u65f6\u63d0\u524d\u8fd4\u56de\u7684\u8bdd\uff0c\u5219\u53ef\u80fd\u4e0d\u4f1a\u8bb0\u5f55\u65e5\u5fd7\u3002 3\u3001\u5efa\u8bae\u7684\u987a\u5e8f Consumer: loadbalance, tracing-consumer, sla-consumer, bizkeeper-consumer Provider: tracing-provider, sla-provider, bizkeeper-provider \u8fd9\u79cd\u987a\u5e8f\u80fd\u591f\u6ee1\u8db3\u5927\u591a\u6570\u573a\u666f\uff0c\u5e76\u4e14\u4e0d\u5bb9\u6613\u51fa\u73b0\u4e0d\u53ef\u7406\u89e3\u7684\u9519\u8bef\u3002 \u95ee\u9898\u63cf\u8ff0\uff1a \u6587\u4ef6\u4e0a\u4f20\u4e2d\u914d\u7f6e\u9879\u6700\u5927\u8bf7\u6c42\u5927\u5c0f\u7684\u542b\u4e49 \u914d\u7f6e\u9879\uff1a servicecomb.uploads.maxSize \u542b\u4e49\uff1a \u8bf7\u6c42\u4f53\u4e2d\u5141\u8bb8\u7684\u6700\u5927\u5b57\u8282\u6570\uff0c\u9ed8\u8ba4\u503c\u4e3a-1\uff0c\u8868\u793a\u6ca1\u6709\u9650\u5236\u3002","title":"Q & A"},{"location":"question-and-answer/question_answer/#javaresthttp-status-code","text":"\u89e3\u51b3\u65b9\u6cd5\uff1a \u5bf9\u4e8e\u6b63\u5e38\u7684\u8fd4\u56de\u503c\uff0c\u53ef\u4ee5\u901a\u8fc7SwaggerAnnotation\u5b9e\u73b0\uff0c\u4f8b\u5982\uff1a @ApiResponse(code = 300, response = String.class, message = ) public int test(int x) { return 100; } \u5bf9\u4e8e\u5f02\u5e38\u7684\u8fd4\u56de\u503c\uff0c\u53ef\u4ee5\u901a\u8fc7\u629b\u51fa\u81ea\u5b9a\u4e49\u7684InvocationException\u5b9e\u73b0\uff0c\u4f8b\u5982\uff1a\u3001 public String testException(int code) { String strCode = String.valueOf(code); switch (code) { case 200: return strCode; case 456: throw new InvocationException(code, strCode, strCode + error ); case 556: throw new InvocationException(code, strCode, Arrays.asList(strCode + error )); case 557: throw new InvocationException(code, strCode, Arrays.asList(Arrays.asList(strCode + error ))); default: break; } return not expected ; }","title":"\u95ee\u9898\u63cf\u8ff0\uff1a\u5982\u4f55\u81ea\u5b9a\u4e49\u67d0\u4e2aJava\u65b9\u6cd5\u5bf9\u5e94\u7684REST\u63a5\u53e3\u91cc\u7684HTTP Status Code\uff1f"},{"location":"question-and-answer/question_answer/#_1","text":"\u89e3\u51b3\u65b9\u6cd5\uff1a ServiceComb\u4e0d\u7ed1\u5b9a\u65e5\u5fd7\u5668\uff0c\u53ea\u662f\u4f7f\u7528\u4e86slf4j\uff0c\u7528\u6237\u53ef\u4ee5\u81ea\u7531\u9009\u62e9log4j/log4j2/logback\u7b49\u7b49\u3002ServiceComb\u63d0\u4f9b\u4e86\u4e00\u4e2alog4j\u7684\u6269\u5c55\uff0c\u5728\u6807\u51c6log4j\u7684\u57fa\u7840\u4e0a\uff0c\u652f\u6301log4j\u7684properties\u6587\u4ef6\u7684\u589e\u91cf\u914d\u7f6e\u3002 \u9ed8\u8ba4\u4ee5\u89c4\u5219\uff1a\"classpath*:config/log4j.properties\"\u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6 \u5b9e\u9645\u4f1a\u641c\u7d22\u51faclasspath\u4e2d\u6240\u6709\u7684 config/log4j.properties\u548cconfig/log4j.*.properties , \u4ece\u641c\u7d22\u51fa\u7684\u6587\u4ef6\u4e2d\u5207\u51fa \\* \u7684\u90e8\u5206\uff0c\u8fdb\u884calpha\u6392\u5e8f\uff0c\u7136\u540e\u6309\u987a\u5e8f\u52a0\u8f7d\uff0c\u6700\u540e\u5408\u6210\u7684\u6587\u4ef6\u4f5c\u4e3alog4j\u7684\u914d\u7f6e\u6587\u4ef6\u3002 \u5982\u679c\u8981\u4f7f\u7528ServiceComb\u7684log4j\u6269\u5c55\uff0c\u5219\u9700\u8981\u8c03\u7528Log4jUtils.init\uff0c\u5426\u5219\u5b8c\u5168\u6309\u6807\u51c6\u7684\u65e5\u5fd7\u5668\u7684\u89c4\u5219\u4f7f\u7528\u3002","title":"\u95ee\u9898\u63cf\u8ff0\uff1a \u5982\u4f55\u5b9a\u5236\u81ea\u5df1\u5fae\u670d\u52a1\u7684\u65e5\u5fd7\u914d\u7f6e"},{"location":"question-and-answer/question_answer/#transporttransport","text":"\u89e3\u51b3\u65b9\u6cd5\uff1a ServiceComb\u7684consumer\u3001transport\u3001handler\u3001producer\u4e4b\u95f4\u662f\u89e3\u8026\u7684\uff0c\u5404\u529f\u80fd\u4e4b\u95f4\u901a\u8fc7\u5951\u7ea6\u5b9a\u4e49\u8054\u5408\u5728\u4e00\u8d77\u5de5\u4f5c\u7684\uff0c\u5373\uff1a consumer\u4f7f\u7528\u900f\u660erpc\uff0c\u8fd8\u662fspringmvc\u5f00\u53d1\u4e0e\u4f7f\u7528highway\uff0c\u8fd8\u662fRESTful\u5728\u7f51\u7edc\u4e0a\u4f20\u8f93\u6ca1\u6709\u5173\u7cfb\u4e0eproducer\u662f\u4f7f\u7528\u900f\u660erpc\uff0c\u8fd8\u662fjaxrs\uff0c\u6216\u8005\u662fspringmvc\u5f00\u53d1\uff0c\u4e5f\u6ca1\u6709\u5173\u7cfbhandler\u4e5f\u4e0d\u611f\u77e5\uff0c\u4e1a\u52a1\u5f00\u53d1\u65b9\u5f0f\u4ee5\u53ca\u4f20\u8f93\u65b9\u5f0f consumer\u8bbf\u95eeproducer\uff0c\u5728\u8fd0\u884c\u65f6\u7684transport\u9009\u62e9\u4e0a\uff0c\u603b\u89c4\u5219\u4e3a\uff1a consumer\u7684transport\u4e0eproducer\u7684endpoint\u53d6\u4ea4\u96c6\uff0c\u5982\u679c\u4ea4\u96c6\u540e\uff0c\u8fd8\u6709\u591a\u4e2atransport\u53ef\u9009\u62e9\uff0c\u5219\u8f6e\u6d41\u4f7f\u7528 \u5206\u89e3\u5f00\u6765\uff0c\u5b58\u5728\u4ee5\u4e0b\u573a\u666f\uff1a \u5f53\u4e00\u4e2a\u5fae\u670d\u52a1producer\u540c\u65f6\u5f00\u653e\u4e86highway\u4ee5\u53caRESTful\u7684endpoint consumer\u8fdb\u7a0b\u4e2d\u53ea\u90e8\u7f72\u4e86highway transport jar\uff0c\u5219\u53ea\u4f1a\u8bbf\u95eeproducer\u7684highway endpoint consumer\u8fdb\u7a0b\u4e2d\u53ea\u90e8\u7f72\u4e86RESTful transport jar\uff0c\u5219\u53ea\u4f1a\u8bbf\u95eeproducer\u7684RESTful endpoint consumer\u8fdb\u7a0b\u4e2d\uff0c\u540c\u65f6\u90e8\u7f72\u4e86highway\u548cRESTful transport jar\uff0c\u5219\u4f1a\u8f6e\u6d41\u8bbf\u95eeproducer\u7684highway\u3001RESTful endpoint \u5982\u679c\uff0c\u6b64\u65f6consumer\u60f3\u56fa\u5b9a\u4f7f\u7528\u67d0\u4e2atransport\u8bbf\u95eeproducer\uff0c\u53ef\u4ee5\u5728consumer\u8fdb\u7a0b\u7684microservice.yaml\u4e2d\u914d\u7f6e\uff0c\u6307\u5b9atransport\u7684\u540d\u79f0: servicecomb: references: service_name : transport: highway \u5f53\u4e00\u4e2a\u5fae\u670d\u52a1producer\u53ea\u5f00\u653e\u4e86highway\u7684endpoint consumer\u8fdb\u7a0b\u53ea\u90e8\u7f72\u4e86highway transport jar\uff0c\u5219\u6b63\u5e38\u4f7f\u7528higway\u8bbf\u95ee consumer\u8fdb\u7a0b\u53ea\u90e8\u7f72\u4e86RESTful transport jar\uff0c\u5219\u65e0\u6cd5\u8bbf\u95ee consumer\u8fdb\u7a0b\u540c\u65f6\u90e8\u7f72\u4e86highway\u548cRESTful transport jar\uff0c\u5219\u6b63\u5e38\u4f7f\u7528highway\u8bbf\u95ee \u5f53\u4e00\u4e2a\u5fae\u670d\u52a1producer\u53ea\u5f00\u653e\u4e86RESTful\u7684endpoint consumer\u8fdb\u7a0b\u53ea\u90e8\u7f72\u4e86highway transport jar\uff0c\u5219\u65e0\u6cd5\u8bbf\u95ee consumer\u8fdb\u7a0b\u53ea\u90e8\u7f72\u4e86RESTful transport jar\uff0c\u5219\u6b63\u5e38\u4f7f\u7528RESTful\u8bbf\u95ee consumer\u8fdb\u7a0b\u540c\u65f6\u90e8\u7f72\u4e86highway\u548cRESTful transport jar\uff0c\u5219\u6b63\u5e38\u4f7f\u7528RESTful\u8bbf\u95ee","title":"\u95ee\u9898\u63cf\u8ff0\uff1a \u5f53\u670d\u52a1\u914d\u7f6e\u4e86\u591a\u4e2atransport\u7684\u65f6\u5019\uff0c\u5728\u8fd0\u884c\u65f6\u662f\u600e\u4e48\u9009\u62e9\u4f7f\u7528\u54ea\u4e2atransport\u7684\uff1f"},{"location":"question-and-answer/question_answer/#swagger-body","text":"\u73b0\u8c61\u63cf\u8ff0: \u5b9a\u4e49\u5982\u4e0b\u63a5\u53e3\uff0c\u5c06\u53c2\u6570\u653e\u5230body\u4f20\u9012 /testInherate: post: operationId: testInherate parameters: - in: body name: xxxxx required: false type: string responses: 200: description: response of 200 schema: $ref: #/definitions/ReponseImpl \u91c7\u7528\u4e0a\u9762\u65b9\u5f0f\u5b9a\u4e49\u63a5\u53e3\u3002\u5728\u670d\u52a1\u6ce8\u518c\u4ee5\u540e\uff0c\u4ece\u670d\u52a1\u4e2d\u5fc3\u67e5\u8be2\u4e0b\u6765\u7684\u63a5\u53e3type: string \u4e22\u5931\uff0c\u53d8\u6210\u4e86\uff1a /testInherate: post: operationId: testInherate parameters: - in: body name: xxxxx required: false responses: 200: description: response of 200 schema: $ref: #/definitions/ReponseImpl \u5982\u679c\u5ba2\u6237\u7aef\u6ca1\u6709\u653e\u7f6eswagger\uff0c\u8fd8\u4f1a\u62a5\u544a\u5982\u4e0b\u5f02\u5e38\uff1a Caused by: java.lang.ClassFormatError: Method \"testInherate\" in class ? has illegal signature \" \u89e3\u51b3\u65b9\u6cd5\uff1a \u5b9a\u4e49body\u53c2\u6570\u7684\u7c7b\u578b\u7684\u65f6\u5019\uff0c\u9700\u8981\u4f7f\u7528schema\uff0c\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528type\u3002 /testInherate: post: operationId: testInherate parameters: - in: body name: request required: false schema: type: string responses: 200: description: response of 200 schema: $ref: #/definitions/ReponseImpl","title":"\u95ee\u9898\u63cf\u8ff0\uff1a swagger body\u53c2\u6570\u7c7b\u578b\u5b9a\u4e49\u9519\u8bef\uff0c\u5bfc\u81f4\u670d\u52a1\u4e2d\u5fc3\u6ce8\u518c\u7684\u5185\u5bb9\u6ca1\u6709\u7c7b\u578b\u4fe1\u606f"},{"location":"question-and-answer/question_answer/#_2","text":"\u89e3\u51b3\u65b9\u6cd5\uff1a http\u4f7f\u7528\u7684\u662f\u957f\u8fde\u63a5\uff08\u6709\u8d85\u65f6\u65f6\u95f4\uff09\uff0chighway\u65b9\u5f0f\u4f7f\u7528\u7684\u662f\u957f\u8fde\u63a5\uff08\u4e00\u76f4\u4fdd\u6301\uff09\u3002","title":"\u95ee\u9898\u63cf\u8ff0\uff1a\u5fae\u670d\u52a1\u6846\u67b6\u670d\u52a1\u8c03\u7528\u662f\u5426\u4f7f\u7528\u957f\u8fde\u63a5"},{"location":"question-and-answer/question_answer/#_3","text":"\u89e3\u51b3\u65b9\u6cd5\uff1a \u670d\u52a1\u4e2d\u5fc3\u5fc3\u8df3\u68c0\u6d4b\u5230\u670d\u52a1\u5b9e\u4f8b\u4e0d\u53ef\u7528\uff0c\u53ea\u4f1a\u79fb\u9664\u670d\u52a1\u5b9e\u4f8b\u4fe1\u606f\uff0c\u670d\u52a1\u7684\u9759\u6001\u6570\u636e\u4e0d\u4f1a\u79fb\u9664\u3002","title":"\u95ee\u9898\u63cf\u8ff0\uff1a\u670d\u52a1\u65ad\u8fde\u670d\u52a1\u4e2d\u5fc3\u6ce8\u518c\u4fe1\u606f\u662f\u5426\u81ea\u52a8\u5220\u9664"},{"location":"question-and-answer/question_answer/#_4","text":"\u89e3\u51b3\u65b9\u6cd5\uff1a \u900f\u4f20\u6570\u636e\u585e\u5165\uff1a CseHttpEntity xxxx.class httpEntity = new CseHttpEntity (xxx); //\u900f\u4f20\u5185\u5bb9 httpEntity.addContext( contextKey , contextValue ); ResponseEntity String responseEntity = RestTemplateBuilder.create().exchange( cse://springmvc/springmvchello/sayhello ,HttpMethod.POST,httpEntity,String.class); \u900f\u4f20\u6570\u636e\u83b7\u53d6\uff1a @Override @RequestMapping(path= /sayhello ,method = RequestMethod.POST) public String sayHello(@RequestBody Person person,InvocationContext context){ //\u900f\u4f20\u6570\u636e\u83b7\u53d6 context.getContext(); return Hello person + person.getName(); }","title":"\u95ee\u9898\u63cf\u8ff0\uff1a\u5fae\u670d\u52a1\u6846\u67b6\u5982\u4f55\u5b9e\u73b0\u6570\u636e\u591a\u4e2a\u5fae\u670d\u52a1\u95f4\u900f\u4f20"},{"location":"question-and-answer/question_answer/#_5","text":"\u89e3\u51b3\u65b9\u6cd5\uff1a @Override @RequestMapping(path = /sayhello ,method = RequestMethod.POST) public String sayHello(@RequestBody Person person){ InvocationContext context = ContextUtils.getInvocationContext(); //\u81ea\u5b9a\u4e49\u72b6\u6001\u7801 context.setStatus(Status.CREATED); return Hello person +person.getName(); }","title":"\u95ee\u9898\u63cf\u8ff0\uff1a\u5fae\u670d\u52a1\u6846\u67b6\u670d\u52a1\u5982\u4f55\u81ea\u5b9a\u4e49\u8fd4\u56de\u72b6\u6001\u7801"},{"location":"question-and-answer/question_answer/#body-model","text":"\u89e3\u51b3\u65b9\u6cd5\uff1a \u4e00\u4e2a\u63a5\u53e3\u5bf9\u5e94\u7684body\u5bf9\u8c61\u4e2d\uff0c\u53ef\u80fd\u6709\u4e00\u4e9b\u5c5e\u6027\u662f\u5185\u90e8\u7684\uff0c\u4e0d\u60f3\u5f00\u653e\u51fa\u53bb\uff0c\u751f\u6210schema\u7684\u65f6\u5019\u4e0d\u8981\u5e26\u51fa\u53bb\uff0c\u4f7f\u7528\uff1a @ApiModelProperty(hidden = true)","title":"\u95ee\u9898\u63cf\u8ff0\uff1a body Model\u90e8\u5206\u66b4\u9732"},{"location":"question-and-answer/question_answer/#consumer","text":"\u89e3\u51b3\u65b9\u6cd5\uff1a \u5982\u679c\u4f7f\u7528http rest\u65b9\u5f0f\uff08\u4f7f\u7528transport-rest-vertx\u4f9d\u8d56\uff09\u53ef\u4ee5\u7528\u4e0b\u9762\u8fd9\u79cd\u65b9\u5f0f\u83b7\u53d6\uff1a HttpServletRequest request = (HttpServletRequest) invocation.getHandlerContext().get(RestConst.REST_REQUEST); String host = request.getRemoteHost(); \u5b9e\u9645\u573a\u666f\u662f\u62ff\u6700\u5916\u5c42\u7684\u5730\u5740\uff0c\u6240\u4ee5\u5e94\u8be5\u662fLB\u4f20\u5165\u5230edgeservice\uff0cedgeService\u518d\u653e\u5230context\u5916\u4e0b\u4f20\u9012\u3002","title":"\u95ee\u9898\u63cf\u8ff0\uff1a\u6846\u67b6\u83b7\u53d6\u8fdc\u7aefconsumer\u7684\u5730\u5740"},{"location":"question-and-answer/question_answer/#handler","text":"\u89e3\u51b3\u65b9\u6cd5\uff1a consumer\u9ed8\u8ba4\u7684handler\u662fsimpleLB\uff0c\u6ca1\u6709\u914d\u7f6e\u7684\u65f6\u5019handler\u94fe\u4f1a\u4f7f\u7528\u8fd9\u4e2a\uff0c\u5982\u679c\u914d\u7f6e\u4e86handler\uff0c\u91cc\u9762\u4e00\u5b9a\u8981\u5305\u542blb\u7684handler\uff0c\u5426\u5219\u8c03\u7528\u62a5\u9519\uff0c\u9700\u8981\u5728\u6587\u6863\u91cc\u9762\u8fdb\u884c\u8bf4\u660e\u3002","title":"\u95ee\u9898\u63cf\u8ff0\uff1a\u5bf9handler\u63cf\u8ff0"},{"location":"question-and-answer/question_answer/#netty","text":"\u89e3\u51b3\u65b9\u6cd5\uff1a netty3\u548cnetty4\u662f\u5b8c\u5168\u4e0d\u540c\u7684\u4e09\u65b9\u4ef6\uff0c\u56e0\u4e3a\u5750\u6807\u8ddfpackage\u90fd\u4e0d\u76f8\u540c\uff0c\u6240\u4ee5\u53ef\u4ee5\u5171\u5b58\uff0c\u4f46\u662f\u8981\u6ce8\u610f\u5c0f\u7248\u672c\u95ee\u9898\uff0c\u5c0f\u7248\u672c\u5fc5\u987b\u4f7f\u7528\u7684\u7248\u672c\u3002","title":"\u95ee\u9898\u63cf\u8ff0\uff1anetty\u7248\u672c\u95ee\u9898"},{"location":"question-and-answer/question_answer/#_6","text":"\u89e3\u51b3\u65b9\u6cd5\uff1a \u5728\u5fae\u670d\u52a1\u63cf\u8ff0\u6587\u4ef6\uff08microservice.yaml\uff09\u4e2d\u6dfb\u52a0\u5982\u4e0b\u914d\u7f6e\uff1a servicecomb: request: timeout: 30000","title":"\u95ee\u9898\u63cf\u8ff0\uff1a\u670d\u52a1\u8d85\u65f6\u8bbe\u7f6e"},{"location":"question-and-answer/question_answer/#_7","text":"\u89e3\u51b3\u65b9\u6cd5\uff1a \u5904\u7406\u94fe\u7684\u987a\u5e8f\u4e0d\u540c\uff0c\u90a3\u4e48\u7cfb\u7edf\u5de5\u4f5c\u884c\u4e3a\u4e5f\u4e0d\u540c\u3002 \u4e0b\u9762\u5217\u4e3e\u4e00\u4e0b\u5e38\u89c1\u95ee\u9898\u3002 1\u3001loadbalance\u548cbizkeeper-consumer \u8fd9\u4e24\u4e2a\u987a\u5e8f\u53ef\u4ee5\u968f\u673a\u7ec4\u5408\u3002\u4f46\u662f\u884c\u4e3a\u662f\u4e0d\u4e00\u6837\u7684\u3002 \u5f53loadbalance\u5728\u524d\u9762\u7684\u65f6\u5019\uff0c\u90a3\u4e48loadbalance\u63d0\u4f9b\u7684\u91cd\u8bd5\u529f\u80fd\u4f1a\u5728bizkeeper-consumer\u629b\u51fa\u5f02\u5e38\u65f6\u53d1\u751f\uff0c\u6bd4\u5982\u8d85\u65f6\u7b49\u3002\u4f46\u662f\u5982\u679c\u5df2\u7ecf\u505a\u4e86fallbackpolicy\u914d\u7f6e\uff0c\u6bd4\u5982returnnull\uff0c\u90a3\u4e48loadbalance\u5219\u4e0d\u4f1a\u91cd\u8bd5\u3002 \u5982\u679cloadbalance\u5728\u540e\u9762\uff0c\u90a3\u4e48loadbalance\u7684\u91cd\u8bd5\u4f1a\u5ef6\u957f\u8d85\u65f6\u65f6\u95f4\uff0c\u5373\u4f7f\u91cd\u8bd5\u6210\u529f\uff0c\u5982\u679cbizkeeper-consumer\u8bbe\u7f6e\u7684\u8d85\u65f6\u65f6\u95f4\u4e0d\u591f\uff0c\u90a3\u4e48\u6700\u7ec8\u7684\u8c03\u7528\u7ed3\u679c\u4e5f\u662f\u5931\u8d25\u3002 2\u3001tracing-consumer\uff0csla-consumer\uff0ctracing-provider\uff0csla-provider \u8fd9\u4e9b\u5904\u7406\u94fe\u5efa\u8bae\u653e\u5230\u5904\u7406\u94fe\u7684\u6700\u5f00\u59cb\u4f4d\u7f6e\uff0c\u4fdd\u8bc1\u6210\u529f\u3001\u5931\u8d25\u7684\u60c5\u51b5\u90fd\u53ef\u4ee5\u8bb0\u5f55\u65e5\u5fd7\uff08\u7531\u4e8e\u8bb0\u5f55\u65e5\u5fd7\u9700\u8981IP\u7b49\u4fe1\u606f\uff0c\u5bf9\u4e8e\u6d88\u8d39\u8005\uff0c\u53ea\u80fd\u653e\u5230loadbalance\u540e\u9762\uff09\u3002 \u5982\u679c\u4e0d\u9700\u8981\u8bb0\u5f55\u5ba2\u6237\u7aef\u8fd4\u56de\u7684\u5f02\u5e38\uff0c\u5219\u53ef\u4ee5\u653e\u5230\u672b\u5c3e\uff0c\u53ea\u5173\u6ce8\u7f51\u7edc\u5c42\u8fd4\u56de\u7684\u9519\u8bef\u3002\u4f46\u662f\u5982\u679cbizkeeper-consumer\u7b49\u8d85\u65f6\u63d0\u524d\u8fd4\u56de\u7684\u8bdd\uff0c\u5219\u53ef\u80fd\u4e0d\u4f1a\u8bb0\u5f55\u65e5\u5fd7\u3002 3\u3001\u5efa\u8bae\u7684\u987a\u5e8f Consumer: loadbalance, tracing-consumer, sla-consumer, bizkeeper-consumer Provider: tracing-provider, sla-provider, bizkeeper-provider \u8fd9\u79cd\u987a\u5e8f\u80fd\u591f\u6ee1\u8db3\u5927\u591a\u6570\u573a\u666f\uff0c\u5e76\u4e14\u4e0d\u5bb9\u6613\u51fa\u73b0\u4e0d\u53ef\u7406\u89e3\u7684\u9519\u8bef\u3002","title":"\u95ee\u9898\u63cf\u8ff0\uff1a\u670d\u52a1\u6cbb\u7406\u7684\u5904\u7406\u94fe\u987a\u5e8f\u662f\u5426\u6709\u8981\u6c42\uff1f"},{"location":"question-and-answer/question_answer/#_8","text":"\u914d\u7f6e\u9879\uff1a servicecomb.uploads.maxSize \u542b\u4e49\uff1a \u8bf7\u6c42\u4f53\u4e2d\u5141\u8bb8\u7684\u6700\u5927\u5b57\u8282\u6570\uff0c\u9ed8\u8ba4\u503c\u4e3a-1\uff0c\u8868\u793a\u6ca1\u6709\u9650\u5236\u3002","title":"\u95ee\u9898\u63cf\u8ff0\uff1a \u6587\u4ef6\u4e0a\u4f20\u4e2d\u914d\u7f6e\u9879\u6700\u5927\u8bf7\u6c42\u5927\u5c0f\u7684\u542b\u4e49"},{"location":"references-handlers/bizkeeper/","text":"\u9694\u79bb\u7194\u65ad\u5bb9\u9519 bizkeeper \u6a21\u5757\u96c6\u6210\u4e86 Hystrix , \u63d0\u4f9b\u9694\u79bb\u3001\u7194\u65ad\u548c\u5bb9\u9519\u7b49\u670d\u52a1\u6545\u969c\u4fdd\u62a4\u80fd\u529b\u3002 Java Chassis \u5bf9 Hystrix \u8fdb\u884c\u4e86\u5c01\u88c5\uff0c \u53ea\u9700\u8981\u8fdb\u884c\u7b80\u5355\u7684\u914d\u7f6e\u5373\u53ef\u542f\u7528\u8fd9\u4e9b\u529f\u80fd\u3002 \u5728\u9879\u76ee\u4e2d\u5f15\u5165\u5982\u4e0b Handler \u6a21\u5757\uff0c dependency groupId org.apache.servicecomb /groupId artifactId handler-bizkeeper /artifactId /dependency \u5e76\u4e14\u589e\u52a0 Handler \u914d\u7f6e\uff1a servicecomb: handler: chain: Consumer: default: bizkeeper-consumer Provider: default: bizkeeper-provider \u6ce8\u610f\u4e8b\u9879\uff1a \u5728\u5b9e\u9645\u5fae\u670d\u52a1\u8fd0\u7ef4\u5b9e\u8df5\u4e2d\uff0c\u53d1\u73b0 Hystrix \u5b58\u5728\u5982\u4e0b\u4e00\u4e9b\u95ee\u9898\uff0c \u5f00\u53d1\u8005\u53ef\u4ee5\u7ed3\u5408\u5b9e\u9645\u4e1a\u52a1\u60c5\u51b5\uff0c\u8c28\u614e\u7684\u4f7f\u7528\u8fd9\u4e2a\u6a21\u5757\u3002 Java Chassis \u7684 \u8d1f\u8f7d\u5747\u8861 \u4e5f\u63d0\u4f9b\u4e86\u5b9e\u4f8b\u9694\u79bb\u548c\u9519\u8bef\u91cd\u8bd5\u80fd\u529b\uff0c \u52a0\u4e0a\u5185\u7f6e\u7684 \u7ebf\u7a0b\u6c60\u9694\u79bb \uff0c \u80fd\u591f \u5b9e\u73b0\u5927\u90e8\u5206 Hystrix \u6838\u5fc3\u6cbb\u7406\u80fd\u529b\u3002 \u8c03\u7528\u6808\u5f88\u6df1\uff0c\u5728\u67d0\u4e9b\u5f02\u5e38\u60c5\u51b5\u4e0b\uff0c\u53ef\u80fd\u5c4f\u853d\u5e95\u5c42\u5f02\u5e38\uff0c\u5bfc\u81f4\u95ee\u9898\u539f\u56e0\u5206\u6790\u56f0\u96be\u3002 \u8d85\u65f6\u673a\u5236\u3001\u91cd\u8bd5\u673a\u5236\u548c\u7ebf\u7a0b\u6c60\u9694\u79bb\u673a\u5236\u548c Java Chassis \u7684\u4e00\u4e9b\u5185\u90e8\u673a\u5236\u7684\u534f\u4f5c\u5b58\u5728\u4e00\u4e9b\u4e0d\u53cb\u597d\u7684\u60c5\u51b5\uff0c\u9700\u8981\u7279\u522b\u6ce8\u610f\u5408\u7406\u7684\u5f00\u542f\u8d85\u65f6\u548c\u91cd\u8bd5\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u7981\u7528\u7684\u3002Java Chassis \u53ea\u80fd\u4f7f\u7528\u4fe1\u53f7\u91cf\u9694\u79bb\u673a\u5236\u3002 Hystrix \u7684\u5f15\u5165\u5bf9\u6027\u80fd\u5f71\u54cd\u5f88\u5927\uff0c \u4f1a\u6709 20% \u4ee5\u4e0a\u7684\u6846\u67b6\u6027\u80fd\u635f\u5931\u3002 Hystrix \u9879\u76ee\u76ee\u524d\u5df2\u7ecf\u505c\u6b62\u7ef4\u62a4\u3002 \u6982\u5ff5\u9610\u8ff0 \u670d\u52a1\u6545\u969c\u4fdd\u62a4\u6307\u670d\u52a1\u8bf7\u6c42\u5f02\u5e38\u65f6\uff0c\u5fae\u670d\u52a1\u6240\u91c7\u7528\u7684\u5f02\u5e38\u5904\u7406\u7b56\u7565\uff0c \u6839\u636e\u5904\u7406\u673a\u5236\u548c\u6548\u679c\u628a\u5b83\u5206\u89e3\u4e3a\u4e09\u4e2a\u6280\u672f\u6982\u5ff5\uff1a\u201c\u9694\u79bb\u201d\u3001\u201c\u7194\u65ad\u201d\u3001\u201c\u5bb9\u9519\u201d\uff1a \u201c\u9694\u79bb\u201d\u662f\u4e00\u79cd\u5f02\u5e38\u68c0\u6d4b\u673a\u5236\uff0c\u5e38\u7528\u7684\u68c0\u6d4b\u65b9\u6cd5\u662f\u8bf7\u6c42\u8d85\u65f6\u3001\u6d41\u91cf\u8fc7\u5927\u7b49\u3002\u4e00\u822c\u7684\u8bbe\u7f6e\u53c2\u6570\u5305\u62ec\u8d85\u65f6\u65f6\u95f4\u3001\u540c\u65f6\u5e76\u53d1\u8bf7\u6c42\u4e2a\u6570\u7b49\u3002 \u201c\u7194\u65ad\u201d\u662f\u4e00\u79cd\u5f02\u5e38\u53cd\u5e94\u673a\u5236\uff0c\u201c\u7194\u65ad\u201d\u4f9d\u8d56\u4e8e\u201c\u9694\u79bb\u201d\u3002\u7194\u65ad\u901a\u5e38\u57fa\u4e8e\u9519\u8bef\u7387\u6765\u5b9e\u73b0\u3002\u4e00\u822c\u7684\u8bbe\u7f6e\u53c2\u6570\u5305\u62ec\u7edf\u8ba1\u8bf7\u6c42\u7684\u4e2a\u6570\u3001\u9519\u8bef\u7387\u7b49\u3002 \u201c\u5bb9\u9519\u201d\u662f\u4e00\u79cd\u5f02\u5e38\u5904\u7406\u673a\u5236\uff0c\u201c\u5bb9\u9519\u201d\u4f9d\u8d56\u4e8e\u201c\u7194\u65ad\u201d\u3002\u7194\u65ad\u4ee5\u540e\uff0c\u4f1a\u8c03\u7528\u201c\u5bb9\u9519\u201d\u7684\u65b9\u6cd5\u3002\u4e00\u822c\u7684\u8bbe\u7f6e\u53c2\u6570\u5305\u62ec\u8c03\u7528\u5bb9\u9519\u65b9\u6cd5\u7684\u6b21\u6570\u7b49\u3002 \u5f53\u524d ServiceComb \u63d0\u4f9b\u4e24\u79cd\u5bb9\u9519\u65b9\u5f0f\uff0c\u5206\u522b\u4e3a\u8fd4\u56de null \u503c\u548c\u629b\u51fa\u5f02\u5e38\u3002 \u6ce8\u610f \uff1a \u5728\u4e0d\u540c\u7684\u4e0a\u4e0b\u6587\uff0c\u201c\u9694\u79bb\u201d\u3001\u201c\u7194\u65ad\u201d\u3001\u201c\u5bb9\u9519\u201d\u3001\u201c\u964d\u7ea7\u201d \u7b49\u6982\u5ff5\u53ef\u80fd\u5b58\u5728\u4e0d\u4e00\u6837\u7684\u542b\u4e49\uff0c\u53d1\u73b0\u8fd9\u91cc\u7684\u5b9a\u4e49\u548c\u5176\u4ed6\u5730\u65b9\u5b58\u5728\u4e0d\u4e00\u6837\u7684 \u7684\u65f6\u5019\u4e0d\u7528\u611f\u5230\u610f\u5916\uff0c \u4f46\u662f\u4e0d\u7528\u62c5\u5fc3\uff0c \u5f53\u670d\u52a1\u51fa\u73b0\u6545\u969c\u7684\u65f6\u5019\uff0c \u9700\u8981\u4e00\u5b9a\u7684\u63aa\u65bd\u8fdb\u884c\u5e94\u5bf9\uff0c \u5bf9\u4e8e\u63aa\u65bd\u548c\u5e94\u5bf9\u65b9\u5f0f\u7684\u7406\u89e3\u80dc\u4e8e\u5bf9\u4e8e\u540d\u8bcd\u7684\u7406\u89e3\u3002 \u914d\u7f6e\u8bf4\u660e \u914d\u7f6e\u9879\u652f\u6301\u5bf9\u6240\u6709\u63a5\u53e3\u751f\u6548\uff0c\u6216\u8005\u5bf9\u67d0\u4e2a\u5fae\u670d\u52a1\u7684\u67d0\u4e2a\u5177\u4f53\u65b9\u6cd5\u751f\u6548\u3002 \u914d\u7f6e\u9879\u751f\u6548\u8303\u56f4 \u6309\u7167\u7c7b\u578b(type)\uff1a\u914d\u7f6e\u9879\u80fd\u591f\u9488\u5bf9Provider, Consumer\u8fdb\u884c\u914d\u7f6e \u6309\u7167\u8303\u56f4(scope)\uff1a\u914d\u7f6e\u9879\u80fd\u591f\u9488\u5bf9 MicroService \u8fdb\u884c\u914d\u7f6e, \u4e5f\u53ef\u4ee5\u9488\u5bf9 schemaId \u548c operationId \u8fdb\u884c\u914d\u7f6e \u672c\u7ae0\u8282\u5982\u679c\u6ca1\u6709\u7279\u6b8a\u8bf4\u660e\uff0c\u6240\u6709\u7684\u914d\u7f6e\u9879\u90fd\u652f\u6301\u6309\u7167\u4e0b\u9762\u7684\u683c\u5f0f\u8fdb\u884c\u914d\u7f6e\uff1a servicecomb.[namespace].[type].[scope].[property name] type \u6307 Provider \u6216\u8005 Consumser\u3002 scope \u6307\u914d\u7f6e\u9879\u751f\u6548\u8303\u56f4\uff0c \u9488\u5bf9\u7279\u5b9a\u7684\u5fae\u670d\u52a1\u7684\u914d\u7f6e\uff0c\u9700\u8981\u589e\u52a0 MicroServiceName, \u9488\u5bf9\u63a5\u53e3\u914d\u7f6e\u7684\uff0c\u9700\u8981\u6307\u5b9a\u63a5\u53e3\u540d\u79f0\uff0c\u63a5\u53e3\u540d \u79f0\u7531 schemaId \u548c operationId \u7ec4\u6210\u3002 \u4e0b\u9762\u662f\u4e00\u4e9b\u914d\u7f6e\u793a\u4f8b\uff1a servicecomb.isolation.Consumer.timeout.enabled servicecomb.isolation.Consumer.DemoService.timeout.enabled servicecomb.isolation.Consumer.DemoService.hello.sayHello.timeout.enabled servicecomb.isolation.Provider.timeout.enabled servicecomb.isolation.Provider.DemoService.timeout.enabled servicecomb.isolation.Provider.DemoService.hello.sayHello.timeout.enabled \u914d\u7f6e\u9879\u5217\u8868 \u914d\u7f6e\u9879 \u9ed8\u8ba4\u503c \u53d6\u503c\u8303\u56f4 \u662f\u5426\u5fc5\u9009 \u542b\u4e49 \u6ce8\u610f servicecomb.isolation.[type].[scope].timeout.enabled FALSE - \u5426 \u662f\u5426\u542f\u7528\u8d85\u65f6\u68c0\u6d4b servicecomb.isolation.[type].[scope].timeoutInMilliseconds 30000 - \u5426 \u8d85\u65f6\u65f6\u95f4\u9608\u503c servicecomb.isolation.[type].[scope].maxConcurrentRequests 10 - \u5426 \u6700\u5927\u5e76\u53d1\u6570\u9608\u503c servicecomb.circuitBreaker.[type].[scope].enabled TRUE - \u5426 \u662f\u5426\u542f\u7528\u7194\u65ad\u63aa\u65bd servicecomb.circuitBreaker.[type].[scope].forceOpen FALSE - \u5426 \u4e0d\u7ba1\u5931\u8d25\u6b21\u6570\uff0c\u90fd\u8fdb\u884c\u7194\u65ad servicecomb.circuitBreaker.[type].[scope].forceClosed FALSE - \u5426 \u4efb\u4f55\u65f6\u5019\u90fd\u4e0d\u7194\u65ad \u5f53\u4e0eforceOpen\u540c\u65f6\u914d\u7f6e\u65f6\uff0cforceOpen\u4f18\u5148\u3002 servicecomb.circuitBreaker.[type].[scope].sleepWindowInMilliseconds 15000 - \u5426 \u7194\u65ad\u540e\uff0c\u591a\u957f\u65f6\u95f4\u6062\u590d \u6062\u590d\u540e\uff0c\u4f1a\u91cd\u65b0\u8ba1\u7b97\u5931\u8d25\u60c5\u51b5\u3002\u6ce8\u610f\uff1a\u5982\u679c\u6062\u590d\u540e\u7684\u8c03\u7528\u7acb\u5373\u5931\u8d25\uff0c\u90a3\u4e48\u4f1a\u7acb\u5373\u91cd\u65b0\u8fdb\u5165\u7194\u65ad\u3002 servicecomb.circuitBreaker.[type].[scope].requestVolumeThreshold 20 - \u5426 10s\u5185\u7edf\u8ba1\u9519\u8bef\u53d1\u751f\u6b21\u6570\u9608\u503c\uff0c\u8d85\u8fc7\u9608\u503c\u5219\u89e6\u53d1\u7194\u65ad \u7531\u4e8e10\u79d2\u8fd8\u4f1a\u88ab\u5212\u5206\u4e3a10\u4e2a1\u79d2\u7684\u7edf\u8ba1\u5468\u671f\uff0c\u7ecf\u8fc71s\u4e2d\u540e\u624d\u4f1a\u5f00\u59cb\u8ba1\u7b97\u9519\u8bef\u7387\uff0c\u56e0\u6b64\u4ece\u8c03\u7528\u5f00\u59cb\u81f3\u5c11\u7ecf\u8fc71s\uff0c\u624d\u4f1a\u53d1\u751f\u7194\u65ad\u3002 servicecomb.circuitBreaker.[type].[scope].errorThresholdPercentage 50 - \u5426 \u9519\u8bef\u7387\u9608\u503c\uff0c\u8fbe\u5230\u9608\u503c\u5219\u89e6\u53d1\u7194\u65ad servicecomb.fallback.[type].[scope].enabled TRUE - \u5426 \u662f\u5426\u542f\u7528\u51fa\u9519\u540e\u7684\u6545\u969c\u5904\u7406\u63aa\u65bd servicecomb.fallback.[type].[scope].maxConcurrentRequests 10 - \u5426 \u5e76\u53d1\u8c03\u7528\u5bb9\u9519\u5904\u7406\u63aa\u65bd\uff08servicecomb.fallbackpolicy.policy\uff09\u7684\u8bf7\u6c42\u6570\uff0c\u8d85\u8fc7\u8fd9\u4e2a\u503c\u5219\u4e0d\u518d\u8c03\u7528\u5904\u7406\u63aa\u65bd\uff0c\u76f4\u63a5\u8fd4\u56de\u5f02\u5e38 servicecomb.fallbackpolicy.[type].[scope].policy throwexception returnull | throwexception \u5426 \u51fa\u9519\u540e\u7684\u5904\u7406\u7b56\u7565 \u5c0f\u5fc3 \uff1a\u8c28\u614e\u4f7f\u7528 servicecomb.isolation.timeout.enabled=true \u3002\u56e0\u4e3a\u7cfb\u7edf\u5904\u7406\u94fe\u90fd\u662f\u5f02\u6b65\u6267\u884c\uff0c\u4e2d\u95f4\u5904\u7406\u94fe\u7684\u8fd4\u56de\uff0c\u4f1a\u5bfc\u81f4 \u540e\u9762\u5904\u7406\u94fe\u7684\u903b\u8f91\u5904\u7406\u6548\u679c\u4e22\u5931\u3002\u5c3d\u53ef\u80fd\u5c06 servicecomb.isolation.timeout.enabled \u4fdd\u6301\u9ed8\u8ba4\u503cfalse\uff0c\u5e76\u4e14\u6b63\u786e\u8bbe\u7f6e\u7f51\u7edc\u5c42\u8d85\u65f6\u65f6 \u95f4 servicecomb.request.timeout=30000 \u3002 \u793a\u4f8b\u4ee3\u7801 servicecomb: handler: chain: Consumer: default: bizkeeper-consumer isolation: Consumer: timeout: enabled: true timeoutInMilliseconds: 30000 circuitBreaker: Consumer: enabled: true sleepWindowInMilliseconds: 15000 requestVolumeThreshold: 20 fallback: Consumer: enabled: true fallbackpolicy: Consumer: policy: throwexception \u8bf4\u660e\uff1a \u964d\u7ea7\u7b56\u7565\u9700\u8981\u542f\u7528\u670d\u52a1\u6cbb\u7406\u80fd\u529b\uff0c\u5bf9\u5e94\u7684\u670d\u52a1\u63d0\u4f9b\u8005\u7684handler\u662f bizkeeper-provider \uff0c\u670d\u52a1\u6d88\u8d39\u8005\u7684handler\u662f bizkeeper-consumer \u3002","title":"\u9694\u79bb\u7194\u65ad\u5bb9\u9519"},{"location":"references-handlers/bizkeeper/#_1","text":"bizkeeper \u6a21\u5757\u96c6\u6210\u4e86 Hystrix , \u63d0\u4f9b\u9694\u79bb\u3001\u7194\u65ad\u548c\u5bb9\u9519\u7b49\u670d\u52a1\u6545\u969c\u4fdd\u62a4\u80fd\u529b\u3002 Java Chassis \u5bf9 Hystrix \u8fdb\u884c\u4e86\u5c01\u88c5\uff0c \u53ea\u9700\u8981\u8fdb\u884c\u7b80\u5355\u7684\u914d\u7f6e\u5373\u53ef\u542f\u7528\u8fd9\u4e9b\u529f\u80fd\u3002 \u5728\u9879\u76ee\u4e2d\u5f15\u5165\u5982\u4e0b Handler \u6a21\u5757\uff0c dependency groupId org.apache.servicecomb /groupId artifactId handler-bizkeeper /artifactId /dependency \u5e76\u4e14\u589e\u52a0 Handler \u914d\u7f6e\uff1a servicecomb: handler: chain: Consumer: default: bizkeeper-consumer Provider: default: bizkeeper-provider \u6ce8\u610f\u4e8b\u9879\uff1a \u5728\u5b9e\u9645\u5fae\u670d\u52a1\u8fd0\u7ef4\u5b9e\u8df5\u4e2d\uff0c\u53d1\u73b0 Hystrix \u5b58\u5728\u5982\u4e0b\u4e00\u4e9b\u95ee\u9898\uff0c \u5f00\u53d1\u8005\u53ef\u4ee5\u7ed3\u5408\u5b9e\u9645\u4e1a\u52a1\u60c5\u51b5\uff0c\u8c28\u614e\u7684\u4f7f\u7528\u8fd9\u4e2a\u6a21\u5757\u3002 Java Chassis \u7684 \u8d1f\u8f7d\u5747\u8861 \u4e5f\u63d0\u4f9b\u4e86\u5b9e\u4f8b\u9694\u79bb\u548c\u9519\u8bef\u91cd\u8bd5\u80fd\u529b\uff0c \u52a0\u4e0a\u5185\u7f6e\u7684 \u7ebf\u7a0b\u6c60\u9694\u79bb \uff0c \u80fd\u591f \u5b9e\u73b0\u5927\u90e8\u5206 Hystrix \u6838\u5fc3\u6cbb\u7406\u80fd\u529b\u3002 \u8c03\u7528\u6808\u5f88\u6df1\uff0c\u5728\u67d0\u4e9b\u5f02\u5e38\u60c5\u51b5\u4e0b\uff0c\u53ef\u80fd\u5c4f\u853d\u5e95\u5c42\u5f02\u5e38\uff0c\u5bfc\u81f4\u95ee\u9898\u539f\u56e0\u5206\u6790\u56f0\u96be\u3002 \u8d85\u65f6\u673a\u5236\u3001\u91cd\u8bd5\u673a\u5236\u548c\u7ebf\u7a0b\u6c60\u9694\u79bb\u673a\u5236\u548c Java Chassis \u7684\u4e00\u4e9b\u5185\u90e8\u673a\u5236\u7684\u534f\u4f5c\u5b58\u5728\u4e00\u4e9b\u4e0d\u53cb\u597d\u7684\u60c5\u51b5\uff0c\u9700\u8981\u7279\u522b\u6ce8\u610f\u5408\u7406\u7684\u5f00\u542f\u8d85\u65f6\u548c\u91cd\u8bd5\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662f\u7981\u7528\u7684\u3002Java Chassis \u53ea\u80fd\u4f7f\u7528\u4fe1\u53f7\u91cf\u9694\u79bb\u673a\u5236\u3002 Hystrix \u7684\u5f15\u5165\u5bf9\u6027\u80fd\u5f71\u54cd\u5f88\u5927\uff0c \u4f1a\u6709 20% \u4ee5\u4e0a\u7684\u6846\u67b6\u6027\u80fd\u635f\u5931\u3002 Hystrix \u9879\u76ee\u76ee\u524d\u5df2\u7ecf\u505c\u6b62\u7ef4\u62a4\u3002","title":"\u9694\u79bb\u7194\u65ad\u5bb9\u9519"},{"location":"references-handlers/bizkeeper/#_2","text":"\u670d\u52a1\u6545\u969c\u4fdd\u62a4\u6307\u670d\u52a1\u8bf7\u6c42\u5f02\u5e38\u65f6\uff0c\u5fae\u670d\u52a1\u6240\u91c7\u7528\u7684\u5f02\u5e38\u5904\u7406\u7b56\u7565\uff0c \u6839\u636e\u5904\u7406\u673a\u5236\u548c\u6548\u679c\u628a\u5b83\u5206\u89e3\u4e3a\u4e09\u4e2a\u6280\u672f\u6982\u5ff5\uff1a\u201c\u9694\u79bb\u201d\u3001\u201c\u7194\u65ad\u201d\u3001\u201c\u5bb9\u9519\u201d\uff1a \u201c\u9694\u79bb\u201d\u662f\u4e00\u79cd\u5f02\u5e38\u68c0\u6d4b\u673a\u5236\uff0c\u5e38\u7528\u7684\u68c0\u6d4b\u65b9\u6cd5\u662f\u8bf7\u6c42\u8d85\u65f6\u3001\u6d41\u91cf\u8fc7\u5927\u7b49\u3002\u4e00\u822c\u7684\u8bbe\u7f6e\u53c2\u6570\u5305\u62ec\u8d85\u65f6\u65f6\u95f4\u3001\u540c\u65f6\u5e76\u53d1\u8bf7\u6c42\u4e2a\u6570\u7b49\u3002 \u201c\u7194\u65ad\u201d\u662f\u4e00\u79cd\u5f02\u5e38\u53cd\u5e94\u673a\u5236\uff0c\u201c\u7194\u65ad\u201d\u4f9d\u8d56\u4e8e\u201c\u9694\u79bb\u201d\u3002\u7194\u65ad\u901a\u5e38\u57fa\u4e8e\u9519\u8bef\u7387\u6765\u5b9e\u73b0\u3002\u4e00\u822c\u7684\u8bbe\u7f6e\u53c2\u6570\u5305\u62ec\u7edf\u8ba1\u8bf7\u6c42\u7684\u4e2a\u6570\u3001\u9519\u8bef\u7387\u7b49\u3002 \u201c\u5bb9\u9519\u201d\u662f\u4e00\u79cd\u5f02\u5e38\u5904\u7406\u673a\u5236\uff0c\u201c\u5bb9\u9519\u201d\u4f9d\u8d56\u4e8e\u201c\u7194\u65ad\u201d\u3002\u7194\u65ad\u4ee5\u540e\uff0c\u4f1a\u8c03\u7528\u201c\u5bb9\u9519\u201d\u7684\u65b9\u6cd5\u3002\u4e00\u822c\u7684\u8bbe\u7f6e\u53c2\u6570\u5305\u62ec\u8c03\u7528\u5bb9\u9519\u65b9\u6cd5\u7684\u6b21\u6570\u7b49\u3002 \u5f53\u524d ServiceComb \u63d0\u4f9b\u4e24\u79cd\u5bb9\u9519\u65b9\u5f0f\uff0c\u5206\u522b\u4e3a\u8fd4\u56de null \u503c\u548c\u629b\u51fa\u5f02\u5e38\u3002 \u6ce8\u610f \uff1a \u5728\u4e0d\u540c\u7684\u4e0a\u4e0b\u6587\uff0c\u201c\u9694\u79bb\u201d\u3001\u201c\u7194\u65ad\u201d\u3001\u201c\u5bb9\u9519\u201d\u3001\u201c\u964d\u7ea7\u201d \u7b49\u6982\u5ff5\u53ef\u80fd\u5b58\u5728\u4e0d\u4e00\u6837\u7684\u542b\u4e49\uff0c\u53d1\u73b0\u8fd9\u91cc\u7684\u5b9a\u4e49\u548c\u5176\u4ed6\u5730\u65b9\u5b58\u5728\u4e0d\u4e00\u6837\u7684 \u7684\u65f6\u5019\u4e0d\u7528\u611f\u5230\u610f\u5916\uff0c \u4f46\u662f\u4e0d\u7528\u62c5\u5fc3\uff0c \u5f53\u670d\u52a1\u51fa\u73b0\u6545\u969c\u7684\u65f6\u5019\uff0c \u9700\u8981\u4e00\u5b9a\u7684\u63aa\u65bd\u8fdb\u884c\u5e94\u5bf9\uff0c \u5bf9\u4e8e\u63aa\u65bd\u548c\u5e94\u5bf9\u65b9\u5f0f\u7684\u7406\u89e3\u80dc\u4e8e\u5bf9\u4e8e\u540d\u8bcd\u7684\u7406\u89e3\u3002","title":"\u6982\u5ff5\u9610\u8ff0"},{"location":"references-handlers/bizkeeper/#_3","text":"\u914d\u7f6e\u9879\u652f\u6301\u5bf9\u6240\u6709\u63a5\u53e3\u751f\u6548\uff0c\u6216\u8005\u5bf9\u67d0\u4e2a\u5fae\u670d\u52a1\u7684\u67d0\u4e2a\u5177\u4f53\u65b9\u6cd5\u751f\u6548\u3002 \u914d\u7f6e\u9879\u751f\u6548\u8303\u56f4 \u6309\u7167\u7c7b\u578b(type)\uff1a\u914d\u7f6e\u9879\u80fd\u591f\u9488\u5bf9Provider, Consumer\u8fdb\u884c\u914d\u7f6e \u6309\u7167\u8303\u56f4(scope)\uff1a\u914d\u7f6e\u9879\u80fd\u591f\u9488\u5bf9 MicroService \u8fdb\u884c\u914d\u7f6e, \u4e5f\u53ef\u4ee5\u9488\u5bf9 schemaId \u548c operationId \u8fdb\u884c\u914d\u7f6e \u672c\u7ae0\u8282\u5982\u679c\u6ca1\u6709\u7279\u6b8a\u8bf4\u660e\uff0c\u6240\u6709\u7684\u914d\u7f6e\u9879\u90fd\u652f\u6301\u6309\u7167\u4e0b\u9762\u7684\u683c\u5f0f\u8fdb\u884c\u914d\u7f6e\uff1a servicecomb.[namespace].[type].[scope].[property name] type \u6307 Provider \u6216\u8005 Consumser\u3002 scope \u6307\u914d\u7f6e\u9879\u751f\u6548\u8303\u56f4\uff0c \u9488\u5bf9\u7279\u5b9a\u7684\u5fae\u670d\u52a1\u7684\u914d\u7f6e\uff0c\u9700\u8981\u589e\u52a0 MicroServiceName, \u9488\u5bf9\u63a5\u53e3\u914d\u7f6e\u7684\uff0c\u9700\u8981\u6307\u5b9a\u63a5\u53e3\u540d\u79f0\uff0c\u63a5\u53e3\u540d \u79f0\u7531 schemaId \u548c operationId \u7ec4\u6210\u3002 \u4e0b\u9762\u662f\u4e00\u4e9b\u914d\u7f6e\u793a\u4f8b\uff1a servicecomb.isolation.Consumer.timeout.enabled servicecomb.isolation.Consumer.DemoService.timeout.enabled servicecomb.isolation.Consumer.DemoService.hello.sayHello.timeout.enabled servicecomb.isolation.Provider.timeout.enabled servicecomb.isolation.Provider.DemoService.timeout.enabled servicecomb.isolation.Provider.DemoService.hello.sayHello.timeout.enabled \u914d\u7f6e\u9879\u5217\u8868 \u914d\u7f6e\u9879 \u9ed8\u8ba4\u503c \u53d6\u503c\u8303\u56f4 \u662f\u5426\u5fc5\u9009 \u542b\u4e49 \u6ce8\u610f servicecomb.isolation.[type].[scope].timeout.enabled FALSE - \u5426 \u662f\u5426\u542f\u7528\u8d85\u65f6\u68c0\u6d4b servicecomb.isolation.[type].[scope].timeoutInMilliseconds 30000 - \u5426 \u8d85\u65f6\u65f6\u95f4\u9608\u503c servicecomb.isolation.[type].[scope].maxConcurrentRequests 10 - \u5426 \u6700\u5927\u5e76\u53d1\u6570\u9608\u503c servicecomb.circuitBreaker.[type].[scope].enabled TRUE - \u5426 \u662f\u5426\u542f\u7528\u7194\u65ad\u63aa\u65bd servicecomb.circuitBreaker.[type].[scope].forceOpen FALSE - \u5426 \u4e0d\u7ba1\u5931\u8d25\u6b21\u6570\uff0c\u90fd\u8fdb\u884c\u7194\u65ad servicecomb.circuitBreaker.[type].[scope].forceClosed FALSE - \u5426 \u4efb\u4f55\u65f6\u5019\u90fd\u4e0d\u7194\u65ad \u5f53\u4e0eforceOpen\u540c\u65f6\u914d\u7f6e\u65f6\uff0cforceOpen\u4f18\u5148\u3002 servicecomb.circuitBreaker.[type].[scope].sleepWindowInMilliseconds 15000 - \u5426 \u7194\u65ad\u540e\uff0c\u591a\u957f\u65f6\u95f4\u6062\u590d \u6062\u590d\u540e\uff0c\u4f1a\u91cd\u65b0\u8ba1\u7b97\u5931\u8d25\u60c5\u51b5\u3002\u6ce8\u610f\uff1a\u5982\u679c\u6062\u590d\u540e\u7684\u8c03\u7528\u7acb\u5373\u5931\u8d25\uff0c\u90a3\u4e48\u4f1a\u7acb\u5373\u91cd\u65b0\u8fdb\u5165\u7194\u65ad\u3002 servicecomb.circuitBreaker.[type].[scope].requestVolumeThreshold 20 - \u5426 10s\u5185\u7edf\u8ba1\u9519\u8bef\u53d1\u751f\u6b21\u6570\u9608\u503c\uff0c\u8d85\u8fc7\u9608\u503c\u5219\u89e6\u53d1\u7194\u65ad \u7531\u4e8e10\u79d2\u8fd8\u4f1a\u88ab\u5212\u5206\u4e3a10\u4e2a1\u79d2\u7684\u7edf\u8ba1\u5468\u671f\uff0c\u7ecf\u8fc71s\u4e2d\u540e\u624d\u4f1a\u5f00\u59cb\u8ba1\u7b97\u9519\u8bef\u7387\uff0c\u56e0\u6b64\u4ece\u8c03\u7528\u5f00\u59cb\u81f3\u5c11\u7ecf\u8fc71s\uff0c\u624d\u4f1a\u53d1\u751f\u7194\u65ad\u3002 servicecomb.circuitBreaker.[type].[scope].errorThresholdPercentage 50 - \u5426 \u9519\u8bef\u7387\u9608\u503c\uff0c\u8fbe\u5230\u9608\u503c\u5219\u89e6\u53d1\u7194\u65ad servicecomb.fallback.[type].[scope].enabled TRUE - \u5426 \u662f\u5426\u542f\u7528\u51fa\u9519\u540e\u7684\u6545\u969c\u5904\u7406\u63aa\u65bd servicecomb.fallback.[type].[scope].maxConcurrentRequests 10 - \u5426 \u5e76\u53d1\u8c03\u7528\u5bb9\u9519\u5904\u7406\u63aa\u65bd\uff08servicecomb.fallbackpolicy.policy\uff09\u7684\u8bf7\u6c42\u6570\uff0c\u8d85\u8fc7\u8fd9\u4e2a\u503c\u5219\u4e0d\u518d\u8c03\u7528\u5904\u7406\u63aa\u65bd\uff0c\u76f4\u63a5\u8fd4\u56de\u5f02\u5e38 servicecomb.fallbackpolicy.[type].[scope].policy throwexception returnull | throwexception \u5426 \u51fa\u9519\u540e\u7684\u5904\u7406\u7b56\u7565 \u5c0f\u5fc3 \uff1a\u8c28\u614e\u4f7f\u7528 servicecomb.isolation.timeout.enabled=true \u3002\u56e0\u4e3a\u7cfb\u7edf\u5904\u7406\u94fe\u90fd\u662f\u5f02\u6b65\u6267\u884c\uff0c\u4e2d\u95f4\u5904\u7406\u94fe\u7684\u8fd4\u56de\uff0c\u4f1a\u5bfc\u81f4 \u540e\u9762\u5904\u7406\u94fe\u7684\u903b\u8f91\u5904\u7406\u6548\u679c\u4e22\u5931\u3002\u5c3d\u53ef\u80fd\u5c06 servicecomb.isolation.timeout.enabled \u4fdd\u6301\u9ed8\u8ba4\u503cfalse\uff0c\u5e76\u4e14\u6b63\u786e\u8bbe\u7f6e\u7f51\u7edc\u5c42\u8d85\u65f6\u65f6 \u95f4 servicecomb.request.timeout=30000 \u3002 \u793a\u4f8b\u4ee3\u7801 servicecomb: handler: chain: Consumer: default: bizkeeper-consumer isolation: Consumer: timeout: enabled: true timeoutInMilliseconds: 30000 circuitBreaker: Consumer: enabled: true sleepWindowInMilliseconds: 15000 requestVolumeThreshold: 20 fallback: Consumer: enabled: true fallbackpolicy: Consumer: policy: throwexception \u8bf4\u660e\uff1a \u964d\u7ea7\u7b56\u7565\u9700\u8981\u542f\u7528\u670d\u52a1\u6cbb\u7406\u80fd\u529b\uff0c\u5bf9\u5e94\u7684\u670d\u52a1\u63d0\u4f9b\u8005\u7684handler\u662f bizkeeper-provider \uff0c\u670d\u52a1\u6d88\u8d39\u8005\u7684handler\u662f bizkeeper-consumer \u3002","title":"\u914d\u7f6e\u8bf4\u660e"},{"location":"references-handlers/intruduction/","text":"\u5904\u7406\u94fe\u53c2\u8003 \u5904\u7406\u94fe(Handlers)\u662fServiceComb\u7684\u6838\u5fc3\u7ec4\u6210\u90e8\u5206\uff0c\u5b83\u4eec\u6784\u6210\u670d\u52a1\u8fd0\u884c\u7ba1\u63a7\u7684\u57fa\u7840\u3002ServiceComb\u901a\u8fc7\u5904\u7406\u94fe\u6765\u5904\u7406\u8d1f\u8f7d\u5747\u8861\u3001\u7194\u65ad\u5bb9\u9519\u3001\u6d41\u91cf\u63a7\u5236\u7b49\u3002 \u5904\u7406\u94fe\u914d\u7f6e \u5904\u7406\u94fe\u5206\u4e3aConsumer\u548cProvider\uff0c\u5206\u522b\u914d\u7f6e\u5982\u4e0b\uff1a servicecomb: handler: chain: Consumer: default: qps-flowcontrol-consumer,loadbalance Provider: default: qps-flowcontrol-provider \u901a\u8fc7\u540d\u5b57\u914d\u7f6e\u5904\u7406\u94fe\uff0c\u53ef\u4ee5\u6839\u636e\u9700\u8981\u8c03\u6574\u5904\u7406\u94fe\u7684\u987a\u5e8f\uff0c\u914d\u7f6e\u5728\u524d\u9762\u7684\u5904\u7406\u94fe\u5148\u6267\u884c\u3002\u4e0d\u540c\u7684\u5904\u7406\u94fe\u53ef\u80fd\u5b58\u5728\u4e00\u5b9a\u7684\u903b\u8f91\u5173\u8054\uff0c\u5904\u7406\u94fe\u7684\u987a\u5e8f \u4e0d\u540c\uff0c\u7a0b\u5e8f\u8fd0\u884c\u7684\u6548\u679c\u4f1a\u5b58\u5728\u5dee\u5f02\u3002 \u4e0a\u8ff0\u914d\u7f6e\u6307\u5b9a\u76ee\u6807\u5fae\u670d\u52a1\u7f3a\u7701\u5904\u7406\u94fe\uff0c\u5f00\u53d1\u8005\u8fd8\u53ef\u4ee5\u5bf9\u7279\u5b9a\u7684\u5fae\u670d\u52a1\u914d\u7f6e\u4e0d\u540c\u7684\u5904\u7406\u94fe\uff0c\u6bd4\u5982\uff1a servicecomb: handler: chain: Consumer: default: auth,qps-flowcontrol-consumer,loadbalance service: authentication-server: qps-flowcontrol-consumer,loadbalance \u5bf9\u4e8e\u8f6c\u53d1\u5230authentication-server\u7684\u8bf7\u6c42\uff0c\u4e0d\u7ecf\u8fc7auth\u5904\u7406\u94fe\uff0c\u8f6c\u53d1\u5230\u5176\u4ed6\u7684\u5fae\u670d\u52a1\u7684\u8bf7\u6c42\uff0c\u5219\u7ecf\u8fc7auth\u5904\u7406\u94fe\u3002 \u5f00\u53d1\u65b0\u7684\u5904\u7406\u94fe \u5f00\u53d1\u8005\u81ea\u5b9a\u4e49\u5904\u7406\u94fe\u5305\u542b\u5982\u4e0b\u51e0\u4e2a\u6b65\u9aa4\u3002\u7531\u4e8eServiceComb\u7684\u6838\u5fc3\u7ec4\u6210\u5c31\u662f\u5904\u7406\u94fe\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u53c2\u8003handlers\u76ee\u5f55\u7684\u5b9e\u73b0\u8be6\u7ec6\u4e86\u89e3\u5904\u7406\u94fe\u3002\u4e0b\u9762\u7b80\u5355\u603b\u7ed3\u4e0b\u51e0\u4e2a\u5173\u952e\u6b65\u9aa4\uff1a \u5b9e\u73b0Handler\u63a5\u53e3 public class AuthHandler implements Handler { @Override public void handle(Invocation invocation, AsyncResponse asyncResponse) throws Exception { String token = invocation.getContext(Constants.CONTEXT_HEADER_AUTHORIZATION); if (token == null) { asyncResponse.consumerFail(new InvocationException(403, forbidden , not authenticated )); return; } Jwt jwt = JwtHelper.decode(token); try { jwt.verifySignature(BeanUtils.getBean( authSigner )); } catch (InvalidSignatureException e) { asyncResponse.consumerFail(new InvocationException(403, forbidden , not authenticated )); return; } invocation.next(asyncResponse); } } \u589e\u52a0*.handler.xml\u6587\u4ef6\uff0c\u7ed9Handler\u53d6\u4e00\u4e2a\u540d\u5b57 config handler id= auth class= org.apache.servicecomb.authentication.gateway.AuthHandler / /config \u5728microservice.yaml\u4e2d\u542f\u7528\u65b0\u589e\u52a0\u7684\u5904\u7406\u94fe servicecomb: handler: chain: Consumer: default: auth,loadbalance service: authentication-server: loadbalance","title":"\u5904\u7406\u94fe\u4ecb\u7ecd"},{"location":"references-handlers/intruduction/#_1","text":"\u5904\u7406\u94fe(Handlers)\u662fServiceComb\u7684\u6838\u5fc3\u7ec4\u6210\u90e8\u5206\uff0c\u5b83\u4eec\u6784\u6210\u670d\u52a1\u8fd0\u884c\u7ba1\u63a7\u7684\u57fa\u7840\u3002ServiceComb\u901a\u8fc7\u5904\u7406\u94fe\u6765\u5904\u7406\u8d1f\u8f7d\u5747\u8861\u3001\u7194\u65ad\u5bb9\u9519\u3001\u6d41\u91cf\u63a7\u5236\u7b49\u3002","title":"\u5904\u7406\u94fe\u53c2\u8003"},{"location":"references-handlers/intruduction/#_2","text":"\u5904\u7406\u94fe\u5206\u4e3aConsumer\u548cProvider\uff0c\u5206\u522b\u914d\u7f6e\u5982\u4e0b\uff1a servicecomb: handler: chain: Consumer: default: qps-flowcontrol-consumer,loadbalance Provider: default: qps-flowcontrol-provider \u901a\u8fc7\u540d\u5b57\u914d\u7f6e\u5904\u7406\u94fe\uff0c\u53ef\u4ee5\u6839\u636e\u9700\u8981\u8c03\u6574\u5904\u7406\u94fe\u7684\u987a\u5e8f\uff0c\u914d\u7f6e\u5728\u524d\u9762\u7684\u5904\u7406\u94fe\u5148\u6267\u884c\u3002\u4e0d\u540c\u7684\u5904\u7406\u94fe\u53ef\u80fd\u5b58\u5728\u4e00\u5b9a\u7684\u903b\u8f91\u5173\u8054\uff0c\u5904\u7406\u94fe\u7684\u987a\u5e8f \u4e0d\u540c\uff0c\u7a0b\u5e8f\u8fd0\u884c\u7684\u6548\u679c\u4f1a\u5b58\u5728\u5dee\u5f02\u3002 \u4e0a\u8ff0\u914d\u7f6e\u6307\u5b9a\u76ee\u6807\u5fae\u670d\u52a1\u7f3a\u7701\u5904\u7406\u94fe\uff0c\u5f00\u53d1\u8005\u8fd8\u53ef\u4ee5\u5bf9\u7279\u5b9a\u7684\u5fae\u670d\u52a1\u914d\u7f6e\u4e0d\u540c\u7684\u5904\u7406\u94fe\uff0c\u6bd4\u5982\uff1a servicecomb: handler: chain: Consumer: default: auth,qps-flowcontrol-consumer,loadbalance service: authentication-server: qps-flowcontrol-consumer,loadbalance \u5bf9\u4e8e\u8f6c\u53d1\u5230authentication-server\u7684\u8bf7\u6c42\uff0c\u4e0d\u7ecf\u8fc7auth\u5904\u7406\u94fe\uff0c\u8f6c\u53d1\u5230\u5176\u4ed6\u7684\u5fae\u670d\u52a1\u7684\u8bf7\u6c42\uff0c\u5219\u7ecf\u8fc7auth\u5904\u7406\u94fe\u3002","title":"\u5904\u7406\u94fe\u914d\u7f6e"},{"location":"references-handlers/intruduction/#_3","text":"\u5f00\u53d1\u8005\u81ea\u5b9a\u4e49\u5904\u7406\u94fe\u5305\u542b\u5982\u4e0b\u51e0\u4e2a\u6b65\u9aa4\u3002\u7531\u4e8eServiceComb\u7684\u6838\u5fc3\u7ec4\u6210\u5c31\u662f\u5904\u7406\u94fe\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u53c2\u8003handlers\u76ee\u5f55\u7684\u5b9e\u73b0\u8be6\u7ec6\u4e86\u89e3\u5904\u7406\u94fe\u3002\u4e0b\u9762\u7b80\u5355\u603b\u7ed3\u4e0b\u51e0\u4e2a\u5173\u952e\u6b65\u9aa4\uff1a \u5b9e\u73b0Handler\u63a5\u53e3 public class AuthHandler implements Handler { @Override public void handle(Invocation invocation, AsyncResponse asyncResponse) throws Exception { String token = invocation.getContext(Constants.CONTEXT_HEADER_AUTHORIZATION); if (token == null) { asyncResponse.consumerFail(new InvocationException(403, forbidden , not authenticated )); return; } Jwt jwt = JwtHelper.decode(token); try { jwt.verifySignature(BeanUtils.getBean( authSigner )); } catch (InvalidSignatureException e) { asyncResponse.consumerFail(new InvocationException(403, forbidden , not authenticated )); return; } invocation.next(asyncResponse); } } \u589e\u52a0*.handler.xml\u6587\u4ef6\uff0c\u7ed9Handler\u53d6\u4e00\u4e2a\u540d\u5b57 config handler id= auth class= org.apache.servicecomb.authentication.gateway.AuthHandler / /config \u5728microservice.yaml\u4e2d\u542f\u7528\u65b0\u589e\u52a0\u7684\u5904\u7406\u94fe servicecomb: handler: chain: Consumer: default: auth,loadbalance service: authentication-server: loadbalance","title":"\u5f00\u53d1\u65b0\u7684\u5904\u7406\u94fe"},{"location":"references-handlers/loadbalance/","text":"\u8d1f\u8f7d\u5747\u8861 \u573a\u666f\u63cf\u8ff0 ServiceComb\u63d0\u4f9b\u4e86\u975e\u5e38\u5f3a\u5927\u7684\u8d1f\u8f7d\u5747\u8861\u80fd\u529b\u3002\u5b83\u7684\u6838\u5fc3\u5305\u62ec\u4e24\u90e8\u5206\uff0c\u7b2c\u4e00\u90e8\u5206\u662fDiscoveryTree\uff0c\u901a\u8fc7\u5c06\u5fae\u670d\u52a1\u5b9e\u4f8b\u6839\u636e\u63a5\u53e3\u517c\u5bb9\u6027\u3001\u6570\u636e\u4e2d\u5fc3\u3001\u5b9e\u4f8b\u72b6\u6001\u7b49\u5206\u7ec4\uff0cDiscoveryFilter\u662f\u5176\u4e3b\u8981\u7ec4\u6210\u90e8\u5206\uff1b\u7b2c\u4e8c\u90e8\u5206\u662f\u57fa\u4e8eRibbon\u7684\u8d1f\u8f7d\u5747\u8861\u65b9\u6848\uff0c\u652f\u6301\u968f\u673a\u3001\u987a\u5e8f\u3001\u57fa\u4e8e\u54cd\u5e94\u65f6\u95f4\u7684\u6743\u503c\u7b49\u591a\u79cd\u8d1f\u8f7d\u5747\u8861\u8def\u7531\u7b56\u7565IRule\uff0c\u4ee5\u53ca\u53ef\u4ee5\u652f\u6301Invocation\u72b6\u6001\u7684ServerListFilterExt\u3002 DiscoveryTree\u7684\u903b\u8f91\u6bd4\u8f83\u590d\u6742\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u5904\u7406\u6d41\u7a0b\u4e86\u89e3\u5176\u5904\u7406\u8fc7\u7a0b\u3002 \u8d1f\u8f7d\u5747\u8861\u9002\u7528\u4e8eConsumer\u5904\u7406\u94fe\uff0c\u540d\u79f0\u4e3aloadbalance\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a servicecomb: handler: chain: Consumer: default: loadbalance POM\u4f9d\u8d56\uff1a dependency groupId org.apache.servicecomb /groupId artifactId handler-loadbalance /artifactId /dependency \u6309\u7167\u6570\u636e\u4e2d\u5fc3\u4fe1\u606f\u8fdb\u884c\u8def\u7531\u8f6c\u53d1 \u670d\u52a1\u63d0\u4f9b\u8005\u548c\u6d88\u8d39\u8005\u90fd\u53ef\u4ee5\u901a\u8fc7\u5728microservice.yaml\u4e2d\u58f0\u660e\u81ea\u5df1\u7684\u670d\u52a1\u4e2d\u5fc3\u4fe1\u606f\uff1a servicecomb: datacenter: name: mydatacenter region: my-Region availableZone: my-Zone \u6d88\u8d39\u8005\u901a\u8fc7\u6bd4\u8f83\u81ea\u5df1\u7684\u6570\u636e\u4e2d\u5fc3\u4fe1\u606f\u548c\u63d0\u4f9b\u8005\u7684\u4fe1\u606f\uff0c\u4f18\u5148\u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230region\u548cavailableZone\u90fd\u76f8\u540c\u7684\u5b9e\u4f8b\uff1b\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8f6c\u53d1\u5230region\u76f8\u540c\u7684\u5b9e\u4f8b\uff1b\u5982\u679c\u4ecd\u7136\u4e0d\u5b58\u5728\uff0c\u5219\u8f6c\u53d1\u5230\u5176\u4ed6\u5b9e\u4f8b\u3002 \u8fd9\u91cc\u7684region\u548cavailableZone\u662f\u4e00\u822c\u6027\u7684\u6982\u5ff5\uff0c\u7528\u6237\u53ef\u4ee5\u81ea\u884c\u786e\u5b9a\u5176\u4e1a\u52a1\u542b\u4e49\u4ee5\u4fbf\u5e94\u7528\u4e8e\u8d44\u6e90\u9694\u79bb\u7684\u573a\u666f\u4e2d\u3002\u53ef\u4ee5\u53c2\u89c1 \u5fae\u670d\u52a1\u5b9e\u4f8b\u4e4b\u95f4\u7684\u903b\u8f91\u9694\u79bb\u5173\u7cfb \uff0c\u4e86\u89e3\u66f4\u591a\u5176\u4ed6\u5b9e\u4f8b\u53d1\u73b0\u76f8\u5173\u7684\u9694\u79bb\u673a\u5236\u3002 \u8be5\u89c4\u5219\u9ed8\u8ba4\u542f\u7528\uff0c\u5982\u679c\u4e0d\u9700\u8981\u4f7f\u7528\uff0c\u53ef\u4ee5\u901a\u8fc7servicecomb.loadbalance.filter.zoneaware.enabled\u8fdb\u884c\u5173\u95ed\u3002\u6570\u636e\u4e2d\u5fc3\u4fe1\u606f\u9694\u79bb\u529f\u80fd\u5728ZoneAwareDiscoveryFilter\u5b9e\u73b0\u3002 \u6839\u636e\u5b9e\u4f8b\u5c5e\u6027\u8fdb\u884c\u8def\u7531\u8f6c\u53d1 \u5fae\u670d\u52a1\u53ef\u4ee5\u6307\u5b9a\u5b9e\u4f8b\u7684\u5c5e\u6027\u3002\u5b9e\u4f8b\u5c5e\u6027\u53ef\u4ee5\u5728microservice.yaml\u4e2d\u6307\u5b9a\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u670d\u52a1\u4e2d\u5fc3\u7684API\u8fdb\u884c\u4fee\u6539\u3002 instance_description: properties: tags: tag_key: tag_value \u6d88\u8d39\u8005\u53ef\u4ee5\u6307\u5b9a\u6d88\u8d39\u5177\u5907\u67d0\u4e9b\u5c5e\u6027\u7684\u5b9e\u4f8b\uff0c\u4e0d\u8bbf\u95ee\u5176\u4ed6\u5b9e\u4f8b servicecomb: loadbalance: provider: # \u8fd9\u91cc\u8868\u793a\u914d\u7f6e\u5bf9\u540d\u4e3a provider \u7684\u670d\u52a1\u751f\u6548\uff0c\u5982\u679c\u662f\u8de8\u5e94\u7528\u8c03\u7528\uff0c\u5219\u8fd8\u9700\u8981\u52a0\u4e0aAppID\uff0c\u5982 AppIDOfProvider:provider transactionControl: options: tags: tag_key: expected_tag_value \u4e0a\u9762\u7684\u914d\u7f6e\u8868\u793a\u53ea\u8bbf\u95eemyservice\u6240\u6709\u5b9e\u4f8b\u4e2d tag_key \u5c5e\u6027\u4e3a expected_tag_value \u7684\u5b9e\u4f8b\u3002 \u8be5\u89c4\u5219\u9700\u8981\u7ed9\u6bcf\u4e2a\u670d\u52a1\u5355\u72ec\u914d\u7f6e\uff0c\u672a\u914d\u7f6e\u8868\u793a\u4e0d\u542f\u7528\u8be5\u89c4\u5219\uff0c\u4e0d\u652f\u6301\u5bf9\u4e8e\u6240\u6709\u670d\u52a1\u7684\u5168\u5c40\u914d\u7f6e\u3002 \u8be5\u89c4\u5219\u9ed8\u8ba4\u542f\u7528\uff0c\u5982\u679c\u4e0d\u9700\u8981\u4f7f\u7528\uff0c\u53ef\u4ee5\u901a\u8fc7 servicecomb.loadbalance.filter.instanceProperty.enabled \u8fdb\u884c\u5173\u95ed\u3002\u6839\u636e\u5b9e\u4f8b\u5c5e\u6027\u8fdb\u884c\u8def\u7531\u8f6c\u53d1\u529f\u80fd\u5728 InstancePropertyDiscoveryFilter \u5b9e\u73b0\u3002 \u5b9e\u4f8b\u9694\u79bb\u529f\u80fd \u5f00\u53d1\u8005\u53ef\u4ee5\u914d\u7f6e\u5b9e\u4f8b\u9694\u79bb\u7684\u53c2\u6570\uff0c\u4ee5\u6682\u65f6\u5c4f\u853d\u5bf9\u4e8e\u9519\u8bef\u5b9e\u4f8b\u7684\u8bbf\u95ee\uff0c\u63d0\u5347\u7cfb\u7edf\u53ef\u9760\u6027\u548c\u6027\u80fd\u3002\u4e0b\u9762\u662f\u5176\u914d\u7f6e\u9879\u548c\u7f3a\u7701\u503c servicecomb: loadbalance: isolation: enabled: true errorThresholdPercentage: 0 enableRequestThreshold: 5 singleTestTime: 60000 continuousFailureThreshold: 5 \u9694\u79bb\u7684\u7edf\u8ba1\u5468\u671f\u662f1\u5206\u949f\u3002\u6309\u7167\u4e0a\u9762\u7684\u914d\u7f6e\uff0c\u57281\u5206\u949f\u5185\uff0c\u5982\u679c\u8bf7\u6c42\u603b\u6570\u5927\u4e8e5\uff0c\u5e76\u4e14\u8fde\u7eed\u9519\u8bef\u8d85\u8fc72\u6b21\uff0c\u90a3\u4e48\u5c31\u4f1a\u5c06\u5b9e\u4f8b\u9694\u79bb\u3002 \u9519\u8bef\u7387\u9ed8\u8ba4\u503c\u4e3a0\uff0c\u8868\u793a\u4e0d\u542f\u7528\uff0c\u53ef\u901a\u8fc7\u914d\u7f6e100\u4ee5\u5185\u7684\u6574\u6570\u6765\u542f\u7528\uff0c\u4f8b\u5982\u914d\u7f6e\u4e3a20\uff0c\u5219\u8868\u793a\uff0c\u57281\u5206\u949f\u5185\uff0c\u5982\u679c\u8bf7\u6c42\u603b\u6570\u5927\u4e8e5\uff0c\u5e76\u4e14[1]\u9519\u8bef\u7387\u5927\u4e8e20%\u6216\u8005[2]\u8fde\u7eed\u9519\u8bef\u8d85\u8fc72\u6b21\uff0c\u90a3\u4e48\u5c31\u4f1a\u5c06\u5b9e\u4f8b\u9694\u79bb\u3002 \u5b9e\u4f8b\u9694\u79bb\u7684\u65f6\u95f4\u662f60\u79d2\uff0c60\u79d2\u540e\u4f1a\u5c1d\u8bd5\u542f\u7528\u5b9e\u4f8b\uff08\u8fd8\u9700\u8981\u6839\u636e\u8d1f\u8f7d\u5747\u8861\u7b56\u7565\u786e\u5b9a\u662f\u5426\u9009\u4e2d\uff09\u3002 \u6ce8\u610f\u4e8b\u9879\uff1a \u5f53\u9519\u8bef\u7387\u8fbe\u5230\u8bbe\u5b9a\u503c\u5bfc\u81f4\u5b9e\u4f8b\u9694\u79bb\u540e\uff0c\u8981\u60f3\u6062\u590d\uff0c\u9700\u8981\u7b49\u5f85\u9694\u79bb\u65f6\u95f4\u7a97\u7ed3\u675f\u540e\u7684\u7b2c\u4e00\u6b21\u6210\u529f\u8bf7\u6c42\u8fdb\u884c\u5468\u671f\u6027\u7d2f\u52a0\uff0c\u76f4\u5230\u603b\u7684\u9519\u8bef\u7387\u4e0b\u964d\u5230\u8bbe\u5b9a\u503c\u4ee5\u4e0b\u624d\u884c\u3002\u7531\u4e8e\u8bf7\u6c42\u603b\u6570\u662f\u89e6\u53d1\u5b9e\u4f8b\u9694\u79bb\u7684\u95e8\u69db\uff0c\u82e5\u8bf7\u6c42\u603b\u6570\u8fbe\u5230\u8bbe\u5b9a\u503c\u65f6\u8ba1\u7b97\u51fa\u6765\u7684\u9519\u8bef\u7387\u8fdc\u5927\u4e8e\u8bbe\u5b9a\u503c\uff0c\u8981\u60f3\u6062\u590d\u662f\u9700\u8981\u5f88\u4e45\u7684\u3002 ServiceComb\u4e3a\u4e86\u68c0\u6d4b\u5b9e\u4f8b\u72b6\u6001\uff0c\u5728\u540e\u53f0\u542f\u52a8\u7c7b\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u6bcf\u969410\u79d2\u68c0\u6d4b\u4e00\u6b21\u5b9e\u4f8b\u72b6\u6001\uff08\u5982\u679c\u5b9e\u4f8b\u572810\u79d2\u5185\u6709\u88ab\u8bbf\u95ee\uff0c\u5219\u4e0d\u68c0\u6d4b\uff09\uff0c\u5982\u679c\u68c0\u6d4b\u5931\u8d25\uff0c\u6bcf\u6b21\u68c0\u6d4b\u4f1a\u5c06\u9519\u8bef\u8ba1\u6570\u52a01\u3002\u8fd9\u91cc\u7684\u8ba1\u6570\uff0c\u4e5f\u4f1a\u5f71\u54cd\u5b9e\u4f8b\u9694\u79bb\u3002 \u7cfb\u7edf\u7f3a\u7701\u7684\u5b9e\u4f8b\u72b6\u6001\u68c0\u6d4b\u673a\u5236\u662f\u53d1\u9001\u4e00\u4e2atelnet\u6307\u4ee4\uff0c\u53c2\u8003SimpleMicroserviceInstancePing\u7684\u5b9e\u73b0\u3002\u5982\u679c\u4e1a\u52a1\u9700\u8981\u8986\u76d6\u72b6\u6001\u68c0\u6d4b\u673a\u5236\uff0c\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u4e24\u4e2a\u6b65\u9aa4\u5b8c\u6210\uff1a \u5b9e\u73b0MicroserviceInstancePing\u63a5\u53e3 \u914d\u7f6eSPI\uff1a\u589e\u52a0META-INF/services/org.apache.servicecomb.serviceregistry.consumer.MicroserviceInstancePing\uff0c\u5185\u5bb9\u4e3a\u5b9e\u73b0\u7c7b\u7684\u5168\u540d \u5f00\u53d1\u8005\u53ef\u4ee5\u9488\u5bf9\u4e0d\u540c\u7684\u5fae\u670d\u52a1\u914d\u7f6e\u4e0d\u4e00\u6837\u7684\u9694\u79bb\u7b56\u7565\u3002\u53ea\u9700\u8981\u7ed9\u914d\u7f6e\u9879\u589e\u52a0\u670d\u52a1\u540d\uff0c\u4f8b\u5982\uff1a servicecomb: loadbalance: myservice: isolation: enabled: true errorThresholdPercentage: 20 enableRequestThreshold: 5 singleTestTime: 10000 continuousFailureThreshold: 2 \u8be5\u89c4\u5219\u9ed8\u8ba4\u542f\u7528\uff0c\u5982\u679c\u4e0d\u9700\u8981\u4f7f\u7528\uff0c\u53ef\u4ee5\u901a\u8fc7servicecomb.loadbalance.filter.isolation.enabled\u8fdb\u884c\u5173\u95ed\u3002\u6570\u636e\u4e2d\u5fc3\u4fe1\u606f\u9694\u79bb\u529f\u80fd\u5728IsolationDiscoveryFilter\u5b9e\u73b0\u3002 \u914d\u7f6e\u8def\u7531\u89c4\u5219 \u5f00\u53d1\u8005\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u9879\u6307\u5b9a\u8d1f\u8f7d\u5747\u8861\u7b56\u7565\u3002 servicecomb: loadbalance: strategy: name: RoundRobin # Support RoundRobin,Random,WeightedResponse,SessionStickiness \u5f00\u53d1\u8005\u53ef\u4ee5\u9488\u5bf9\u4e0d\u540c\u7684\u5fae\u670d\u52a1\u914d\u7f6e\u4e0d\u4e00\u6837\u7684\u7b56\u7565\uff0c\u53ea\u9700\u8981\u7ed9\u914d\u7f6e\u9879\u589e\u52a0\u670d\u52a1\u540d\uff0c\u4f8b\u5982\uff1a servicecomb: loadbalance: myservice: strategy: name: RoundRobin # Support RoundRobin,Random,WeightedResponse,SessionStickiness \u6bcf\u79cd\u7b56\u7565\u8fd8\u6709\u4e00\u4e9b\u4e13\u5c5e\u914d\u7f6e\u9879\uff0c\u4e5f\u652f\u6301\u9488\u5bf9\u4e0d\u540c\u5fae\u670d\u52a1\u8fdb\u884c\u914d\u7f6e\u3002 SessionStickiness servicecomb: loadbalance: SessionStickinessRule: sessionTimeoutInSeconds: 30 # \u5ba2\u6237\u7aef\u95f2\u7f6e\u65f6\u95f4\uff0c\u8d85\u8fc7\u9650\u5236\u540e\u9009\u62e9\u540e\u9762\u7684\u670d\u52a1\u5668 successiveFailedTimes: 5 # \u5ba2\u6237\u7aef\u5931\u8d25\u6b21\u6570\uff0c\u8d85\u8fc7\u540e\u4f1a\u5207\u6362\u670d\u52a1\u5668 \u8bbe\u7f6e\u91cd\u8bd5\u7b56\u7565 \u8d1f\u8f7d\u5747\u8861\u6a21\u5757\u8fd8\u652f\u6301\u914d\u7f6e\u5931\u8d25\u91cd\u8bd5\u7684\u7b56\u7565\u3002 servicecomb: loadbalance: retryEnabled: false retryOnNext: 0 retryOnSame: 0 \u7f3a\u7701\u60c5\u51b5\u672a\u542f\u7528\u91cd\u8bd5\u3002\u540c\u65f6\u4e5f\u652f\u6301\u5bf9\u4e0d\u540c\u7684\u670d\u52a1\u8bbe\u7f6e\u7279\u6b8a\u7684\u7b56\u7565\uff1a servicecomb: loadbalance: myservice\uff1a retryEnabled: true retryOnNext: 1 retryOnSame: 0 retryOnNext\u8868\u793a\u5931\u8d25\u4ee5\u540e\uff0c\u6839\u636e\u8d1f\u8f7d\u5747\u8861\u7b56\u7565\uff0c\u91cd\u65b0\u9009\u62e9\u4e00\u4e2a\u5b9e\u4f8b\u91cd\u8bd5\uff08\u53ef\u80fd\u9009\u62e9\u5230\u540c\u4e00\u4e2a\u5b9e\u4f8b\uff09\u3002 retryOnSame\u8868\u793a\u4ecd\u7136\u4f7f\u7528\u4e0a\u6b21\u5931\u8d25\u7684\u5b9e\u4f8b\u8fdb\u884c\u91cd\u8bd5\u3002 \u81ea\u5b9a\u4e49 \u8d1f\u8f7d\u5747\u8861\u6a21\u5757\u63d0\u4f9b\u7684\u529f\u80fd\u5df2\u7ecf\u975e\u5e38\u5f3a\u5927\uff0c\u80fd\u591f\u901a\u8fc7\u914d\u7f6e\u652f\u6301\u5927\u90e8\u5206\u5e94\u7528\u573a\u666f\u3002\u540c\u65f6\u5b83\u4e5f\u63d0\u4f9b\u4e86\u5f3a\u5927\u7684\u6269\u5c55\u80fd\u529b\uff0c\u5305\u62ecDiscoveryFilter\u3001ServerListFilterExt\u3001ExtensionsFactory\uff08\u6269\u5c55IRule\uff0cRetryHandler\u7b49\uff09\u3002loadbalance\u6a21\u5757\u672c\u8eab\u5305\u542b\u4e86\u6bcf\u4e00\u4e2a\u6269\u5c55\u7684\u5b9e\u73b0\uff0c\u8fd9\u91cc\u4e0d\u518d\u8be6\u7ec6\u63cf\u8ff0\u5982\u4f55\u6269\u5c55\uff0c\u53ea\u7b80\u5355\u63cf\u8ff0\u6b65\u9aa4\u3002\u5f00\u53d1\u8005\u53ef\u4ee5\u81ea\u884c\u4e0b\u8f7dServiceComb\u6e90\u7801\u8fdb\u884c\u53c2\u8003\u3002 DiscoveryFilter \u5b9e\u73b0DiscoveryFilter\u63a5\u53e3 \u914d\u7f6eSPI\uff1a\u589e\u52a0META-INF/services/org.apache.servicecomb.serviceregistry.discovery.DiscoveryFilter\u6587\u4ef6\uff0c\u5185\u5bb9\u4e3a\u5b9e\u73b0\u7c7b\u7684\u5168\u540d ServerListFilterExt \u5b9e\u73b0ServerListFilterExt\u63a5\u53e3 \u914d\u7f6eSPI\uff1a\u589e\u52a0META-INF/services/org.apache.servicecomb.loadbalance.ServerListFilterExt\u6587\u4ef6\uff0c\u5185\u5bb9\u4e3a\u5b9e\u73b0\u7c7b\u7684\u5168\u540d \u6ce8\u610f\uff1a\u8fd9\u4e2a\u5f00\u53d1\u8bf4\u660e\u9002\u7528\u4e8e1.0.0\u53ca\u5176\u4ee5\u540e\u7684\u7248\u672c\uff0c\u65e9\u671f\u7684\u7248\u672c\u5f00\u53d1\u65b9\u5f0f\u4e0d\u540c\u3002 ExtensionsFactory \u5b9e\u73b0ExtensionsFactory\uff0c\u5e76\u4f7f\u7528@Component\u5c06\u5176\u53d1\u5e03\u4e3a\u4e00\u4e2aspring bean\u3002","title":"\u8d1f\u8f7d\u5747\u8861"},{"location":"references-handlers/loadbalance/#_1","text":"","title":"\u8d1f\u8f7d\u5747\u8861"},{"location":"references-handlers/loadbalance/#_2","text":"ServiceComb\u63d0\u4f9b\u4e86\u975e\u5e38\u5f3a\u5927\u7684\u8d1f\u8f7d\u5747\u8861\u80fd\u529b\u3002\u5b83\u7684\u6838\u5fc3\u5305\u62ec\u4e24\u90e8\u5206\uff0c\u7b2c\u4e00\u90e8\u5206\u662fDiscoveryTree\uff0c\u901a\u8fc7\u5c06\u5fae\u670d\u52a1\u5b9e\u4f8b\u6839\u636e\u63a5\u53e3\u517c\u5bb9\u6027\u3001\u6570\u636e\u4e2d\u5fc3\u3001\u5b9e\u4f8b\u72b6\u6001\u7b49\u5206\u7ec4\uff0cDiscoveryFilter\u662f\u5176\u4e3b\u8981\u7ec4\u6210\u90e8\u5206\uff1b\u7b2c\u4e8c\u90e8\u5206\u662f\u57fa\u4e8eRibbon\u7684\u8d1f\u8f7d\u5747\u8861\u65b9\u6848\uff0c\u652f\u6301\u968f\u673a\u3001\u987a\u5e8f\u3001\u57fa\u4e8e\u54cd\u5e94\u65f6\u95f4\u7684\u6743\u503c\u7b49\u591a\u79cd\u8d1f\u8f7d\u5747\u8861\u8def\u7531\u7b56\u7565IRule\uff0c\u4ee5\u53ca\u53ef\u4ee5\u652f\u6301Invocation\u72b6\u6001\u7684ServerListFilterExt\u3002 DiscoveryTree\u7684\u903b\u8f91\u6bd4\u8f83\u590d\u6742\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u5904\u7406\u6d41\u7a0b\u4e86\u89e3\u5176\u5904\u7406\u8fc7\u7a0b\u3002 \u8d1f\u8f7d\u5747\u8861\u9002\u7528\u4e8eConsumer\u5904\u7406\u94fe\uff0c\u540d\u79f0\u4e3aloadbalance\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a servicecomb: handler: chain: Consumer: default: loadbalance POM\u4f9d\u8d56\uff1a dependency groupId org.apache.servicecomb /groupId artifactId handler-loadbalance /artifactId /dependency","title":"\u573a\u666f\u63cf\u8ff0"},{"location":"references-handlers/loadbalance/#_3","text":"\u670d\u52a1\u63d0\u4f9b\u8005\u548c\u6d88\u8d39\u8005\u90fd\u53ef\u4ee5\u901a\u8fc7\u5728microservice.yaml\u4e2d\u58f0\u660e\u81ea\u5df1\u7684\u670d\u52a1\u4e2d\u5fc3\u4fe1\u606f\uff1a servicecomb: datacenter: name: mydatacenter region: my-Region availableZone: my-Zone \u6d88\u8d39\u8005\u901a\u8fc7\u6bd4\u8f83\u81ea\u5df1\u7684\u6570\u636e\u4e2d\u5fc3\u4fe1\u606f\u548c\u63d0\u4f9b\u8005\u7684\u4fe1\u606f\uff0c\u4f18\u5148\u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230region\u548cavailableZone\u90fd\u76f8\u540c\u7684\u5b9e\u4f8b\uff1b\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8f6c\u53d1\u5230region\u76f8\u540c\u7684\u5b9e\u4f8b\uff1b\u5982\u679c\u4ecd\u7136\u4e0d\u5b58\u5728\uff0c\u5219\u8f6c\u53d1\u5230\u5176\u4ed6\u5b9e\u4f8b\u3002 \u8fd9\u91cc\u7684region\u548cavailableZone\u662f\u4e00\u822c\u6027\u7684\u6982\u5ff5\uff0c\u7528\u6237\u53ef\u4ee5\u81ea\u884c\u786e\u5b9a\u5176\u4e1a\u52a1\u542b\u4e49\u4ee5\u4fbf\u5e94\u7528\u4e8e\u8d44\u6e90\u9694\u79bb\u7684\u573a\u666f\u4e2d\u3002\u53ef\u4ee5\u53c2\u89c1 \u5fae\u670d\u52a1\u5b9e\u4f8b\u4e4b\u95f4\u7684\u903b\u8f91\u9694\u79bb\u5173\u7cfb \uff0c\u4e86\u89e3\u66f4\u591a\u5176\u4ed6\u5b9e\u4f8b\u53d1\u73b0\u76f8\u5173\u7684\u9694\u79bb\u673a\u5236\u3002 \u8be5\u89c4\u5219\u9ed8\u8ba4\u542f\u7528\uff0c\u5982\u679c\u4e0d\u9700\u8981\u4f7f\u7528\uff0c\u53ef\u4ee5\u901a\u8fc7servicecomb.loadbalance.filter.zoneaware.enabled\u8fdb\u884c\u5173\u95ed\u3002\u6570\u636e\u4e2d\u5fc3\u4fe1\u606f\u9694\u79bb\u529f\u80fd\u5728ZoneAwareDiscoveryFilter\u5b9e\u73b0\u3002","title":"\u6309\u7167\u6570\u636e\u4e2d\u5fc3\u4fe1\u606f\u8fdb\u884c\u8def\u7531\u8f6c\u53d1"},{"location":"references-handlers/loadbalance/#_4","text":"\u5fae\u670d\u52a1\u53ef\u4ee5\u6307\u5b9a\u5b9e\u4f8b\u7684\u5c5e\u6027\u3002\u5b9e\u4f8b\u5c5e\u6027\u53ef\u4ee5\u5728microservice.yaml\u4e2d\u6307\u5b9a\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u670d\u52a1\u4e2d\u5fc3\u7684API\u8fdb\u884c\u4fee\u6539\u3002 instance_description: properties: tags: tag_key: tag_value \u6d88\u8d39\u8005\u53ef\u4ee5\u6307\u5b9a\u6d88\u8d39\u5177\u5907\u67d0\u4e9b\u5c5e\u6027\u7684\u5b9e\u4f8b\uff0c\u4e0d\u8bbf\u95ee\u5176\u4ed6\u5b9e\u4f8b servicecomb: loadbalance: provider: # \u8fd9\u91cc\u8868\u793a\u914d\u7f6e\u5bf9\u540d\u4e3a provider \u7684\u670d\u52a1\u751f\u6548\uff0c\u5982\u679c\u662f\u8de8\u5e94\u7528\u8c03\u7528\uff0c\u5219\u8fd8\u9700\u8981\u52a0\u4e0aAppID\uff0c\u5982 AppIDOfProvider:provider transactionControl: options: tags: tag_key: expected_tag_value \u4e0a\u9762\u7684\u914d\u7f6e\u8868\u793a\u53ea\u8bbf\u95eemyservice\u6240\u6709\u5b9e\u4f8b\u4e2d tag_key \u5c5e\u6027\u4e3a expected_tag_value \u7684\u5b9e\u4f8b\u3002 \u8be5\u89c4\u5219\u9700\u8981\u7ed9\u6bcf\u4e2a\u670d\u52a1\u5355\u72ec\u914d\u7f6e\uff0c\u672a\u914d\u7f6e\u8868\u793a\u4e0d\u542f\u7528\u8be5\u89c4\u5219\uff0c\u4e0d\u652f\u6301\u5bf9\u4e8e\u6240\u6709\u670d\u52a1\u7684\u5168\u5c40\u914d\u7f6e\u3002 \u8be5\u89c4\u5219\u9ed8\u8ba4\u542f\u7528\uff0c\u5982\u679c\u4e0d\u9700\u8981\u4f7f\u7528\uff0c\u53ef\u4ee5\u901a\u8fc7 servicecomb.loadbalance.filter.instanceProperty.enabled \u8fdb\u884c\u5173\u95ed\u3002\u6839\u636e\u5b9e\u4f8b\u5c5e\u6027\u8fdb\u884c\u8def\u7531\u8f6c\u53d1\u529f\u80fd\u5728 InstancePropertyDiscoveryFilter \u5b9e\u73b0\u3002","title":"\u6839\u636e\u5b9e\u4f8b\u5c5e\u6027\u8fdb\u884c\u8def\u7531\u8f6c\u53d1"},{"location":"references-handlers/loadbalance/#_5","text":"\u5f00\u53d1\u8005\u53ef\u4ee5\u914d\u7f6e\u5b9e\u4f8b\u9694\u79bb\u7684\u53c2\u6570\uff0c\u4ee5\u6682\u65f6\u5c4f\u853d\u5bf9\u4e8e\u9519\u8bef\u5b9e\u4f8b\u7684\u8bbf\u95ee\uff0c\u63d0\u5347\u7cfb\u7edf\u53ef\u9760\u6027\u548c\u6027\u80fd\u3002\u4e0b\u9762\u662f\u5176\u914d\u7f6e\u9879\u548c\u7f3a\u7701\u503c servicecomb: loadbalance: isolation: enabled: true errorThresholdPercentage: 0 enableRequestThreshold: 5 singleTestTime: 60000 continuousFailureThreshold: 5 \u9694\u79bb\u7684\u7edf\u8ba1\u5468\u671f\u662f1\u5206\u949f\u3002\u6309\u7167\u4e0a\u9762\u7684\u914d\u7f6e\uff0c\u57281\u5206\u949f\u5185\uff0c\u5982\u679c\u8bf7\u6c42\u603b\u6570\u5927\u4e8e5\uff0c\u5e76\u4e14\u8fde\u7eed\u9519\u8bef\u8d85\u8fc72\u6b21\uff0c\u90a3\u4e48\u5c31\u4f1a\u5c06\u5b9e\u4f8b\u9694\u79bb\u3002 \u9519\u8bef\u7387\u9ed8\u8ba4\u503c\u4e3a0\uff0c\u8868\u793a\u4e0d\u542f\u7528\uff0c\u53ef\u901a\u8fc7\u914d\u7f6e100\u4ee5\u5185\u7684\u6574\u6570\u6765\u542f\u7528\uff0c\u4f8b\u5982\u914d\u7f6e\u4e3a20\uff0c\u5219\u8868\u793a\uff0c\u57281\u5206\u949f\u5185\uff0c\u5982\u679c\u8bf7\u6c42\u603b\u6570\u5927\u4e8e5\uff0c\u5e76\u4e14[1]\u9519\u8bef\u7387\u5927\u4e8e20%\u6216\u8005[2]\u8fde\u7eed\u9519\u8bef\u8d85\u8fc72\u6b21\uff0c\u90a3\u4e48\u5c31\u4f1a\u5c06\u5b9e\u4f8b\u9694\u79bb\u3002 \u5b9e\u4f8b\u9694\u79bb\u7684\u65f6\u95f4\u662f60\u79d2\uff0c60\u79d2\u540e\u4f1a\u5c1d\u8bd5\u542f\u7528\u5b9e\u4f8b\uff08\u8fd8\u9700\u8981\u6839\u636e\u8d1f\u8f7d\u5747\u8861\u7b56\u7565\u786e\u5b9a\u662f\u5426\u9009\u4e2d\uff09\u3002 \u6ce8\u610f\u4e8b\u9879\uff1a \u5f53\u9519\u8bef\u7387\u8fbe\u5230\u8bbe\u5b9a\u503c\u5bfc\u81f4\u5b9e\u4f8b\u9694\u79bb\u540e\uff0c\u8981\u60f3\u6062\u590d\uff0c\u9700\u8981\u7b49\u5f85\u9694\u79bb\u65f6\u95f4\u7a97\u7ed3\u675f\u540e\u7684\u7b2c\u4e00\u6b21\u6210\u529f\u8bf7\u6c42\u8fdb\u884c\u5468\u671f\u6027\u7d2f\u52a0\uff0c\u76f4\u5230\u603b\u7684\u9519\u8bef\u7387\u4e0b\u964d\u5230\u8bbe\u5b9a\u503c\u4ee5\u4e0b\u624d\u884c\u3002\u7531\u4e8e\u8bf7\u6c42\u603b\u6570\u662f\u89e6\u53d1\u5b9e\u4f8b\u9694\u79bb\u7684\u95e8\u69db\uff0c\u82e5\u8bf7\u6c42\u603b\u6570\u8fbe\u5230\u8bbe\u5b9a\u503c\u65f6\u8ba1\u7b97\u51fa\u6765\u7684\u9519\u8bef\u7387\u8fdc\u5927\u4e8e\u8bbe\u5b9a\u503c\uff0c\u8981\u60f3\u6062\u590d\u662f\u9700\u8981\u5f88\u4e45\u7684\u3002 ServiceComb\u4e3a\u4e86\u68c0\u6d4b\u5b9e\u4f8b\u72b6\u6001\uff0c\u5728\u540e\u53f0\u542f\u52a8\u7c7b\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u6bcf\u969410\u79d2\u68c0\u6d4b\u4e00\u6b21\u5b9e\u4f8b\u72b6\u6001\uff08\u5982\u679c\u5b9e\u4f8b\u572810\u79d2\u5185\u6709\u88ab\u8bbf\u95ee\uff0c\u5219\u4e0d\u68c0\u6d4b\uff09\uff0c\u5982\u679c\u68c0\u6d4b\u5931\u8d25\uff0c\u6bcf\u6b21\u68c0\u6d4b\u4f1a\u5c06\u9519\u8bef\u8ba1\u6570\u52a01\u3002\u8fd9\u91cc\u7684\u8ba1\u6570\uff0c\u4e5f\u4f1a\u5f71\u54cd\u5b9e\u4f8b\u9694\u79bb\u3002 \u7cfb\u7edf\u7f3a\u7701\u7684\u5b9e\u4f8b\u72b6\u6001\u68c0\u6d4b\u673a\u5236\u662f\u53d1\u9001\u4e00\u4e2atelnet\u6307\u4ee4\uff0c\u53c2\u8003SimpleMicroserviceInstancePing\u7684\u5b9e\u73b0\u3002\u5982\u679c\u4e1a\u52a1\u9700\u8981\u8986\u76d6\u72b6\u6001\u68c0\u6d4b\u673a\u5236\uff0c\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u4e24\u4e2a\u6b65\u9aa4\u5b8c\u6210\uff1a \u5b9e\u73b0MicroserviceInstancePing\u63a5\u53e3 \u914d\u7f6eSPI\uff1a\u589e\u52a0META-INF/services/org.apache.servicecomb.serviceregistry.consumer.MicroserviceInstancePing\uff0c\u5185\u5bb9\u4e3a\u5b9e\u73b0\u7c7b\u7684\u5168\u540d \u5f00\u53d1\u8005\u53ef\u4ee5\u9488\u5bf9\u4e0d\u540c\u7684\u5fae\u670d\u52a1\u914d\u7f6e\u4e0d\u4e00\u6837\u7684\u9694\u79bb\u7b56\u7565\u3002\u53ea\u9700\u8981\u7ed9\u914d\u7f6e\u9879\u589e\u52a0\u670d\u52a1\u540d\uff0c\u4f8b\u5982\uff1a servicecomb: loadbalance: myservice: isolation: enabled: true errorThresholdPercentage: 20 enableRequestThreshold: 5 singleTestTime: 10000 continuousFailureThreshold: 2 \u8be5\u89c4\u5219\u9ed8\u8ba4\u542f\u7528\uff0c\u5982\u679c\u4e0d\u9700\u8981\u4f7f\u7528\uff0c\u53ef\u4ee5\u901a\u8fc7servicecomb.loadbalance.filter.isolation.enabled\u8fdb\u884c\u5173\u95ed\u3002\u6570\u636e\u4e2d\u5fc3\u4fe1\u606f\u9694\u79bb\u529f\u80fd\u5728IsolationDiscoveryFilter\u5b9e\u73b0\u3002","title":"\u5b9e\u4f8b\u9694\u79bb\u529f\u80fd"},{"location":"references-handlers/loadbalance/#_6","text":"\u5f00\u53d1\u8005\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u9879\u6307\u5b9a\u8d1f\u8f7d\u5747\u8861\u7b56\u7565\u3002 servicecomb: loadbalance: strategy: name: RoundRobin # Support RoundRobin,Random,WeightedResponse,SessionStickiness \u5f00\u53d1\u8005\u53ef\u4ee5\u9488\u5bf9\u4e0d\u540c\u7684\u5fae\u670d\u52a1\u914d\u7f6e\u4e0d\u4e00\u6837\u7684\u7b56\u7565\uff0c\u53ea\u9700\u8981\u7ed9\u914d\u7f6e\u9879\u589e\u52a0\u670d\u52a1\u540d\uff0c\u4f8b\u5982\uff1a servicecomb: loadbalance: myservice: strategy: name: RoundRobin # Support RoundRobin,Random,WeightedResponse,SessionStickiness \u6bcf\u79cd\u7b56\u7565\u8fd8\u6709\u4e00\u4e9b\u4e13\u5c5e\u914d\u7f6e\u9879\uff0c\u4e5f\u652f\u6301\u9488\u5bf9\u4e0d\u540c\u5fae\u670d\u52a1\u8fdb\u884c\u914d\u7f6e\u3002 SessionStickiness servicecomb: loadbalance: SessionStickinessRule: sessionTimeoutInSeconds: 30 # \u5ba2\u6237\u7aef\u95f2\u7f6e\u65f6\u95f4\uff0c\u8d85\u8fc7\u9650\u5236\u540e\u9009\u62e9\u540e\u9762\u7684\u670d\u52a1\u5668 successiveFailedTimes: 5 # \u5ba2\u6237\u7aef\u5931\u8d25\u6b21\u6570\uff0c\u8d85\u8fc7\u540e\u4f1a\u5207\u6362\u670d\u52a1\u5668","title":"\u914d\u7f6e\u8def\u7531\u89c4\u5219"},{"location":"references-handlers/loadbalance/#_7","text":"\u8d1f\u8f7d\u5747\u8861\u6a21\u5757\u8fd8\u652f\u6301\u914d\u7f6e\u5931\u8d25\u91cd\u8bd5\u7684\u7b56\u7565\u3002 servicecomb: loadbalance: retryEnabled: false retryOnNext: 0 retryOnSame: 0 \u7f3a\u7701\u60c5\u51b5\u672a\u542f\u7528\u91cd\u8bd5\u3002\u540c\u65f6\u4e5f\u652f\u6301\u5bf9\u4e0d\u540c\u7684\u670d\u52a1\u8bbe\u7f6e\u7279\u6b8a\u7684\u7b56\u7565\uff1a servicecomb: loadbalance: myservice\uff1a retryEnabled: true retryOnNext: 1 retryOnSame: 0 retryOnNext\u8868\u793a\u5931\u8d25\u4ee5\u540e\uff0c\u6839\u636e\u8d1f\u8f7d\u5747\u8861\u7b56\u7565\uff0c\u91cd\u65b0\u9009\u62e9\u4e00\u4e2a\u5b9e\u4f8b\u91cd\u8bd5\uff08\u53ef\u80fd\u9009\u62e9\u5230\u540c\u4e00\u4e2a\u5b9e\u4f8b\uff09\u3002 retryOnSame\u8868\u793a\u4ecd\u7136\u4f7f\u7528\u4e0a\u6b21\u5931\u8d25\u7684\u5b9e\u4f8b\u8fdb\u884c\u91cd\u8bd5\u3002","title":"\u8bbe\u7f6e\u91cd\u8bd5\u7b56\u7565"},{"location":"references-handlers/loadbalance/#_8","text":"\u8d1f\u8f7d\u5747\u8861\u6a21\u5757\u63d0\u4f9b\u7684\u529f\u80fd\u5df2\u7ecf\u975e\u5e38\u5f3a\u5927\uff0c\u80fd\u591f\u901a\u8fc7\u914d\u7f6e\u652f\u6301\u5927\u90e8\u5206\u5e94\u7528\u573a\u666f\u3002\u540c\u65f6\u5b83\u4e5f\u63d0\u4f9b\u4e86\u5f3a\u5927\u7684\u6269\u5c55\u80fd\u529b\uff0c\u5305\u62ecDiscoveryFilter\u3001ServerListFilterExt\u3001ExtensionsFactory\uff08\u6269\u5c55IRule\uff0cRetryHandler\u7b49\uff09\u3002loadbalance\u6a21\u5757\u672c\u8eab\u5305\u542b\u4e86\u6bcf\u4e00\u4e2a\u6269\u5c55\u7684\u5b9e\u73b0\uff0c\u8fd9\u91cc\u4e0d\u518d\u8be6\u7ec6\u63cf\u8ff0\u5982\u4f55\u6269\u5c55\uff0c\u53ea\u7b80\u5355\u63cf\u8ff0\u6b65\u9aa4\u3002\u5f00\u53d1\u8005\u53ef\u4ee5\u81ea\u884c\u4e0b\u8f7dServiceComb\u6e90\u7801\u8fdb\u884c\u53c2\u8003\u3002 DiscoveryFilter \u5b9e\u73b0DiscoveryFilter\u63a5\u53e3 \u914d\u7f6eSPI\uff1a\u589e\u52a0META-INF/services/org.apache.servicecomb.serviceregistry.discovery.DiscoveryFilter\u6587\u4ef6\uff0c\u5185\u5bb9\u4e3a\u5b9e\u73b0\u7c7b\u7684\u5168\u540d ServerListFilterExt \u5b9e\u73b0ServerListFilterExt\u63a5\u53e3 \u914d\u7f6eSPI\uff1a\u589e\u52a0META-INF/services/org.apache.servicecomb.loadbalance.ServerListFilterExt\u6587\u4ef6\uff0c\u5185\u5bb9\u4e3a\u5b9e\u73b0\u7c7b\u7684\u5168\u540d \u6ce8\u610f\uff1a\u8fd9\u4e2a\u5f00\u53d1\u8bf4\u660e\u9002\u7528\u4e8e1.0.0\u53ca\u5176\u4ee5\u540e\u7684\u7248\u672c\uff0c\u65e9\u671f\u7684\u7248\u672c\u5f00\u53d1\u65b9\u5f0f\u4e0d\u540c\u3002 ExtensionsFactory \u5b9e\u73b0ExtensionsFactory\uff0c\u5e76\u4f7f\u7528@Component\u5c06\u5176\u53d1\u5e03\u4e3a\u4e00\u4e2aspring bean\u3002","title":"\u81ea\u5b9a\u4e49"},{"location":"references-handlers/publickey/","text":"\u516c\u94a5\u8ba4\u8bc1 \u573a\u666f\u63cf\u8ff0 \u516c\u94a5\u8ba4\u8bc1\u662fServiceComb\u63d0\u4f9b\u7684\u4e00\u79cd\u7b80\u5355\u9ad8\u6548\u7684\u5fae\u670d\u52a1\u4e4b\u95f4\u8ba4\u8bc1\u673a\u5236\uff0c\u5b83\u7684\u5b89\u5168\u6027\u5efa\u7acb\u5728\u5fae\u670d\u52a1\u4e0e\u670d\u52a1\u4e2d\u5fc3\u4e4b\u95f4\u7684\u4ea4\u4e92\u662f\u53ef\u4fe1\u7684\u57fa\u7840\u4e4b\u4e0a\uff0c\u5373\u5fae\u670d\u52a1\u548c\u670d\u52a1\u4e2d\u5fc3\u4e4b\u95f4\u5fc5\u987b\u5148\u542f\u7528\u8ba4\u8bc1\u673a\u5236\u3002\u5b83\u7684\u57fa\u672c\u6d41\u7a0b\u5982\u4e0b\uff1a \u5fae\u670d\u52a1\u542f\u52a8\u7684\u65f6\u5019\uff0c\u751f\u6210\u79d8\u94a5\u5bf9\uff0c\u5e76\u5c06\u516c\u94a5\u6ce8\u518c\u5230\u670d\u52a1\u4e2d\u5fc3\u3002 \u6d88\u8d39\u8005\u8bbf\u95ee\u63d0\u4f9b\u8005\u4e4b\u524d\uff0c\u4f7f\u7528\u81ea\u5df1\u7684\u79c1\u94a5\u5bf9\u6d88\u606f\u8fdb\u884c\u7b7e\u540d\u3002 \u63d0\u4f9b\u8005\u4ece\u670d\u52a1\u4e2d\u5fc3\u83b7\u53d6\u6d88\u8d39\u8005\u516c\u94a5\uff0c\u5bf9\u7b7e\u540d\u7684\u6d88\u606f\u8fdb\u884c\u6821\u9a8c\u3002 \u516c\u94a5\u8ba4\u8bc1\u9700\u8981\u5728\u6d88\u8d39\u8005\u3001\u63d0\u4f9b\u8005\u90fd\u542f\u7528\u3002 servicecomb: handler: chain: Consumer: default: auth-consumer Provider: default: auth-provider POM\u4f9d\u8d56\uff1a \u5728pom.xml\u4e2d\u589e\u52a0\u4f9d\u8d56\uff1a dependency groupId org.apache.servicecomb /groupId artifactId handler-publickey-auth /artifactId /dependency \u914d\u7f6e\u9ed1\u767d\u540d\u5355 \u57fa\u4e8e\u516c\u94a5\u8ba4\u8bc1\u673a\u5236\uff0cServiceComb\u63d0\u4f9b\u4e86\u9ed1\u767d\u540d\u5355\u529f\u80fd\u3002\u901a\u8fc7\u9ed1\u767d\u540d\u5355\uff0c\u53ef\u4ee5\u63a7\u5236\u5fae\u670d\u52a1\u5141\u8bb8\u5176\u4ed6\u54ea\u4e9b\u670d\u52a1\u8bbf\u95ee\u3002\u76ee\u524d\u652f\u6301\u901a\u8fc7\u914d\u7f6e\u670d\u52a1\u5c5e\u6027\u6765\u63a7\u5236\uff0c\u914d\u7f6e\u9879\u5982\u4e0b\uff1a servicecomb: publicKey: accessControl: black: list01: category: property ## property, fixed value propertyName: serviceName ## property name # property value match expression. # only supports prefix match and postfix match and exactly match. # e.g. hacker*, *hacker, hacker rule: hacker white: list02: category: property propertyName: serviceName rule: cust* \u4ee5\u4e0a\u89c4\u5219\u914d\u7f6e\u4e86\u9ed1\u540d\u5355\uff0c\u4e0d\u5141\u8bb8\u5fae\u670d\u52a1\u540d\u79f0\u4e3ahacker\u7684\u8bbf\u95ee\uff1b\u767d\u540d\u5355\uff0c\u5141\u8bb8\u5fae\u670d\u52a1\u540d\u79f0\u4e3acust\u524d\u7f00\u7684\u670d\u52a1\u8bbf\u95ee\u3002 ServiceComb\u63d0\u4f9b\u4e86 trust-sample \u6765\u6f14\u793a\u9ed1\u767d\u540d\u5355\u529f\u80fd\u3002","title":"\u516c\u94a5\u8ba4\u8bc1"},{"location":"references-handlers/publickey/#_1","text":"","title":"\u516c\u94a5\u8ba4\u8bc1"},{"location":"references-handlers/publickey/#_2","text":"\u516c\u94a5\u8ba4\u8bc1\u662fServiceComb\u63d0\u4f9b\u7684\u4e00\u79cd\u7b80\u5355\u9ad8\u6548\u7684\u5fae\u670d\u52a1\u4e4b\u95f4\u8ba4\u8bc1\u673a\u5236\uff0c\u5b83\u7684\u5b89\u5168\u6027\u5efa\u7acb\u5728\u5fae\u670d\u52a1\u4e0e\u670d\u52a1\u4e2d\u5fc3\u4e4b\u95f4\u7684\u4ea4\u4e92\u662f\u53ef\u4fe1\u7684\u57fa\u7840\u4e4b\u4e0a\uff0c\u5373\u5fae\u670d\u52a1\u548c\u670d\u52a1\u4e2d\u5fc3\u4e4b\u95f4\u5fc5\u987b\u5148\u542f\u7528\u8ba4\u8bc1\u673a\u5236\u3002\u5b83\u7684\u57fa\u672c\u6d41\u7a0b\u5982\u4e0b\uff1a \u5fae\u670d\u52a1\u542f\u52a8\u7684\u65f6\u5019\uff0c\u751f\u6210\u79d8\u94a5\u5bf9\uff0c\u5e76\u5c06\u516c\u94a5\u6ce8\u518c\u5230\u670d\u52a1\u4e2d\u5fc3\u3002 \u6d88\u8d39\u8005\u8bbf\u95ee\u63d0\u4f9b\u8005\u4e4b\u524d\uff0c\u4f7f\u7528\u81ea\u5df1\u7684\u79c1\u94a5\u5bf9\u6d88\u606f\u8fdb\u884c\u7b7e\u540d\u3002 \u63d0\u4f9b\u8005\u4ece\u670d\u52a1\u4e2d\u5fc3\u83b7\u53d6\u6d88\u8d39\u8005\u516c\u94a5\uff0c\u5bf9\u7b7e\u540d\u7684\u6d88\u606f\u8fdb\u884c\u6821\u9a8c\u3002 \u516c\u94a5\u8ba4\u8bc1\u9700\u8981\u5728\u6d88\u8d39\u8005\u3001\u63d0\u4f9b\u8005\u90fd\u542f\u7528\u3002 servicecomb: handler: chain: Consumer: default: auth-consumer Provider: default: auth-provider POM\u4f9d\u8d56\uff1a \u5728pom.xml\u4e2d\u589e\u52a0\u4f9d\u8d56\uff1a dependency groupId org.apache.servicecomb /groupId artifactId handler-publickey-auth /artifactId /dependency","title":"\u573a\u666f\u63cf\u8ff0"},{"location":"references-handlers/publickey/#_3","text":"\u57fa\u4e8e\u516c\u94a5\u8ba4\u8bc1\u673a\u5236\uff0cServiceComb\u63d0\u4f9b\u4e86\u9ed1\u767d\u540d\u5355\u529f\u80fd\u3002\u901a\u8fc7\u9ed1\u767d\u540d\u5355\uff0c\u53ef\u4ee5\u63a7\u5236\u5fae\u670d\u52a1\u5141\u8bb8\u5176\u4ed6\u54ea\u4e9b\u670d\u52a1\u8bbf\u95ee\u3002\u76ee\u524d\u652f\u6301\u901a\u8fc7\u914d\u7f6e\u670d\u52a1\u5c5e\u6027\u6765\u63a7\u5236\uff0c\u914d\u7f6e\u9879\u5982\u4e0b\uff1a servicecomb: publicKey: accessControl: black: list01: category: property ## property, fixed value propertyName: serviceName ## property name # property value match expression. # only supports prefix match and postfix match and exactly match. # e.g. hacker*, *hacker, hacker rule: hacker white: list02: category: property propertyName: serviceName rule: cust* \u4ee5\u4e0a\u89c4\u5219\u914d\u7f6e\u4e86\u9ed1\u540d\u5355\uff0c\u4e0d\u5141\u8bb8\u5fae\u670d\u52a1\u540d\u79f0\u4e3ahacker\u7684\u8bbf\u95ee\uff1b\u767d\u540d\u5355\uff0c\u5141\u8bb8\u5fae\u670d\u52a1\u540d\u79f0\u4e3acust\u524d\u7f00\u7684\u670d\u52a1\u8bbf\u95ee\u3002 ServiceComb\u63d0\u4f9b\u4e86 trust-sample \u6765\u6f14\u793a\u9ed1\u767d\u540d\u5355\u529f\u80fd\u3002","title":"\u914d\u7f6e\u9ed1\u767d\u540d\u5355"},{"location":"references-handlers/router/","text":"\u8def\u7531\u7ba1\u7406 \u5e94\u7528\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u8def\u7531\u7ba1\u7406\uff0c\u6765\u8fdb\u884c\u7070\u5ea6\u53d1\u5e03\u5b9e\u73b0\u7248\u672c\u7684\u5e73\u6ed1\u8fc7\u6e21\u5347\u7ea7\u3002\u8def\u7531\u7ba1\u7406\u901a\u8fc7\u52a8\u6001\u914d\u7f6e\u4e0b\u53d1\u5b8c\u6210\u3002 \u4f7f\u7528\u8def\u7531\u7ba1\u7406\uff0c\u9700\u8981\u5728\u9879\u76ee\u4e2d\u5f15\u5165\u5982\u4e0b\u4f9d\u8d56\uff1a dependency groupId org.apache.servicecomb /groupId artifactId handler-router /artifactId /dependency \u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u589e\u52a0\u914d\u7f6e\u9879\uff1a \u524d\u63d0\u6761\u4ef6\uff1a\u914d\u7f6eservicecomb.handler.chain.Consumer.default\uff0c\u5728\u5904\u7406\u94feConsumer\u4e2d\u914d\u7f6eloadbalance\uff0c loadbalance\u5904\u7406\u94fe\u4ecb\u7ecd \u3002 \u914d\u7f6e\u9879\u540d \u63cf\u8ff0 servicecomb.routeRule.[targetService] \u76ee\u6807\u670d\u52a1\u7684\u8def\u7531\u7ba1\u7406\u89c4\u5219 servicecomb.routeRule.type \u586b\u5199'router' \u8def\u7531\u7ba1\u7406\u89c4\u5219\u5b9e\u4f8b\u5982\u4e0b\uff1a servicecomb: routeRule: provider: | #\u670d\u52a1\u540d - precedence: 2 #\u4f18\u5148\u7ea7 match: #\u5339\u914d\u7b56\u7565 headers: #header\u5339\u914d region: regex: 'regoin[0-9]*' caseInsensitive: false # \u662f\u5426\u533a\u5206\u5927\u5c0f\u5199\uff0c\u9ed8\u8ba4\u4e3afalse\uff0c\u533a\u5206\u5927\u5c0f\u5199 type: exact: gray route: #\u8def\u7531\u89c4\u5219 - weight: 100 #\u6743\u91cd\u503c tags: version: {version1} app: {appId} - precedence: 1 route: - weight: 20 tags: version: 0.01 tags: tag - weight: 80 tags: version: 0.02 \u89c4\u5219\u8bf4\u660e \u5339\u914d\u7279\u5b9a\u8bf7\u6c42\u7531match\u914d\u7f6e\uff0c\u5339\u914d\u6761\u4ef6\u662fheaders\u3002 Header\u4e2d\u7684\u5b57\u6bb5\u7684\u5339\u914d\u652f\u6301\u6b63\u5219\u5339\u914d\u3001\u7cbe\u51c6\u5339\u914d\u3002 \u5982\u679c\u672a\u5b9a\u4e49match\uff0c\u5219\u53ef\u5339\u914d\u4efb\u4f55\u8bf7\u6c42\u3002 \u8f6c\u53d1\u6743\u91cd\u5b9a\u4e49\u5728routeRule.{targetServiceName}.route\u4e0b\uff0c\u7531weight\u914d\u7f6e\uff0cweight\u6570\u503c\u8868\u793a\u767e\u5206\u6570\uff0c\u9700\u8981\u6ee1\u8db3\u52a0\u548c\u7b49\u4e8e100\uff0c\u4e0d\u6ee1\u8db3100\u7684\u90e8\u5206\u4f1a\u7528\u6700\u65b0\u7248\u672c\u586b\u5145\u3002 \u670d\u52a1\u5206\u7ec4\u5b9a\u4e49\u5728routeRule.{targetServiceName}.route\u4e0b\uff0c\u7531tags\u914d\u7f6e\uff0c\u914d\u7f6e\u5185\u5bb9\u6709version\u548capp\u3002 caseInsensitive \u914d\u7f6e\u6761\u4ef6\u662f\u5426\u533a\u5206\u5927\u5c0f\u5199\uff0c\u9ed8\u8ba4false\u533a\u5206\u5927\u5c0f\u5199\uff0ctrue\u5219\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u3002 \u4f18\u5148\u7ea7\u6570\u91cf\u8d8a\u5927\u4f18\u5148\u7ea7\u8d8a\u9ad8\u3002 \u5339\u914d\u6d41\u7a0b \u5bf9\u4e8e\u4e0a\u9762\u7684\u793a\u4f8b\u914d\u7f6e\uff0c\u6240\u6709\u8bbf\u95eeprovider\u670d\u52a1\u7684\u8bf7\u6c42\uff0c\u9996\u5148\u5c1d\u8bd5\u4e0e\u4f18\u5148\u7ea7\u4e3a2\u7684\u7b2c\u4e00\u4e2a\u7684match\u89c4\u5219\u8fdb\u884c\u5339\u914dheader\uff1aheader\u5b58\u5728key\u4e3aregion\u7684\u6309\u7167\u6b63\u5219\u89c4\u5219\u533a\u5206\u5927\u5c0f\u5199\u5339\u914d\uff0c\u5b58\u5728key\u4e3atype\u7684\u8fdb\u884c\u5b57\u7b26\u4e32\u7cbe\u51c6\u5339\u914d\u3002\u82e5\u5339\u914dmatch\u6210\u529f\u5219\u6309\u7167route\u7684\u914d\u7f6e\u5206\u914d100%\u7684\u6d41\u91cf\u5230version\u548ctags\u5bf9\u5e94\u7684\u5b9e\u4f8b\u3002\u82e5\u5339\u914dmatch\u5931\u8d25\u5219\u8fdb\u5165\u4e0b\u4e2a\u4f18\u5148\u7ea7\u4e3a1\u7684\u89c4\u5219\u3002\u4e0d\u540c\u89c4\u5219\u4f18\u5148\u7ea7\u4e0d\u80fd\u76f8\u7b49\u3002 \u5f02\u5e38\u60c5\u51b5\u7684\u5904\u7406 \u5982\u679c\u56e0\u4e3a\u89c4\u5219\u914d\u7f6e\u9519\u8bef\uff0c\u6216\u8005\u6ca1\u6709match\u5230\u4efb\u4f55\u4e00\u6761\u89c4\u5219\uff0c\u6d41\u91cf\u4f1a\u76f4\u63a5\u8df3\u8fc7\u7070\u5ea6\u89c4\u5219\uff0c\u76f8\u5f53\u4e8e\u6ca1\u6709\u7070\u5ea6\u53d1\u5e03\u914d\u7f6e\u3002 \u5982\u679c\u5df2\u7ecf\u5339\u914d\u4e86match\uff0c\u56e0\u4e3a\u5bf9\u5e94\u7684version\u6216\u8005tags\u627e\u4e0d\u5230\u5b9e\u4f8b\uff0c\u5219\u5269\u4f59\u6d41\u91cf\u81ea\u52a8\u8f6c\u53d1\u5230\u76ee\u524d\u7684\u6700\u65b0\u7248\u672c\u3002 \u8d1f\u8f7d\u5747\u8861\u7b97\u6cd5 \u501f\u9274\u4e86nginx\uff0c\u4f7f\u7528\u5e73\u6ed1\u52a0\u6743\u8f6e\u8be2\u7b97\u6cd5\uff0c\u6d41\u91cf\u4f1a\u5747\u5300\u7684\u7b49\u6bd4\u5206\u914d\u5230\u5bf9\u5e94\u7684\u670d\u52a1\u5b9e\u4f8b\u4e0a\u3002","title":"\u8def\u7531\u7ba1\u7406"},{"location":"references-handlers/router/#_1","text":"\u5e94\u7528\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u8def\u7531\u7ba1\u7406\uff0c\u6765\u8fdb\u884c\u7070\u5ea6\u53d1\u5e03\u5b9e\u73b0\u7248\u672c\u7684\u5e73\u6ed1\u8fc7\u6e21\u5347\u7ea7\u3002\u8def\u7531\u7ba1\u7406\u901a\u8fc7\u52a8\u6001\u914d\u7f6e\u4e0b\u53d1\u5b8c\u6210\u3002 \u4f7f\u7528\u8def\u7531\u7ba1\u7406\uff0c\u9700\u8981\u5728\u9879\u76ee\u4e2d\u5f15\u5165\u5982\u4e0b\u4f9d\u8d56\uff1a dependency groupId org.apache.servicecomb /groupId artifactId handler-router /artifactId /dependency \u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u589e\u52a0\u914d\u7f6e\u9879\uff1a \u524d\u63d0\u6761\u4ef6\uff1a\u914d\u7f6eservicecomb.handler.chain.Consumer.default\uff0c\u5728\u5904\u7406\u94feConsumer\u4e2d\u914d\u7f6eloadbalance\uff0c loadbalance\u5904\u7406\u94fe\u4ecb\u7ecd \u3002 \u914d\u7f6e\u9879\u540d \u63cf\u8ff0 servicecomb.routeRule.[targetService] \u76ee\u6807\u670d\u52a1\u7684\u8def\u7531\u7ba1\u7406\u89c4\u5219 servicecomb.routeRule.type \u586b\u5199'router' \u8def\u7531\u7ba1\u7406\u89c4\u5219\u5b9e\u4f8b\u5982\u4e0b\uff1a servicecomb: routeRule: provider: | #\u670d\u52a1\u540d - precedence: 2 #\u4f18\u5148\u7ea7 match: #\u5339\u914d\u7b56\u7565 headers: #header\u5339\u914d region: regex: 'regoin[0-9]*' caseInsensitive: false # \u662f\u5426\u533a\u5206\u5927\u5c0f\u5199\uff0c\u9ed8\u8ba4\u4e3afalse\uff0c\u533a\u5206\u5927\u5c0f\u5199 type: exact: gray route: #\u8def\u7531\u89c4\u5219 - weight: 100 #\u6743\u91cd\u503c tags: version: {version1} app: {appId} - precedence: 1 route: - weight: 20 tags: version: 0.01 tags: tag - weight: 80 tags: version: 0.02","title":"\u8def\u7531\u7ba1\u7406"},{"location":"references-handlers/router/#_2","text":"\u5339\u914d\u7279\u5b9a\u8bf7\u6c42\u7531match\u914d\u7f6e\uff0c\u5339\u914d\u6761\u4ef6\u662fheaders\u3002 Header\u4e2d\u7684\u5b57\u6bb5\u7684\u5339\u914d\u652f\u6301\u6b63\u5219\u5339\u914d\u3001\u7cbe\u51c6\u5339\u914d\u3002 \u5982\u679c\u672a\u5b9a\u4e49match\uff0c\u5219\u53ef\u5339\u914d\u4efb\u4f55\u8bf7\u6c42\u3002 \u8f6c\u53d1\u6743\u91cd\u5b9a\u4e49\u5728routeRule.{targetServiceName}.route\u4e0b\uff0c\u7531weight\u914d\u7f6e\uff0cweight\u6570\u503c\u8868\u793a\u767e\u5206\u6570\uff0c\u9700\u8981\u6ee1\u8db3\u52a0\u548c\u7b49\u4e8e100\uff0c\u4e0d\u6ee1\u8db3100\u7684\u90e8\u5206\u4f1a\u7528\u6700\u65b0\u7248\u672c\u586b\u5145\u3002 \u670d\u52a1\u5206\u7ec4\u5b9a\u4e49\u5728routeRule.{targetServiceName}.route\u4e0b\uff0c\u7531tags\u914d\u7f6e\uff0c\u914d\u7f6e\u5185\u5bb9\u6709version\u548capp\u3002 caseInsensitive \u914d\u7f6e\u6761\u4ef6\u662f\u5426\u533a\u5206\u5927\u5c0f\u5199\uff0c\u9ed8\u8ba4false\u533a\u5206\u5927\u5c0f\u5199\uff0ctrue\u5219\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u3002 \u4f18\u5148\u7ea7\u6570\u91cf\u8d8a\u5927\u4f18\u5148\u7ea7\u8d8a\u9ad8\u3002","title":"\u89c4\u5219\u8bf4\u660e"},{"location":"references-handlers/router/#_3","text":"\u5bf9\u4e8e\u4e0a\u9762\u7684\u793a\u4f8b\u914d\u7f6e\uff0c\u6240\u6709\u8bbf\u95eeprovider\u670d\u52a1\u7684\u8bf7\u6c42\uff0c\u9996\u5148\u5c1d\u8bd5\u4e0e\u4f18\u5148\u7ea7\u4e3a2\u7684\u7b2c\u4e00\u4e2a\u7684match\u89c4\u5219\u8fdb\u884c\u5339\u914dheader\uff1aheader\u5b58\u5728key\u4e3aregion\u7684\u6309\u7167\u6b63\u5219\u89c4\u5219\u533a\u5206\u5927\u5c0f\u5199\u5339\u914d\uff0c\u5b58\u5728key\u4e3atype\u7684\u8fdb\u884c\u5b57\u7b26\u4e32\u7cbe\u51c6\u5339\u914d\u3002\u82e5\u5339\u914dmatch\u6210\u529f\u5219\u6309\u7167route\u7684\u914d\u7f6e\u5206\u914d100%\u7684\u6d41\u91cf\u5230version\u548ctags\u5bf9\u5e94\u7684\u5b9e\u4f8b\u3002\u82e5\u5339\u914dmatch\u5931\u8d25\u5219\u8fdb\u5165\u4e0b\u4e2a\u4f18\u5148\u7ea7\u4e3a1\u7684\u89c4\u5219\u3002\u4e0d\u540c\u89c4\u5219\u4f18\u5148\u7ea7\u4e0d\u80fd\u76f8\u7b49\u3002","title":"\u5339\u914d\u6d41\u7a0b"},{"location":"references-handlers/router/#_4","text":"\u5982\u679c\u56e0\u4e3a\u89c4\u5219\u914d\u7f6e\u9519\u8bef\uff0c\u6216\u8005\u6ca1\u6709match\u5230\u4efb\u4f55\u4e00\u6761\u89c4\u5219\uff0c\u6d41\u91cf\u4f1a\u76f4\u63a5\u8df3\u8fc7\u7070\u5ea6\u89c4\u5219\uff0c\u76f8\u5f53\u4e8e\u6ca1\u6709\u7070\u5ea6\u53d1\u5e03\u914d\u7f6e\u3002 \u5982\u679c\u5df2\u7ecf\u5339\u914d\u4e86match\uff0c\u56e0\u4e3a\u5bf9\u5e94\u7684version\u6216\u8005tags\u627e\u4e0d\u5230\u5b9e\u4f8b\uff0c\u5219\u5269\u4f59\u6d41\u91cf\u81ea\u52a8\u8f6c\u53d1\u5230\u76ee\u524d\u7684\u6700\u65b0\u7248\u672c\u3002","title":"\u5f02\u5e38\u60c5\u51b5\u7684\u5904\u7406"},{"location":"references-handlers/router/#_5","text":"\u501f\u9274\u4e86nginx\uff0c\u4f7f\u7528\u5e73\u6ed1\u52a0\u6743\u8f6e\u8be2\u7b97\u6cd5\uff0c\u6d41\u91cf\u4f1a\u5747\u5300\u7684\u7b49\u6bd4\u5206\u914d\u5230\u5bf9\u5e94\u7684\u670d\u52a1\u5b9e\u4f8b\u4e0a\u3002","title":"\u8d1f\u8f7d\u5747\u8861\u7b97\u6cd5"},{"location":"security/shi-yong-rsa-ren-zheng/","text":"\u573a\u666f\u63cf\u8ff0 \u7528\u6237\u901a\u8fc7\u7b80\u5355\u7684\u914d\u7f6e\u5373\u53ef\u542f\u7528\u670d\u52a1\u95f4RSA\u8ba4\u8bc1\uff0c\u4ee5\u4fdd\u969c\u670d\u52a1\u63a5\u53e3\u7684\u5b89\u5168\u6027\u3002 \u8be6\u7ec6\u4ecb\u7ecd\u53c2\u8003 \u516c\u94a5\u8ba4\u8bc1 Consumer\u914d\u7f6e \u5728pom.xml\u4e2d\u589e\u52a0\u4f9d\u8d56\uff1a dependency groupId org.apache.servicecomb /groupId artifactId handler-publickey-auth /artifactId /dependency \u5728microservice.yaml\u4e2d\u6dfb\u52a0\u8fdb\u5904\u7406\u94fe servicecomb: handler: chain: Consumer: default: auth-consumer Provider\u914d\u7f6e \u5728pom.xml\u4e2d\u589e\u52a0\u4f9d\u8d56\uff1a dependency groupId org.apache.servicecomb /groupId artifactId handler-publickey-auth /artifactId /dependency \u5728microservice.yaml\u4e2d\u6dfb\u52a0\u8fdb\u5904\u7406\u94fe servicecomb: handler: chain: Provider: default: auth-provider","title":"\u4f7f\u7528RSA\u8ba4\u8bc1"},{"location":"security/shi-yong-rsa-ren-zheng/#_1","text":"\u7528\u6237\u901a\u8fc7\u7b80\u5355\u7684\u914d\u7f6e\u5373\u53ef\u542f\u7528\u670d\u52a1\u95f4RSA\u8ba4\u8bc1\uff0c\u4ee5\u4fdd\u969c\u670d\u52a1\u63a5\u53e3\u7684\u5b89\u5168\u6027\u3002 \u8be6\u7ec6\u4ecb\u7ecd\u53c2\u8003 \u516c\u94a5\u8ba4\u8bc1","title":"\u573a\u666f\u63cf\u8ff0"},{"location":"security/shi-yong-rsa-ren-zheng/#consumer","text":"\u5728pom.xml\u4e2d\u589e\u52a0\u4f9d\u8d56\uff1a dependency groupId org.apache.servicecomb /groupId artifactId handler-publickey-auth /artifactId /dependency \u5728microservice.yaml\u4e2d\u6dfb\u52a0\u8fdb\u5904\u7406\u94fe servicecomb: handler: chain: Consumer: default: auth-consumer","title":"Consumer\u914d\u7f6e"},{"location":"security/shi-yong-rsa-ren-zheng/#provider","text":"\u5728pom.xml\u4e2d\u589e\u52a0\u4f9d\u8d56\uff1a dependency groupId org.apache.servicecomb /groupId artifactId handler-publickey-auth /artifactId /dependency \u5728microservice.yaml\u4e2d\u6dfb\u52a0\u8fdb\u5904\u7406\u94fe servicecomb: handler: chain: Provider: default: auth-provider","title":"Provider\u914d\u7f6e"},{"location":"security/tls/","text":"\u573a\u666f\u63cf\u8ff0 \u7528\u6237\u901a\u8fc7\u7b80\u5355\u7684\u914d\u7f6e\u5373\u53ef\u542f\u7528TLS\u901a\u4fe1\uff0c\u4ee5\u4fdd\u969c\u6570\u636e\u7684\u4f20\u8f93\u5b89\u5168\u3002 \u5916\u90e8\u670d\u52a1\u901a\u4fe1\u914d\u7f6e \u4e0e\u5916\u90e8\u670d\u52a1\u901a\u4fe1\u76f8\u5173\u7684\u914d\u7f6e\u5199\u5728microservice.yaml\u6587\u4ef6\u4e2d\u3002 \u670d\u52a1\u4e2d\u5fc3\u3001\u914d\u7f6e\u4e2d\u5fc3TLS\u901a\u4fe1\u914d\u7f6e \u5fae\u670d\u52a1\u4e0e\u670d\u52a1\u4e2d\u5fc3\u3001\u914d\u7f6e\u4e2d\u5fc3\u7684\u8fde\u63a5\u53ef\u4ee5\u901a\u8fc7\u5c06http\u6539\u4e3ahttps\u542f\u7528TLS\u901a\u4fe1\uff0c\u914d\u7f6e\u793a\u4f8b\u5982\u4e0b\uff1a servicecomb: service: registry: address: https://127.0.0.1:30100 config: client: serverUri: https://127.0.0.1:30103 \u670d\u52a1\u63d0\u4f9b\u8005\u542f\u7528TLS\u901a\u4fe1 \u670d\u52a1\u63d0\u4f9b\u8005\u5728\u914d\u7f6e\u670d\u52a1\u76d1\u542c\u5730\u5740\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728\u5730\u5740\u540e\u9762\u8ffd\u52a0 ?sslEnabled=true \u5f00\u542fTLS\u901a\u4fe1\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a servicecomb: rest: address: 0.0.0.0:8080?sslEnabled=true highway: address: 0.0.0.0:7070?sslEnabled=true \u8bc1\u4e66\u914d\u7f6e \u8bc1\u4e66\u914d\u7f6e\u9879\u5199\u5728microservice.yaml\u6587\u4ef6\u4e2d\uff0c\u652f\u6301\u7edf\u4e00\u5236\u5b9a\u8bc1\u4e66\uff0c\u4e5f\u53ef\u4ee5\u6dfb\u52a0tag\u8fdb\u884c\u66f4\u7ec6\u7c92\u5ea6\u7684\u914d\u7f6e\uff0c\u6709tag\u7684\u914d\u7f6e\u4f1a\u8986\u76d6\u5168\u5c40\u914d\u7f6e\uff0c\u914d\u7f6e\u683c\u5f0f\u5982\u4e0b\uff1a ssl.[tag].[property] \u5e38\u89c1\u7684tag\u5982\u4e0b\u8868\uff1a \u9879\u76ee tag \u670d\u52a1\u4e2d\u5fc3 sc.consumer \u914d\u7f6e\u4e2d\u5fc3 cc.consumer \u770b\u677f\u4e2d\u5fc3 mc.consumer Rest\u670d\u52a1\u7aef rest.provider Highway\u670d\u52a1\u7aef highway.provider Rest\u5ba2\u6237\u7aef rest.consumer Highway\u5ba2\u6237\u7aef highway.consumer auth\u5ba2\u6237\u7aef apiserver.consumer \u4e00\u822c\u4e0d\u9700\u8981\u914d\u7f6etag\uff0c\u6b63\u5e38\u60c5\u51b5\u5206\u4e3a\u4e09\u7c7b\uff1a1\u3001\u8fde\u63a5\u5185\u90e8\u670d\u52a1 2\u3001\u4f5c\u4e3a\u670d\u52a1\u7aef 3\u3001\u4f5c\u4e3a\u5ba2\u6237\u7aef \u6240\u4ee5\u5982\u679c\u8fd9\u4e09\u7c7b\u8981\u6c42\u7684\u8bc1\u4e66\u4e0d\u4e00\u81f4\uff0c\u90a3\u4e48\u9700\u8981\u4f7f\u7528tag\u6765\u533a\u5206 \u8bc1\u4e66\u914d\u7f6e\u9879\u89c1\u88681 \u8bc1\u4e66\u914d\u7f6e\u9879\u8bf4\u660e\u8868\u3002 \u88681 \u8bc1\u4e66\u914d\u7f6e\u9879\u8bf4\u660e\u8868 \u914d\u7f6e\u9879 \u9ed8\u8ba4\u503c \u53d6\u503c\u8303\u56f4 \u662f\u5426\u5fc5\u9009 \u542b\u4e49 \u6ce8\u610f ssl.engine jdk - \u5426 ssl\u534f\u8bae\uff0c\u63d0\u4f9bjdk/openssl\u9009\u62e9 \u9ed8\u8ba4\u4e3ajdk ssl.protocols TLSv1.2 - \u5426 \u534f\u8bae\u5217\u8868 \u4f7f\u7528\u9017\u53f7\u5206\u9694 ssl.ciphers TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 - \u5426 \u7b97\u6cd5\u5217\u8868 \u4f7f\u7528\u9017\u53f7\u5206\u9694 ssl.authPeer false - \u5426 \u662f\u5426\u8ba4\u8bc1\u5bf9\u7aef - ssl.checkCN.host false - \u5426 \u662f\u5426\u5bf9\u8bc1\u4e66\u7684CN\u8fdb\u884c\u68c0\u67e5 \u8be5\u914d\u7f6e\u9879\u53ea\u5bf9Consumer\u7aef\uff0c\u5e76\u4e14\u4f7f\u7528http\u534f\u8bae\u6709\u6548\uff0c\u5373Consumser\u7aef\u4f7f\u7528rest\u901a\u9053\u6709\u6548\u3002\u5bf9\u4e8eProvider\u7aef\u3001highway\u901a\u9053\u7b49\u65e0\u6548\u3002\u68c0\u67e5CN\u7684\u76ee\u7684\u662f\u9632\u6b62\u670d\u52a1\u5668\u88ab\u9493\u9c7c\uff0c\u53c2\u8003\u6807\u51c6\u5b9a\u4e49\uff1a https://tools.ietf.org/html/rfc2818\u3002 ssl.trustStore trust.jks - \u5426 \u4fe1\u4efb\u8bc1\u4e66\u6587\u4ef6 - ssl.trustStoreType JKS - \u5426 \u4fe1\u4efb\u8bc1\u4e66\u7c7b\u578b - ssl.trustStoreValue - - \u5426 \u4fe1\u4efb\u8bc1\u4e66\u5bc6\u7801 - ssl.keyStore server.p12 - \u5426 \u8eab\u4efd\u8bc1\u4e66\u6587\u4ef6 - ssl.keyStoreType PKCS12 - \u5426 \u8eab\u4efd\u8bc1\u4e66\u7c7b\u578b - ssl.keyStoreValue - - \u5426 \u8eab\u4efd\u8bc1\u4e66\u5bc6\u7801 - ssl.crl revoke.crl - \u5426 \u540a\u9500\u8bc1\u4e66\u6587\u4ef6 - ssl.sslCustomClass - org.apache.servicecomb.foundation.ssl.SSLCustom\u7684\u5b9e\u73b0\u7c7b \u5426 SSLCustom\u7c7b\u7684\u5b9e\u73b0\uff0c\u7528\u4e8e\u5f00\u53d1\u8005\u8f6c\u6362\u5bc6\u7801\u3001\u6587\u4ef6\u8def\u5f84\u7b49\u3002 - \u8bf4\u660e \uff1a \u9ed8\u8ba4\u7684\u534f\u8bae\u7b97\u6cd5\u662f\u9ad8\u5f3a\u5ea6\u52a0\u5bc6\u7b97\u6cd5\uff0cJDK\u9700\u8981\u5b89\u88c5\u5bf9\u5e94\u7684\u7b56\u7565\u6587\u4ef6\uff0c\u53c2\u8003\uff1a http://www.oracle.com/technetwork/java/javase/downloads/jce8-download-2133166.html \u3002 \u60a8\u53ef\u4ee5\u5728\u914d\u7f6e\u6587\u4ef6\u914d\u7f6e\u4f7f\u7528\u975e\u9ad8\u5f3a\u5ea6\u7b97\u6cd5\u3002 \u5fae\u670d\u52a1\u6d88\u8d39\u8005\uff0c\u53ef\u4ee5\u9488\u5bf9\u4e0d\u540c\u7684\u63d0\u4f9b\u8005\u6307\u5b9a\u8bc1\u4e66\uff08\u5f53\u524d\u8bc1\u4e66\u662f\u6309\u7167HOST\u7b7e\u53d1\u7684\uff0c\u4e0d\u540c\u7684\u63d0\u4f9b\u8005\u90fd\u4f7f\u7528\u4e00\u4efd\u8bc1\u4e66\u5b58\u50a8\u4ecb\u8d28\uff0c\u8fd9\u4efd\u4ecb\u8d28\u540c\u65f6\u7ed9\u5fae\u670d\u52a1\u8bbf\u95ee\u670d\u52a1\u4e2d\u5fc3\u548c\u914d\u7f6e\u4e2d\u5fc3\u4f7f\u7528\uff09\u3002 \u793a\u4f8b\u4ee3\u7801 microservice.yaml\u6587\u4ef6\u4e2d\u542f\u7528TLS\u901a\u4fe1\u7684\u914d\u7f6e\u793a\u4f8b\u5982\u4e0b\uff1a servicecomb: service: registry: address: https://127.0.0.1:30100 config: client: serverUri: https://127.0.0.1:30103 rest: address: 0.0.0.0:8080?sslEnabled=true highway: address: 0.0.0.0:7070?sslEnabled=true #########SSL options ssl.protocols: TLSv1.2 ssl.authPeer: true ssl.checkCN.host: true #########certificates config ssl.trustStore: trust.jks ssl.trustStoreType: JKS ssl.trustStoreValue: Changeme_123 ssl.keyStore: server.p12 ssl.keyStoreType: PKCS12 ssl.keyStoreValue: Changeme_123 ssl.crl: revoke.crl ssl.sslCustomClass: org.apache.servicecomb.demo.DemoSSLCustom","title":"\u4f7f\u7528TLS\u901a\u4fe1"},{"location":"security/tls/#_1","text":"\u7528\u6237\u901a\u8fc7\u7b80\u5355\u7684\u914d\u7f6e\u5373\u53ef\u542f\u7528TLS\u901a\u4fe1\uff0c\u4ee5\u4fdd\u969c\u6570\u636e\u7684\u4f20\u8f93\u5b89\u5168\u3002","title":"\u573a\u666f\u63cf\u8ff0"},{"location":"security/tls/#_2","text":"\u4e0e\u5916\u90e8\u670d\u52a1\u901a\u4fe1\u76f8\u5173\u7684\u914d\u7f6e\u5199\u5728microservice.yaml\u6587\u4ef6\u4e2d\u3002 \u670d\u52a1\u4e2d\u5fc3\u3001\u914d\u7f6e\u4e2d\u5fc3TLS\u901a\u4fe1\u914d\u7f6e \u5fae\u670d\u52a1\u4e0e\u670d\u52a1\u4e2d\u5fc3\u3001\u914d\u7f6e\u4e2d\u5fc3\u7684\u8fde\u63a5\u53ef\u4ee5\u901a\u8fc7\u5c06http\u6539\u4e3ahttps\u542f\u7528TLS\u901a\u4fe1\uff0c\u914d\u7f6e\u793a\u4f8b\u5982\u4e0b\uff1a servicecomb: service: registry: address: https://127.0.0.1:30100 config: client: serverUri: https://127.0.0.1:30103 \u670d\u52a1\u63d0\u4f9b\u8005\u542f\u7528TLS\u901a\u4fe1 \u670d\u52a1\u63d0\u4f9b\u8005\u5728\u914d\u7f6e\u670d\u52a1\u76d1\u542c\u5730\u5740\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728\u5730\u5740\u540e\u9762\u8ffd\u52a0 ?sslEnabled=true \u5f00\u542fTLS\u901a\u4fe1\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a servicecomb: rest: address: 0.0.0.0:8080?sslEnabled=true highway: address: 0.0.0.0:7070?sslEnabled=true","title":"\u5916\u90e8\u670d\u52a1\u901a\u4fe1\u914d\u7f6e"},{"location":"security/tls/#_3","text":"\u8bc1\u4e66\u914d\u7f6e\u9879\u5199\u5728microservice.yaml\u6587\u4ef6\u4e2d\uff0c\u652f\u6301\u7edf\u4e00\u5236\u5b9a\u8bc1\u4e66\uff0c\u4e5f\u53ef\u4ee5\u6dfb\u52a0tag\u8fdb\u884c\u66f4\u7ec6\u7c92\u5ea6\u7684\u914d\u7f6e\uff0c\u6709tag\u7684\u914d\u7f6e\u4f1a\u8986\u76d6\u5168\u5c40\u914d\u7f6e\uff0c\u914d\u7f6e\u683c\u5f0f\u5982\u4e0b\uff1a ssl.[tag].[property] \u5e38\u89c1\u7684tag\u5982\u4e0b\u8868\uff1a \u9879\u76ee tag \u670d\u52a1\u4e2d\u5fc3 sc.consumer \u914d\u7f6e\u4e2d\u5fc3 cc.consumer \u770b\u677f\u4e2d\u5fc3 mc.consumer Rest\u670d\u52a1\u7aef rest.provider Highway\u670d\u52a1\u7aef highway.provider Rest\u5ba2\u6237\u7aef rest.consumer Highway\u5ba2\u6237\u7aef highway.consumer auth\u5ba2\u6237\u7aef apiserver.consumer \u4e00\u822c\u4e0d\u9700\u8981\u914d\u7f6etag\uff0c\u6b63\u5e38\u60c5\u51b5\u5206\u4e3a\u4e09\u7c7b\uff1a1\u3001\u8fde\u63a5\u5185\u90e8\u670d\u52a1 2\u3001\u4f5c\u4e3a\u670d\u52a1\u7aef 3\u3001\u4f5c\u4e3a\u5ba2\u6237\u7aef \u6240\u4ee5\u5982\u679c\u8fd9\u4e09\u7c7b\u8981\u6c42\u7684\u8bc1\u4e66\u4e0d\u4e00\u81f4\uff0c\u90a3\u4e48\u9700\u8981\u4f7f\u7528tag\u6765\u533a\u5206 \u8bc1\u4e66\u914d\u7f6e\u9879\u89c1\u88681 \u8bc1\u4e66\u914d\u7f6e\u9879\u8bf4\u660e\u8868\u3002 \u88681 \u8bc1\u4e66\u914d\u7f6e\u9879\u8bf4\u660e\u8868 \u914d\u7f6e\u9879 \u9ed8\u8ba4\u503c \u53d6\u503c\u8303\u56f4 \u662f\u5426\u5fc5\u9009 \u542b\u4e49 \u6ce8\u610f ssl.engine jdk - \u5426 ssl\u534f\u8bae\uff0c\u63d0\u4f9bjdk/openssl\u9009\u62e9 \u9ed8\u8ba4\u4e3ajdk ssl.protocols TLSv1.2 - \u5426 \u534f\u8bae\u5217\u8868 \u4f7f\u7528\u9017\u53f7\u5206\u9694 ssl.ciphers TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 - \u5426 \u7b97\u6cd5\u5217\u8868 \u4f7f\u7528\u9017\u53f7\u5206\u9694 ssl.authPeer false - \u5426 \u662f\u5426\u8ba4\u8bc1\u5bf9\u7aef - ssl.checkCN.host false - \u5426 \u662f\u5426\u5bf9\u8bc1\u4e66\u7684CN\u8fdb\u884c\u68c0\u67e5 \u8be5\u914d\u7f6e\u9879\u53ea\u5bf9Consumer\u7aef\uff0c\u5e76\u4e14\u4f7f\u7528http\u534f\u8bae\u6709\u6548\uff0c\u5373Consumser\u7aef\u4f7f\u7528rest\u901a\u9053\u6709\u6548\u3002\u5bf9\u4e8eProvider\u7aef\u3001highway\u901a\u9053\u7b49\u65e0\u6548\u3002\u68c0\u67e5CN\u7684\u76ee\u7684\u662f\u9632\u6b62\u670d\u52a1\u5668\u88ab\u9493\u9c7c\uff0c\u53c2\u8003\u6807\u51c6\u5b9a\u4e49\uff1a https://tools.ietf.org/html/rfc2818\u3002 ssl.trustStore trust.jks - \u5426 \u4fe1\u4efb\u8bc1\u4e66\u6587\u4ef6 - ssl.trustStoreType JKS - \u5426 \u4fe1\u4efb\u8bc1\u4e66\u7c7b\u578b - ssl.trustStoreValue - - \u5426 \u4fe1\u4efb\u8bc1\u4e66\u5bc6\u7801 - ssl.keyStore server.p12 - \u5426 \u8eab\u4efd\u8bc1\u4e66\u6587\u4ef6 - ssl.keyStoreType PKCS12 - \u5426 \u8eab\u4efd\u8bc1\u4e66\u7c7b\u578b - ssl.keyStoreValue - - \u5426 \u8eab\u4efd\u8bc1\u4e66\u5bc6\u7801 - ssl.crl revoke.crl - \u5426 \u540a\u9500\u8bc1\u4e66\u6587\u4ef6 - ssl.sslCustomClass - org.apache.servicecomb.foundation.ssl.SSLCustom\u7684\u5b9e\u73b0\u7c7b \u5426 SSLCustom\u7c7b\u7684\u5b9e\u73b0\uff0c\u7528\u4e8e\u5f00\u53d1\u8005\u8f6c\u6362\u5bc6\u7801\u3001\u6587\u4ef6\u8def\u5f84\u7b49\u3002 - \u8bf4\u660e \uff1a \u9ed8\u8ba4\u7684\u534f\u8bae\u7b97\u6cd5\u662f\u9ad8\u5f3a\u5ea6\u52a0\u5bc6\u7b97\u6cd5\uff0cJDK\u9700\u8981\u5b89\u88c5\u5bf9\u5e94\u7684\u7b56\u7565\u6587\u4ef6\uff0c\u53c2\u8003\uff1a http://www.oracle.com/technetwork/java/javase/downloads/jce8-download-2133166.html \u3002 \u60a8\u53ef\u4ee5\u5728\u914d\u7f6e\u6587\u4ef6\u914d\u7f6e\u4f7f\u7528\u975e\u9ad8\u5f3a\u5ea6\u7b97\u6cd5\u3002 \u5fae\u670d\u52a1\u6d88\u8d39\u8005\uff0c\u53ef\u4ee5\u9488\u5bf9\u4e0d\u540c\u7684\u63d0\u4f9b\u8005\u6307\u5b9a\u8bc1\u4e66\uff08\u5f53\u524d\u8bc1\u4e66\u662f\u6309\u7167HOST\u7b7e\u53d1\u7684\uff0c\u4e0d\u540c\u7684\u63d0\u4f9b\u8005\u90fd\u4f7f\u7528\u4e00\u4efd\u8bc1\u4e66\u5b58\u50a8\u4ecb\u8d28\uff0c\u8fd9\u4efd\u4ecb\u8d28\u540c\u65f6\u7ed9\u5fae\u670d\u52a1\u8bbf\u95ee\u670d\u52a1\u4e2d\u5fc3\u548c\u914d\u7f6e\u4e2d\u5fc3\u4f7f\u7528\uff09\u3002","title":"\u8bc1\u4e66\u914d\u7f6e"},{"location":"security/tls/#_4","text":"microservice.yaml\u6587\u4ef6\u4e2d\u542f\u7528TLS\u901a\u4fe1\u7684\u914d\u7f6e\u793a\u4f8b\u5982\u4e0b\uff1a servicecomb: service: registry: address: https://127.0.0.1:30100 config: client: serverUri: https://127.0.0.1:30103 rest: address: 0.0.0.0:8080?sslEnabled=true highway: address: 0.0.0.0:7070?sslEnabled=true #########SSL options ssl.protocols: TLSv1.2 ssl.authPeer: true ssl.checkCN.host: true #########certificates config ssl.trustStore: trust.jks ssl.trustStoreType: JKS ssl.trustStoreValue: Changeme_123 ssl.keyStore: server.p12 ssl.keyStoreType: PKCS12 ssl.keyStoreValue: Changeme_123 ssl.crl: revoke.crl ssl.sslCustomClass: org.apache.servicecomb.demo.DemoSSLCustom","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"security/tls/shi-yong-rsa-ren-zheng/","text":"","title":"Shi yong rsa ren zheng"},{"location":"start/architecture/","text":"\u5fae\u670d\u52a1\u7cfb\u7edf\u67b6\u6784 \u6846\u67b6\u6982\u8ff0 \u4e3b\u8981\u8bbe\u8ba1\u610f\u56fe 1.\u7f16\u7a0b\u6a21\u578b\u548c\u901a\u4fe1\u6a21\u578b\u5206\u79bb\uff0c\u4e0d\u540c\u7684\u7f16\u7a0b\u6a21\u578b\u53ef\u4ee5\u7075\u6d3b\u7ec4\u5408\u4e0d\u540c\u7684\u901a\u4fe1\u6a21\u578b\u3002\u5e94\u7528\u5f00\u53d1\u8005\u5728\u5f00\u53d1\u9636\u6bb5\u53ea\u5173\u6ce8\u63a5\u53e3\u5f00\u53d1\uff0c\u90e8\u7f72\u9636\u6bb5\u7075\u6d3b\u5207\u6362\u901a\u4fe1\u65b9\u5f0f\uff1b\u652f\u6301legacy\u7cfb\u7edf\u7684\u5207\u6362\uff0clegacy\u7cfb\u7edf\u53ea\u9700\u8981\u4fee\u6539\u670d\u52a1\u53d1\u5e03\u7684\u914d\u7f6e\u6587\u4ef6\uff08\u6216\u8005annotation\uff09\uff0c\u800c\u4e0d\u9700\u8981\u4fee\u6539\u4ee3\u7801\u3002 \u73b0\u9636\u6bb5\u652f\u6301SpringMVC\u3001JAX-RS\u548c\u900f\u660eRPC\u4e09\u79cd\u5f00\u53d1\u65b9\u5f0f\u3002 2.\u5185\u5efaAPI-first\u652f\u6301\u3002\u901a\u8fc7\u5951\u7ea6\u89c4\u8303\u5316\u5fae\u670d\u52a1\u5f00\u53d1\uff0c\u5b9e\u73b0\u8de8\u8bed\u8a00\u7684\u901a\u4fe1\uff0c\u5e76\u652f\u6301\u914d\u5957\u7684\u8f6f\u4ef6\u5de5\u5177\u94fe\uff08\u5951\u7ea6\u751f\u6210\u4ee3\u7801\u3001\u4ee3\u7801\u751f\u6210\u5951\u7ea6\u7b49\uff09\u5f00\u53d1\uff0c\u6784\u5efa\u5b8c\u6574\u7684\u5f00\u53d1\u751f\u6001\u3002 3.\u5b9a\u4e49\u4e86\u5e38\u7528\u7684\u5fae\u670d\u52a1\u8fd0\u884c\u6a21\u578b\uff0c\u5c06\u5fae\u670d\u52a1\u4ece\u53d1\u73b0\u5230\u4ea4\u4e92\u8fc7\u7a0b\u4e2d\u7684\u5404\u79cd\u5bb9\u9519\u624b\u6bb5\u90fd\u5c01\u88c5\u8d77\u6765\u3002\u8be5\u8fd0\u884c\u6a21\u578b\u652f\u6301\u81ea\u5b9a\u4e49\u548c\u6269\u5c55\u3002 \u6a21\u5757\u8bf4\u660e \u7c7b\u578b artifact id \u662f\u5426\u53ef\u9009 \u529f\u80fd\u8bf4\u660e \u7f16\u7a0b\u6a21\u578b provider-pojo \u662f \u63d0\u4f9bRPC\u5f00\u53d1\u6a21\u5f0f \u7f16\u7a0b\u6a21\u578b provider-jaxrs \u662f \u63d0\u4f9bJAX RS\u5f00\u53d1\u6a21\u5f0f \u7f16\u7a0b\u6a21\u578b provider-springmvc \u662f \u63d0\u4f9bSpring MVC\u5f00\u53d1\u6a21\u5f0f \u901a\u4fe1\u6a21\u578b transport-rest-vertx \u662f \u8fd0\u884c\u4e8eHTTP\u4e4b\u4e0a\u7684\u5f00\u53d1\u6846\u67b6\uff0c\u4e0d\u4f9d\u8d56WEB\u5bb9\u5668\uff0c\u5e94\u7528\u6253\u5305\u4e3a\u53ef\u6267\u884cjar \u901a\u4fe1\u6a21\u578b transport-rest-servlet \u662f \u8fd0\u884c\u4e8eWEB\u5bb9\u5668\u7684\u5f00\u53d1\u6846\u67b6\uff0c\u5e94\u7528\u6253\u5305\u4e3awar\u5305 \u901a\u4fe1\u6a21\u578b transport-highway \u662f \u63d0\u4f9b\u9ad8\u6027\u80fd\u7684\u79c1\u6709\u901a\u4fe1\u534f\u8bae\uff0c\u4ec5\u7528\u4e8ejava\u4e4b\u95f4\u4e92\u901a\u3002 \u8fd0\u884c\u6a21\u578b handler-loadbalance \u662f \u8d1f\u8f7d\u5747\u8861\u6a21\u5757\u3002\u63d0\u4f9b\u5404\u79cd\u8def\u7531\u7b56\u7565\u548c\u914d\u7f6e\u65b9\u6cd5\u3002\u4e00\u822c\u5ba2\u6237\u7aef\u4f7f\u7528\u3002 \u8fd0\u884c\u6a21\u578b handler-bizkeeper \u662f \u548c\u670d\u52a1\u6cbb\u7406\u76f8\u5173\u7684\u529f\u80fd\uff0c\u6bd4\u5982\u9694\u79bb\u3001\u7194\u65ad\u3001\u5bb9\u9519\u3002 \u8fd0\u884c\u6a21\u578b handler-tracing \u662f \u8c03\u7528\u94fe\u8ddf\u8e2a\u6a21\u5757\uff0c\u5bf9\u63a5\u76d1\u63a7\u7cfb\u7edf\uff0c\u5410\u51fa\u6253\u70b9\u6570\u636e\u3002","title":"\u5fae\u670d\u52a1\u7cfb\u7edf\u67b6\u6784"},{"location":"start/architecture/#_1","text":"","title":"\u5fae\u670d\u52a1\u7cfb\u7edf\u67b6\u6784"},{"location":"start/architecture/#_2","text":"","title":"\u6846\u67b6\u6982\u8ff0"},{"location":"start/architecture/#_3","text":"1.\u7f16\u7a0b\u6a21\u578b\u548c\u901a\u4fe1\u6a21\u578b\u5206\u79bb\uff0c\u4e0d\u540c\u7684\u7f16\u7a0b\u6a21\u578b\u53ef\u4ee5\u7075\u6d3b\u7ec4\u5408\u4e0d\u540c\u7684\u901a\u4fe1\u6a21\u578b\u3002\u5e94\u7528\u5f00\u53d1\u8005\u5728\u5f00\u53d1\u9636\u6bb5\u53ea\u5173\u6ce8\u63a5\u53e3\u5f00\u53d1\uff0c\u90e8\u7f72\u9636\u6bb5\u7075\u6d3b\u5207\u6362\u901a\u4fe1\u65b9\u5f0f\uff1b\u652f\u6301legacy\u7cfb\u7edf\u7684\u5207\u6362\uff0clegacy\u7cfb\u7edf\u53ea\u9700\u8981\u4fee\u6539\u670d\u52a1\u53d1\u5e03\u7684\u914d\u7f6e\u6587\u4ef6\uff08\u6216\u8005annotation\uff09\uff0c\u800c\u4e0d\u9700\u8981\u4fee\u6539\u4ee3\u7801\u3002 \u73b0\u9636\u6bb5\u652f\u6301SpringMVC\u3001JAX-RS\u548c\u900f\u660eRPC\u4e09\u79cd\u5f00\u53d1\u65b9\u5f0f\u3002 2.\u5185\u5efaAPI-first\u652f\u6301\u3002\u901a\u8fc7\u5951\u7ea6\u89c4\u8303\u5316\u5fae\u670d\u52a1\u5f00\u53d1\uff0c\u5b9e\u73b0\u8de8\u8bed\u8a00\u7684\u901a\u4fe1\uff0c\u5e76\u652f\u6301\u914d\u5957\u7684\u8f6f\u4ef6\u5de5\u5177\u94fe\uff08\u5951\u7ea6\u751f\u6210\u4ee3\u7801\u3001\u4ee3\u7801\u751f\u6210\u5951\u7ea6\u7b49\uff09\u5f00\u53d1\uff0c\u6784\u5efa\u5b8c\u6574\u7684\u5f00\u53d1\u751f\u6001\u3002 3.\u5b9a\u4e49\u4e86\u5e38\u7528\u7684\u5fae\u670d\u52a1\u8fd0\u884c\u6a21\u578b\uff0c\u5c06\u5fae\u670d\u52a1\u4ece\u53d1\u73b0\u5230\u4ea4\u4e92\u8fc7\u7a0b\u4e2d\u7684\u5404\u79cd\u5bb9\u9519\u624b\u6bb5\u90fd\u5c01\u88c5\u8d77\u6765\u3002\u8be5\u8fd0\u884c\u6a21\u578b\u652f\u6301\u81ea\u5b9a\u4e49\u548c\u6269\u5c55\u3002","title":"\u4e3b\u8981\u8bbe\u8ba1\u610f\u56fe"},{"location":"start/architecture/#_4","text":"\u7c7b\u578b artifact id \u662f\u5426\u53ef\u9009 \u529f\u80fd\u8bf4\u660e \u7f16\u7a0b\u6a21\u578b provider-pojo \u662f \u63d0\u4f9bRPC\u5f00\u53d1\u6a21\u5f0f \u7f16\u7a0b\u6a21\u578b provider-jaxrs \u662f \u63d0\u4f9bJAX RS\u5f00\u53d1\u6a21\u5f0f \u7f16\u7a0b\u6a21\u578b provider-springmvc \u662f \u63d0\u4f9bSpring MVC\u5f00\u53d1\u6a21\u5f0f \u901a\u4fe1\u6a21\u578b transport-rest-vertx \u662f \u8fd0\u884c\u4e8eHTTP\u4e4b\u4e0a\u7684\u5f00\u53d1\u6846\u67b6\uff0c\u4e0d\u4f9d\u8d56WEB\u5bb9\u5668\uff0c\u5e94\u7528\u6253\u5305\u4e3a\u53ef\u6267\u884cjar \u901a\u4fe1\u6a21\u578b transport-rest-servlet \u662f \u8fd0\u884c\u4e8eWEB\u5bb9\u5668\u7684\u5f00\u53d1\u6846\u67b6\uff0c\u5e94\u7528\u6253\u5305\u4e3awar\u5305 \u901a\u4fe1\u6a21\u578b transport-highway \u662f \u63d0\u4f9b\u9ad8\u6027\u80fd\u7684\u79c1\u6709\u901a\u4fe1\u534f\u8bae\uff0c\u4ec5\u7528\u4e8ejava\u4e4b\u95f4\u4e92\u901a\u3002 \u8fd0\u884c\u6a21\u578b handler-loadbalance \u662f \u8d1f\u8f7d\u5747\u8861\u6a21\u5757\u3002\u63d0\u4f9b\u5404\u79cd\u8def\u7531\u7b56\u7565\u548c\u914d\u7f6e\u65b9\u6cd5\u3002\u4e00\u822c\u5ba2\u6237\u7aef\u4f7f\u7528\u3002 \u8fd0\u884c\u6a21\u578b handler-bizkeeper \u662f \u548c\u670d\u52a1\u6cbb\u7406\u76f8\u5173\u7684\u529f\u80fd\uff0c\u6bd4\u5982\u9694\u79bb\u3001\u7194\u65ad\u3001\u5bb9\u9519\u3002 \u8fd0\u884c\u6a21\u578b handler-tracing \u662f \u8c03\u7528\u94fe\u8ddf\u8e2a\u6a21\u5757\uff0c\u5bf9\u63a5\u76d1\u63a7\u7cfb\u7edf\uff0c\u5410\u51fa\u6253\u70b9\u6570\u636e\u3002","title":"\u6a21\u5757\u8bf4\u660e"},{"location":"start/catalog/","text":"\u5feb\u901f\u5165\u95e8 \u672f\u8bed\u8868 \u5fae\u670d\u52a1\u7cfb\u7edf\u67b6\u6784 \u5b89\u88c5\u672c\u5730\u5f00\u53d1\u73af\u5883 \u5f00\u53d1\u7b2c\u4e00\u4e2a\u5fae\u670d\u52a1 \u5b8c\u6574\u4f8b\u5b50-bmi\u5e94\u7528 \u5b8c\u6574\u4f8b\u5b50-porter\u5e94\u7528","title":"\u5feb\u901f\u5165\u95e8"},{"location":"start/catalog/#_1","text":"\u672f\u8bed\u8868 \u5fae\u670d\u52a1\u7cfb\u7edf\u67b6\u6784 \u5b89\u88c5\u672c\u5730\u5f00\u53d1\u73af\u5883 \u5f00\u53d1\u7b2c\u4e00\u4e2a\u5fae\u670d\u52a1 \u5b8c\u6574\u4f8b\u5b50-bmi\u5e94\u7528 \u5b8c\u6574\u4f8b\u5b50-porter\u5e94\u7528","title":"\u5feb\u901f\u5165\u95e8"},{"location":"start/deployment-on-cloud/","text":"\u672c\u7ae0\u8282\u4e3b\u8981\u63cf\u8ff0\u5fae\u670d\u52a1\u53d1\u5e03\u5230\u534e\u4e3a\u516c\u6709\u4e91\u4e0a\u3002\u4e0a\u4e91\u914d\u7f6e\u7684\u57fa\u672c\u539f\u5219\u662f\uff1a\u53ea\u9700\u8981\u5bf9microservice.yaml\u8fdb\u884c\u9002\u5f53\u7684\u914d\u7f6e\uff0c\u4ee5\u53ca\u5728pom\u4e2d\u6dfb\u52a0\u989d\u5916\u7684\u4f9d\u8d56\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u76f8\u5173\u7684\u529f\u80fd\u3002 \u4e00\u952e\u5f0f\u914d\u7f6e \u516c\u6709\u4e91\u7248\u672c\u63d0\u4f9b\u4e86\u4e00\u952e\u5f0f\u7b80\u5316\u914d\u7f6e\u7684\u65b9\u5f0f\uff0c\u8ba9\u57fa\u4e8e\u5f00\u6e90\u7248\u672c\u5f00\u53d1\u7684\u5e94\u7528\u5feb\u901f\u5207\u6362\u4e3a\u4e91\u4e0a\u5e94\u7528\uff0c\u76f4\u63a5\u4f7f\u7528\u516c\u6709\u4e91\u63d0\u4f9b\u7684\u7070\u5ea6\u53d1\u5e03\u3001\u670d\u52a1\u6cbb\u7406\u7b49\u529f\u80fd\u3002 \u589e\u52a0\u4f9d\u8d56\u5173\u7cfb(pom.xml) dependency groupId com.huawei.paas.cse /groupId artifactId cse-solution-service-engine /artifactId /dependency \u5f00\u53d1\u8005\u53ea\u9700\u8981\u914d\u7f6e\u5bf9cse-solution-service-engine\u4f9d\u8d56\uff0c\u5c31\u5b8c\u6210\u4e86\u516c\u6709\u4e91\u7684\u6240\u6709\u914d\u7f6e\u3002\u8fd9\u4e2a\u4f9d\u8d56\u5173\u7cfb\u4e3b\u8981\u7ed9\u5f00\u53d1\u8005\u505a\u4e86\u5982\u4e0b\u4e8b\u60c5\uff1a \u5f15\u5165\u76f8\u5173\u4f9d\u8d56\u7684\u7ec4\u4ef6 \u589e\u52a0\u9ed8\u8ba4\u914d\u7f6e\u9879\u3002\u9ed8\u8ba4\u914d\u7f6e\u5305\u542b\u4e86\u5904\u7406\u94fe\u3001\u8d1f\u8f7d\u5747\u8861\u7b56\u7565\u7b49\u3002 \u53ef\u4ee5\u901a\u8fc7\u67e5\u770bpom\u5185\u5bb9\uff0c\u4ee5\u53ca\u8fd9\u4e2ajar\u5305\u91cc\u9762\u7684microservice.yaml\u6587\u4ef6\u67e5\u770b\u5f15\u5165\u7684\u7ec4\u4ef6\u548c\u589e\u52a0\u7684\u914d\u7f6e\u9879\u3002\u5728\u4e0b\u9762\u7684\u7ae0\u8282\u4e2d\uff0c\u8be6\u7ec6\u89e3\u91ca\u4e0a\u4e91\u589e\u52a0\u7684\u7ec4\u4ef6\u4ee5\u53ca\u4ed6\u4eec\u7684\u4f5c\u7528\uff0c\u8ba9\u5f00\u53d1\u8005\u66f4\u52a0\u6df1\u5165\u7684\u4e86\u89e3\u5404\u79cd\u6280\u672f\u7ec6\u8282\u3002 \u8fde\u63a5\u670d\u52a1\u4e2d\u5fc3 \u529f\u80fd\u63cf\u8ff0 \u670d\u52a1\u4e2d\u5fc3\u5b9e\u73b0\u6ce8\u518c\u548c\u53d1\u73b0\uff0c\u5728FusionStage/ServiceStage\u67e5\u770b\u5fae\u670d\u52a1\u76ee\u5f55\uff0c\u90fd\u9700\u8981\u5fae\u670d\u52a1\u8fde\u63a5\u4e0a\u670d\u52a1\u4e2d\u5fc3\u3002 \u914d\u7f6e\u53c2\u8003 \u589e\u52a0\u4f9d\u8d56\u5173\u7cfb(pom.xml) \u5982\u679c\u8fde\u63a5\u670d\u52a1\u4e2d\u5fc3\u4f7f\u7528https\u534f\u8bae/AK/SK\u8ba4\u8bc1\uff0c\u8be5jar\u4f9d\u8d56\u5fc5\u9009\u3002\u5982\u679c\u662fhttp\u534f\u8bae\uff0c\u5e76\u4e0d\u5305\u542btoken\u9a8c\u8bc1\uff0c\u5219\u65e0\u9700\u5f15\u5165\u3002 dependency groupId com.huawei.paas.cse /groupId artifactId foundation-auth /artifactId /dependency \u914d\u7f6e\u9879(microservice.yaml\uff09 servicecomb: service: registry: address: https://servicecomb.cn-north-1.myhwclouds.com:443 #\u6839\u636e\u5b9e\u9645\u5730\u5740\u914d\u7f6e\u670d\u52a1\u4e2d\u5fc3\u5730\u5740 \u8be5\u914d\u7f6e\u9879\u914d\u7f6e\u4e86\u670d\u52a1\u4e2d\u5fc3\u7684\u5730\u5740\u3002\u5176\u4e2d\uff0caddress\u53ef\u4ee5\u5728\u516c\u6709\u4e91\u201c\u5de5\u5177\u548c\u6848\u4f8b\u201d\u76ee\u5f55\u4e0b\u67e5\u5230\u5bf9\u5e94\u7684\u670d\u52a1\u4e2d\u5fc3\u5730\u5740\uff0c\u4fee\u6539\u534f\u8bae\uff08http/https\uff09\u3001\u4e3b\u673a\u540d\uff08\u53ef\u80fd\u4f7f\u7528\u57df\u540d\uff09\u548c\u7aef\u53e3\u53f7\u3002 \u8fde\u63a5\u914d\u7f6e\u4e2d\u5fc3 \u529f\u80fd\u63cf\u8ff0 \u914d\u7f6e\u4e2d\u5fc3\u5b9e\u73b0\u914d\u7f6e\u4e0b\u53d1\uff0c\u8fde\u63a5\u914d\u7f6e\u4e2d\u5fc3\u662f\u4f7f\u7528\u6cbb\u7406\u3001\u7070\u5ea6\u53d1\u5e03\u7b49\u529f\u80fd\u7684\u524d\u53f0\u3002 \u914d\u7f6e\u53c2\u8003 \u589e\u52a0\u4f9d\u8d56\u5173\u7cfb(pom.xml) \u5982\u679c\u8fde\u63a5\u914d\u7f6e\u4e2d\u5fc3\u4f7f\u7528https\u534f\u8bae/AK/SK\u8ba4\u8bc1\uff0c\u8be5jar\u4f9d\u8d56\u5fc5\u9009\u3002\u5982\u679c\u662fhttp\u534f\u8bae\uff0c\u5e76\u4e0d\u5305\u542btoken\u9a8c\u8bc1\uff0c\u5219\u65e0\u9700\u5f15\u5165\u3002 dependency groupId com.huawei.paas.cse /groupId artifactId foundation-auth /artifactId /dependency \u8fde\u63a5\u914d\u7f6e\u4e2d\u5fc3\u8be5jar\u5fc5\u9009 dependency groupId com.huawei.paas.cse /groupId artifactId foundation-config-cc /artifactId /dependency \u542f\u7528\u914d\u7f6e(microservice.yaml\uff09 servicecomb: config: client: serverUri: https://servicecomb.cn-north-1.myhwclouds.com:443 \u8be5\u914d\u7f6e\u9879\u914d\u7f6e\u4e86\u914d\u7f6e\u4e2d\u5fc3\u7684\u5730\u5740\u3002\u5176\u4e2d\uff0caddress\u53ef\u4ee5\u5728\u516c\u6709\u4e91\u201c\u5de5\u5177\u548c\u6848\u4f8b\u201d\u76ee\u5f55\u4e0b\u67e5\u5230\u5bf9\u5e94\u7684\u914d\u7f6e\u4e2d\u5fc3\u5730\u5740\uff0c\u4fee\u6539\u534f\u8bae\uff08http/https\uff09\u3001\u4e3b\u673a\u540d\uff08\u53ef\u80fd\u4f7f\u7528\u57df\u540d\uff09\u548c\u7aef\u53e3\u53f7\u3002 \u4f7f\u7528\u670d\u52a1\u6cbb\u7406 \u529f\u80fd\u63cf\u8ff0 \u670d\u52a1\u6cbb\u7406\u4e3b\u8981\u6d89\u53ca\u201c\u9694\u79bb\u201d\u3001\u201c\u7194\u65ad\u201d\u3001\u201c\u5bb9\u9519\u201d\u3001\u201c\u9650\u6d41\u201d\u3001\u201c\u8d1f\u8f7d\u5747\u8861\u201d\u7b49\u3002 \u914d\u7f6e\u53c2\u8003 \u914d\u7f6e\u9879(microservice.yaml\uff09 \u9700\u8981\u589e\u52a0\u4e0b\u9762\u6cbb\u7406\u76f8\u5173\u7684handler\uff0c\u624d\u80fd\u5728\u4ece\u914d\u7f6e\u4e2d\u5fc3\u5b9e\u65f6\u83b7\u53d6\u6cbb\u7406\u6570\u636e\u3002 servicecomb: handler: chain: Provider: default: bizkeeper-provider,qps-flowcontrol-provider Consumer: default: bizkeeper-consumer,loadbalance,qps-flowcontrol-consumer \u4f7f\u7528\u6545\u969c\u6ce8\u5165 \u529f\u80fd\u63cf\u8ff0 \u6545\u969c\u6ce8\u5165\u4e3b\u8981\u63d0\u4f9b\u4e86\u5ef6\u65f6\u3001\u9519\u8bef\u4e24\u79cd\u7c7b\u578b\u6545\u969c\u3002 \u914d\u7f6e\u53c2\u8003 \u914d\u7f6e\u9879(microservice.yaml\uff09 \u9700\u8981\u589e\u52a0\u4e0b\u9762\u6cbb\u7406\u76f8\u5173\u7684handler\u3002 servicecomb: handler: chain: Consumer: default: loadbalance,fault-injection-consumer \u4f7f\u7528\u7070\u5ea6\u53d1\u5e03 \u529f\u80fd\u63cf\u8ff0 \u8be5\u529f\u80fd\u5bf9\u5e94\u4e8e\u5fae\u670d\u52a1\u76ee\u5f55\u7070\u5ea6\u53d1\u5e03\u529f\u80fd\u3002\u7ba1\u7406\u5458\u53ef\u4ee5\u901a\u8fc7\u4e0b\u53d1\u89c4\u5219\uff0c\u5bf9\u670d\u52a1\u8fdb\u884c\u7070\u5ea6\u53d1\u5e03\u7ba1\u7406\u3002 \u914d\u7f6e\u53c2\u8003 \u589e\u52a0\u4f9d\u8d56\u5173\u7cfb(pom.xml) \u5f15\u5165\u5fc5\u8981\u7684jar\u5305\u3002 dependency groupId com.huawei.paas.cse /groupId artifactId cse-handler-cloud-extension /artifactId /dependency \u5728Consumer\u7aef\u914d\u7f6e\u8d1f\u8f7d\u5747\u8861(microservice.yaml\uff09 \u5728\u8d1f\u8f7d\u5747\u8861\u6a21\u5757\u542f\u7528\u4e86\u7070\u5ea6\u53d1\u5e03\u7684filter\u3002 servicecomb: loadbalance: serverListFilters: darklaunch serverListFilter: darklaunch: className: com.huawei.paas.darklaunch.DarklaunchServerListFilter \u4f7f\u7528\u8c03\u7528\u94fe \u529f\u80fd\u63cf\u8ff0 \u534e\u4e3a\u4e91\u63d0\u4f9b\u4e86\u4e1a\u52a1\u65e0\u4fb5\u5165\u7684\u57cb\u70b9\u529f\u80fdAPM\u3002\u53ea\u9700\u8981\u901a\u8fc7\u534e\u4e3a\u4e91\u90e8\u7f72\u5bb9\u5668\u5e94\u7528\uff0c\u5e76\u9009\u62e9\u542f\u7528\u8c03\u7528\u94fe\u76d1\u63a7\u529f\u80fd\uff0c\u5373\u53ef\u4f7f\u7528\u8c03\u7528\u94fe\u670d\u52a1\u3002 \u5fae\u670d\u52a1\u8fd0\u884c\u6570\u636e\u4e0a\u62a5 \u529f\u80fd\u63cf\u8ff0 \u5fae\u670d\u52a1\u53ef\u4ee5\u5c06\u81ea\u5df1\u7684\u8fd0\u884c\u6570\u636e\u4e0a\u62a5\u7ed9Dashboard\u670d\u52a1\uff0c\u5728\u516c\u6709\u4e91\u4e0a\u67e5\u770b\u4eea\u8868\u76d8\u6570\u636e\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1\u6570\u636e\u7b49\u3002\u8be5\u7ae0\u8282\u662f\u63cf\u8ff0\u5982\u4f55\u542f\u7528\u5fae\u670d\u52a1\u6570\u636e\u4e0a\u62a5\u529f\u80fd\u3002 \u914d\u7f6e\u53c2\u8003 \u589e\u52a0\u4f9d\u8d56\u5173\u7cfb(pom.xml) \u5f15\u5165\u5fc5\u8981\u7684jar\u5305\u3002 dependency \u3000\u3000 groupId com.huawei.paas.cse /groupId \u3000\u3000 artifactId cse-handler-cloud-extension /artifactId /dependency \u914d\u7f6ehandler \u4eea\u8868\u76d8\u6570\u636e\u4f9d\u8d56\u4e8e\u4e24\u4e2ahandler\uff0c\u4e00\u4e2abizkeeper-provider\uff08\u5ba2\u6237\u7aef\u4e3abizkeeper-consumer\uff09\uff0c\u4e00\u4e2aperf-stats\uff0c\u6240\u4ee5\u5bf9\u5e94\u7684pom\u4f9d\u8d56\u9700\u8981\u5148\u5f15\u5165\u3002 servicecomb: handler: chain: Provider: default: bizkeeper-provider,perf-stats,tracing-provider,sla-provider Consumer: default: bizkeeper-consumer,loadbalance,perf-stats,tracing-consumer,sla-consumer \u914d\u7f6e\u4e0a\u62a5monitor\u5730\u5740 TenantLB_ADDRESS\u4e3a\u5171\u6709\u4e91\u79df\u6237\u7ba1\u7406\u9762\u63a5\u5165\u5730\u5740\uff0c\u9ed8\u8ba4\u662f100.125.1.34\u3002 servicecomb: service: registry: address: https://${TenantLB_ADDRESS}:30100 monitor: client: serverUri: https://${TenantLB_ADDRESS}:30109 \u5206\u5e03\u5f0f\u4e8b\u52a1: TCC \u529f\u80fd\u63cf\u8ff0 \u4e3b\u8981\u5b9e\u73b0\u57fa\u4e8eTCC\u534f\u8bae\u7684\u5206\u5e03\u5f0f\u670d\u52a1\u95f4\u7684\u6700\u7ec8\u4e00\u81f4\u6027\u65b9\u6848\uff0c\u4fdd\u969c\u4e00\u822c\u573a\u666f\u4e0b\u7684\u5e94\u7528\u4e00\u81f4\u6027\u9700\u6c42\uff0c\u5e76\u53ef\u4ee5\u5728FusionStage/ServiceStage\u5206\u5e03\u5f0f\u4e8b\u52a1\u754c\u9762\u67e5\u770b\u4e8b\u52a1\u8be6\u7ec6\u4fe1\u606f\u3002 \u914d\u7f6e\u53c2\u8003 \u589e\u52a0\u4f9d\u8d56\u5173\u7cfb(pom.xml) \u5f15\u5165\u5fc5\u8981\u7684jar\u5305 dependency \u3000\u3000 groupId com.huawei.paas.cse /groupId \u3000\u3000 artifactId cse-handler-tcc /artifactId /dependency \u914d\u7f6e\u9879\u53c2\u8003 \u9700\u8981\u589e\u52a0\u4e0b\u9762\u4e8b\u52a1\u76f8\u5173\u7684handler\uff0c\u624d\u80fd\u5728\u4ece\u914d\u7f6e\u4e2d\u5fc3\u5b9e\u65f6\u83b7\u53d6\u6cbb\u7406\u6570\u636e\u3002 servicecomb: handler: chain: Provider: default: tcc-client,bizkeeper-provider Consumer: default: tcc-server,bizkeeper-consumer,loadbalance","title":"Deployment on cloud"},{"location":"start/deployment-on-cloud/#_1","text":"\u516c\u6709\u4e91\u7248\u672c\u63d0\u4f9b\u4e86\u4e00\u952e\u5f0f\u7b80\u5316\u914d\u7f6e\u7684\u65b9\u5f0f\uff0c\u8ba9\u57fa\u4e8e\u5f00\u6e90\u7248\u672c\u5f00\u53d1\u7684\u5e94\u7528\u5feb\u901f\u5207\u6362\u4e3a\u4e91\u4e0a\u5e94\u7528\uff0c\u76f4\u63a5\u4f7f\u7528\u516c\u6709\u4e91\u63d0\u4f9b\u7684\u7070\u5ea6\u53d1\u5e03\u3001\u670d\u52a1\u6cbb\u7406\u7b49\u529f\u80fd\u3002 \u589e\u52a0\u4f9d\u8d56\u5173\u7cfb(pom.xml) dependency groupId com.huawei.paas.cse /groupId artifactId cse-solution-service-engine /artifactId /dependency \u5f00\u53d1\u8005\u53ea\u9700\u8981\u914d\u7f6e\u5bf9cse-solution-service-engine\u4f9d\u8d56\uff0c\u5c31\u5b8c\u6210\u4e86\u516c\u6709\u4e91\u7684\u6240\u6709\u914d\u7f6e\u3002\u8fd9\u4e2a\u4f9d\u8d56\u5173\u7cfb\u4e3b\u8981\u7ed9\u5f00\u53d1\u8005\u505a\u4e86\u5982\u4e0b\u4e8b\u60c5\uff1a \u5f15\u5165\u76f8\u5173\u4f9d\u8d56\u7684\u7ec4\u4ef6 \u589e\u52a0\u9ed8\u8ba4\u914d\u7f6e\u9879\u3002\u9ed8\u8ba4\u914d\u7f6e\u5305\u542b\u4e86\u5904\u7406\u94fe\u3001\u8d1f\u8f7d\u5747\u8861\u7b56\u7565\u7b49\u3002 \u53ef\u4ee5\u901a\u8fc7\u67e5\u770bpom\u5185\u5bb9\uff0c\u4ee5\u53ca\u8fd9\u4e2ajar\u5305\u91cc\u9762\u7684microservice.yaml\u6587\u4ef6\u67e5\u770b\u5f15\u5165\u7684\u7ec4\u4ef6\u548c\u589e\u52a0\u7684\u914d\u7f6e\u9879\u3002\u5728\u4e0b\u9762\u7684\u7ae0\u8282\u4e2d\uff0c\u8be6\u7ec6\u89e3\u91ca\u4e0a\u4e91\u589e\u52a0\u7684\u7ec4\u4ef6\u4ee5\u53ca\u4ed6\u4eec\u7684\u4f5c\u7528\uff0c\u8ba9\u5f00\u53d1\u8005\u66f4\u52a0\u6df1\u5165\u7684\u4e86\u89e3\u5404\u79cd\u6280\u672f\u7ec6\u8282\u3002","title":"\u4e00\u952e\u5f0f\u914d\u7f6e"},{"location":"start/deployment-on-cloud/#_2","text":"","title":"\u8fde\u63a5\u670d\u52a1\u4e2d\u5fc3"},{"location":"start/deployment-on-cloud/#_3","text":"\u670d\u52a1\u4e2d\u5fc3\u5b9e\u73b0\u6ce8\u518c\u548c\u53d1\u73b0\uff0c\u5728FusionStage/ServiceStage\u67e5\u770b\u5fae\u670d\u52a1\u76ee\u5f55\uff0c\u90fd\u9700\u8981\u5fae\u670d\u52a1\u8fde\u63a5\u4e0a\u670d\u52a1\u4e2d\u5fc3\u3002","title":"\u529f\u80fd\u63cf\u8ff0"},{"location":"start/deployment-on-cloud/#_4","text":"\u589e\u52a0\u4f9d\u8d56\u5173\u7cfb(pom.xml) \u5982\u679c\u8fde\u63a5\u670d\u52a1\u4e2d\u5fc3\u4f7f\u7528https\u534f\u8bae/AK/SK\u8ba4\u8bc1\uff0c\u8be5jar\u4f9d\u8d56\u5fc5\u9009\u3002\u5982\u679c\u662fhttp\u534f\u8bae\uff0c\u5e76\u4e0d\u5305\u542btoken\u9a8c\u8bc1\uff0c\u5219\u65e0\u9700\u5f15\u5165\u3002 dependency groupId com.huawei.paas.cse /groupId artifactId foundation-auth /artifactId /dependency \u914d\u7f6e\u9879(microservice.yaml\uff09 servicecomb: service: registry: address: https://servicecomb.cn-north-1.myhwclouds.com:443 #\u6839\u636e\u5b9e\u9645\u5730\u5740\u914d\u7f6e\u670d\u52a1\u4e2d\u5fc3\u5730\u5740 \u8be5\u914d\u7f6e\u9879\u914d\u7f6e\u4e86\u670d\u52a1\u4e2d\u5fc3\u7684\u5730\u5740\u3002\u5176\u4e2d\uff0caddress\u53ef\u4ee5\u5728\u516c\u6709\u4e91\u201c\u5de5\u5177\u548c\u6848\u4f8b\u201d\u76ee\u5f55\u4e0b\u67e5\u5230\u5bf9\u5e94\u7684\u670d\u52a1\u4e2d\u5fc3\u5730\u5740\uff0c\u4fee\u6539\u534f\u8bae\uff08http/https\uff09\u3001\u4e3b\u673a\u540d\uff08\u53ef\u80fd\u4f7f\u7528\u57df\u540d\uff09\u548c\u7aef\u53e3\u53f7\u3002","title":"\u914d\u7f6e\u53c2\u8003"},{"location":"start/deployment-on-cloud/#_5","text":"","title":"\u8fde\u63a5\u914d\u7f6e\u4e2d\u5fc3"},{"location":"start/deployment-on-cloud/#_6","text":"\u914d\u7f6e\u4e2d\u5fc3\u5b9e\u73b0\u914d\u7f6e\u4e0b\u53d1\uff0c\u8fde\u63a5\u914d\u7f6e\u4e2d\u5fc3\u662f\u4f7f\u7528\u6cbb\u7406\u3001\u7070\u5ea6\u53d1\u5e03\u7b49\u529f\u80fd\u7684\u524d\u53f0\u3002","title":"\u529f\u80fd\u63cf\u8ff0"},{"location":"start/deployment-on-cloud/#_7","text":"\u589e\u52a0\u4f9d\u8d56\u5173\u7cfb(pom.xml) \u5982\u679c\u8fde\u63a5\u914d\u7f6e\u4e2d\u5fc3\u4f7f\u7528https\u534f\u8bae/AK/SK\u8ba4\u8bc1\uff0c\u8be5jar\u4f9d\u8d56\u5fc5\u9009\u3002\u5982\u679c\u662fhttp\u534f\u8bae\uff0c\u5e76\u4e0d\u5305\u542btoken\u9a8c\u8bc1\uff0c\u5219\u65e0\u9700\u5f15\u5165\u3002 dependency groupId com.huawei.paas.cse /groupId artifactId foundation-auth /artifactId /dependency \u8fde\u63a5\u914d\u7f6e\u4e2d\u5fc3\u8be5jar\u5fc5\u9009 dependency groupId com.huawei.paas.cse /groupId artifactId foundation-config-cc /artifactId /dependency \u542f\u7528\u914d\u7f6e(microservice.yaml\uff09 servicecomb: config: client: serverUri: https://servicecomb.cn-north-1.myhwclouds.com:443 \u8be5\u914d\u7f6e\u9879\u914d\u7f6e\u4e86\u914d\u7f6e\u4e2d\u5fc3\u7684\u5730\u5740\u3002\u5176\u4e2d\uff0caddress\u53ef\u4ee5\u5728\u516c\u6709\u4e91\u201c\u5de5\u5177\u548c\u6848\u4f8b\u201d\u76ee\u5f55\u4e0b\u67e5\u5230\u5bf9\u5e94\u7684\u914d\u7f6e\u4e2d\u5fc3\u5730\u5740\uff0c\u4fee\u6539\u534f\u8bae\uff08http/https\uff09\u3001\u4e3b\u673a\u540d\uff08\u53ef\u80fd\u4f7f\u7528\u57df\u540d\uff09\u548c\u7aef\u53e3\u53f7\u3002","title":"\u914d\u7f6e\u53c2\u8003"},{"location":"start/deployment-on-cloud/#_8","text":"","title":"\u4f7f\u7528\u670d\u52a1\u6cbb\u7406"},{"location":"start/deployment-on-cloud/#_9","text":"\u670d\u52a1\u6cbb\u7406\u4e3b\u8981\u6d89\u53ca\u201c\u9694\u79bb\u201d\u3001\u201c\u7194\u65ad\u201d\u3001\u201c\u5bb9\u9519\u201d\u3001\u201c\u9650\u6d41\u201d\u3001\u201c\u8d1f\u8f7d\u5747\u8861\u201d\u7b49\u3002","title":"\u529f\u80fd\u63cf\u8ff0"},{"location":"start/deployment-on-cloud/#_10","text":"\u914d\u7f6e\u9879(microservice.yaml\uff09 \u9700\u8981\u589e\u52a0\u4e0b\u9762\u6cbb\u7406\u76f8\u5173\u7684handler\uff0c\u624d\u80fd\u5728\u4ece\u914d\u7f6e\u4e2d\u5fc3\u5b9e\u65f6\u83b7\u53d6\u6cbb\u7406\u6570\u636e\u3002 servicecomb: handler: chain: Provider: default: bizkeeper-provider,qps-flowcontrol-provider Consumer: default: bizkeeper-consumer,loadbalance,qps-flowcontrol-consumer","title":"\u914d\u7f6e\u53c2\u8003"},{"location":"start/deployment-on-cloud/#_11","text":"","title":"\u4f7f\u7528\u6545\u969c\u6ce8\u5165"},{"location":"start/deployment-on-cloud/#_12","text":"\u6545\u969c\u6ce8\u5165\u4e3b\u8981\u63d0\u4f9b\u4e86\u5ef6\u65f6\u3001\u9519\u8bef\u4e24\u79cd\u7c7b\u578b\u6545\u969c\u3002","title":"\u529f\u80fd\u63cf\u8ff0"},{"location":"start/deployment-on-cloud/#_13","text":"\u914d\u7f6e\u9879(microservice.yaml\uff09 \u9700\u8981\u589e\u52a0\u4e0b\u9762\u6cbb\u7406\u76f8\u5173\u7684handler\u3002 servicecomb: handler: chain: Consumer: default: loadbalance,fault-injection-consumer","title":"\u914d\u7f6e\u53c2\u8003"},{"location":"start/deployment-on-cloud/#_14","text":"","title":"\u4f7f\u7528\u7070\u5ea6\u53d1\u5e03"},{"location":"start/deployment-on-cloud/#_15","text":"\u8be5\u529f\u80fd\u5bf9\u5e94\u4e8e\u5fae\u670d\u52a1\u76ee\u5f55\u7070\u5ea6\u53d1\u5e03\u529f\u80fd\u3002\u7ba1\u7406\u5458\u53ef\u4ee5\u901a\u8fc7\u4e0b\u53d1\u89c4\u5219\uff0c\u5bf9\u670d\u52a1\u8fdb\u884c\u7070\u5ea6\u53d1\u5e03\u7ba1\u7406\u3002","title":"\u529f\u80fd\u63cf\u8ff0"},{"location":"start/deployment-on-cloud/#_16","text":"\u589e\u52a0\u4f9d\u8d56\u5173\u7cfb(pom.xml) \u5f15\u5165\u5fc5\u8981\u7684jar\u5305\u3002 dependency groupId com.huawei.paas.cse /groupId artifactId cse-handler-cloud-extension /artifactId /dependency \u5728Consumer\u7aef\u914d\u7f6e\u8d1f\u8f7d\u5747\u8861(microservice.yaml\uff09 \u5728\u8d1f\u8f7d\u5747\u8861\u6a21\u5757\u542f\u7528\u4e86\u7070\u5ea6\u53d1\u5e03\u7684filter\u3002 servicecomb: loadbalance: serverListFilters: darklaunch serverListFilter: darklaunch: className: com.huawei.paas.darklaunch.DarklaunchServerListFilter","title":"\u914d\u7f6e\u53c2\u8003"},{"location":"start/deployment-on-cloud/#_17","text":"","title":"\u4f7f\u7528\u8c03\u7528\u94fe"},{"location":"start/deployment-on-cloud/#_18","text":"\u534e\u4e3a\u4e91\u63d0\u4f9b\u4e86\u4e1a\u52a1\u65e0\u4fb5\u5165\u7684\u57cb\u70b9\u529f\u80fdAPM\u3002\u53ea\u9700\u8981\u901a\u8fc7\u534e\u4e3a\u4e91\u90e8\u7f72\u5bb9\u5668\u5e94\u7528\uff0c\u5e76\u9009\u62e9\u542f\u7528\u8c03\u7528\u94fe\u76d1\u63a7\u529f\u80fd\uff0c\u5373\u53ef\u4f7f\u7528\u8c03\u7528\u94fe\u670d\u52a1\u3002","title":"\u529f\u80fd\u63cf\u8ff0"},{"location":"start/deployment-on-cloud/#_19","text":"","title":"\u5fae\u670d\u52a1\u8fd0\u884c\u6570\u636e\u4e0a\u62a5"},{"location":"start/deployment-on-cloud/#_20","text":"\u5fae\u670d\u52a1\u53ef\u4ee5\u5c06\u81ea\u5df1\u7684\u8fd0\u884c\u6570\u636e\u4e0a\u62a5\u7ed9Dashboard\u670d\u52a1\uff0c\u5728\u516c\u6709\u4e91\u4e0a\u67e5\u770b\u4eea\u8868\u76d8\u6570\u636e\u3001\u5206\u5e03\u5f0f\u4e8b\u52a1\u6570\u636e\u7b49\u3002\u8be5\u7ae0\u8282\u662f\u63cf\u8ff0\u5982\u4f55\u542f\u7528\u5fae\u670d\u52a1\u6570\u636e\u4e0a\u62a5\u529f\u80fd\u3002","title":"\u529f\u80fd\u63cf\u8ff0"},{"location":"start/deployment-on-cloud/#_21","text":"\u589e\u52a0\u4f9d\u8d56\u5173\u7cfb(pom.xml) \u5f15\u5165\u5fc5\u8981\u7684jar\u5305\u3002 dependency \u3000\u3000 groupId com.huawei.paas.cse /groupId \u3000\u3000 artifactId cse-handler-cloud-extension /artifactId /dependency \u914d\u7f6ehandler \u4eea\u8868\u76d8\u6570\u636e\u4f9d\u8d56\u4e8e\u4e24\u4e2ahandler\uff0c\u4e00\u4e2abizkeeper-provider\uff08\u5ba2\u6237\u7aef\u4e3abizkeeper-consumer\uff09\uff0c\u4e00\u4e2aperf-stats\uff0c\u6240\u4ee5\u5bf9\u5e94\u7684pom\u4f9d\u8d56\u9700\u8981\u5148\u5f15\u5165\u3002 servicecomb: handler: chain: Provider: default: bizkeeper-provider,perf-stats,tracing-provider,sla-provider Consumer: default: bizkeeper-consumer,loadbalance,perf-stats,tracing-consumer,sla-consumer \u914d\u7f6e\u4e0a\u62a5monitor\u5730\u5740 TenantLB_ADDRESS\u4e3a\u5171\u6709\u4e91\u79df\u6237\u7ba1\u7406\u9762\u63a5\u5165\u5730\u5740\uff0c\u9ed8\u8ba4\u662f100.125.1.34\u3002 servicecomb: service: registry: address: https://${TenantLB_ADDRESS}:30100 monitor: client: serverUri: https://${TenantLB_ADDRESS}:30109","title":"\u914d\u7f6e\u53c2\u8003"},{"location":"start/deployment-on-cloud/#tcc","text":"","title":"\u5206\u5e03\u5f0f\u4e8b\u52a1: TCC"},{"location":"start/deployment-on-cloud/#_22","text":"\u4e3b\u8981\u5b9e\u73b0\u57fa\u4e8eTCC\u534f\u8bae\u7684\u5206\u5e03\u5f0f\u670d\u52a1\u95f4\u7684\u6700\u7ec8\u4e00\u81f4\u6027\u65b9\u6848\uff0c\u4fdd\u969c\u4e00\u822c\u573a\u666f\u4e0b\u7684\u5e94\u7528\u4e00\u81f4\u6027\u9700\u6c42\uff0c\u5e76\u53ef\u4ee5\u5728FusionStage/ServiceStage\u5206\u5e03\u5f0f\u4e8b\u52a1\u754c\u9762\u67e5\u770b\u4e8b\u52a1\u8be6\u7ec6\u4fe1\u606f\u3002","title":"\u529f\u80fd\u63cf\u8ff0"},{"location":"start/deployment-on-cloud/#_23","text":"\u589e\u52a0\u4f9d\u8d56\u5173\u7cfb(pom.xml) \u5f15\u5165\u5fc5\u8981\u7684jar\u5305 dependency \u3000\u3000 groupId com.huawei.paas.cse /groupId \u3000\u3000 artifactId cse-handler-tcc /artifactId /dependency \u914d\u7f6e\u9879\u53c2\u8003 \u9700\u8981\u589e\u52a0\u4e0b\u9762\u4e8b\u52a1\u76f8\u5173\u7684handler\uff0c\u624d\u80fd\u5728\u4ece\u914d\u7f6e\u4e2d\u5fc3\u5b9e\u65f6\u83b7\u53d6\u6cbb\u7406\u6570\u636e\u3002 servicecomb: handler: chain: Provider: default: tcc-client,bizkeeper-provider Consumer: default: tcc-server,bizkeeper-consumer,loadbalance","title":"\u914d\u7f6e\u53c2\u8003"},{"location":"start/design/","text":"Apache ServiceComb Java Chassis \u7ed3\u5408\u5927\u91cf\u5fae\u670d\u52a1\u5f00\u53d1\u5b9e\u8df5\uff0c\u5b9e\u73b0 \u5fae\u670d\u52a1\u67b6\u6784\u6a21\u5f0f \uff0c \u5e2e \u52a9\u5f00\u53d1\u8005\u66f4\u52a0\u7b80\u5355\u3001\u5feb\u901f\u7684\u6784\u5efa\u5fae\u670d\u52a1\u5e94\u7528\u3002 \u5fae\u670d\u52a1\u67b6\u6784\u6a21\u5f0f\u7684\u6838\u5fc3\u5305\u542b\u5982\u4e0b\u51e0\u90e8\u5206\uff1a \u5fae\u670d\u52a1\u4e4b\u95f4\u7684 RPC \u901a\u4fe1\u3002Java Chassis \u63d0\u4f9b\u4e86\u975e\u5e38\u9ad8\u6548\u7684\u901a\u4fe1\u65b9\u5f0f\uff0c\u5e76\u652f\u6301\u591a\u534f\u8bae\u6269\u5c55\uff0c\u6bd4\u5982\u6700\u5feb\u7684 REST \u901a\u4fe1\u6a21\u5f0f\u5b9e\u73b0\uff0c \u5f02\u6b65\u7684\u4e8c\u8fdb\u5236\u901a\u4fe1\u6a21\u5f0f HIGHWAY \u3002 \u5206\u5e03\u5f0f\u5fae\u670d\u52a1\u5b9e\u4f8b\u548c\u670d\u52a1\u53d1\u73b0\u3002\u7ed3\u5408 ServiceComb Service Center\uff0c \u5b9e\u73b0\u5206\u5e03\u5f0f\u3001\u591a\u96c6\u7fa4\u670d\u52a1\u53d1\u73b0\u80fd\u529b\uff0c\u4ee5\u53ca\u5f3a\u5927\u7684\u5fae\u670d\u52a1\u5143\u6570\u636e\u7ba1\u7406\u80fd\u529b\u3002 \u914d\u7f6e\u5916\u7f6e\uff0c\u52a8\u6001\u3001\u96c6\u4e2d\u7684\u914d\u7f6e\u7ba1\u7406\u3002 \u80fd\u591f\u4f7f\u7528 ServiceComb Kie\uff0c \u534e\u4e3a\u4e91\u914d\u7f6e\u4e2d\u5fc3\u3001 Nacos\u3001 Apollo \u7b49\u591a\u79cd\u914d\u7f6e\u4e2d\u5fc3\uff0c \u5e76\u4e14\u548c Spring Boot \u914d\u7f6e\u7ba1\u7406\u80fd\u529b\u5b8c\u6574\u878d\u5408\u3002 \u5206\u5e03\u5f0f\u6545\u969c\u7ba1\u7406\uff0c\u670d\u52a1\u5bb9\u9519\u3001\u9694\u79bb\u3001\u7194\u65ad\u3002 \u5185\u7f6e\u6545\u969c\u5b9e\u4f8b\u9694\u79bb\u3001\u6545\u969c\u91cd\u8bd5\u3001\u8017\u65f6\u63a5\u53e3\u9694\u79bb\u7b49\u91cd\u8981\u5206\u5e03\u5f0f\u6545\u969c\u5904\u7406\u80fd\u529b\u3002\u53ef\u9009\u4f7f\u7528 Hystrix \u7684 \u5bb9\u9519\u3001\u9694\u79bb\u3001\u7194\u65ad\u80fd\u529b\uff0c \u53ea\u9700\u8981\u505a\u7b80\u5355\u7684\u914d\u7f6e\u3002 \u5206\u5e03\u5f0f\u65e5\u5fd7\u8ffd\u8e2a\u3002 \u63d0\u4f9b Open Tracing \u652f\u6301\u3002 \u6b64\u5916\u8fd8\u6709\u6027\u80fd\u76d1\u63a7\uff0c\u65e5\u5fd7\u8bb0\u5f55\u7cfb\u7edf\u3001\u5065\u5eb7\u68c0\u67e5\u7b49\u3002 Java Chassis \u91c7\u7528\u4f18\u96c5\u7684\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u5b9e\u73b0\u4e86\u4e0a\u8ff0\u6240\u6709\u7684\u6838\u5fc3\u90e8\u4ef6\u7684\u529f\u80fd\uff0c\u5e76\u4e14\u4f7f\u5f97\u8fd9\u4e9b\u529f\u80fd \u5f00\u7bb1\u5373\u7528\u3002\u4f7f\u7528 Java Chassis , \u5f00\u53d1\u8005\u80fd\u591f\u66f4\u52a0\u805a\u7126\u4e8e\u4e1a\u52a1\u529f\u80fd\u5f00\u53d1\uff0c\u5feb\u901f\u7684\u6784\u5efa\u5546\u4e1a\u53ef\u7528\u7684\u5fae\u670d\u52a1\u5e94\u7528\u3002 Java Chassis \u7684\u8f6f\u4ef6\u5de5\u7a0b\u5b9e\u8df5 Java Chassis \u5728\u8bbe\u8ba1\u7684\u65f6\u5019\uff0c \u4e0d\u4ec5\u8003\u8651\u4e86\u5982\u4f55\u66f4\u597d\u7684\u4f7f\u7528\u5fae\u670d\u52a1\u67b6\u6784\u6a21\u5f0f\uff0c \u8fd8\u628a\u4f18\u79c0\u7684\u8f6f\u4ef6\u5de5\u7a0b\u601d\u60f3\u878d\u5408\u8fdb\u6765\uff0c \u5e2e\u52a9\u5f00\u53d1\u8005\u66f4\u597d\u7684\u7ba1\u7406\u4fe1\u606f \u8d44\u4ea7\uff0c \u63d0\u5347\u8f6f\u4ef6\u5de5\u7a0b\u7ba1\u7406\u80fd\u529b\u3002 \u4e0b\u56fe\u7b80\u5355\u7684\u63cf\u8ff0 \u201c\u4ee5\u5951\u7ea6\u4e3a\u4e2d\u5fc3\u201d \u7684\u6838\u5fc3\u6982\u5ff5\u3002 \u53ef\u4ee5\u901a\u8fc7 Invocation \u83b7\u53d6\u5230 Java Chassis \u7684\u5951\u7ea6\u7b49\u6e90\u6570\u636e\u4fe1\u606f\uff0c \u662f Java Chassis \u7684\u4e00\u4e2a\u6838\u5fc3\u5bf9\u8c61\u3002 \u53ef\u4ee5\u9605\u8bfb \u57fa\u4e8eCSE\u7684\u5fae\u670d\u52a1\u5de5\u7a0b\u5b9e\u8df5-\u4ee5\u5951\u7ea6\u4e3a\u4e2d\u5fc3 \u4e86\u89e3\u5951\u7ea6\u5982\u4f55\u5e94\u7528\u7684\u66f4\u591a\u5185\u5bb9\u3002 \u5de5\u7a0b \u5b9e\u8df5\u4e0d\u662f Java Chassis \u7684\u5f3a\u5236\u7ea6\u675f\uff0c \u5f00\u53d1\u8005\u53ef\u4ee5\u7ed3\u5408\u5b9e\u9645\u60c5\u51b5\u8fdb\u884c\u9009\u62e9\u3002 Java Chassis \u7684\u8fd0\u884c\u65f6\u67b6\u6784 \u4e3a\u4e86\u652f\u6301\u8f6f\u4ef6\u5de5\u7a0b\u5b9e\u8df5\uff0c Java Chassis \u7684\u8fd0\u884c\u65f6\u67b6\u6784\u662f\u4e00\u4e2a\u54d1\u94c3\u7ed3\u6784\uff0c \u4e24\u7aef\u5206\u522b\u662f\u201c\u7f16\u7a0b\u6a21\u578b\u201d \u548c \u201c\u901a\u4fe1\u6a21\u578b\u201d\uff0c \u4e2d\u95f4\u662f\u201c\u8fd0\u884c\u6a21\u578b\u201d\u3002 \u201c\u7f16\u7a0b\u6a21\u578b\u201d \u9762\u5411\u5f00\u53d1\u8005\u5199\u670d\u52a1\u63a5\u53e3\u7684\u4e60\u60ef\uff0c \u201c\u901a\u4fe1\u6a21\u578b\u201d \u9762\u5411\u5fae\u670d\u52a1\u4e4b\u95f4\u7684\u9ad8\u6548\u7f16\u7801\u548c\u901a\u4fe1\uff0c \u201c\u8fd0\u884c\u6a21\u578b\u201d \u57fa\u4e8e\u201c\u5951\u7ea6\u201d\uff0c \u63d0\u4f9b\u4e00\u79cd\u670d\u52a1\u670d\u52a1\u65e0\u5173 \u7684\u63d2\u62d4\u673a\u5236\uff0c\u80fd\u591f\u8ba9\u5f00\u53d1\u8005\u72ec\u7acb\u4e8e\u4e1a\u52a1\u5b9e\u73b0\u5f00\u53d1\u6cbb\u7406\u529f\u80fd\uff0c\u5e76\u4e14\u7075\u6d3b\u7684\u79fb\u9664\u548c\u589e\u52a0\u529f\u80fd\uff0c\u4ee5\u53ca\u8c03\u6574\u8fd9\u4e9b\u6cbb\u7406\u529f\u80fd\u7684\u5904\u7406\u987a\u5e8f\u3002 \u201c\u8fd0\u884c\u6a21\u578b\u201d \u7684\u6838\u5fc3\u62bd\u8c61\u63a5\u53e3\u662f Handler \uff0c \u8fd9\u4e2a\u63a5\u53e3\u662f\u4e00\u4e2a\u5f02\u6b65\u7684\u5b9a\u4e49\uff0c Java Chassis \u8fd0\u884c\u65f6\u6a21\u578b\u91c7\u7528\u7eaf\u5f02\u6b65\u7684\u5b9e\u73b0\uff0c \u8ba9\u6574\u4e2a\u7cfb\u7edf\u8fd0\u884c\u975e\u5e38 \u9ad8\u6548\u3002 \u53ef\u4ee5\u9605\u8bfb Apache ServiceComb \u7684\u5f00\u653e\u6027\u8bbe\u8ba1 \u4e86\u89e3 Java Chassis \u8fd0\u884c\u65f6\u67b6\u6784\u7684\u5176\u4ed6\u8bbe\u8ba1\u8003\u8651\u3002 Java Chassis \u5fae\u670d\u52a1\u5e94\u7528\u67b6\u6784 \u6709\u5f88\u591a\u4f18\u79c0\u7684\u5fae\u670d\u52a1\u5e94\u7528\u67b6\u6784\u5b9e\u8df5\u3002 \u5fae\u670d\u52a1\u5e94\u7528\u67b6\u6784\u5e94\u8be5\u5145\u5206\u8003\u8651\u7cfb\u7edf\u7684\u5f39\u6027\uff0c \u80fd\u591f\u9488\u5bf9\u7cfb\u7edf\u7684\u6027\u80fd\u74f6\u9888\u70b9\u8fdb\u884c\u6269\u5bb9\uff0c \u9700\u8981\u8003\u8651\u5e94\u7528\u7cfb\u7edf\u5185\u90e8\u5fae\u670d\u52a1 \u62c6\u5206\u7684\u7075\u6d3b\u6027\uff0c \u4e3a\u4e1a\u52a1\u7684\u53d8\u66f4\u505a\u597d\u53ca\u65f6\u8c03\u6574\u3002 \u4e0b\u56fe\u5c55\u793a\u4e86\u4e00\u4e2a\u5178\u578b\u7684\u5e94\u7528\u67b6\u6784\u3002 \u63a5\u5165\u5c42\u91c7\u7528\u4e00\u4e9b\u7f51\u7edc\u57fa\u7840\u8bbe\u65bd\uff0c\u6bd4\u5982 DNS \uff0c \u6d6e\u52a8 IP \u7b49\u65b9\u4fbf\u7528\u6237\u91c7\u7528\u7edf\u4e00\u7684 URL \u8bbf\u95ee\u7cfb\u7edf\uff0c \u6216\u8005\u91c7\u7528 API \u7f51\u5173\u7b49 \u57fa\u7840\u8bbe\u65bd\u5b9e\u73b0\u7cfb\u7edf\u7684\u80fd\u529b\u5f00\u653e\u3002 \u4e1a\u52a1\u5c42\u5305\u542b\u5e94\u7528\u7f51\u5173\uff0c \u8fdb\u884c\u4e00\u4e9b\u8ba4\u8bc1\u9274\u6743\u3001 \u5ba1\u8ba1\u7b49\u529f\u80fd\uff0c \u7ecf\u8fc7\u8ba4\u8bc1\u7684\u8bf7\u6c42\u88ab\u5e94\u7528\u7f51\u5173\u8f6c\u53d1\u5230\u5fae\u670d\u52a1\u7cfb\u7edf\u5185\u90e8\u3002 \u53ef\u4ee5\u9605\u8bfb \u5355\u4f53\u5e94\u7528\u5fae\u670d\u52a1\u6539\u9020\u5b9e\u8df5 \uff0c \u4e86\u89e3\u4e3a\u4ec0\u4e48\u63a8\u8350\u8fd9\u6837\u7684\u5fae\u670d\u52a1\u5e94\u7528\u67b6\u6784\u3002 Java Chassis \u4e3a\u5e94\u7528\u67b6\u6784\u63d0\u4f9b\u4e86\u63a5\u5165\u7f51\u5173\u670d\u52a1 Edge Servcie \u3002 Java Chassis \u5fae\u670d\u52a1\u6280\u672f\u9009\u578b Java \u8bed\u8a00\u62e5\u6709\u5e9e\u5927\u7684\u6280\u672f\u4f53\u7cfb\u548c\u6807\u51c6\uff0c \u5e76\u4e14\u5e7f\u6cdb\u7684\u5e94\u7528\u5230\u4e1a\u52a1\u7684\u7cfb\u7edf\u7684\u5404\u4e2a\u65b9\u9762\u3002 \u548c Java Chassis \u6709\u7d27\u5bc6\u5173\u7cfb\u7684\u6280\u672f\u5305\u62ec JSP/Servlet \u6807\u51c6 \u548c\u5bb9\u5668\uff0c Spring \u548c Spring Boot \u6280\u672f\uff0c \u4ee5\u53ca Spring Boot \u63d0\u4f9b\u7684 REST \u5f00\u53d1\u6846\u67b6 Spring MVC\u3002 Java Chassis \u548c JSP/Servlet \u6807\u51c6 Java Chassis \u4e0d\u4f9d\u8d56\u4e8e JSP/Servlet \u6807\u51c6\uff0c \u53ef\u4ee5\u57fa\u4e8e Vert.x \u7684 HTTP \u5b9e\u73b0\uff0c \u63d0\u4f9b\u975e\u5e38\u8f7b\u91cf\u7ea7\u548c\u9ad8\u6548\u7684 REST \u670d\u52a1\uff0c \u5728\u6027\u80fd\u8981\u6c42\u9ad8\u7684\u6838\u5fc3 \u4e1a\u52a1\u573a\u666f\uff0c \u4f7f\u7528\u8fd9\u79cd\u8f7b\u91cf\u7ea7\u7684\u6280\u672f\u975e\u5e38\u5408\u9002\u3002 \u8fd9\u79cd\u573a\u666f\u4e0b\uff0c \u6ca1\u6709\u5b8c\u6574\u7684\u5b9e\u73b0 JSP/Servlet \u76f8\u5173\u63a5\u53e3\uff0c \u6bd4\u5982 HttpServletRequest, HttpServletResponse \u7b49\u3002 servicecomb-samples \u63d0\u4f9b\u4e86\u4e00\u4e2a\u5b8c\u6574\u7684\u4f7f\u7528\u8fd9\u79cd\u90e8\u7f72\u6a21\u5f0f\u7684\u4f8b\u5b50\u3002 \u57fa\u4e8eCSE\u7684\u5fae\u670d\u52a1\u67b6\u6784\u5b9e\u8df5-\u8f7b\u91cf\u7ea7\u67b6\u6784\u6280\u672f\u9009\u578b \u63d0\u4f9b\u4e86 \u4e00\u4e9b\u5e38\u89c1\u7684\u7ec4\u4ef6\u7684\u9009\u578b\u53c2\u8003\u3002 Java Chassis \u53ef\u4ee5\u90e8\u7f72\u8fd0\u884c\u4e8e JSP/Servlet \u5bb9\u5668\u91cc\u9762\uff0c \u5728\u8fd9\u4e2a\u573a\u666f\u4e0b\uff0c Java Chassis \u7684\u6838\u5fc3\u90e8\u4ef6\u5c31\u662f\u4e00\u4e2a Servlet \uff0c \u5728\u8fd9\u4e2a Servlet \u91cc\u9762 \u5b9e\u73b0\u4e86 Java Chassis \u7684\u6838\u5fc3 RPC \u7cfb\u7edf\u3002 \u91c7\u7528 JSP/Servlet \u5bb9\u5668\u8fd0\u884c Java Chassis, \u4e1a\u52a1\u8bf7\u6c42\u9996\u5148\u7ecf\u8fc7\u5bb9\u5668\u7684 HTTP \u5b9e\u73b0\uff0c \u7136\u540e\u7ecf\u8fc7 Filter\uff0c \u8fdb\u5165 Java Chassis \u7684 RestServlet \uff0c \u8fd0\u884c Java Chassis \u7684\u8fd0\u884c\u65f6\u6a21\u578b (Handlers) \uff0c \u8fdb\u5165\u4e1a\u52a1\u63a5\u53e3\u5904\u7406\u3002 \u53ef\u4ee5\u53c2\u8003 REST over Servlet \u4e86\u89e3\u5982\u4f55\u5728 Servlet \u5bb9\u5668\u4e2d\u52a0\u8f7d Java Chassis \u7684 Servlet\u3002 Java Chassis \u548c Spring\u3001Spring Boot Java Chassis \u76ee\u524d\u4f9d\u8d56\u4e8e Spring\uff0c \u4f46\u662f\u4ece\u8bbe\u8ba1\u4e0a\u662f\u53ef\u4ee5\u72ec\u7acb\u4e8e Spring \u8fd0\u884c\u7684\u3002 Spring \u662f\u88ab\u5e7f\u6cdb\u4f7f\u7528\u7684\u6280\u672f\uff0c \u975e\u5e38\u8f7b\u91cf\u7ea7\uff0c \u5728 Java Chassis \u4e2d\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 Spring \u76f8\u5173\u7684\u6280\u672f\u3002 Java Chassis \u4e0d\u4f9d\u8d56\u4e8e Spring Boot\uff0c \u4f46\u662f\u53ef\u4ee5\u5c06 Java Chassis \u8fd0\u884c\u4e8e Spring Boot \u57fa\u7840\u4e4b\u4e0a\u3002 Spring Boot 2 \u5f00\u59cb\u4e5f\u63d0\u4f9b\u4e86\u591a\u79cd\u8fd0\u884c\u73af\u5883\u652f\u6301\uff0c WebApplicationType.NONE, WebApplicationType.SERVLET, WebApplicationType.REACTIVE\uff0c Java Chassis \u53ef\u4ee5\u96c6\u6210 NONE, SERVLET \u4e24\u79cd\u6a21\u5f0f\u3002 \u5728 NONE \u6a21\u5f0f\u4e0b\u96c6\u6210 Java Chassis\uff0c \u548c Spring Boot \u81ea\u8eab\u7684 REACTIVE \u975e\u5e38\u7c7b\u4f3c\uff0c \u4f46\u662f\u6bd4 Spring Boot \u7684 REACTIVE \u8fd0\u884c\u66f4\u52a0\u9ad8\u6548\uff0c \u5e76\u4e14\u652f\u6301\u65e9\u671f\u7684 RestTemplate API \u548c RPC API \u6765\u8bbf\u95ee\u670d\u52a1\u3002 \u53ef\u4ee5\u9605\u8bfb \u57fa\u4e8eCSE\u7684\u5fae\u670d\u52a1\u67b6\u6784\u5b9e\u8df5-Spring Boot\u6280\u672f\u6808\u9009\u578b \u4e86\u89e3\u4e00\u4e9b\u5e38\u7528\u7684 Spring Boot \u5f00\u53d1\u7684\u7ec4\u4ef6\u9009\u578b\u53c2\u8003\u3002 servicecomb-samples \u63d0\u4f9b \u4e86 WebApplicationType.SERVLET \u4f7f\u7528 Spring Boot \u7684\u5b8c\u6574\u4f8b\u5b50\u3002 WebApplicationType.NONE \u6a21\u5f0f\u7b49\u4ef7\u4e8e\u8f7b\u91cf\u7ea7\u6a21\u5f0f\uff0c \u4f46\u662f\u53ef\u4ee5\u4f7f\u7528 Spring Boot \u7684\u6253\u5305\u529f\u80fd\u4ee5\u53ca\u5176\u4ed6\u5f00\u53d1\u7ec4\u4ef6\u652f\u6301\u3002 Spring MVC Java Chassis \u7ee7\u627f\u4e86 Spring MVC \u7684\u63a5\u53e3\u8bbe\u8ba1\uff0c \u63d0\u4f9b\u4e86 Provider \u548c Consumer \u5c42\u9762\u7684 API \u63a5\u53e3\u6765\u5b9a\u4e49 REST \u63a5\u53e3\u548c\u8bbf\u95ee REST \u63a5\u53e3\u3002 \u4f46\u662f\u9700\u8981 \u6ce8\u610f\u7684\u662f\uff0c \u4e24\u4e2a\u662f\u5b8c\u5168\u4e0d\u540c\u7684\u5b9e\u73b0\uff0c \u5b9e\u73b0\u673a\u5236\u4e5f\u4e0d\u4e00\u6837\u3002 Spring Boot \u4e3b\u8981\u57fa\u4e8e Servlet\uff0c \u5b9e\u73b0\u4e86 MVC \u6a21\u5f0f\uff0c \u4e0d\u4ec5\u53ef\u4ee5\u5f00\u53d1 REST \u63a5\u53e3\uff0c \u8fd8\u53ef\u4ee5 \u5f00\u53d1\u5176\u4ed6 HTTP \u529f\u80fd\uff0c \u6bd4\u5982\u91cd\u5b9a\u5411\uff0c \u8fd4\u56de HTML \u9875\u9762\u7b49\uff0c \u8fd8\u53ef\u4ee5\u901a\u8fc7 @ExceptionHandler\uff0c @ControllerAdvice \u7b49\u673a\u5236\u62e6\u622a Servlet \u8bf7\u6c42\uff0c\u8fdb\u884c \u5f02\u5e38\u5904\u7406\u3002 Java Chassis \u53ea\u5b9e\u73b0\u4e86 REST \u670d\u52a1\u5b9a\u4e49\u548c\u8c03\u7528\uff0c \u5e76\u4e14\u5728\u5f02\u5e38\u5904\u7406\u673a\u5236\u548c\u8bf7\u6c42\u62e6\u622a\u673a\u5236\u4e0a\u4e0d\u4e00\u6837\u3002 \u5f00\u53d1\u7ec6\u8282\u4e0a\u7684\u5dee\u5f02\u53ef\u4ee5\u901a\u8fc7 \u7528SpringMVC \u5f00\u53d1\u5fae\u670d\u52a1 \u8fdb\u884c\u4e86\u89e3\u3002 Java Chassis \u4e0e Spring Cloud Java Chassis \u548c Spring Cloud \u90fd\u5b9e\u73b0\u4e86\u5fae\u670d\u52a1\u67b6\u6784\u6a21\u5f0f\uff0c \u76f8\u6bd4\u800c\u8a00\uff0c Java Chassis \u662f\u4e00\u4e2a\u66f4\u52a0\u7d27\u51d1\u7684\u5b9e\u73b0\uff0c \u5f00\u7bb1\u5373\u7528\uff0c \u800c Spring Cloud \u5219\u662f \u76f8\u5bf9\u677e\u6563\u7684\u5b9e\u73b0\uff0c \u6574\u5408\u4e86\u5927\u91cf\u7684 Netflix \u7ec4\u4ef6\u3002 \u5fae\u670d\u52a1\u67b6\u6784\u6a21\u5f0f\u5173\u6ce8\u5fae\u670d\u52a1\u5185\u90e8\u548c\u5fae\u670d\u52a1\u4e4b\u95f4\u7684\u8bbe\u8ba1\uff0c \u4e5f\u5173\u6ce8\u5fae\u670d\u52a1\u4e0e\u5fae\u670d\u52a1\u57fa\u7840\u8bbe\u65bd\u4e4b\u95f4\u7684\u5173\u7cfb\u3002 Java Chassis \u5fae\u670d\u52a1\u57fa\u7840\u8bbe\u65bd\u5305\u62ec\u670d\u52a1\u6ce8\u518c\u548c\u53d1\u73b0\uff0c \u670d\u52a1\u914d\u7f6e\u7ba1\u7406\uff0c \u7070\u5ea6\u53d1\u5e03\u548c\u5951\u7ea6\u7ba1\u7406\u7b49\u529f\u80fd\u3002 Spring Cloud \u53ef\u4ee5\u4f7f\u7528 spring-cloud-huawei \u6765\u4f7f\u7528 Java Chassis \u76f8\u5173\u7684\u5fae\u670d\u52a1\u57fa\u7840\u8bbe\u65bd\u3002 \u53ef\u4ee5\u9605\u8bfb \u57fa\u4e8eCSE\u7684\u5fae\u670d\u52a1\u67b6\u6784\u5b9e\u8df5-Spring Cloud\u6280\u672f\u6808\u9009\u578b \u4e86\u89e3 Java Chassis \u548c Spring Cloud \u7ec4\u4ef6\u9009\u578b\u4e0a\u7684\u4e00\u4e9b\u5dee\u5f02\u3002","title":"\u8bbe\u8ba1\u9009\u578b\u53c2\u8003"},{"location":"start/design/#java-chassis","text":"Java Chassis \u5728\u8bbe\u8ba1\u7684\u65f6\u5019\uff0c \u4e0d\u4ec5\u8003\u8651\u4e86\u5982\u4f55\u66f4\u597d\u7684\u4f7f\u7528\u5fae\u670d\u52a1\u67b6\u6784\u6a21\u5f0f\uff0c \u8fd8\u628a\u4f18\u79c0\u7684\u8f6f\u4ef6\u5de5\u7a0b\u601d\u60f3\u878d\u5408\u8fdb\u6765\uff0c \u5e2e\u52a9\u5f00\u53d1\u8005\u66f4\u597d\u7684\u7ba1\u7406\u4fe1\u606f \u8d44\u4ea7\uff0c \u63d0\u5347\u8f6f\u4ef6\u5de5\u7a0b\u7ba1\u7406\u80fd\u529b\u3002 \u4e0b\u56fe\u7b80\u5355\u7684\u63cf\u8ff0 \u201c\u4ee5\u5951\u7ea6\u4e3a\u4e2d\u5fc3\u201d \u7684\u6838\u5fc3\u6982\u5ff5\u3002 \u53ef\u4ee5\u901a\u8fc7 Invocation \u83b7\u53d6\u5230 Java Chassis \u7684\u5951\u7ea6\u7b49\u6e90\u6570\u636e\u4fe1\u606f\uff0c \u662f Java Chassis \u7684\u4e00\u4e2a\u6838\u5fc3\u5bf9\u8c61\u3002 \u53ef\u4ee5\u9605\u8bfb \u57fa\u4e8eCSE\u7684\u5fae\u670d\u52a1\u5de5\u7a0b\u5b9e\u8df5-\u4ee5\u5951\u7ea6\u4e3a\u4e2d\u5fc3 \u4e86\u89e3\u5951\u7ea6\u5982\u4f55\u5e94\u7528\u7684\u66f4\u591a\u5185\u5bb9\u3002 \u5de5\u7a0b \u5b9e\u8df5\u4e0d\u662f Java Chassis \u7684\u5f3a\u5236\u7ea6\u675f\uff0c \u5f00\u53d1\u8005\u53ef\u4ee5\u7ed3\u5408\u5b9e\u9645\u60c5\u51b5\u8fdb\u884c\u9009\u62e9\u3002","title":"Java Chassis \u7684\u8f6f\u4ef6\u5de5\u7a0b\u5b9e\u8df5 "},{"location":"start/design/#java-chassis_1","text":"\u4e3a\u4e86\u652f\u6301\u8f6f\u4ef6\u5de5\u7a0b\u5b9e\u8df5\uff0c Java Chassis \u7684\u8fd0\u884c\u65f6\u67b6\u6784\u662f\u4e00\u4e2a\u54d1\u94c3\u7ed3\u6784\uff0c \u4e24\u7aef\u5206\u522b\u662f\u201c\u7f16\u7a0b\u6a21\u578b\u201d \u548c \u201c\u901a\u4fe1\u6a21\u578b\u201d\uff0c \u4e2d\u95f4\u662f\u201c\u8fd0\u884c\u6a21\u578b\u201d\u3002 \u201c\u7f16\u7a0b\u6a21\u578b\u201d \u9762\u5411\u5f00\u53d1\u8005\u5199\u670d\u52a1\u63a5\u53e3\u7684\u4e60\u60ef\uff0c \u201c\u901a\u4fe1\u6a21\u578b\u201d \u9762\u5411\u5fae\u670d\u52a1\u4e4b\u95f4\u7684\u9ad8\u6548\u7f16\u7801\u548c\u901a\u4fe1\uff0c \u201c\u8fd0\u884c\u6a21\u578b\u201d \u57fa\u4e8e\u201c\u5951\u7ea6\u201d\uff0c \u63d0\u4f9b\u4e00\u79cd\u670d\u52a1\u670d\u52a1\u65e0\u5173 \u7684\u63d2\u62d4\u673a\u5236\uff0c\u80fd\u591f\u8ba9\u5f00\u53d1\u8005\u72ec\u7acb\u4e8e\u4e1a\u52a1\u5b9e\u73b0\u5f00\u53d1\u6cbb\u7406\u529f\u80fd\uff0c\u5e76\u4e14\u7075\u6d3b\u7684\u79fb\u9664\u548c\u589e\u52a0\u529f\u80fd\uff0c\u4ee5\u53ca\u8c03\u6574\u8fd9\u4e9b\u6cbb\u7406\u529f\u80fd\u7684\u5904\u7406\u987a\u5e8f\u3002 \u201c\u8fd0\u884c\u6a21\u578b\u201d \u7684\u6838\u5fc3\u62bd\u8c61\u63a5\u53e3\u662f Handler \uff0c \u8fd9\u4e2a\u63a5\u53e3\u662f\u4e00\u4e2a\u5f02\u6b65\u7684\u5b9a\u4e49\uff0c Java Chassis \u8fd0\u884c\u65f6\u6a21\u578b\u91c7\u7528\u7eaf\u5f02\u6b65\u7684\u5b9e\u73b0\uff0c \u8ba9\u6574\u4e2a\u7cfb\u7edf\u8fd0\u884c\u975e\u5e38 \u9ad8\u6548\u3002 \u53ef\u4ee5\u9605\u8bfb Apache ServiceComb \u7684\u5f00\u653e\u6027\u8bbe\u8ba1 \u4e86\u89e3 Java Chassis \u8fd0\u884c\u65f6\u67b6\u6784\u7684\u5176\u4ed6\u8bbe\u8ba1\u8003\u8651\u3002","title":"Java Chassis \u7684\u8fd0\u884c\u65f6\u67b6\u6784 "},{"location":"start/design/#java-chassis_2","text":"\u6709\u5f88\u591a\u4f18\u79c0\u7684\u5fae\u670d\u52a1\u5e94\u7528\u67b6\u6784\u5b9e\u8df5\u3002 \u5fae\u670d\u52a1\u5e94\u7528\u67b6\u6784\u5e94\u8be5\u5145\u5206\u8003\u8651\u7cfb\u7edf\u7684\u5f39\u6027\uff0c \u80fd\u591f\u9488\u5bf9\u7cfb\u7edf\u7684\u6027\u80fd\u74f6\u9888\u70b9\u8fdb\u884c\u6269\u5bb9\uff0c \u9700\u8981\u8003\u8651\u5e94\u7528\u7cfb\u7edf\u5185\u90e8\u5fae\u670d\u52a1 \u62c6\u5206\u7684\u7075\u6d3b\u6027\uff0c \u4e3a\u4e1a\u52a1\u7684\u53d8\u66f4\u505a\u597d\u53ca\u65f6\u8c03\u6574\u3002 \u4e0b\u56fe\u5c55\u793a\u4e86\u4e00\u4e2a\u5178\u578b\u7684\u5e94\u7528\u67b6\u6784\u3002 \u63a5\u5165\u5c42\u91c7\u7528\u4e00\u4e9b\u7f51\u7edc\u57fa\u7840\u8bbe\u65bd\uff0c\u6bd4\u5982 DNS \uff0c \u6d6e\u52a8 IP \u7b49\u65b9\u4fbf\u7528\u6237\u91c7\u7528\u7edf\u4e00\u7684 URL \u8bbf\u95ee\u7cfb\u7edf\uff0c \u6216\u8005\u91c7\u7528 API \u7f51\u5173\u7b49 \u57fa\u7840\u8bbe\u65bd\u5b9e\u73b0\u7cfb\u7edf\u7684\u80fd\u529b\u5f00\u653e\u3002 \u4e1a\u52a1\u5c42\u5305\u542b\u5e94\u7528\u7f51\u5173\uff0c \u8fdb\u884c\u4e00\u4e9b\u8ba4\u8bc1\u9274\u6743\u3001 \u5ba1\u8ba1\u7b49\u529f\u80fd\uff0c \u7ecf\u8fc7\u8ba4\u8bc1\u7684\u8bf7\u6c42\u88ab\u5e94\u7528\u7f51\u5173\u8f6c\u53d1\u5230\u5fae\u670d\u52a1\u7cfb\u7edf\u5185\u90e8\u3002 \u53ef\u4ee5\u9605\u8bfb \u5355\u4f53\u5e94\u7528\u5fae\u670d\u52a1\u6539\u9020\u5b9e\u8df5 \uff0c \u4e86\u89e3\u4e3a\u4ec0\u4e48\u63a8\u8350\u8fd9\u6837\u7684\u5fae\u670d\u52a1\u5e94\u7528\u67b6\u6784\u3002 Java Chassis \u4e3a\u5e94\u7528\u67b6\u6784\u63d0\u4f9b\u4e86\u63a5\u5165\u7f51\u5173\u670d\u52a1 Edge Servcie \u3002","title":"Java Chassis \u5fae\u670d\u52a1\u5e94\u7528\u67b6\u6784 "},{"location":"start/design/#java-chassis_3","text":"Java \u8bed\u8a00\u62e5\u6709\u5e9e\u5927\u7684\u6280\u672f\u4f53\u7cfb\u548c\u6807\u51c6\uff0c \u5e76\u4e14\u5e7f\u6cdb\u7684\u5e94\u7528\u5230\u4e1a\u52a1\u7684\u7cfb\u7edf\u7684\u5404\u4e2a\u65b9\u9762\u3002 \u548c Java Chassis \u6709\u7d27\u5bc6\u5173\u7cfb\u7684\u6280\u672f\u5305\u62ec JSP/Servlet \u6807\u51c6 \u548c\u5bb9\u5668\uff0c Spring \u548c Spring Boot \u6280\u672f\uff0c \u4ee5\u53ca Spring Boot \u63d0\u4f9b\u7684 REST \u5f00\u53d1\u6846\u67b6 Spring MVC\u3002","title":"Java Chassis \u5fae\u670d\u52a1\u6280\u672f\u9009\u578b "},{"location":"start/design/#java-chassis-jspservlet","text":"Java Chassis \u4e0d\u4f9d\u8d56\u4e8e JSP/Servlet \u6807\u51c6\uff0c \u53ef\u4ee5\u57fa\u4e8e Vert.x \u7684 HTTP \u5b9e\u73b0\uff0c \u63d0\u4f9b\u975e\u5e38\u8f7b\u91cf\u7ea7\u548c\u9ad8\u6548\u7684 REST \u670d\u52a1\uff0c \u5728\u6027\u80fd\u8981\u6c42\u9ad8\u7684\u6838\u5fc3 \u4e1a\u52a1\u573a\u666f\uff0c \u4f7f\u7528\u8fd9\u79cd\u8f7b\u91cf\u7ea7\u7684\u6280\u672f\u975e\u5e38\u5408\u9002\u3002 \u8fd9\u79cd\u573a\u666f\u4e0b\uff0c \u6ca1\u6709\u5b8c\u6574\u7684\u5b9e\u73b0 JSP/Servlet \u76f8\u5173\u63a5\u53e3\uff0c \u6bd4\u5982 HttpServletRequest, HttpServletResponse \u7b49\u3002 servicecomb-samples \u63d0\u4f9b\u4e86\u4e00\u4e2a\u5b8c\u6574\u7684\u4f7f\u7528\u8fd9\u79cd\u90e8\u7f72\u6a21\u5f0f\u7684\u4f8b\u5b50\u3002 \u57fa\u4e8eCSE\u7684\u5fae\u670d\u52a1\u67b6\u6784\u5b9e\u8df5-\u8f7b\u91cf\u7ea7\u67b6\u6784\u6280\u672f\u9009\u578b \u63d0\u4f9b\u4e86 \u4e00\u4e9b\u5e38\u89c1\u7684\u7ec4\u4ef6\u7684\u9009\u578b\u53c2\u8003\u3002 Java Chassis \u53ef\u4ee5\u90e8\u7f72\u8fd0\u884c\u4e8e JSP/Servlet \u5bb9\u5668\u91cc\u9762\uff0c \u5728\u8fd9\u4e2a\u573a\u666f\u4e0b\uff0c Java Chassis \u7684\u6838\u5fc3\u90e8\u4ef6\u5c31\u662f\u4e00\u4e2a Servlet \uff0c \u5728\u8fd9\u4e2a Servlet \u91cc\u9762 \u5b9e\u73b0\u4e86 Java Chassis \u7684\u6838\u5fc3 RPC \u7cfb\u7edf\u3002 \u91c7\u7528 JSP/Servlet \u5bb9\u5668\u8fd0\u884c Java Chassis, \u4e1a\u52a1\u8bf7\u6c42\u9996\u5148\u7ecf\u8fc7\u5bb9\u5668\u7684 HTTP \u5b9e\u73b0\uff0c \u7136\u540e\u7ecf\u8fc7 Filter\uff0c \u8fdb\u5165 Java Chassis \u7684 RestServlet \uff0c \u8fd0\u884c Java Chassis \u7684\u8fd0\u884c\u65f6\u6a21\u578b (Handlers) \uff0c \u8fdb\u5165\u4e1a\u52a1\u63a5\u53e3\u5904\u7406\u3002 \u53ef\u4ee5\u53c2\u8003 REST over Servlet \u4e86\u89e3\u5982\u4f55\u5728 Servlet \u5bb9\u5668\u4e2d\u52a0\u8f7d Java Chassis \u7684 Servlet\u3002","title":"Java Chassis \u548c JSP/Servlet \u6807\u51c6"},{"location":"start/design/#java-chassis-springspring-boot","text":"Java Chassis \u76ee\u524d\u4f9d\u8d56\u4e8e Spring\uff0c \u4f46\u662f\u4ece\u8bbe\u8ba1\u4e0a\u662f\u53ef\u4ee5\u72ec\u7acb\u4e8e Spring \u8fd0\u884c\u7684\u3002 Spring \u662f\u88ab\u5e7f\u6cdb\u4f7f\u7528\u7684\u6280\u672f\uff0c \u975e\u5e38\u8f7b\u91cf\u7ea7\uff0c \u5728 Java Chassis \u4e2d\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 Spring \u76f8\u5173\u7684\u6280\u672f\u3002 Java Chassis \u4e0d\u4f9d\u8d56\u4e8e Spring Boot\uff0c \u4f46\u662f\u53ef\u4ee5\u5c06 Java Chassis \u8fd0\u884c\u4e8e Spring Boot \u57fa\u7840\u4e4b\u4e0a\u3002 Spring Boot 2 \u5f00\u59cb\u4e5f\u63d0\u4f9b\u4e86\u591a\u79cd\u8fd0\u884c\u73af\u5883\u652f\u6301\uff0c WebApplicationType.NONE, WebApplicationType.SERVLET, WebApplicationType.REACTIVE\uff0c Java Chassis \u53ef\u4ee5\u96c6\u6210 NONE, SERVLET \u4e24\u79cd\u6a21\u5f0f\u3002 \u5728 NONE \u6a21\u5f0f\u4e0b\u96c6\u6210 Java Chassis\uff0c \u548c Spring Boot \u81ea\u8eab\u7684 REACTIVE \u975e\u5e38\u7c7b\u4f3c\uff0c \u4f46\u662f\u6bd4 Spring Boot \u7684 REACTIVE \u8fd0\u884c\u66f4\u52a0\u9ad8\u6548\uff0c \u5e76\u4e14\u652f\u6301\u65e9\u671f\u7684 RestTemplate API \u548c RPC API \u6765\u8bbf\u95ee\u670d\u52a1\u3002 \u53ef\u4ee5\u9605\u8bfb \u57fa\u4e8eCSE\u7684\u5fae\u670d\u52a1\u67b6\u6784\u5b9e\u8df5-Spring Boot\u6280\u672f\u6808\u9009\u578b \u4e86\u89e3\u4e00\u4e9b\u5e38\u7528\u7684 Spring Boot \u5f00\u53d1\u7684\u7ec4\u4ef6\u9009\u578b\u53c2\u8003\u3002 servicecomb-samples \u63d0\u4f9b \u4e86 WebApplicationType.SERVLET \u4f7f\u7528 Spring Boot \u7684\u5b8c\u6574\u4f8b\u5b50\u3002 WebApplicationType.NONE \u6a21\u5f0f\u7b49\u4ef7\u4e8e\u8f7b\u91cf\u7ea7\u6a21\u5f0f\uff0c \u4f46\u662f\u53ef\u4ee5\u4f7f\u7528 Spring Boot \u7684\u6253\u5305\u529f\u80fd\u4ee5\u53ca\u5176\u4ed6\u5f00\u53d1\u7ec4\u4ef6\u652f\u6301\u3002 Spring MVC Java Chassis \u7ee7\u627f\u4e86 Spring MVC \u7684\u63a5\u53e3\u8bbe\u8ba1\uff0c \u63d0\u4f9b\u4e86 Provider \u548c Consumer \u5c42\u9762\u7684 API \u63a5\u53e3\u6765\u5b9a\u4e49 REST \u63a5\u53e3\u548c\u8bbf\u95ee REST \u63a5\u53e3\u3002 \u4f46\u662f\u9700\u8981 \u6ce8\u610f\u7684\u662f\uff0c \u4e24\u4e2a\u662f\u5b8c\u5168\u4e0d\u540c\u7684\u5b9e\u73b0\uff0c \u5b9e\u73b0\u673a\u5236\u4e5f\u4e0d\u4e00\u6837\u3002 Spring Boot \u4e3b\u8981\u57fa\u4e8e Servlet\uff0c \u5b9e\u73b0\u4e86 MVC \u6a21\u5f0f\uff0c \u4e0d\u4ec5\u53ef\u4ee5\u5f00\u53d1 REST \u63a5\u53e3\uff0c \u8fd8\u53ef\u4ee5 \u5f00\u53d1\u5176\u4ed6 HTTP \u529f\u80fd\uff0c \u6bd4\u5982\u91cd\u5b9a\u5411\uff0c \u8fd4\u56de HTML \u9875\u9762\u7b49\uff0c \u8fd8\u53ef\u4ee5\u901a\u8fc7 @ExceptionHandler\uff0c @ControllerAdvice \u7b49\u673a\u5236\u62e6\u622a Servlet \u8bf7\u6c42\uff0c\u8fdb\u884c \u5f02\u5e38\u5904\u7406\u3002 Java Chassis \u53ea\u5b9e\u73b0\u4e86 REST \u670d\u52a1\u5b9a\u4e49\u548c\u8c03\u7528\uff0c \u5e76\u4e14\u5728\u5f02\u5e38\u5904\u7406\u673a\u5236\u548c\u8bf7\u6c42\u62e6\u622a\u673a\u5236\u4e0a\u4e0d\u4e00\u6837\u3002 \u5f00\u53d1\u7ec6\u8282\u4e0a\u7684\u5dee\u5f02\u53ef\u4ee5\u901a\u8fc7 \u7528SpringMVC \u5f00\u53d1\u5fae\u670d\u52a1 \u8fdb\u884c\u4e86\u89e3\u3002","title":"Java Chassis \u548c Spring\u3001Spring Boot"},{"location":"start/design/#java-chassis-spring-cloud","text":"Java Chassis \u548c Spring Cloud \u90fd\u5b9e\u73b0\u4e86\u5fae\u670d\u52a1\u67b6\u6784\u6a21\u5f0f\uff0c \u76f8\u6bd4\u800c\u8a00\uff0c Java Chassis \u662f\u4e00\u4e2a\u66f4\u52a0\u7d27\u51d1\u7684\u5b9e\u73b0\uff0c \u5f00\u7bb1\u5373\u7528\uff0c \u800c Spring Cloud \u5219\u662f \u76f8\u5bf9\u677e\u6563\u7684\u5b9e\u73b0\uff0c \u6574\u5408\u4e86\u5927\u91cf\u7684 Netflix \u7ec4\u4ef6\u3002 \u5fae\u670d\u52a1\u67b6\u6784\u6a21\u5f0f\u5173\u6ce8\u5fae\u670d\u52a1\u5185\u90e8\u548c\u5fae\u670d\u52a1\u4e4b\u95f4\u7684\u8bbe\u8ba1\uff0c \u4e5f\u5173\u6ce8\u5fae\u670d\u52a1\u4e0e\u5fae\u670d\u52a1\u57fa\u7840\u8bbe\u65bd\u4e4b\u95f4\u7684\u5173\u7cfb\u3002 Java Chassis \u5fae\u670d\u52a1\u57fa\u7840\u8bbe\u65bd\u5305\u62ec\u670d\u52a1\u6ce8\u518c\u548c\u53d1\u73b0\uff0c \u670d\u52a1\u914d\u7f6e\u7ba1\u7406\uff0c \u7070\u5ea6\u53d1\u5e03\u548c\u5951\u7ea6\u7ba1\u7406\u7b49\u529f\u80fd\u3002 Spring Cloud \u53ef\u4ee5\u4f7f\u7528 spring-cloud-huawei \u6765\u4f7f\u7528 Java Chassis \u76f8\u5173\u7684\u5fae\u670d\u52a1\u57fa\u7840\u8bbe\u65bd\u3002 \u53ef\u4ee5\u9605\u8bfb \u57fa\u4e8eCSE\u7684\u5fae\u670d\u52a1\u67b6\u6784\u5b9e\u8df5-Spring Cloud\u6280\u672f\u6808\u9009\u578b \u4e86\u89e3 Java Chassis \u548c Spring Cloud \u7ec4\u4ef6\u9009\u578b\u4e0a\u7684\u4e00\u4e9b\u5dee\u5f02\u3002","title":"Java Chassis \u4e0e Spring Cloud  "},{"location":"start/development-environment/","text":"\u5b89\u88c5\u672c\u5730\u5f00\u53d1\u73af\u5883 \u5e94\u7528\u5f00\u53d1\u73af\u5883\u6240\u9700\u5b89\u88c5\u7684\u5de5\u5177\u5305\u62ecJDK\u3001Maven\u3001Eclipse \u548c IDEA \u3002\u5982\u679c\u5df2\u7ecf\u5b89\u88c5\u4e86\u8fd9\u4e9b\u5f00\u53d1\u5de5\u5177\uff0c\u8bf7\u8df3\u8fc7\u672c\u8282\u3002 JDK\u7ea6\u675f\u53ca\u5b89\u88c5\u6b65\u9aa4 1.JDK\u7248\u672c JDK\u7248\u672c\u8981\u6c421.8\u4ee5\u4e0a\u3002 2.JDK\u4e0b\u8f7d \u8bf7\u5230JDK 1.8\u7248\u672c\u7684\u5b98\u65b9\u5730\u5740\u4e0b\u8f7d\u3002 3.JDK\u5b89\u88c5 \u5728\u5b98\u7f51\u4e0b\u8f7dJDK\u5b89\u88c5\u5305\u540e\uff0c\u9009\u62e9\u5408\u9002\u7684\u5b89\u88c5\u8def\u5f84\u5b89\u88c5JDK\u3002 \u8fd9\u91cc\u4ee5windows\u7cfb\u7edf\u4e3a\u4f8b\uff1a \u8bbe\u7f6eJAVA_HOME\u73af\u5883\u53d8\u91cf\uff0c\u6307\u5411Java\u5b89\u88c5\u76ee\u5f55\u3002\u5c06%JAVA_HOME%\\bin\u6dfb\u52a0\u5230\u7cfb\u7edf\u8def\u5f84path\u4e2d\u3002\u73af\u5883\u53d8\u91cf\u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u4f7f\u7528java -version\u547d\u4ee4\u9a8c\u8bc1\u662f\u5426\u5b89\u88c5\u6210\u529f\uff0cwindows\u73af\u5883\u4e0b\u56de\u663e\u5982\u4e0b\uff1a C:\\Users\\h00407576 java -version java version 1.8.0_121 Java(TM) SE Runtime Environment (build 1.8.0_121-b13) Java HotSpot(TM) 64-Bit Server VM (build 25.121-b13, mixed mode) Maven\u5b89\u88c5\u6b65\u9aa4 Maven\u662f\u4e00\u6b3e\u96c6\u9879\u76ee\u7ba1\u7406\u3001\u4ee3\u7801\u7f16\u8bd1\u3001\u5de5\u7a0b\u7ba1\u7406\u7b49\u7b49\u80fd\u529b\u4e8e\u4e00\u4f53\u7684\u5f00\u53d1\u5de5\u5177\u3002 \u524d\u63d0\u6761\u4ef6 JDK\u5df2\u7ecf\u5b89\u88c5\u6210\u529f\u3002 \u5b89\u88c5\u6b65\u9aa4 a.\u5728\u5b98\u65b9\u5730\u5740\u4e0b\u8f7dMaven\u5b89\u88c5\u5305\u3002 b.\uff08\u53ef\u9009\uff09\u5728\u5b98\u65b9\u5730\u5740\u4e0b\u8f7dEclipse\u63d2\u4ef6m2eclipse\u3002\u6700\u65b0\u7684Eclipse\u7248\u672c\u4e2d\u5e26\u6709Maven\u63d2\u4ef6\uff0c\u5219\u4e0d\u7528\u4e0b\u8f7d\u6b64\u63d2\u4ef6 c.\u89e3\u538bMaven\u5b89\u88c5\u5305\u5230\u672c\u673a\u8def\u5f84\u3002 d.\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u3002 \u8bbe\u7f6eM2_HOME\u73af\u5883\u53d8\u91cf\uff0c\u6307\u5411Maven\u5b89\u88c5\u76ee\u5f55\u3002 \u5c06%M2_HOME%\\bin\u6dfb\u52a0\u5230\u7cfb\u7edf\u8def\u5f84path\u4e2d\u3002 e.\uff08\u53ef\u9009\uff09\u8bbe\u7f6e\u672c\u5730\u4ed3\u5e93\u8def\u5f84\uff0c\u7528\u4e8e\u4fdd\u5b58\u4ece\u8fdc\u7a0b\u4ed3\u5e93\u83b7\u53d6\u7684\u63d2\u4ef6\u548c\u4f9d\u8d56\u7684\u526f\u672c\u3002 \u8fd9\u91cc\u4ee5\u8def\u5f84D:\\maven\\repository\u4e3a\u4f8b\u3002\u5728/conf\u4e2d\u627e\u5230settings.xml\u6587\u4ef6\uff0c\u8bbe\u7f6elocalRepository\u4e3aD:\\maven\\repository f. \uff08\u53ef\u9009\uff09\u8981\u60f3\u9879\u76ee\u80fd\u591f\u5feb\u901f\u7684\u4e0b\u8f7d\u5404\u79cd\u4f9d\u8d56\uff0c\u5efa\u8bae\u914d\u7f6e\u4e00\u4e0bmaven\u4ed3\u5e93\u5730\u5740\u3002 \u5728 profiles \u4e2d\u589e\u52a0\u5982\u4e0b\u914d\u7f6e\uff1a profile id MyProfile /id repositories repository id SDK /id url https://repo.huaweicloud.com/repository/maven/huaweicloudsdk/ /url releases enabled true /enabled /releases snapshots enabled false /enabled /snapshots /repository /repositories /profile \u5728 mirrors \u8282\u70b9\u4e2d\u589e\u52a0\u5982\u4e0b\u914d\u7f6e\uff1a mirror id RepoMirror /id mirrorOf *,!SDK /mirrorOf url https://repo.huaweicloud.com/repository/maven/ /url /mirror \u65b0\u589e activeProfiles \u914d\u7f6e\uff1a activeProfiles activeProfile MyProfile /activeProfile /activeProfiles g.\u7ed3\u679c\u9a8c\u8bc1 \u4f7f\u7528mvn -version\u547d\u4ee4\u9a8c\u8bc1\u662f\u5426\u5b89\u88c5\u6210\u529f\uff0cwindows\u73af\u5883\u4e0b\u56de\u663e\u5982\u4e0b\uff1a C:\\Users\\h00407576 mvn -version Apache Maven 3.3.9 (bb52d8502b132ec0a5a3f4c09453c07478323dc5; 2015-11-11T00:41:4 7+08:00) Maven home: D:\\soft\\apache-maven-3.3.9-bin\\apache-maven-3.3.9 Java version: 1.8.0_121, vendor: Oracle Corporation Java home: C:\\Program Files\\Java\\jdk1.8.0_121\\jre Default locale: zh_CN, platform encoding: GBK OS name: windows 7 , version: 6.1 , arch: amd64 , family: dos Eclipse\u5b89\u88c5 \u524d\u63d0\u6761\u4ef6 a.JDK\u5df2\u7ecf\u5b89\u88c5\u3002 b.Maven\u5df2\u7ecf\u5b89\u88c5\u3002 \u5b89\u88c5\u6b65\u9aa4 a.\u5728\u5b98\u65b9\u5730\u5740\u4e0b\u8f7dEclipse\u5b89\u88c5\u5305\u3002 b.\u5b89\u88c5Eclipse\u5230\u672c\u673a\u3002 c.\uff08\u53ef\u9009\uff09\u5c06\u4e4b\u524dMaven\u5b89\u88c5\u4e2d\u4ecb\u7ecd\u7684\u63d2\u4ef6m2eclipse\u89e3\u538b\u5230Eclipse\u5b89\u88c5\u76ee\u5f55\u4e0b\u7684plugins\u548cfeatures\u76ee\u5f55\u3002\u6700\u65b0\u7684Eclipse\u7248\u672c \u4e2d\u5e26\u6709Maven\u63d2\u4ef6\uff0c\u4e0d\u8981\u8fdb\u884c\u6b64\u64cd\u4f5c d.\u542f\u52a8Eclipse\uff0c\u914d\u7f6ejre\u3001maven settings\u4ee5\u53ca\u9ed8\u8ba4\u7f16\u7801\u683c\u5f0f\u4e3autf-8\u3002 IDEA\u5b89\u88c5 \u524d\u63d0\u6761\u4ef6 a.JDK\u5df2\u7ecf\u5b89\u88c5\u3002 b.Maven\u5df2\u7ecf\u5b89\u88c5\u3002 \u5b89\u88c5\u6b65\u9aa4 a. \u5728\u5b98\u65b9\u7f51\u7ad9\u4e0b\u8f7d IDEA \u5b89\u88c5\u5305\uff0c\u6536\u8d39\u7248\u6216\u8005\u793e\u533a\u7248\u7684\u6309\u4e2a\u4eba\u9700\u6c42\u3002 b. \u8bbe\u7f6e\u7f16\u7801\u683c\u5f0f\u90fd\u4e3a utf-8\u3002 \u6253\u5f00IDEA\uff0c\u9009\u62e9 File - Settings - Editor - File Encoding \u628a project Encoding \u548c default encoding for properties files \u6539\u4e3a utf-8\u3002 c. \u8bbe\u7f6emaven \u914d\u7f6e \u6253\u5f00IDEA\uff0c\u9009\u62e9 File - Settings - Build\uff0cExecution,Deployment - Bulid Tools - Maven \u6ce8\u610f\u914d\u7f6e Maven home directory \u548c User settings file","title":"\u5b89\u88c5\u672c\u5730\u5f00\u53d1\u73af\u5883"},{"location":"start/development-environment/#_1","text":"\u5e94\u7528\u5f00\u53d1\u73af\u5883\u6240\u9700\u5b89\u88c5\u7684\u5de5\u5177\u5305\u62ecJDK\u3001Maven\u3001Eclipse \u548c IDEA \u3002\u5982\u679c\u5df2\u7ecf\u5b89\u88c5\u4e86\u8fd9\u4e9b\u5f00\u53d1\u5de5\u5177\uff0c\u8bf7\u8df3\u8fc7\u672c\u8282\u3002","title":"\u5b89\u88c5\u672c\u5730\u5f00\u53d1\u73af\u5883"},{"location":"start/development-environment/#jdk","text":"1.JDK\u7248\u672c JDK\u7248\u672c\u8981\u6c421.8\u4ee5\u4e0a\u3002 2.JDK\u4e0b\u8f7d \u8bf7\u5230JDK 1.8\u7248\u672c\u7684\u5b98\u65b9\u5730\u5740\u4e0b\u8f7d\u3002 3.JDK\u5b89\u88c5 \u5728\u5b98\u7f51\u4e0b\u8f7dJDK\u5b89\u88c5\u5305\u540e\uff0c\u9009\u62e9\u5408\u9002\u7684\u5b89\u88c5\u8def\u5f84\u5b89\u88c5JDK\u3002 \u8fd9\u91cc\u4ee5windows\u7cfb\u7edf\u4e3a\u4f8b\uff1a \u8bbe\u7f6eJAVA_HOME\u73af\u5883\u53d8\u91cf\uff0c\u6307\u5411Java\u5b89\u88c5\u76ee\u5f55\u3002\u5c06%JAVA_HOME%\\bin\u6dfb\u52a0\u5230\u7cfb\u7edf\u8def\u5f84path\u4e2d\u3002\u73af\u5883\u53d8\u91cf\u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u4f7f\u7528java -version\u547d\u4ee4\u9a8c\u8bc1\u662f\u5426\u5b89\u88c5\u6210\u529f\uff0cwindows\u73af\u5883\u4e0b\u56de\u663e\u5982\u4e0b\uff1a C:\\Users\\h00407576 java -version java version 1.8.0_121 Java(TM) SE Runtime Environment (build 1.8.0_121-b13) Java HotSpot(TM) 64-Bit Server VM (build 25.121-b13, mixed mode)","title":"JDK\u7ea6\u675f\u53ca\u5b89\u88c5\u6b65\u9aa4"},{"location":"start/development-environment/#maven","text":"Maven\u662f\u4e00\u6b3e\u96c6\u9879\u76ee\u7ba1\u7406\u3001\u4ee3\u7801\u7f16\u8bd1\u3001\u5de5\u7a0b\u7ba1\u7406\u7b49\u7b49\u80fd\u529b\u4e8e\u4e00\u4f53\u7684\u5f00\u53d1\u5de5\u5177\u3002","title":"Maven\u5b89\u88c5\u6b65\u9aa4"},{"location":"start/development-environment/#_2","text":"JDK\u5df2\u7ecf\u5b89\u88c5\u6210\u529f\u3002","title":"\u524d\u63d0\u6761\u4ef6"},{"location":"start/development-environment/#_3","text":"a.\u5728\u5b98\u65b9\u5730\u5740\u4e0b\u8f7dMaven\u5b89\u88c5\u5305\u3002 b.\uff08\u53ef\u9009\uff09\u5728\u5b98\u65b9\u5730\u5740\u4e0b\u8f7dEclipse\u63d2\u4ef6m2eclipse\u3002\u6700\u65b0\u7684Eclipse\u7248\u672c\u4e2d\u5e26\u6709Maven\u63d2\u4ef6\uff0c\u5219\u4e0d\u7528\u4e0b\u8f7d\u6b64\u63d2\u4ef6 c.\u89e3\u538bMaven\u5b89\u88c5\u5305\u5230\u672c\u673a\u8def\u5f84\u3002 d.\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u3002 \u8bbe\u7f6eM2_HOME\u73af\u5883\u53d8\u91cf\uff0c\u6307\u5411Maven\u5b89\u88c5\u76ee\u5f55\u3002 \u5c06%M2_HOME%\\bin\u6dfb\u52a0\u5230\u7cfb\u7edf\u8def\u5f84path\u4e2d\u3002 e.\uff08\u53ef\u9009\uff09\u8bbe\u7f6e\u672c\u5730\u4ed3\u5e93\u8def\u5f84\uff0c\u7528\u4e8e\u4fdd\u5b58\u4ece\u8fdc\u7a0b\u4ed3\u5e93\u83b7\u53d6\u7684\u63d2\u4ef6\u548c\u4f9d\u8d56\u7684\u526f\u672c\u3002 \u8fd9\u91cc\u4ee5\u8def\u5f84D:\\maven\\repository\u4e3a\u4f8b\u3002\u5728/conf\u4e2d\u627e\u5230settings.xml\u6587\u4ef6\uff0c\u8bbe\u7f6elocalRepository\u4e3aD:\\maven\\repository f. \uff08\u53ef\u9009\uff09\u8981\u60f3\u9879\u76ee\u80fd\u591f\u5feb\u901f\u7684\u4e0b\u8f7d\u5404\u79cd\u4f9d\u8d56\uff0c\u5efa\u8bae\u914d\u7f6e\u4e00\u4e0bmaven\u4ed3\u5e93\u5730\u5740\u3002 \u5728 profiles \u4e2d\u589e\u52a0\u5982\u4e0b\u914d\u7f6e\uff1a profile id MyProfile /id repositories repository id SDK /id url https://repo.huaweicloud.com/repository/maven/huaweicloudsdk/ /url releases enabled true /enabled /releases snapshots enabled false /enabled /snapshots /repository /repositories /profile \u5728 mirrors \u8282\u70b9\u4e2d\u589e\u52a0\u5982\u4e0b\u914d\u7f6e\uff1a mirror id RepoMirror /id mirrorOf *,!SDK /mirrorOf url https://repo.huaweicloud.com/repository/maven/ /url /mirror \u65b0\u589e activeProfiles \u914d\u7f6e\uff1a activeProfiles activeProfile MyProfile /activeProfile /activeProfiles g.\u7ed3\u679c\u9a8c\u8bc1 \u4f7f\u7528mvn -version\u547d\u4ee4\u9a8c\u8bc1\u662f\u5426\u5b89\u88c5\u6210\u529f\uff0cwindows\u73af\u5883\u4e0b\u56de\u663e\u5982\u4e0b\uff1a C:\\Users\\h00407576 mvn -version Apache Maven 3.3.9 (bb52d8502b132ec0a5a3f4c09453c07478323dc5; 2015-11-11T00:41:4 7+08:00) Maven home: D:\\soft\\apache-maven-3.3.9-bin\\apache-maven-3.3.9 Java version: 1.8.0_121, vendor: Oracle Corporation Java home: C:\\Program Files\\Java\\jdk1.8.0_121\\jre Default locale: zh_CN, platform encoding: GBK OS name: windows 7 , version: 6.1 , arch: amd64 , family: dos","title":"\u5b89\u88c5\u6b65\u9aa4"},{"location":"start/development-environment/#eclipse","text":"","title":"Eclipse\u5b89\u88c5"},{"location":"start/development-environment/#_4","text":"a.JDK\u5df2\u7ecf\u5b89\u88c5\u3002 b.Maven\u5df2\u7ecf\u5b89\u88c5\u3002","title":"\u524d\u63d0\u6761\u4ef6"},{"location":"start/development-environment/#_5","text":"a.\u5728\u5b98\u65b9\u5730\u5740\u4e0b\u8f7dEclipse\u5b89\u88c5\u5305\u3002 b.\u5b89\u88c5Eclipse\u5230\u672c\u673a\u3002 c.\uff08\u53ef\u9009\uff09\u5c06\u4e4b\u524dMaven\u5b89\u88c5\u4e2d\u4ecb\u7ecd\u7684\u63d2\u4ef6m2eclipse\u89e3\u538b\u5230Eclipse\u5b89\u88c5\u76ee\u5f55\u4e0b\u7684plugins\u548cfeatures\u76ee\u5f55\u3002\u6700\u65b0\u7684Eclipse\u7248\u672c \u4e2d\u5e26\u6709Maven\u63d2\u4ef6\uff0c\u4e0d\u8981\u8fdb\u884c\u6b64\u64cd\u4f5c d.\u542f\u52a8Eclipse\uff0c\u914d\u7f6ejre\u3001maven settings\u4ee5\u53ca\u9ed8\u8ba4\u7f16\u7801\u683c\u5f0f\u4e3autf-8\u3002","title":"\u5b89\u88c5\u6b65\u9aa4"},{"location":"start/development-environment/#idea","text":"","title":"IDEA\u5b89\u88c5"},{"location":"start/development-environment/#_6","text":"a.JDK\u5df2\u7ecf\u5b89\u88c5\u3002 b.Maven\u5df2\u7ecf\u5b89\u88c5\u3002","title":"\u524d\u63d0\u6761\u4ef6"},{"location":"start/development-environment/#_7","text":"a. \u5728\u5b98\u65b9\u7f51\u7ad9\u4e0b\u8f7d IDEA \u5b89\u88c5\u5305\uff0c\u6536\u8d39\u7248\u6216\u8005\u793e\u533a\u7248\u7684\u6309\u4e2a\u4eba\u9700\u6c42\u3002 b. \u8bbe\u7f6e\u7f16\u7801\u683c\u5f0f\u90fd\u4e3a utf-8\u3002 \u6253\u5f00IDEA\uff0c\u9009\u62e9 File - Settings - Editor - File Encoding \u628a project Encoding \u548c default encoding for properties files \u6539\u4e3a utf-8\u3002 c. \u8bbe\u7f6emaven \u914d\u7f6e \u6253\u5f00IDEA\uff0c\u9009\u62e9 File - Settings - Build\uff0cExecution,Deployment - Bulid Tools - Maven \u6ce8\u610f\u914d\u7f6e Maven home directory \u548c User settings file","title":"\u5b89\u88c5\u6b65\u9aa4"},{"location":"start/first-sample/","text":"\u5f00\u53d1\u7b2c\u4e00\u4e2a\u5fae\u670d\u52a1 \u51c6\u5907\u5de5\u4f5c \u5728\u5f00\u53d1\u7b2c\u4e00\u4e2aJava-Chassis\u5fae\u670d\u52a1\u4e4b\u524d\uff0c\u8bf7\u5148\u786e\u4fdd\u4f60\u7684\u672c\u5730\u5f00\u53d1\u73af\u5883\u5df2\u7ecf\u51c6\u5907\u5c31\u7eea\uff0c\u53c2\u8003 \u5b89\u88c5\u672c\u5730\u5f00\u53d1\u73af\u5883 \u3002 \u672c\u6587\u793a\u4f8b\u9700\u8981\u7528\u5230\u670d\u52a1\u4e2d\u5fc3\uff0c\u8bf7\u53c2\u8003 ServiceCenter \u5b89\u88c5\u8bf4\u660e \u3002 \u5f00\u53d1\u4e00\u4e2aHelloWorld\u670d\u52a1 \u914d\u7f6epom\u6587\u4ef6 \u521b\u5efa\u4e00\u4e2a\u7a7a\u7684maven\u5de5\u7a0b\u3002\u5efa\u8bae\u5148\u914d\u7f6e dependencyManagement \u6765\u7ba1\u7406\u4f9d\u8d56\u9879\uff0c\u4f9d\u8d56\u9879\u53ea\u9700\u8981\u5f15\u5165 solution-basic \u5373\u53ef\uff1a dependencyManagement dependencies dependency groupId org.apache.servicecomb /groupId artifactId java-chassis-dependencies /artifactId version ${java-chassis-dependencies.version} /version type pom /type scope import /scope /dependency /dependencies /dependencyManagement dependencies dependency groupId org.apache.servicecomb /groupId artifactId solution-basic /artifactId /dependency /dependencies solution-basic \u4e2d\u5df2\u7ecf\u5305\u542b\u4e86\u5e38\u89c1\u573a\u666f\u4e0b\u5f00\u53d1Java-Chassis\u5fae\u670d\u52a1\u6240\u9700\u7684\u5168\u90e8\u4f9d\u8d56\u9879\u3002 Java-Chassis 2.0\u7248\u672c\u8fd8\u9700\u8981\u5f15\u5165 maven-compiler-plugin \u63d2\u4ef6\uff0c\u4f7f\u9879\u76ee\u6253\u5305\u65f6\u4fdd\u7559\u65b9\u6cd5\u53c2\u6570\u540d\uff1a build plugins plugin groupId org.apache.maven.plugins /groupId artifactId maven-compiler-plugin /artifactId version 3.1 /version configuration compilerArgument -parameters /compilerArgument encoding UTF-8 /encoding source 1.8 /source target 1.8 /target /configuration /plugin /plugins /build \u6dfb\u52a0\u914d\u7f6e\u6587\u4ef6 Java-Chassis\u9ed8\u8ba4\u8bfb\u53d6\u7684\u914d\u7f6e\u6587\u4ef6\u540d\u4e3a microservice.yaml \uff0c\u5b58\u653e\u5728 resources \u76ee\u5f55\u4e2d\u3002 \u6587\u4ef6\u5185\u5bb9\u5982\u4e0b\uff0c\u8fd9\u4efd\u6587\u4ef6\u8868\u793a\u5f53\u524d\u5f00\u53d1\u7684\u662f sample \u5e94\u7528\u4e0b\u7684\u540d\u4e3a helloworld \u7684\u5fae\u670d\u52a1\uff0c\u7248\u672c\u4e3a0.0.1\u3002\u8be5\u5fae\u670d\u52a1\u8fde\u63a5\u7684\u670d\u52a1\u4e2d\u5fc3\u5730\u5740\u4e3a http://127.0.0.1:30100 \uff0c\u76d1\u542c 8080 \u7aef\u53e3\u3002 APPLICATION_ID: sample service_description: name: helloworld version: 1.0.0 servicecomb: service: registry: address: http://127.0.0.1:30100 rest: address: 0.0.0.0:8080 \u7f16\u5199Main\u7c7b \u5728\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2aMain\u7c7b\uff0c\u7528\u4e8e\u542f\u52a8\u5fae\u670d\u52a1\u5b9e\u4f8b\uff1a package org.apache.servicecomb.samples; import org.apache.servicecomb.foundation.common.utils.BeanUtils; public class AppMain { public static void main(String[] args) { BeanUtils.init(); } } \u8c03\u7528 org.apache.servicecomb.foundation.common.utils.BeanUtils#init() \u65b9\u6cd5\u4f1a\u5b8c\u6210\u914d\u7f6e\u52a0\u8f7d\u3001Spring\u5e94\u7528\u4e0a\u4e0b\u6587\u52a0\u8f7d\u3001\u5fae\u670d\u52a1\u6ce8\u518c\u7b49\u4e00\u7cfb\u5217\u542f\u52a8\u6d41\u7a0b\u3002 \u7f16\u5199REST\u63a5\u53e3\u7c7b \u6700\u540e\u5728\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2aREST\u63a5\u53e3\u7c7b\u7528\u4e8e\u63a5\u6536\u8bf7\u6c42\uff1a package org.apache.servicecomb.samples.service; import org.apache.servicecomb.provider.rest.common.RestSchema; import org.springframework.web.bind.annotation.GetMapping; import org.springframework.web.bind.annotation.RequestMapping; @RestSchema(schemaId = hello ) @RequestMapping( / ) public class HelloWorldService { @GetMapping( /hello ) public String hello() { return Hello world! ; } } \u6dfb\u52a0\u65e5\u5fd7\u914d\u7f6e\u6587\u4ef6 solution-basic \u5f15\u5165\u4e86log4j2\u7ec4\u4ef6\u3002\u5982\u679c\u60f3\u8981\u770b\u5230\u8fd0\u884c\u65e5\u5fd7\uff0c\u8fd8\u9700\u8981\u624b\u52a8\u6dfb\u52a0\u4e00\u4efd\u65e5\u5fd7\u914d\u7f6e\u6587\u4ef6\uff0c\u6587\u4ef6\u5b58\u653e\u4f4d\u7f6e\u4e3a resources\\log4j2.xml \uff0c\u5185\u5bb9\u5982\u4e0b\uff1a ?xml version= 1.0 encoding= UTF-8 ? Configuration status= WARN Appenders Console name= Console target= SYSTEM_OUT PatternLayout pattern= %d{HH:mm:ss.SSS} [%t] %-5level %logger{36}[%L] - %msg%n / /Console /Appenders Loggers Root level= info AppenderRef ref= Console / /Root /Loggers /Configuration \u542f\u52a8\u670d\u52a1 \u4ee5\u4e0a\u5de5\u4f5c\u5b8c\u6210\u540e\uff0c\u8fd0\u884c AppMain \u7c7b\u5373\u53ef\u542f\u52a8\u5fae\u670d\u52a1\u3002\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u672c\u5730\u670d\u52a1\u4e2d\u5fc3\u7684\u9875\u9762 http://127.0.0.1:30103/ \uff0c\u5982\u679c\u80fd\u770b\u5230helloworld\u670d\u52a1\u7684\u5b9e\u4f8b\u8bb0\u5f55\uff0c\u5219\u8868\u793a\u542f\u52a8\u6210\u529f\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u8bbf\u95ee http://127.0.0.1:8080/hello \uff0c\u53ef\u4ee5\u5f97\u5230helloworld\u670d\u52a1\u7684\u54cd\u5e94 \"Hello world!\" \u3002\u81f3\u6b64\uff0c\u7b2c\u4e00\u4e2aJava-Chassis\u5fae\u670d\u52a1\u5f00\u53d1\u5b8c\u6210\u3002 \u8865\u5145\u8bf4\u660e \u4e0a\u6587\u4ee5Spring MVC\u5f00\u53d1\u98ce\u683c\u6765\u7f16\u5199helloworld\u670d\u52a1\u7684REST\u63a5\u53e3\u7c7b\uff0c\u76ee\u524dJava-Chassis\u63d0\u4f9b\u4e86\u4e09\u79cdREST\u63a5\u53e3\u7c7b\u5f00\u53d1\u98ce\u683c\uff1a Spring MVC JaxRS POJO Spring MVC\u548cJaxRS\u9002\u5408REST\u63a5\u53e3\u5f00\u53d1\u3002 POJO\u662f\u901a\u5e38\u8bf4\u7684RPC\uff0c\u9002\u5408\u4e8e\u8fdb\u884c\u5185\u90e8\u63a5\u53e3\u5f00\u53d1\u3002java-chassis\u5141\u8bb8\u5728\u4e00\u4e2a\u5fae\u670d\u52a1\u91cc\u9762\u6df7\u5408\u4f7f\u7528\u4e0a\u8ff0\u5f00\u53d1\u65b9\u5f0f\uff0c\u5e76\u4e14\u53ef\u4ee5\u4f7f\u7528\u5b8c\u5168\u4e00\u81f4\u7684\u65b9\u5f0f\uff0c\u6bd4\u5982RestTemplate\u6216\u8005POJO\u7684\u65b9\u5f0f\u8bbf\u95ee\u4e0d\u540c\u7c7b\u578b\u7684\u670d\u52a1\uff0c\u6240\u4ee5\u5f00\u59cb\u4e4b\u524d\uff0c\u53ef\u4ee5\u6839\u636e\u719f\u6089\u7a0b\u5ea6\uff0c\u9009\u62e9\u4efb\u610f\u4e00\u79cd\u5f00\u53d1\u65b9\u5f0f\u5373\u53ef\u3002java-chassis\u7684\u5f00\u53d1\u65b9\u5f0f\u548c\u901a\u4fe1\u65b9\u5f0f\u662f\u5b8c\u5168\u89e3\u8026\u7684\uff0c\u56e0\u6b64\u4e0d\u540c\u7684\u5f00\u53d1\u65b9\u5f0f\u5e76\u6ca1\u6709\u6027\u80fd\u4e0a\u7684\u5dee\u5f02\u3002 \u5f00\u53d1\u8005\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u5feb\u901f\u6784\u5efa\u4e00\u4e2a\u9879\u76ee\uff1a \u4e0b\u8f7dsamples\u9879\u76ee\u3002java-chassis\u63d0\u4f9b\u4e86\u5927\u91cf\u7684\u793a\u4f8b\u4ee3\u7801\uff0c\u8fd9\u4e9b\u793a\u4f8b\u4ee3\u7801\u53ef\u4ee5\u901a\u8fc7 servicecomb-samples \u83b7\u53d6\u3002 Spring MVC\u4f8b\u5b50 JaxRS\u4f8b\u5b50 POJO\u4f8b\u5b50 \u4f7f\u7528archetypes\u751f\u6210\u9879\u76ee archetypes\u662fmaven\u63d0\u4f9b\u7684\u4e00\u79cd\u673a\u5236\uff0c\u5bf9\u4e8e\u4f7f\u7528maven\u7684\u7528\u6237\uff0c\u53ef\u4ee5\u5728\u9879\u76ee\u91cc\u9762\u914d\u7f6e\u63d2\u4ef6\uff0c\u751f\u6210\u9879\u76ee\u3002java-chassis\u63d0\u4f9b\u4e86\u591a\u4e2aarchetypes\u4f9b\u5f00\u53d1\u8005\u4f7f\u7528\uff0c\u8be6\u7ec6\u53c2\u8003 \u94fe\u63a5 \u4f7f\u7528\u811a\u624b\u67b6\u751f\u6210\u9879\u76ee \u811a\u624b\u67b6\u63d0\u4f9b\u4e86\u4e00\u4e2a\u56fe\u5f62\u5316\u5411\u5bfc\uff0c\u901a\u8fc7\u5411\u5bfc\u53ef\u4ee5\u5feb\u901f\u6784\u5efa\u9879\u76ee\uff0c\u53c2\u8003 \u94fe\u63a5 \u3002","title":"\u5f00\u53d1\u7b2c\u4e00\u4e2a\u5fae\u670d\u52a1"},{"location":"start/first-sample/#_1","text":"","title":"\u5f00\u53d1\u7b2c\u4e00\u4e2a\u5fae\u670d\u52a1"},{"location":"start/first-sample/#_2","text":"\u5728\u5f00\u53d1\u7b2c\u4e00\u4e2aJava-Chassis\u5fae\u670d\u52a1\u4e4b\u524d\uff0c\u8bf7\u5148\u786e\u4fdd\u4f60\u7684\u672c\u5730\u5f00\u53d1\u73af\u5883\u5df2\u7ecf\u51c6\u5907\u5c31\u7eea\uff0c\u53c2\u8003 \u5b89\u88c5\u672c\u5730\u5f00\u53d1\u73af\u5883 \u3002 \u672c\u6587\u793a\u4f8b\u9700\u8981\u7528\u5230\u670d\u52a1\u4e2d\u5fc3\uff0c\u8bf7\u53c2\u8003 ServiceCenter \u5b89\u88c5\u8bf4\u660e \u3002","title":"\u51c6\u5907\u5de5\u4f5c"},{"location":"start/first-sample/#helloworld","text":"","title":"\u5f00\u53d1\u4e00\u4e2aHelloWorld\u670d\u52a1"},{"location":"start/first-sample/#pom","text":"\u521b\u5efa\u4e00\u4e2a\u7a7a\u7684maven\u5de5\u7a0b\u3002\u5efa\u8bae\u5148\u914d\u7f6e dependencyManagement \u6765\u7ba1\u7406\u4f9d\u8d56\u9879\uff0c\u4f9d\u8d56\u9879\u53ea\u9700\u8981\u5f15\u5165 solution-basic \u5373\u53ef\uff1a dependencyManagement dependencies dependency groupId org.apache.servicecomb /groupId artifactId java-chassis-dependencies /artifactId version ${java-chassis-dependencies.version} /version type pom /type scope import /scope /dependency /dependencies /dependencyManagement dependencies dependency groupId org.apache.servicecomb /groupId artifactId solution-basic /artifactId /dependency /dependencies solution-basic \u4e2d\u5df2\u7ecf\u5305\u542b\u4e86\u5e38\u89c1\u573a\u666f\u4e0b\u5f00\u53d1Java-Chassis\u5fae\u670d\u52a1\u6240\u9700\u7684\u5168\u90e8\u4f9d\u8d56\u9879\u3002 Java-Chassis 2.0\u7248\u672c\u8fd8\u9700\u8981\u5f15\u5165 maven-compiler-plugin \u63d2\u4ef6\uff0c\u4f7f\u9879\u76ee\u6253\u5305\u65f6\u4fdd\u7559\u65b9\u6cd5\u53c2\u6570\u540d\uff1a build plugins plugin groupId org.apache.maven.plugins /groupId artifactId maven-compiler-plugin /artifactId version 3.1 /version configuration compilerArgument -parameters /compilerArgument encoding UTF-8 /encoding source 1.8 /source target 1.8 /target /configuration /plugin /plugins /build","title":"\u914d\u7f6epom\u6587\u4ef6"},{"location":"start/first-sample/#_3","text":"Java-Chassis\u9ed8\u8ba4\u8bfb\u53d6\u7684\u914d\u7f6e\u6587\u4ef6\u540d\u4e3a microservice.yaml \uff0c\u5b58\u653e\u5728 resources \u76ee\u5f55\u4e2d\u3002 \u6587\u4ef6\u5185\u5bb9\u5982\u4e0b\uff0c\u8fd9\u4efd\u6587\u4ef6\u8868\u793a\u5f53\u524d\u5f00\u53d1\u7684\u662f sample \u5e94\u7528\u4e0b\u7684\u540d\u4e3a helloworld \u7684\u5fae\u670d\u52a1\uff0c\u7248\u672c\u4e3a0.0.1\u3002\u8be5\u5fae\u670d\u52a1\u8fde\u63a5\u7684\u670d\u52a1\u4e2d\u5fc3\u5730\u5740\u4e3a http://127.0.0.1:30100 \uff0c\u76d1\u542c 8080 \u7aef\u53e3\u3002 APPLICATION_ID: sample service_description: name: helloworld version: 1.0.0 servicecomb: service: registry: address: http://127.0.0.1:30100 rest: address: 0.0.0.0:8080","title":"\u6dfb\u52a0\u914d\u7f6e\u6587\u4ef6"},{"location":"start/first-sample/#main","text":"\u5728\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2aMain\u7c7b\uff0c\u7528\u4e8e\u542f\u52a8\u5fae\u670d\u52a1\u5b9e\u4f8b\uff1a package org.apache.servicecomb.samples; import org.apache.servicecomb.foundation.common.utils.BeanUtils; public class AppMain { public static void main(String[] args) { BeanUtils.init(); } } \u8c03\u7528 org.apache.servicecomb.foundation.common.utils.BeanUtils#init() \u65b9\u6cd5\u4f1a\u5b8c\u6210\u914d\u7f6e\u52a0\u8f7d\u3001Spring\u5e94\u7528\u4e0a\u4e0b\u6587\u52a0\u8f7d\u3001\u5fae\u670d\u52a1\u6ce8\u518c\u7b49\u4e00\u7cfb\u5217\u542f\u52a8\u6d41\u7a0b\u3002","title":"\u7f16\u5199Main\u7c7b"},{"location":"start/first-sample/#rest","text":"\u6700\u540e\u5728\u5de5\u7a0b\u4e2d\u6dfb\u52a0\u4e00\u4e2aREST\u63a5\u53e3\u7c7b\u7528\u4e8e\u63a5\u6536\u8bf7\u6c42\uff1a package org.apache.servicecomb.samples.service; import org.apache.servicecomb.provider.rest.common.RestSchema; import org.springframework.web.bind.annotation.GetMapping; import org.springframework.web.bind.annotation.RequestMapping; @RestSchema(schemaId = hello ) @RequestMapping( / ) public class HelloWorldService { @GetMapping( /hello ) public String hello() { return Hello world! ; } }","title":"\u7f16\u5199REST\u63a5\u53e3\u7c7b"},{"location":"start/first-sample/#_4","text":"solution-basic \u5f15\u5165\u4e86log4j2\u7ec4\u4ef6\u3002\u5982\u679c\u60f3\u8981\u770b\u5230\u8fd0\u884c\u65e5\u5fd7\uff0c\u8fd8\u9700\u8981\u624b\u52a8\u6dfb\u52a0\u4e00\u4efd\u65e5\u5fd7\u914d\u7f6e\u6587\u4ef6\uff0c\u6587\u4ef6\u5b58\u653e\u4f4d\u7f6e\u4e3a resources\\log4j2.xml \uff0c\u5185\u5bb9\u5982\u4e0b\uff1a ?xml version= 1.0 encoding= UTF-8 ? Configuration status= WARN Appenders Console name= Console target= SYSTEM_OUT PatternLayout pattern= %d{HH:mm:ss.SSS} [%t] %-5level %logger{36}[%L] - %msg%n / /Console /Appenders Loggers Root level= info AppenderRef ref= Console / /Root /Loggers /Configuration","title":"\u6dfb\u52a0\u65e5\u5fd7\u914d\u7f6e\u6587\u4ef6"},{"location":"start/first-sample/#_5","text":"\u4ee5\u4e0a\u5de5\u4f5c\u5b8c\u6210\u540e\uff0c\u8fd0\u884c AppMain \u7c7b\u5373\u53ef\u542f\u52a8\u5fae\u670d\u52a1\u3002\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u672c\u5730\u670d\u52a1\u4e2d\u5fc3\u7684\u9875\u9762 http://127.0.0.1:30103/ \uff0c\u5982\u679c\u80fd\u770b\u5230helloworld\u670d\u52a1\u7684\u5b9e\u4f8b\u8bb0\u5f55\uff0c\u5219\u8868\u793a\u542f\u52a8\u6210\u529f\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u8bbf\u95ee http://127.0.0.1:8080/hello \uff0c\u53ef\u4ee5\u5f97\u5230helloworld\u670d\u52a1\u7684\u54cd\u5e94 \"Hello world!\" \u3002\u81f3\u6b64\uff0c\u7b2c\u4e00\u4e2aJava-Chassis\u5fae\u670d\u52a1\u5f00\u53d1\u5b8c\u6210\u3002","title":"\u542f\u52a8\u670d\u52a1"},{"location":"start/first-sample/#_6","text":"\u4e0a\u6587\u4ee5Spring MVC\u5f00\u53d1\u98ce\u683c\u6765\u7f16\u5199helloworld\u670d\u52a1\u7684REST\u63a5\u53e3\u7c7b\uff0c\u76ee\u524dJava-Chassis\u63d0\u4f9b\u4e86\u4e09\u79cdREST\u63a5\u53e3\u7c7b\u5f00\u53d1\u98ce\u683c\uff1a Spring MVC JaxRS POJO Spring MVC\u548cJaxRS\u9002\u5408REST\u63a5\u53e3\u5f00\u53d1\u3002 POJO\u662f\u901a\u5e38\u8bf4\u7684RPC\uff0c\u9002\u5408\u4e8e\u8fdb\u884c\u5185\u90e8\u63a5\u53e3\u5f00\u53d1\u3002java-chassis\u5141\u8bb8\u5728\u4e00\u4e2a\u5fae\u670d\u52a1\u91cc\u9762\u6df7\u5408\u4f7f\u7528\u4e0a\u8ff0\u5f00\u53d1\u65b9\u5f0f\uff0c\u5e76\u4e14\u53ef\u4ee5\u4f7f\u7528\u5b8c\u5168\u4e00\u81f4\u7684\u65b9\u5f0f\uff0c\u6bd4\u5982RestTemplate\u6216\u8005POJO\u7684\u65b9\u5f0f\u8bbf\u95ee\u4e0d\u540c\u7c7b\u578b\u7684\u670d\u52a1\uff0c\u6240\u4ee5\u5f00\u59cb\u4e4b\u524d\uff0c\u53ef\u4ee5\u6839\u636e\u719f\u6089\u7a0b\u5ea6\uff0c\u9009\u62e9\u4efb\u610f\u4e00\u79cd\u5f00\u53d1\u65b9\u5f0f\u5373\u53ef\u3002java-chassis\u7684\u5f00\u53d1\u65b9\u5f0f\u548c\u901a\u4fe1\u65b9\u5f0f\u662f\u5b8c\u5168\u89e3\u8026\u7684\uff0c\u56e0\u6b64\u4e0d\u540c\u7684\u5f00\u53d1\u65b9\u5f0f\u5e76\u6ca1\u6709\u6027\u80fd\u4e0a\u7684\u5dee\u5f02\u3002 \u5f00\u53d1\u8005\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u5feb\u901f\u6784\u5efa\u4e00\u4e2a\u9879\u76ee\uff1a \u4e0b\u8f7dsamples\u9879\u76ee\u3002java-chassis\u63d0\u4f9b\u4e86\u5927\u91cf\u7684\u793a\u4f8b\u4ee3\u7801\uff0c\u8fd9\u4e9b\u793a\u4f8b\u4ee3\u7801\u53ef\u4ee5\u901a\u8fc7 servicecomb-samples \u83b7\u53d6\u3002 Spring MVC\u4f8b\u5b50 JaxRS\u4f8b\u5b50 POJO\u4f8b\u5b50 \u4f7f\u7528archetypes\u751f\u6210\u9879\u76ee archetypes\u662fmaven\u63d0\u4f9b\u7684\u4e00\u79cd\u673a\u5236\uff0c\u5bf9\u4e8e\u4f7f\u7528maven\u7684\u7528\u6237\uff0c\u53ef\u4ee5\u5728\u9879\u76ee\u91cc\u9762\u914d\u7f6e\u63d2\u4ef6\uff0c\u751f\u6210\u9879\u76ee\u3002java-chassis\u63d0\u4f9b\u4e86\u591a\u4e2aarchetypes\u4f9b\u5f00\u53d1\u8005\u4f7f\u7528\uff0c\u8be6\u7ec6\u53c2\u8003 \u94fe\u63a5 \u4f7f\u7528\u811a\u624b\u67b6\u751f\u6210\u9879\u76ee \u811a\u624b\u67b6\u63d0\u4f9b\u4e86\u4e00\u4e2a\u56fe\u5f62\u5316\u5411\u5bfc\uff0c\u901a\u8fc7\u5411\u5bfc\u53ef\u4ee5\u5feb\u901f\u6784\u5efa\u9879\u76ee\uff0c\u53c2\u8003 \u94fe\u63a5 \u3002","title":"\u8865\u5145\u8bf4\u660e"},{"location":"start/terminology/","text":"\u88681-1\u672f\u8bed\u8868 \u7f29\u7565\u8bed \u82f1\u6587\u8bcd\u6c47 \u4e2d\u6587\u8bcd\u6c47 \u89e3\u91ca MicroServices MicroServices \u5fae\u670d\u52a1 \u5fae\u670d\u52a1\u662f\u4e00\u79cd\u8f7b\u91cf\u7ea7SOA\u67b6\u6784\uff0c\u901a\u5e38\u7528\u6765\u63cf\u8ff0\u5e7f\u6cdb\u7528\u4e8e\u4e91\u5e94\u7528\u3001\u4e92\u8054\u7f51\u5e94\u7528\u7684\u4e00\u79cd\u677e\u8026\u5408\u5206\u5e03\u5f0f\u67b6\u6784\u3002 Provider Provider \u670d\u52a1\u63d0\u4f9b\u8005 \u5728\u5fae\u670d\u52a1\u8c03\u7528\u5173\u7cfb\u4e2d\u5904\u4e8e\u88ab\u8c03\u7528\u4e00\u65b9\u7684\u670d\u52a1\u3002 Consumer Consumer \u670d\u52a1\u6d88\u8d39\u8005 \u5728\u5fae\u670d\u52a1\u8c03\u7528\u5173\u7cfb\u4e2d\u5904\u4e8e\u8c03\u7528\u53d1\u8d77\u65b9\u7684\u670d\u52a1\u3002 Application Application \u5e94\u7528 \u5e94\u7528\u4ee3\u8868\u4e00\u4e2a\u8f6f\u4ef6\u5e94\u7528\u7684\u903b\u8f91\u5b9e\u4f53\uff0c\u8868\u793a\u4e00\u4e2a\u6709\u4e1a\u52a1\u529f\u80fd\u5448\u73b0\u7ed9\u7528\u6237\u7684\u8ba1\u7b97\u673a\u8f6f\u4ef6\u5e94\u7528\u3002\u4e00\u4e2a\u4ee5\u5fae\u670d\u52a1\u5316\u67b6\u6784\u6784\u5efa\u7684\u5e94\u7528\u901a\u5e38\u7531\u591a\u4e2a\u5fae\u670d\u52a1\u7ec4\u6210\u3002 Instance Instance \u5fae\u670d\u52a1\u5b9e\u4f8b \u4e00\u4e2a\u5fae\u670d\u52a1\u7684\u6700\u5c0f\u8fd0\u884c\u548c\u90e8\u7f72\u5355\u5143\uff0c\u901a\u5e38\u5bf9\u5e94\u4e00\u4e2a\u5e94\u7528\u8fdb\u7a0b\u3002 IAM Identity and Access Management \u8eab\u4efd\u53ca\u6743\u9650\u7ba1\u7406 \u8d1f\u8d23PaaS\u7cfb\u7edf\u4e2d\u7ba1\u7406\u5c42\u7ea7\u3001\u7528\u6237\u3001\u89d2\u8272\u3001\u6388\u6743\u5173\u7cfb\uff0c\u7528\u6237\u7684\u7ec4\u7ec7\u5f52\u6027\u7b49\u4fe1\u606f\u7684\u7ef4\u62a4\u3002\u5e76\u5b9e\u65bd\u6388\u6743\u548c\u6388\u6743\u68c0\u67e5\u3002 AK/SK AK/SK AK/SK\u5bc6\u94a5 Access key/Secret key\u662f\u4e00\u7ec4\u5bc6\u94a5\u5bf9\uff0c\u7528\u4e8eAPI\u7684\u8eab\u4efd\u8ba4\u8bc1\u548c\u8bbf\u95ee\u63a7\u5236\u3002 Service Service \u670d\u52a1 \u670d\u52a1\u662f\u5bf9\u6309\u9700\u53d6\u7528\u7684\u529f\u80fd\u5bf9\u8c61\u7684\u4e00\u79cd\u63cf\u8ff0\u3002\u5728\u5e94\u7528\u6a21\u578b\u4e2d\uff0c\u670d\u52a1\u4e00\u822c\u9762\u5411\u5e94\u7528\uff0c\u5e94\u7528\u4f7f\u7528\u670d\u52a1\u9700\u8981\u5148\u8ba2\u8d2d\u670d\u52a1\uff0c\u518d\u7ed1\u5b9a\u670d\u52a1\u5e76\u4f7f\u7528\uff0c\u67d0\u4e9b\u5546\u4e1a\u573a\u666f\u4e0b\u53ef\u80fd\u8fd8\u9700\u8981\u6309\u4f7f\u7528\u91cf\u4ed8\u8d39\u3002 Load Balance Load Balance \u8d1f\u8f7d\u5747\u8861 \u5f53\u5e94\u7528\u8bbf\u95ee\u4e00\u4e2a\u5177\u6709\u591a\u4e2a\u5b9e\u4f8b\u7684\u5fae\u670d\u52a1\u65f6\uff0c\u4f1a\u6d89\u53ca\u5230\u8def\u7531\u8d1f\u8f7d\u5747\u8861\u3002\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u914d\u7f6e\u8d1f\u8f7d\u5747\u8861\u7b56\u7565\uff0c\u652f\u6301\u968f\u673a\uff0c\u8f6e\u8be2\u3001\u4f1a\u8bdd\u4fdd\u6301\u548c\u57fa\u4e8e\u54cd\u5e94\u65f6\u95f4\u7684\u6743\u503c\u7b49\u591a\u79cd\u8d1f\u8f7d\u5747\u8861\u8def\u7531\u7b56\u7565\u3002 Rate limit Rate limit \u9650\u6d41 \u5f53\u8d44\u6e90\u6210\u4e3a\u74f6\u9888\u65f6\uff0c\u670d\u52a1\u6846\u67b6\u9700\u8981\u5bf9\u6d88\u8d39\u8005\u7684\u8bbf\u95ee\u8bf7\u6c42\u505a\u9650\u6d41\uff0c\u542f\u52a8\u6d41\u63a7\u4fdd\u62a4\u673a\u5236\u3002\u5728\u670d\u52a1\u6d88\u8d39\u8005\u7aef\u548c\u63d0\u4f9b\u8005\u7aef\u5747\u53ef\u8fdb\u884c\u6d41\u91cf\u63a7\u5236\u3002\u5728\u670d\u52a1\u6d88\u8d39\u7aef\uff0c\u53ef\u4ee5\u9650\u5236\u53d1\u5f80\u67d0\u4e2a\u5fae\u670d\u52a1\u63d0\u4f9b\u8005\u7684\u8bf7\u6c42\u9891\u7387\uff1b\u5728\u670d\u52a1\u63d0\u4f9b\u7aef\uff0c\u53ef\u4ee5\u9650\u5236\u6bcf\u4e2a\u5fae\u670d\u52a1\u6d88\u8d39\u7aef\u53d1\u8fc7\u6765\u7684\u8bf7\u6c42\u9891\u7387\uff0c\u4e5f\u53ef\u4ee5\u6839\u636e\u670d\u52a1\u63d0\u4f9b\u7aef\u8d44\u6e90\u6d88\u8017\u60c5\u51b5\u786e\u5b9a\u603b\u7684\u8bf7\u6c42\u9891\u7387\u9650\u5236\uff0c\u9632\u6b62\u670d\u52a1\u56e0\u8d44\u6e90\u8017\u5c3d\u800c\u5d29\u6e83\u3002 Service Degrade Service Degrade \u964d\u7ea7 \u670d\u52a1\u964d\u7ea7\u4e3b\u8981\u5305\u62ec\u5c4f\u853d\u964d\u7ea7\u548c\u5bb9\u9519\u964d\u7ea7\u4e24\u79cd\u7b56\u7565\uff1a\u5c4f\u853d\u964d\u7ea7\u662f\u6307\u5f53\u5916\u754c\u7684\u89e6\u53d1\u6761\u4ef6\u8fbe\u5230\u67d0\u4e2a\u4e34\u754c\u503c\u65f6\uff0c\u7531\u8fd0\u7ef4\u4eba\u5458/\u5f00\u53d1\u4eba\u5458\u51b3\u7b56\uff0c\u5bf9\u67d0\u7c7b\u6216\u8005\u67d0\u4e2a\u670d\u52a1\u8fdb\u884c\u5f3a\u5236\u964d\u7ea7\u3002\u5bb9\u9519\u964d\u7ea7\u662f\u6307\u5f53\u975e\u6838\u5fc3\u670d\u52a1\u4e0d\u53ef\u7528\u65f6\uff0c\u53ef\u4ee5\u5bf9\u6545\u969c\u670d\u52a1\u505a\u4e1a\u52a1\u903b\u8f91\u653e\u901a\uff0c\u4ee5\u4fdd\u969c\u6838\u5fc3\u670d\u52a1\u7684\u8fd0\u884c\u3002 Fault tolarance Fault tolarance \u5bb9\u9519 \u5bb9\u9519\u662f\u6d88\u8d39\u8005\u8bbf\u95ee\u670d\u52a1\u65f6\u51fa\u73b0\u5f02\u5e38\u7684\u573a\u666f\u4e0b\u7684\u4e00\u79cd\u5904\u7406\u7b56\u7565\uff0c\u51fa\u73b0\u5f02\u5e38\u540e\u7531\u670d\u52a1\u6846\u67b6\u81ea\u52a8\u9009\u62e9\u65b0\u7684\u670d\u52a1\u8def\u7531\u8fdb\u884c\u8c03\u7528\u3002 Circuit Breaker Circuit Breaker \u7194\u65ad \u5fae\u670d\u52a1\u4e4b\u95f4\u901a\u5e38\u5b58\u5728\u4f9d\u8d56\u5173\u7cfb\uff0c\u670d\u52a1\u8c03\u7528\u94fe\u8def\u53ef\u80fd\u5305\u542b\u591a\u4e2a\u5fae\u670d\u52a1\uff0c\u5982\u679c\u94fe\u8def\u4e2d\u4e00\u4e2a\u6216\u591a\u4e2a\u670d\u52a1\u8bbf\u95ee\u5ef6\u8fdf\u8fc7\u9ad8\uff0c\u4f1a\u5bfc\u81f4\u5165\u53e3\u670d\u52a1\u7684\u8bf7\u6c42\u4e0d\u65ad\u5806\u79ef\uff0c\u6301\u7eed\u6d88\u8017\u66f4\u591a\u7684\u7ebf\u7a0b\u3001io\u8d44\u6e90\uff0c\u6700\u7ec8\u7531\u4e8e\u8d44\u6e90\u7d2f\u79ef\u4f7f\u7cfb\u7edf\u51fa\u73b0\u74f6\u9888\uff0c\u9020\u6210\u66f4\u591a\u670d\u52a1\u4e0d\u53ef\u7528\uff0c\u4ea7\u751f\u96ea\u5d29\u6548\u5e94\u3002\u7194\u65ad\u673a\u5236\u5c31\u662f\u9488\u5bf9\u4e0a\u8ff0\u573a\u666f\u8bbe\u8ba1\u7684\uff0c\u5f53\u67d0\u4e2a\u76ee\u6807\u670d\u52a1\u54cd\u5e94\u7f13\u6162\u6216\u8005\u6709\u5927\u91cf\u8d85\u65f6\u60c5\u51b5\u53d1\u751f\u65f6\uff0c\u7194\u65ad\u8be5\u670d\u52a1\u7684\u8c03\u7528\uff0c\u5bf9\u4e8e\u540e\u7eed\u8c03\u7528\u8bf7\u6c42\uff0c\u4e0d\u518d\u7ee7\u7eed\u8c03\u7528\u76ee\u6807\u670d\u52a1\uff0c\u76f4\u63a5\u8fd4\u56de\uff0c\u5feb\u901f\u91ca\u653e\u8d44\u6e90\uff0c\u7b49\u5230\u8be5\u76ee\u6807\u670d\u52a1\u60c5\u51b5\u597d\u8f6c\u518d\u6062\u590d\u8c03\u7528\u3002 Isolation Isolation \u9694\u79bb \u670d\u52a1\u9694\u79bb\u662f\u4e00\u79cd\u5f02\u5e38\u68c0\u6d4b\u673a\u5236\uff0c\u5e38\u7528\u7684\u68c0\u6d4b\u65b9\u6cd5\u662f\u8bf7\u6c42\u8d85\u65f6\u3001\u6d41\u91cf\u8fc7\u5927\u7b49\u3002\u4e00\u822c\u7684\u8bbe\u7f6e\u53c2\u6570\u5305\u62ec\u8d85\u65f6\u65f6\u95f4\u3001\u6700\u5927\u5e76\u53d1\u8bf7\u6c42\u6570\u7b49\uff0c\u5f53\u8d85\u8fc7\u8d85\u65f6\u65f6\u95f4\u6216\u6700\u5927\u5e76\u53d1\u8bf7\u6c42\u6570\u65f6\uff0c\u8bb0\u5f55\u4e00\u6b21\u5f02\u5e38\uff0c\u5e76\u7528\u4e8e\u5728\u7194\u65ad\u673a\u5236\u4e2d\u8ba1\u7b97\u9519\u8bef\u7387\u548c\u9519\u8bef\u8bf7\u6c42\u6570\u3002 Service Mesh Service Mesh \u670d\u52a1\u7f51\u683c \u4e00\u79cd\u57fa\u7840\u8bbe\u65bd\u5c42\u670d\u52a1\u3002\u5728\u5fae\u670d\u52a1\u5316\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5f00\u53d1\u8005\u9700\u8981\u89e3\u51b3\u5e94\u7528\u8fd0\u884c\u5728\u5206\u5e03\u5f0f\u7f51\u7edc\u4e2d\u6240\u5f15\u5165\u7684\u95ee\u9898\uff0c\u4f8b\u5982\u5bb9\u9519\uff0c\u9650\u6d41\uff0c\u8d1f\u8f7d\u5747\u8861\uff0c\u6ce8\u518c\u53d1\u73b0\uff0c\u53ef\u76d1\u63a7\u7b49\uff0cService Mesh\u4f5c\u4e3aL4/L7\u534f\u8bae\u4ee3\u7406\uff0c\u4e3a\u5e94\u7528\u89e3\u51b3\u4e86\u5fae\u670d\u52a1\u5316\u540e\u5e26\u6765\u7684\u95ee\u9898\u3002 legacy legacy \u9057\u7559\u7cfb\u7edf \u9057\u7559\u7cfb\u7edf\u662f\u4e00\u4e2a\u8fd8\u5728\u8fd0\u884c\u548c\u4f7f\u7528\uff0c\u4f46\u5df2\u6b65\u5165\u8f6f\u4ef6\u751f\u547d\u5468\u671f\u8870\u8001\u671f\u7684\u8f6f\u4ef6\u7cfb\u7edf\u3002","title":"Terminology"},{"location":"start/terminology/#1-1","text":"\u7f29\u7565\u8bed \u82f1\u6587\u8bcd\u6c47 \u4e2d\u6587\u8bcd\u6c47 \u89e3\u91ca MicroServices MicroServices \u5fae\u670d\u52a1 \u5fae\u670d\u52a1\u662f\u4e00\u79cd\u8f7b\u91cf\u7ea7SOA\u67b6\u6784\uff0c\u901a\u5e38\u7528\u6765\u63cf\u8ff0\u5e7f\u6cdb\u7528\u4e8e\u4e91\u5e94\u7528\u3001\u4e92\u8054\u7f51\u5e94\u7528\u7684\u4e00\u79cd\u677e\u8026\u5408\u5206\u5e03\u5f0f\u67b6\u6784\u3002 Provider Provider \u670d\u52a1\u63d0\u4f9b\u8005 \u5728\u5fae\u670d\u52a1\u8c03\u7528\u5173\u7cfb\u4e2d\u5904\u4e8e\u88ab\u8c03\u7528\u4e00\u65b9\u7684\u670d\u52a1\u3002 Consumer Consumer \u670d\u52a1\u6d88\u8d39\u8005 \u5728\u5fae\u670d\u52a1\u8c03\u7528\u5173\u7cfb\u4e2d\u5904\u4e8e\u8c03\u7528\u53d1\u8d77\u65b9\u7684\u670d\u52a1\u3002 Application Application \u5e94\u7528 \u5e94\u7528\u4ee3\u8868\u4e00\u4e2a\u8f6f\u4ef6\u5e94\u7528\u7684\u903b\u8f91\u5b9e\u4f53\uff0c\u8868\u793a\u4e00\u4e2a\u6709\u4e1a\u52a1\u529f\u80fd\u5448\u73b0\u7ed9\u7528\u6237\u7684\u8ba1\u7b97\u673a\u8f6f\u4ef6\u5e94\u7528\u3002\u4e00\u4e2a\u4ee5\u5fae\u670d\u52a1\u5316\u67b6\u6784\u6784\u5efa\u7684\u5e94\u7528\u901a\u5e38\u7531\u591a\u4e2a\u5fae\u670d\u52a1\u7ec4\u6210\u3002 Instance Instance \u5fae\u670d\u52a1\u5b9e\u4f8b \u4e00\u4e2a\u5fae\u670d\u52a1\u7684\u6700\u5c0f\u8fd0\u884c\u548c\u90e8\u7f72\u5355\u5143\uff0c\u901a\u5e38\u5bf9\u5e94\u4e00\u4e2a\u5e94\u7528\u8fdb\u7a0b\u3002 IAM Identity and Access Management \u8eab\u4efd\u53ca\u6743\u9650\u7ba1\u7406 \u8d1f\u8d23PaaS\u7cfb\u7edf\u4e2d\u7ba1\u7406\u5c42\u7ea7\u3001\u7528\u6237\u3001\u89d2\u8272\u3001\u6388\u6743\u5173\u7cfb\uff0c\u7528\u6237\u7684\u7ec4\u7ec7\u5f52\u6027\u7b49\u4fe1\u606f\u7684\u7ef4\u62a4\u3002\u5e76\u5b9e\u65bd\u6388\u6743\u548c\u6388\u6743\u68c0\u67e5\u3002 AK/SK AK/SK AK/SK\u5bc6\u94a5 Access key/Secret key\u662f\u4e00\u7ec4\u5bc6\u94a5\u5bf9\uff0c\u7528\u4e8eAPI\u7684\u8eab\u4efd\u8ba4\u8bc1\u548c\u8bbf\u95ee\u63a7\u5236\u3002 Service Service \u670d\u52a1 \u670d\u52a1\u662f\u5bf9\u6309\u9700\u53d6\u7528\u7684\u529f\u80fd\u5bf9\u8c61\u7684\u4e00\u79cd\u63cf\u8ff0\u3002\u5728\u5e94\u7528\u6a21\u578b\u4e2d\uff0c\u670d\u52a1\u4e00\u822c\u9762\u5411\u5e94\u7528\uff0c\u5e94\u7528\u4f7f\u7528\u670d\u52a1\u9700\u8981\u5148\u8ba2\u8d2d\u670d\u52a1\uff0c\u518d\u7ed1\u5b9a\u670d\u52a1\u5e76\u4f7f\u7528\uff0c\u67d0\u4e9b\u5546\u4e1a\u573a\u666f\u4e0b\u53ef\u80fd\u8fd8\u9700\u8981\u6309\u4f7f\u7528\u91cf\u4ed8\u8d39\u3002 Load Balance Load Balance \u8d1f\u8f7d\u5747\u8861 \u5f53\u5e94\u7528\u8bbf\u95ee\u4e00\u4e2a\u5177\u6709\u591a\u4e2a\u5b9e\u4f8b\u7684\u5fae\u670d\u52a1\u65f6\uff0c\u4f1a\u6d89\u53ca\u5230\u8def\u7531\u8d1f\u8f7d\u5747\u8861\u3002\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u914d\u7f6e\u8d1f\u8f7d\u5747\u8861\u7b56\u7565\uff0c\u652f\u6301\u968f\u673a\uff0c\u8f6e\u8be2\u3001\u4f1a\u8bdd\u4fdd\u6301\u548c\u57fa\u4e8e\u54cd\u5e94\u65f6\u95f4\u7684\u6743\u503c\u7b49\u591a\u79cd\u8d1f\u8f7d\u5747\u8861\u8def\u7531\u7b56\u7565\u3002 Rate limit Rate limit \u9650\u6d41 \u5f53\u8d44\u6e90\u6210\u4e3a\u74f6\u9888\u65f6\uff0c\u670d\u52a1\u6846\u67b6\u9700\u8981\u5bf9\u6d88\u8d39\u8005\u7684\u8bbf\u95ee\u8bf7\u6c42\u505a\u9650\u6d41\uff0c\u542f\u52a8\u6d41\u63a7\u4fdd\u62a4\u673a\u5236\u3002\u5728\u670d\u52a1\u6d88\u8d39\u8005\u7aef\u548c\u63d0\u4f9b\u8005\u7aef\u5747\u53ef\u8fdb\u884c\u6d41\u91cf\u63a7\u5236\u3002\u5728\u670d\u52a1\u6d88\u8d39\u7aef\uff0c\u53ef\u4ee5\u9650\u5236\u53d1\u5f80\u67d0\u4e2a\u5fae\u670d\u52a1\u63d0\u4f9b\u8005\u7684\u8bf7\u6c42\u9891\u7387\uff1b\u5728\u670d\u52a1\u63d0\u4f9b\u7aef\uff0c\u53ef\u4ee5\u9650\u5236\u6bcf\u4e2a\u5fae\u670d\u52a1\u6d88\u8d39\u7aef\u53d1\u8fc7\u6765\u7684\u8bf7\u6c42\u9891\u7387\uff0c\u4e5f\u53ef\u4ee5\u6839\u636e\u670d\u52a1\u63d0\u4f9b\u7aef\u8d44\u6e90\u6d88\u8017\u60c5\u51b5\u786e\u5b9a\u603b\u7684\u8bf7\u6c42\u9891\u7387\u9650\u5236\uff0c\u9632\u6b62\u670d\u52a1\u56e0\u8d44\u6e90\u8017\u5c3d\u800c\u5d29\u6e83\u3002 Service Degrade Service Degrade \u964d\u7ea7 \u670d\u52a1\u964d\u7ea7\u4e3b\u8981\u5305\u62ec\u5c4f\u853d\u964d\u7ea7\u548c\u5bb9\u9519\u964d\u7ea7\u4e24\u79cd\u7b56\u7565\uff1a\u5c4f\u853d\u964d\u7ea7\u662f\u6307\u5f53\u5916\u754c\u7684\u89e6\u53d1\u6761\u4ef6\u8fbe\u5230\u67d0\u4e2a\u4e34\u754c\u503c\u65f6\uff0c\u7531\u8fd0\u7ef4\u4eba\u5458/\u5f00\u53d1\u4eba\u5458\u51b3\u7b56\uff0c\u5bf9\u67d0\u7c7b\u6216\u8005\u67d0\u4e2a\u670d\u52a1\u8fdb\u884c\u5f3a\u5236\u964d\u7ea7\u3002\u5bb9\u9519\u964d\u7ea7\u662f\u6307\u5f53\u975e\u6838\u5fc3\u670d\u52a1\u4e0d\u53ef\u7528\u65f6\uff0c\u53ef\u4ee5\u5bf9\u6545\u969c\u670d\u52a1\u505a\u4e1a\u52a1\u903b\u8f91\u653e\u901a\uff0c\u4ee5\u4fdd\u969c\u6838\u5fc3\u670d\u52a1\u7684\u8fd0\u884c\u3002 Fault tolarance Fault tolarance \u5bb9\u9519 \u5bb9\u9519\u662f\u6d88\u8d39\u8005\u8bbf\u95ee\u670d\u52a1\u65f6\u51fa\u73b0\u5f02\u5e38\u7684\u573a\u666f\u4e0b\u7684\u4e00\u79cd\u5904\u7406\u7b56\u7565\uff0c\u51fa\u73b0\u5f02\u5e38\u540e\u7531\u670d\u52a1\u6846\u67b6\u81ea\u52a8\u9009\u62e9\u65b0\u7684\u670d\u52a1\u8def\u7531\u8fdb\u884c\u8c03\u7528\u3002 Circuit Breaker Circuit Breaker \u7194\u65ad \u5fae\u670d\u52a1\u4e4b\u95f4\u901a\u5e38\u5b58\u5728\u4f9d\u8d56\u5173\u7cfb\uff0c\u670d\u52a1\u8c03\u7528\u94fe\u8def\u53ef\u80fd\u5305\u542b\u591a\u4e2a\u5fae\u670d\u52a1\uff0c\u5982\u679c\u94fe\u8def\u4e2d\u4e00\u4e2a\u6216\u591a\u4e2a\u670d\u52a1\u8bbf\u95ee\u5ef6\u8fdf\u8fc7\u9ad8\uff0c\u4f1a\u5bfc\u81f4\u5165\u53e3\u670d\u52a1\u7684\u8bf7\u6c42\u4e0d\u65ad\u5806\u79ef\uff0c\u6301\u7eed\u6d88\u8017\u66f4\u591a\u7684\u7ebf\u7a0b\u3001io\u8d44\u6e90\uff0c\u6700\u7ec8\u7531\u4e8e\u8d44\u6e90\u7d2f\u79ef\u4f7f\u7cfb\u7edf\u51fa\u73b0\u74f6\u9888\uff0c\u9020\u6210\u66f4\u591a\u670d\u52a1\u4e0d\u53ef\u7528\uff0c\u4ea7\u751f\u96ea\u5d29\u6548\u5e94\u3002\u7194\u65ad\u673a\u5236\u5c31\u662f\u9488\u5bf9\u4e0a\u8ff0\u573a\u666f\u8bbe\u8ba1\u7684\uff0c\u5f53\u67d0\u4e2a\u76ee\u6807\u670d\u52a1\u54cd\u5e94\u7f13\u6162\u6216\u8005\u6709\u5927\u91cf\u8d85\u65f6\u60c5\u51b5\u53d1\u751f\u65f6\uff0c\u7194\u65ad\u8be5\u670d\u52a1\u7684\u8c03\u7528\uff0c\u5bf9\u4e8e\u540e\u7eed\u8c03\u7528\u8bf7\u6c42\uff0c\u4e0d\u518d\u7ee7\u7eed\u8c03\u7528\u76ee\u6807\u670d\u52a1\uff0c\u76f4\u63a5\u8fd4\u56de\uff0c\u5feb\u901f\u91ca\u653e\u8d44\u6e90\uff0c\u7b49\u5230\u8be5\u76ee\u6807\u670d\u52a1\u60c5\u51b5\u597d\u8f6c\u518d\u6062\u590d\u8c03\u7528\u3002 Isolation Isolation \u9694\u79bb \u670d\u52a1\u9694\u79bb\u662f\u4e00\u79cd\u5f02\u5e38\u68c0\u6d4b\u673a\u5236\uff0c\u5e38\u7528\u7684\u68c0\u6d4b\u65b9\u6cd5\u662f\u8bf7\u6c42\u8d85\u65f6\u3001\u6d41\u91cf\u8fc7\u5927\u7b49\u3002\u4e00\u822c\u7684\u8bbe\u7f6e\u53c2\u6570\u5305\u62ec\u8d85\u65f6\u65f6\u95f4\u3001\u6700\u5927\u5e76\u53d1\u8bf7\u6c42\u6570\u7b49\uff0c\u5f53\u8d85\u8fc7\u8d85\u65f6\u65f6\u95f4\u6216\u6700\u5927\u5e76\u53d1\u8bf7\u6c42\u6570\u65f6\uff0c\u8bb0\u5f55\u4e00\u6b21\u5f02\u5e38\uff0c\u5e76\u7528\u4e8e\u5728\u7194\u65ad\u673a\u5236\u4e2d\u8ba1\u7b97\u9519\u8bef\u7387\u548c\u9519\u8bef\u8bf7\u6c42\u6570\u3002 Service Mesh Service Mesh \u670d\u52a1\u7f51\u683c \u4e00\u79cd\u57fa\u7840\u8bbe\u65bd\u5c42\u670d\u52a1\u3002\u5728\u5fae\u670d\u52a1\u5316\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5f00\u53d1\u8005\u9700\u8981\u89e3\u51b3\u5e94\u7528\u8fd0\u884c\u5728\u5206\u5e03\u5f0f\u7f51\u7edc\u4e2d\u6240\u5f15\u5165\u7684\u95ee\u9898\uff0c\u4f8b\u5982\u5bb9\u9519\uff0c\u9650\u6d41\uff0c\u8d1f\u8f7d\u5747\u8861\uff0c\u6ce8\u518c\u53d1\u73b0\uff0c\u53ef\u76d1\u63a7\u7b49\uff0cService Mesh\u4f5c\u4e3aL4/L7\u534f\u8bae\u4ee3\u7406\uff0c\u4e3a\u5e94\u7528\u89e3\u51b3\u4e86\u5fae\u670d\u52a1\u5316\u540e\u5e26\u6765\u7684\u95ee\u9898\u3002 legacy legacy \u9057\u7559\u7cfb\u7edf \u9057\u7559\u7cfb\u7edf\u662f\u4e00\u4e2a\u8fd8\u5728\u8fd0\u884c\u548c\u4f7f\u7528\uff0c\u4f46\u5df2\u6b65\u5165\u8f6f\u4ef6\u751f\u547d\u5468\u671f\u8870\u8001\u671f\u7684\u8f6f\u4ef6\u7cfb\u7edf\u3002","title":"\u88681-1\u672f\u8bed\u8868"},{"location":"transports/highway-rpc/","text":"Highway \u6982\u5ff5\u9610\u8ff0 Highway\u662fServiceComb\u7684\u9ad8\u6027\u80fd\u79c1\u6709\u534f\u8bae\uff0c\u7528\u6237\u53ef\u6839\u636e\u5b9e\u9645\u9700\u6c42\u9009\u62e9\u4f7f\u7528\u3002 \u914d\u7f6e\u8bf4\u660e \u4f7f\u7528Highway\u7f51\u7edc\u901a\u9053\u9700\u8981\u5728maven pom\u6587\u4ef6\u4e2d\u6dfb\u52a0\u5982\u4e0b\u4f9d\u8d56\uff1a dependency groupId org.apache.servicecomb /groupId artifactId transport-highway /artifactId /dependency Highway\u901a\u9053\u5728microservice.yaml\u6587\u4ef6\u4e2d\u7684\u914d\u7f6e\u9879\u5982\u4e0b\u8868\u6240\u793a\uff1a \u88681-1Highway\u914d\u7f6e\u9879\u8bf4\u660e \u914d\u7f6e\u9879 \u9ed8\u8ba4\u503c \u542b\u4e49 servicecomb.highway.address \u670d\u52a1\u76d1\u542c\u5730\u5740\uff0c\u4e0d\u914d\u7f6e\u8868\u793a\u4e0d\u76d1\u542c servicecomb.highway.server.connection-limit Integer.MAX_VALUE \u5141\u8bb8\u5ba2\u6237\u7aef\u6700\u5927\u8fde\u63a5\u6570 servicecomb.highway.server.thread-count verticle-count highway server verticle\u5b9e\u4f8b\u6570(Deprecated) servicecomb.highway.server.verticle-count verticle-count highway server verticle\u5b9e\u4f8b\u6570 servicecomb.highway.client.thread-count verticle-count highway client verticle\u5b9e\u4f8b\u6570(Deprecated) servicecomb.highway.client.verticle-count verticle-count highway client verticle\u5b9e\u4f8b\u6570 \u793a\u4f8b\u4ee3\u7801 microservice.yaml\u6587\u4ef6\u4e2d\u7684\u914d\u7f6e\u793a\u4f8b\uff1a servicecomb: highway: address: 0.0.0.0:7070","title":"Highway"},{"location":"transports/highway-rpc/#highway","text":"","title":"Highway"},{"location":"transports/highway-rpc/#_1","text":"Highway\u662fServiceComb\u7684\u9ad8\u6027\u80fd\u79c1\u6709\u534f\u8bae\uff0c\u7528\u6237\u53ef\u6839\u636e\u5b9e\u9645\u9700\u6c42\u9009\u62e9\u4f7f\u7528\u3002","title":"\u6982\u5ff5\u9610\u8ff0"},{"location":"transports/highway-rpc/#_2","text":"\u4f7f\u7528Highway\u7f51\u7edc\u901a\u9053\u9700\u8981\u5728maven pom\u6587\u4ef6\u4e2d\u6dfb\u52a0\u5982\u4e0b\u4f9d\u8d56\uff1a dependency groupId org.apache.servicecomb /groupId artifactId transport-highway /artifactId /dependency Highway\u901a\u9053\u5728microservice.yaml\u6587\u4ef6\u4e2d\u7684\u914d\u7f6e\u9879\u5982\u4e0b\u8868\u6240\u793a\uff1a \u88681-1Highway\u914d\u7f6e\u9879\u8bf4\u660e \u914d\u7f6e\u9879 \u9ed8\u8ba4\u503c \u542b\u4e49 servicecomb.highway.address \u670d\u52a1\u76d1\u542c\u5730\u5740\uff0c\u4e0d\u914d\u7f6e\u8868\u793a\u4e0d\u76d1\u542c servicecomb.highway.server.connection-limit Integer.MAX_VALUE \u5141\u8bb8\u5ba2\u6237\u7aef\u6700\u5927\u8fde\u63a5\u6570 servicecomb.highway.server.thread-count verticle-count highway server verticle\u5b9e\u4f8b\u6570(Deprecated) servicecomb.highway.server.verticle-count verticle-count highway server verticle\u5b9e\u4f8b\u6570 servicecomb.highway.client.thread-count verticle-count highway client verticle\u5b9e\u4f8b\u6570(Deprecated) servicecomb.highway.client.verticle-count verticle-count highway client verticle\u5b9e\u4f8b\u6570","title":"\u914d\u7f6e\u8bf4\u660e"},{"location":"transports/highway-rpc/#_3","text":"microservice.yaml\u6587\u4ef6\u4e2d\u7684\u914d\u7f6e\u793a\u4f8b\uff1a servicecomb: highway: address: 0.0.0.0:7070","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"transports/http2/","text":"Http2 \u573a\u666f\u63cf\u8ff0 \u7528\u6237\u901a\u8fc7\u7b80\u5355\u7684\u914d\u7f6e\u5373\u53ef\u542f\u7528Http2\u8fdb\u884c\u901a\u4fe1\uff0c\u63d0\u9ad8\u6027\u80fd\u3002 \u5916\u90e8\u670d\u52a1\u901a\u4fe1\u914d\u7f6e \u4e0e\u5916\u90e8\u670d\u52a1\u901a\u4fe1\u76f8\u5173\u7684\u914d\u7f6e\u5199\u5728microservice.yaml\u6587\u4ef6\u4e2d\u3002 \u542f\u7528h2(Http2 + TLS)\u8fdb\u884c\u901a\u4fe1 \u670d\u52a1\u7aef\u5728\u914d\u7f6e\u670d\u52a1\u76d1\u542c\u5730\u5740\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728\u5730\u5740\u540e\u9762\u8ffd\u52a0 sslEnabled=true \u5f00\u542fTLS\u901a\u4fe1\uff0c\u5177\u4f53\u4ecb\u7ecd\u89c1 \u4f7f\u7528TLS\u901a\u4fe1 \u7ae0\u8282\u3002\u7136\u540e\u518d\u8ffd\u52a0 protocol=http2 \u542f\u7528h2\u901a\u4fe1\u3002\u793a\u4f8b\u5982\u4e0b\uff1a servicecomb: rest: address: 0.0.0.0:8080?sslEnabled=true protocol=http2 \u542f\u7528h2c(Http2 without TLS)\u8fdb\u884c\u901a\u4fe1 \u670d\u52a1\u7aef\u5728\u914d\u7f6e\u670d\u52a1\u76d1\u542c\u5730\u5740\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728\u5730\u5740\u540e\u9762\u8ffd\u52a0 protocol=http2 \u542f\u7528h2c\u901a\u4fe1\u3002\u793a\u4f8b\u5982\u4e0b\uff1a servicecomb: rest: address: 0.0.0.0:8080?protocol=http2 \u5ba2\u6237\u7aef\u4f1a\u901a\u8fc7\u4ece\u670d\u52a1\u4e2d\u5fc3\u8bfb\u53d6\u670d\u52a1\u7aef\u5730\u5740\u4e2d\u7684\u914d\u7f6e\u6765\u4f7f\u7528http2\u8fdb\u884c\u901a\u4fe1\u3002 http2 server \u7aef\u914d\u7f6e\u9879 \u914d\u7f6e\u9879 \u9ed8\u8ba4\u503c \u542b\u4e49 \u6ce8\u610f servicecomb.rest.server.http2.useAlpnEnabled true \u662f\u5426\u542f\u7528 ALPN servicecomb.rest.server.http2.concurrentStreams 100 \u4e00\u6761\u8fde\u63a5\u4e2d\uff0c\u540c\u65f6\u652f\u6301\u7684\u6700\u5927\u7684stream\u5e76\u53d1\u91cf \u4ee5server\u7aef\u7684concurrentStreams\u548cclient\u7aef\u7684multiplexingLimit\u8f83\u5c0f\u503c\u4e3a\u51c6 http2 client \u7aef\u914d\u7f6e\u9879 \u914d\u7f6e\u9879 \u9ed8\u8ba4\u503c \u542b\u4e49 \u6ce8\u610f servicecomb.rest.client.http2.useAlpnEnabled true \u662f\u5426\u542f\u7528 ALPN servicecomb.rest.client.http2.multiplexingLimit -1 \u4e00\u6761\u8fde\u63a5\u4e2d\uff0c\u540c\u65f6\u652f\u6301\u7684\u6700\u5927\u7684stream\u5e76\u53d1\u91cf\uff0c-1\u8868\u793a\u4e0d\u9650\u5236 \u4ee5server\u7aef\u7684concurrentStreams\u548cclient\u7aef\u7684multiplexingLimit\u8f83\u5c0f\u503c\u4e3a\u51c6 servicecomb.rest.client.http2.maxPoolSize 1 \u6bcf\u4e2a\u8fde\u63a5\u6c60\u4e2d\uff0c\u5bf9\u6bcf\u4e00\u4e2aIP\uff1aPort\u6700\u591a\u5efa\u7acb\u7684\u8fde\u63a5\u6570 servicecomb.rest.client.http2.idleTimeoutInSeconds 0 \u7a7a\u95f2\u8fde\u63a5\u7684\u8d85\u65f6\u65f6\u95f4\uff0c\u8d85\u65f6\u540e\u4f1a\u5173\u95ed\u8fde\u63a5","title":"HTTP2"},{"location":"transports/http2/#http2","text":"","title":"Http2"},{"location":"transports/http2/#_1","text":"\u7528\u6237\u901a\u8fc7\u7b80\u5355\u7684\u914d\u7f6e\u5373\u53ef\u542f\u7528Http2\u8fdb\u884c\u901a\u4fe1\uff0c\u63d0\u9ad8\u6027\u80fd\u3002","title":"\u573a\u666f\u63cf\u8ff0"},{"location":"transports/http2/#_2","text":"\u4e0e\u5916\u90e8\u670d\u52a1\u901a\u4fe1\u76f8\u5173\u7684\u914d\u7f6e\u5199\u5728microservice.yaml\u6587\u4ef6\u4e2d\u3002 \u542f\u7528h2(Http2 + TLS)\u8fdb\u884c\u901a\u4fe1 \u670d\u52a1\u7aef\u5728\u914d\u7f6e\u670d\u52a1\u76d1\u542c\u5730\u5740\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728\u5730\u5740\u540e\u9762\u8ffd\u52a0 sslEnabled=true \u5f00\u542fTLS\u901a\u4fe1\uff0c\u5177\u4f53\u4ecb\u7ecd\u89c1 \u4f7f\u7528TLS\u901a\u4fe1 \u7ae0\u8282\u3002\u7136\u540e\u518d\u8ffd\u52a0 protocol=http2 \u542f\u7528h2\u901a\u4fe1\u3002\u793a\u4f8b\u5982\u4e0b\uff1a servicecomb: rest: address: 0.0.0.0:8080?sslEnabled=true protocol=http2 \u542f\u7528h2c(Http2 without TLS)\u8fdb\u884c\u901a\u4fe1 \u670d\u52a1\u7aef\u5728\u914d\u7f6e\u670d\u52a1\u76d1\u542c\u5730\u5740\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728\u5730\u5740\u540e\u9762\u8ffd\u52a0 protocol=http2 \u542f\u7528h2c\u901a\u4fe1\u3002\u793a\u4f8b\u5982\u4e0b\uff1a servicecomb: rest: address: 0.0.0.0:8080?protocol=http2 \u5ba2\u6237\u7aef\u4f1a\u901a\u8fc7\u4ece\u670d\u52a1\u4e2d\u5fc3\u8bfb\u53d6\u670d\u52a1\u7aef\u5730\u5740\u4e2d\u7684\u914d\u7f6e\u6765\u4f7f\u7528http2\u8fdb\u884c\u901a\u4fe1\u3002","title":"\u5916\u90e8\u670d\u52a1\u901a\u4fe1\u914d\u7f6e"},{"location":"transports/http2/#http2-server","text":"\u914d\u7f6e\u9879 \u9ed8\u8ba4\u503c \u542b\u4e49 \u6ce8\u610f servicecomb.rest.server.http2.useAlpnEnabled true \u662f\u5426\u542f\u7528 ALPN servicecomb.rest.server.http2.concurrentStreams 100 \u4e00\u6761\u8fde\u63a5\u4e2d\uff0c\u540c\u65f6\u652f\u6301\u7684\u6700\u5927\u7684stream\u5e76\u53d1\u91cf \u4ee5server\u7aef\u7684concurrentStreams\u548cclient\u7aef\u7684multiplexingLimit\u8f83\u5c0f\u503c\u4e3a\u51c6","title":"http2 server \u7aef\u914d\u7f6e\u9879"},{"location":"transports/http2/#http2-client","text":"\u914d\u7f6e\u9879 \u9ed8\u8ba4\u503c \u542b\u4e49 \u6ce8\u610f servicecomb.rest.client.http2.useAlpnEnabled true \u662f\u5426\u542f\u7528 ALPN servicecomb.rest.client.http2.multiplexingLimit -1 \u4e00\u6761\u8fde\u63a5\u4e2d\uff0c\u540c\u65f6\u652f\u6301\u7684\u6700\u5927\u7684stream\u5e76\u53d1\u91cf\uff0c-1\u8868\u793a\u4e0d\u9650\u5236 \u4ee5server\u7aef\u7684concurrentStreams\u548cclient\u7aef\u7684multiplexingLimit\u8f83\u5c0f\u503c\u4e3a\u51c6 servicecomb.rest.client.http2.maxPoolSize 1 \u6bcf\u4e2a\u8fde\u63a5\u6c60\u4e2d\uff0c\u5bf9\u6bcf\u4e00\u4e2aIP\uff1aPort\u6700\u591a\u5efa\u7acb\u7684\u8fde\u63a5\u6570 servicecomb.rest.client.http2.idleTimeoutInSeconds 0 \u7a7a\u95f2\u8fde\u63a5\u7684\u8d85\u65f6\u65f6\u95f4\uff0c\u8d85\u65f6\u540e\u4f1a\u5173\u95ed\u8fde\u63a5","title":"http2 client \u7aef\u914d\u7f6e\u9879"},{"location":"transports/rest-over-servlet/","text":"REST over Servlet REST over Servlet\u5bf9\u5e94\u4f7f\u7528web\u5bb9\u5668\u90e8\u7f72\u8fd0\u884c\uff0c\u9700\u8981\u65b0\u5efa\u4e00\u4e2aservlet\u5de5\u7a0b\u5c06\u5fae\u670d\u52a1\u5305\u88c5\u8d77\u6765\uff0c\u6253\u6210war\u5305\uff0c\u52a0\u8f7d\u5230web\u5bb9\u5668\u4e2d\u542f\u52a8\u8fd0\u884c\u3002 \u5bf9\u5916\u53d1\u5e03\u7684Path \u5f53\u5fae\u670d\u52a1\u90e8\u7f72\u5230web\u5bb9\u5668\u4e2d\u65f6\uff0c\u76f8\u5bf9\u4e8e\u72ec\u7acb\u8fd0\u884c\uff0c\u4f1a\u6d89\u53ca\u5230web root\u4ee5\u53caservlet url pattern\u5bf9url\u7684\u6539\u53d8\u3002 \u5bf9\u4e8e\u4f20\u7edf\u5f00\u53d1\u6846\u67b6\u800c\u8a00\uff0c\u9700\u8981consumer\u611f\u77e5\u5bf9\u65b9\u7684\u5b8c\u6574url\uff1b\u6bd4\u5982web root\u4e3a/mywebapp\uff0curl pattern\u4e3a/rest\uff0c\u4e1a\u52a1\u7ea7path\u4e3a/application\uff0c\u5219consumer\u4ee3\u7801\u5fc5\u987b\u901a\u8fc7/mywebapp/rest/application\u6765\u8bbf\u95ee\u3002 \u8fd9\u5c06\u5bfc\u81f4\u4e00\u65e6\u90e8\u7f72\u65b9\u5f0f\u53d1\u751f\u53d8\u5316\uff0c\u6bd4\u5982\u4eceweb\u5bb9\u5668\u53d8\u6210standalone\u8fd0\u884c\uff0c\u5219consumer\u6216\u662fproducer\u5fc5\u987b\u4fee\u6539\u4ee3\u7801\u6765\u9002\u914d\u8fd9\u4e2a\u53d8\u5316\u3002 \u5efa\u8bae\u4f7f\u7528ServiceComb\u7684\u90e8\u7f72\u89e3\u8026\u7279\u6027\uff0c\u65e0\u8bba\u662fconsumer\uff0c\u8fd8\u662fproducer\uff0c\u5728\u4ee3\u7801\u4e2d\u90fd\u4e0d\u8981\u611f\u77e5web root\u4ee5\u53caurl pattern\uff0c\u8fd9\u6837ServiceComb\u5728\u8fd0\u884c\u65f6\uff0c\u4f1a\u81ea\u52a8\u9002\u914dproducer\u5b9e\u4f8b\u7684web root\u4ee5\u53caurl pattern\u3002 \u5bf9\u4e8e\u4e00\u4e9b\u9057\u7559\u7cfb\u7edf\u6539\u9020\uff0c\u7528\u6237\u671f\u671b\u7ee7\u7eed\u4f7f\u7528restTemplate.getForObject(\"cse://serviceName/mywebapp/rest/application\"...)\uff0c\u8fd9\u4e2a\u65f6\u5019\uff0c\u7528\u6237\u5fc5\u987b\u5c06\u63a5\u53e3\u5b9a\u4e49\u7684path\u5b9a\u4f4d\u4e3a: /mywebapp/rest/application\uff0c\u4f8b\u5982\uff1a @RestSchema(schemaId = test ) @RequestMapping(path = /mywebapp/rest/application ) \u5c3d\u7ba1\u5982\u6b64\uff0c\u4ecd\u7136\u63a8\u8350\u4f7f\u7528\u90e8\u7f72\u5f62\u6001\u65e0\u5173\u7684\u65b9\u5f0f\u6765\u7f16\u7801\uff0c\u53ef\u4ee5\u51cf\u5c11\u540e\u7eed\u7531\u4e8e\u90e8\u7f72\u5f62\u6001\u53d8\u5316\uff0c\u5e26\u6765\u7684\u4fee\u6539\u4ee3\u7801\u95ee\u9898\u3002 maven\u4f9d\u8d56 dependency groupId org.apache.servicecomb /groupId artifactId transport-rest-servlet /artifactId /dependency \u914d\u7f6e\u8bf4\u660e \u4e0eservlet\u673a\u5236\u914d\u5408\uff0c\u6d89\u53ca\u5230\u4ee5\u4e0b\u51e0\u4e2a\u6982\u5ff5\uff1a \u542f\u52a8spring context \u6ce8\u610f\u4ee5\u4e0b\u51e0\u79cd\u542f\u52a8\u65b9\u5f0f\uff0c\u662fN\u90091\u7684\u5173\u7cfb\uff0c\u4e0d\u8981\u540c\u65f6\u4f7f\u7528\u3002 \u4e0d\u4f7f\u7528springMVC\u7684UI\u6216RestController web-app xmlns=\"http://java.sun.com/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\" version=\"3.0\" context-param param-name contextConfigLocation /param-name param-value classpath*:META-INF/spring/*.bean.xml /param-value /context-param listener listener-class org.apache.servicecomb.transport.rest.servlet.RestServletContextListener /listener-class /listener /web-app \u5176\u4e2d classpath*:META-INF/spring/*.bean.xml \u53ef\u4ee5\u4e0d\u5728contextConfigLocation\u4e2d\u914d\u7f6e\uff0c\u56e0\u4e3aServiceComb\u673a\u5236\u4f1a\u786e\u4fdd\u52a0\u8f7d\u8def\u5f84\u4e2d\u5305\u542b\u5b83\u3002 \u8fd9\u91cc\u4ec5\u4ec5\u662f\u4e2a\u793a\u4f8b\uff0c\u8868\u793a\u5982\u679c\u4f7f\u7528\u8005\u9700\u8981\u5b9a\u5236contextConfigLocation\uff0c\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u65b9\u6cd5\u3002 \u4f7f\u7528springMVC\u7684UI\u6216RestController\uff0c\u4e14\u5b58\u5728org.apache.servicecomb.transport.rest.servlet.CseDispatcherServlet web-app xmlns=\"http://java.sun.com/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\" version=\"3.0\" servlet servlet-name SpringMVCServlet /servlet-name servlet-class org.apache.servicecomb.transport.rest.servlet.CseDispatcherServlet /servlet-class load-on-startup 1 /load-on-startup /servlet servlet-mapping servlet-name SpringMVCServlet /servlet-name url-pattern yourUrlPattern /url-pattern /servlet-mapping /web-app \u6ce8\u610f\uff1a \u8be5servlet\u4e0d\u662fServiceComb\u7684\u5904\u7406\u5165\u53e3\uff0c\u4ec5\u4ec5\u662fUI\u6216RestController\u7684\u5904\u7406\u5165\u53e3 \u4f7f\u7528springMVC\u7684UI\u6216RestController\uff0c\u4e14\u4e0d\u5b58\u5728org.apache.servicecomb.transport.rest.servlet.CseDispatcherServlet \u9700\u8981\u7ee7\u627fspringMVC\u7684DispatcherServlet\uff0c\u518d\u6309CseDispatcherServlet\u7684\u65b9\u5f0f\uff0c\u914d\u7f6e\u81ea\u5df1\u7684\u5b9e\u73b0\u7c7b @Override protected WebApplicationContext createWebApplicationContext(ApplicationContext parent){ setContextClass(CseXmlWebApplicationContext.class); return super.createWebApplicationContext(parent); } ServiceComb servlet url pattern\u6839\u636e\u4e1a\u52a1\u81ea\u8eab\u89c4\u5212\u8bbe\u7f6e\u5373\u53ef\uff0c\u4e0b\u9762\u7684 /rest/* \u4ec5\u4ec5\u662f\u793a\u4f8b\uff0c\u4e0d\u662f\u56fa\u5b9a\u503c\u3002 url pattern\u5fc5\u987b\u4ee5 /* \u7ed3\u5c3e \u4ee5\u4e0b\u4e24\u79cd\u58f0\u660e\u65b9\u5f0f\u4e5f\u662f\u591a\u9009\u4e00\u7684\u5173\u7cfb\uff0c\u4e0d\u8981\u540c\u65f6\u4f7f\u7528 \u6807\u51c6\u58f0\u660e web-app xmlns=\"http://java.sun.com/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\" version=\"3.0\" servlet servlet-name RestServlet /servlet-name servlet-class org.apache.servicecomb.transport.rest.servlet.RestServlet /servlet-class load-on-startup 1 /load-on-startup async-supported true /async-supported /servlet servlet-mapping servlet-name RestServlet /servlet-name url-pattern /rest/* /url-pattern /servlet-mapping /web-app \u5feb\u6377\u58f0\u660e \u5728microservice.yaml\u6587\u4ef6\u4e2d\u6307\u5b9aurlPattern\uff0cServiceComb\u542f\u52a8\u65f6\u4f1a\u81ea\u52a8\u521b\u5efaRestServlet\uff0c\u5e76\u8bbe\u7f6e\u76f8\u5e94\u7684urlPattern\uff1a servicecomb.rest.servlet.urlPattern: /rest/* \u5178\u578b\u573a\u666f\u914d\u7f6e\u793a\u4f8b \u7eafServiceComb\uff0c\u6807\u51c6\u58f0\u660e web.xml web-app xmlns=\"http://java.sun.com/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\" version=\"3.0\" listener listener-class org.apache.servicecomb.transport.rest.servlet.RestServletContextListener /listener-class /listener servlet servlet-name RestServlet /servlet-name servlet-class org.apache.servicecomb.transport.rest.servlet.RestServlet /servlet-class load-on-startup 1 /load-on-startup async-supported true /async-supported /servlet servlet-mapping servlet-name RestServlet /servlet-name url-pattern /rest/* /url-pattern /servlet-mapping /web-app \u7eafServiceComb\uff0c\u5feb\u6377\u58f0\u660e web.xml web-app xmlns=\"http://java.sun.com/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\" version=\"3.0\" listener listener-class org.apache.servicecomb.transport.rest.servlet.RestServletContextListener /listener-class /listener /web-app microservice.yaml\uff1a servicecomb.rest.servlet.urlPattern: /rest/* springMVC UI\u6216RestController\u63a5\u5165\u8bf7\u6c42\uff0c\u901a\u8fc7ServiceComb\u4f5c\u4e3aconsumer\u53d1\u9001\u5230\u5185\u90e8\u5fae\u670d\u52a1 web.xml\uff1a web-app xmlns=\"http://java.sun.com/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\" version=\"3.0\" servlet servlet-name SpringMVCServlet /servlet-name servlet-class org.apache.servicecomb.transport.rest.servlet.CseDispatcherServlet /servlet-class load-on-startup 1 /load-on-startup /servlet servlet-mapping servlet-name SpringMVCServlet /servlet-name url-pattern yourUrlPattern /url-pattern /servlet-mapping /web-app microservice.yaml\uff1a\u4e0d\u914d\u7f6eservicecomb.rest.address\u4ee5\u53caservicecomb.rest.servlet.urlPattern springMVC UI\u6216RestController\u63a5\u5165\u4e00\u4e9b\u8bf7\u6c42\uff0c\u540c\u65f6\u901a\u8fc7ServiceComb\u63a5\u5165\u53e6\u4e00\u4e9b\u8bf7\u6c42 web.xml\uff1a web-app xmlns=\"http://java.sun.com/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\" version=\"3.0\" servlet servlet-name SpringMVCServlet /servlet-name servlet-class org.apache.servicecomb.transport.rest.servlet.CseDispatcherServlet /servlet-class load-on-startup 1 /load-on-startup /servlet servlet-mapping servlet-name SpringMVCServlet /servlet-name url-pattern yourUrlPattern /url-pattern /servlet-mapping /web-app microservice.yaml\uff1a servicecomb: rest: servlet: urlPattern: /rest/* address: 0.0.0.0:8080 \u4f7f\u7528servlet filter\u6ce8\u610f\u4e8b\u9879 RestServlet\u5de5\u4f5c\u4e8e\u5f02\u6b65\u6a21\u5f0f\uff0c\u6839\u636eservlet 3.0\u7684\u6807\u51c6\uff0c\u6574\u6761\u5de5\u4f5c\u94fe\u90fd\u5fc5\u987b\u662f\u5f02\u6b65\u6a21\u5f0f\uff0c\u6240\u4ee5\uff0c\u5982\u679c\u4e1a\u52a1\u5728\u8fd9\u4e2a\u6d41\u7a0b\u4e0a\u589e\u52a0\u4e86servlet filter\uff0c\u4e5f\u5fc5\u987b\u5c06\u5b83\u914d\u7f6e\u4e3a\u5f02\u6b65\uff1a filter ...... async-supported true /async-supported /filter \u914d\u7f6e\u9879 REST over Servlet\u5728microservice.yaml\u6587\u4ef6\u4e2d\u7684\u914d\u7f6e\u9879\u89c1\u88683-9\u3002 \u88681-1 REST over Servlet\u914d\u7f6e\u9879\u8bf4\u660e \u914d\u7f6e\u9879 \u9ed8\u8ba4\u503c \u662f\u5426\u5fc5\u9009 \u542b\u4e49 servicecomb.rest.address 0.0.0.0:8080 \u5426 \u670d\u52a1\u76d1\u542c\u5730\u5740 \u5fc5\u987b\u914d\u7f6e\u4e3a\u4e0eweb\u5bb9\u5668\u76d1\u542c\u5730\u5740\u76f8\u540c\u7684\u5730\u5740 servicecomb.rest.server.timeout -1 \u5426 \u5f02\u6b65servlet\u8d85\u65f6\u65f6\u95f4, \u5355\u4f4d\u4e3a\u6beb\u79d2 \u5efa\u8bae\u4fdd\u6301\u9ed8\u8ba4\u503c servicecomb.rest.server.requestWaitInPoolTimeout 30000 \u5426 \u5728\u540c\u6b65\u7ebf\u7a0b\u4e2d\u6392\u961f\u7b49\u5f85\u6267\u884c\u7684\u8d85\u65f6\u65f6\u95f4\uff0c\u5355\u4f4d\u4e3a\u6beb\u79d2 servicecomb.rest.servlet.urlPattern \u65e0 \u5426 \u7528\u4e8e\u7b80\u5316servlet+servlet mapping\u914d\u7f6e \u53ea\u6709\u5728web.xml\u4e2d\u672a\u914d\u7f6eservlet+servlet mapping\u65f6\uff0c\u624d\u4f7f\u7528\u6b64\u914d\u7f6e\u9879\uff0c\u914d\u7f6e\u683c\u5f0f\u4e3a\uff1a/* \u6216 /path/*\uff0c\u5176\u4e2dpath\u53ef\u4ee5\u662f\u591a\u6b21\u76ee\u5f55","title":"REST over Servlet"},{"location":"transports/rest-over-servlet/#rest-over-servlet","text":"REST over Servlet\u5bf9\u5e94\u4f7f\u7528web\u5bb9\u5668\u90e8\u7f72\u8fd0\u884c\uff0c\u9700\u8981\u65b0\u5efa\u4e00\u4e2aservlet\u5de5\u7a0b\u5c06\u5fae\u670d\u52a1\u5305\u88c5\u8d77\u6765\uff0c\u6253\u6210war\u5305\uff0c\u52a0\u8f7d\u5230web\u5bb9\u5668\u4e2d\u542f\u52a8\u8fd0\u884c\u3002","title":"REST over Servlet"},{"location":"transports/rest-over-servlet/#path","text":"\u5f53\u5fae\u670d\u52a1\u90e8\u7f72\u5230web\u5bb9\u5668\u4e2d\u65f6\uff0c\u76f8\u5bf9\u4e8e\u72ec\u7acb\u8fd0\u884c\uff0c\u4f1a\u6d89\u53ca\u5230web root\u4ee5\u53caservlet url pattern\u5bf9url\u7684\u6539\u53d8\u3002 \u5bf9\u4e8e\u4f20\u7edf\u5f00\u53d1\u6846\u67b6\u800c\u8a00\uff0c\u9700\u8981consumer\u611f\u77e5\u5bf9\u65b9\u7684\u5b8c\u6574url\uff1b\u6bd4\u5982web root\u4e3a/mywebapp\uff0curl pattern\u4e3a/rest\uff0c\u4e1a\u52a1\u7ea7path\u4e3a/application\uff0c\u5219consumer\u4ee3\u7801\u5fc5\u987b\u901a\u8fc7/mywebapp/rest/application\u6765\u8bbf\u95ee\u3002 \u8fd9\u5c06\u5bfc\u81f4\u4e00\u65e6\u90e8\u7f72\u65b9\u5f0f\u53d1\u751f\u53d8\u5316\uff0c\u6bd4\u5982\u4eceweb\u5bb9\u5668\u53d8\u6210standalone\u8fd0\u884c\uff0c\u5219consumer\u6216\u662fproducer\u5fc5\u987b\u4fee\u6539\u4ee3\u7801\u6765\u9002\u914d\u8fd9\u4e2a\u53d8\u5316\u3002 \u5efa\u8bae\u4f7f\u7528ServiceComb\u7684\u90e8\u7f72\u89e3\u8026\u7279\u6027\uff0c\u65e0\u8bba\u662fconsumer\uff0c\u8fd8\u662fproducer\uff0c\u5728\u4ee3\u7801\u4e2d\u90fd\u4e0d\u8981\u611f\u77e5web root\u4ee5\u53caurl pattern\uff0c\u8fd9\u6837ServiceComb\u5728\u8fd0\u884c\u65f6\uff0c\u4f1a\u81ea\u52a8\u9002\u914dproducer\u5b9e\u4f8b\u7684web root\u4ee5\u53caurl pattern\u3002 \u5bf9\u4e8e\u4e00\u4e9b\u9057\u7559\u7cfb\u7edf\u6539\u9020\uff0c\u7528\u6237\u671f\u671b\u7ee7\u7eed\u4f7f\u7528restTemplate.getForObject(\"cse://serviceName/mywebapp/rest/application\"...)\uff0c\u8fd9\u4e2a\u65f6\u5019\uff0c\u7528\u6237\u5fc5\u987b\u5c06\u63a5\u53e3\u5b9a\u4e49\u7684path\u5b9a\u4f4d\u4e3a: /mywebapp/rest/application\uff0c\u4f8b\u5982\uff1a @RestSchema(schemaId = test ) @RequestMapping(path = /mywebapp/rest/application ) \u5c3d\u7ba1\u5982\u6b64\uff0c\u4ecd\u7136\u63a8\u8350\u4f7f\u7528\u90e8\u7f72\u5f62\u6001\u65e0\u5173\u7684\u65b9\u5f0f\u6765\u7f16\u7801\uff0c\u53ef\u4ee5\u51cf\u5c11\u540e\u7eed\u7531\u4e8e\u90e8\u7f72\u5f62\u6001\u53d8\u5316\uff0c\u5e26\u6765\u7684\u4fee\u6539\u4ee3\u7801\u95ee\u9898\u3002","title":"\u5bf9\u5916\u53d1\u5e03\u7684Path"},{"location":"transports/rest-over-servlet/#maven","text":"dependency groupId org.apache.servicecomb /groupId artifactId transport-rest-servlet /artifactId /dependency","title":"maven\u4f9d\u8d56"},{"location":"transports/rest-over-servlet/#_1","text":"\u4e0eservlet\u673a\u5236\u914d\u5408\uff0c\u6d89\u53ca\u5230\u4ee5\u4e0b\u51e0\u4e2a\u6982\u5ff5\uff1a \u542f\u52a8spring context \u6ce8\u610f\u4ee5\u4e0b\u51e0\u79cd\u542f\u52a8\u65b9\u5f0f\uff0c\u662fN\u90091\u7684\u5173\u7cfb\uff0c\u4e0d\u8981\u540c\u65f6\u4f7f\u7528\u3002 \u4e0d\u4f7f\u7528springMVC\u7684UI\u6216RestController web-app xmlns=\"http://java.sun.com/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\" version=\"3.0\" context-param param-name contextConfigLocation /param-name param-value classpath*:META-INF/spring/*.bean.xml /param-value /context-param listener listener-class org.apache.servicecomb.transport.rest.servlet.RestServletContextListener /listener-class /listener /web-app \u5176\u4e2d classpath*:META-INF/spring/*.bean.xml \u53ef\u4ee5\u4e0d\u5728contextConfigLocation\u4e2d\u914d\u7f6e\uff0c\u56e0\u4e3aServiceComb\u673a\u5236\u4f1a\u786e\u4fdd\u52a0\u8f7d\u8def\u5f84\u4e2d\u5305\u542b\u5b83\u3002 \u8fd9\u91cc\u4ec5\u4ec5\u662f\u4e2a\u793a\u4f8b\uff0c\u8868\u793a\u5982\u679c\u4f7f\u7528\u8005\u9700\u8981\u5b9a\u5236contextConfigLocation\uff0c\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u65b9\u6cd5\u3002 \u4f7f\u7528springMVC\u7684UI\u6216RestController\uff0c\u4e14\u5b58\u5728org.apache.servicecomb.transport.rest.servlet.CseDispatcherServlet web-app xmlns=\"http://java.sun.com/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\" version=\"3.0\" servlet servlet-name SpringMVCServlet /servlet-name servlet-class org.apache.servicecomb.transport.rest.servlet.CseDispatcherServlet /servlet-class load-on-startup 1 /load-on-startup /servlet servlet-mapping servlet-name SpringMVCServlet /servlet-name url-pattern yourUrlPattern /url-pattern /servlet-mapping /web-app \u6ce8\u610f\uff1a \u8be5servlet\u4e0d\u662fServiceComb\u7684\u5904\u7406\u5165\u53e3\uff0c\u4ec5\u4ec5\u662fUI\u6216RestController\u7684\u5904\u7406\u5165\u53e3 \u4f7f\u7528springMVC\u7684UI\u6216RestController\uff0c\u4e14\u4e0d\u5b58\u5728org.apache.servicecomb.transport.rest.servlet.CseDispatcherServlet \u9700\u8981\u7ee7\u627fspringMVC\u7684DispatcherServlet\uff0c\u518d\u6309CseDispatcherServlet\u7684\u65b9\u5f0f\uff0c\u914d\u7f6e\u81ea\u5df1\u7684\u5b9e\u73b0\u7c7b @Override protected WebApplicationContext createWebApplicationContext(ApplicationContext parent){ setContextClass(CseXmlWebApplicationContext.class); return super.createWebApplicationContext(parent); } ServiceComb servlet url pattern\u6839\u636e\u4e1a\u52a1\u81ea\u8eab\u89c4\u5212\u8bbe\u7f6e\u5373\u53ef\uff0c\u4e0b\u9762\u7684 /rest/* \u4ec5\u4ec5\u662f\u793a\u4f8b\uff0c\u4e0d\u662f\u56fa\u5b9a\u503c\u3002 url pattern\u5fc5\u987b\u4ee5 /* \u7ed3\u5c3e \u4ee5\u4e0b\u4e24\u79cd\u58f0\u660e\u65b9\u5f0f\u4e5f\u662f\u591a\u9009\u4e00\u7684\u5173\u7cfb\uff0c\u4e0d\u8981\u540c\u65f6\u4f7f\u7528 \u6807\u51c6\u58f0\u660e web-app xmlns=\"http://java.sun.com/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\" version=\"3.0\" servlet servlet-name RestServlet /servlet-name servlet-class org.apache.servicecomb.transport.rest.servlet.RestServlet /servlet-class load-on-startup 1 /load-on-startup async-supported true /async-supported /servlet servlet-mapping servlet-name RestServlet /servlet-name url-pattern /rest/* /url-pattern /servlet-mapping /web-app \u5feb\u6377\u58f0\u660e \u5728microservice.yaml\u6587\u4ef6\u4e2d\u6307\u5b9aurlPattern\uff0cServiceComb\u542f\u52a8\u65f6\u4f1a\u81ea\u52a8\u521b\u5efaRestServlet\uff0c\u5e76\u8bbe\u7f6e\u76f8\u5e94\u7684urlPattern\uff1a servicecomb.rest.servlet.urlPattern: /rest/*","title":"\u914d\u7f6e\u8bf4\u660e"},{"location":"transports/rest-over-servlet/#_2","text":"\u7eafServiceComb\uff0c\u6807\u51c6\u58f0\u660e web.xml web-app xmlns=\"http://java.sun.com/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\" version=\"3.0\" listener listener-class org.apache.servicecomb.transport.rest.servlet.RestServletContextListener /listener-class /listener servlet servlet-name RestServlet /servlet-name servlet-class org.apache.servicecomb.transport.rest.servlet.RestServlet /servlet-class load-on-startup 1 /load-on-startup async-supported true /async-supported /servlet servlet-mapping servlet-name RestServlet /servlet-name url-pattern /rest/* /url-pattern /servlet-mapping /web-app \u7eafServiceComb\uff0c\u5feb\u6377\u58f0\u660e web.xml web-app xmlns=\"http://java.sun.com/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\" version=\"3.0\" listener listener-class org.apache.servicecomb.transport.rest.servlet.RestServletContextListener /listener-class /listener /web-app microservice.yaml\uff1a servicecomb.rest.servlet.urlPattern: /rest/* springMVC UI\u6216RestController\u63a5\u5165\u8bf7\u6c42\uff0c\u901a\u8fc7ServiceComb\u4f5c\u4e3aconsumer\u53d1\u9001\u5230\u5185\u90e8\u5fae\u670d\u52a1 web.xml\uff1a web-app xmlns=\"http://java.sun.com/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\" version=\"3.0\" servlet servlet-name SpringMVCServlet /servlet-name servlet-class org.apache.servicecomb.transport.rest.servlet.CseDispatcherServlet /servlet-class load-on-startup 1 /load-on-startup /servlet servlet-mapping servlet-name SpringMVCServlet /servlet-name url-pattern yourUrlPattern /url-pattern /servlet-mapping /web-app microservice.yaml\uff1a\u4e0d\u914d\u7f6eservicecomb.rest.address\u4ee5\u53caservicecomb.rest.servlet.urlPattern springMVC UI\u6216RestController\u63a5\u5165\u4e00\u4e9b\u8bf7\u6c42\uff0c\u540c\u65f6\u901a\u8fc7ServiceComb\u63a5\u5165\u53e6\u4e00\u4e9b\u8bf7\u6c42 web.xml\uff1a web-app xmlns=\"http://java.sun.com/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\" version=\"3.0\" servlet servlet-name SpringMVCServlet /servlet-name servlet-class org.apache.servicecomb.transport.rest.servlet.CseDispatcherServlet /servlet-class load-on-startup 1 /load-on-startup /servlet servlet-mapping servlet-name SpringMVCServlet /servlet-name url-pattern yourUrlPattern /url-pattern /servlet-mapping /web-app microservice.yaml\uff1a servicecomb: rest: servlet: urlPattern: /rest/* address: 0.0.0.0:8080","title":"\u5178\u578b\u573a\u666f\u914d\u7f6e\u793a\u4f8b"},{"location":"transports/rest-over-servlet/#servlet-filter","text":"RestServlet\u5de5\u4f5c\u4e8e\u5f02\u6b65\u6a21\u5f0f\uff0c\u6839\u636eservlet 3.0\u7684\u6807\u51c6\uff0c\u6574\u6761\u5de5\u4f5c\u94fe\u90fd\u5fc5\u987b\u662f\u5f02\u6b65\u6a21\u5f0f\uff0c\u6240\u4ee5\uff0c\u5982\u679c\u4e1a\u52a1\u5728\u8fd9\u4e2a\u6d41\u7a0b\u4e0a\u589e\u52a0\u4e86servlet filter\uff0c\u4e5f\u5fc5\u987b\u5c06\u5b83\u914d\u7f6e\u4e3a\u5f02\u6b65\uff1a filter ...... async-supported true /async-supported /filter","title":"\u4f7f\u7528servlet filter\u6ce8\u610f\u4e8b\u9879"},{"location":"transports/rest-over-servlet/#_3","text":"REST over Servlet\u5728microservice.yaml\u6587\u4ef6\u4e2d\u7684\u914d\u7f6e\u9879\u89c1\u88683-9\u3002 \u88681-1 REST over Servlet\u914d\u7f6e\u9879\u8bf4\u660e \u914d\u7f6e\u9879 \u9ed8\u8ba4\u503c \u662f\u5426\u5fc5\u9009 \u542b\u4e49 servicecomb.rest.address 0.0.0.0:8080 \u5426 \u670d\u52a1\u76d1\u542c\u5730\u5740 \u5fc5\u987b\u914d\u7f6e\u4e3a\u4e0eweb\u5bb9\u5668\u76d1\u542c\u5730\u5740\u76f8\u540c\u7684\u5730\u5740 servicecomb.rest.server.timeout -1 \u5426 \u5f02\u6b65servlet\u8d85\u65f6\u65f6\u95f4, \u5355\u4f4d\u4e3a\u6beb\u79d2 \u5efa\u8bae\u4fdd\u6301\u9ed8\u8ba4\u503c servicecomb.rest.server.requestWaitInPoolTimeout 30000 \u5426 \u5728\u540c\u6b65\u7ebf\u7a0b\u4e2d\u6392\u961f\u7b49\u5f85\u6267\u884c\u7684\u8d85\u65f6\u65f6\u95f4\uff0c\u5355\u4f4d\u4e3a\u6beb\u79d2 servicecomb.rest.servlet.urlPattern \u65e0 \u5426 \u7528\u4e8e\u7b80\u5316servlet+servlet mapping\u914d\u7f6e \u53ea\u6709\u5728web.xml\u4e2d\u672a\u914d\u7f6eservlet+servlet mapping\u65f6\uff0c\u624d\u4f7f\u7528\u6b64\u914d\u7f6e\u9879\uff0c\u914d\u7f6e\u683c\u5f0f\u4e3a\uff1a/* \u6216 /path/*\uff0c\u5176\u4e2dpath\u53ef\u4ee5\u662f\u591a\u6b21\u76ee\u5f55","title":"\u914d\u7f6e\u9879"},{"location":"transports/rest-over-vertx/","text":"REST over Vertx \u914d\u7f6e\u8bf4\u660e REST over Vertx\u901a\u4fe1\u901a\u9053\u5bf9\u5e94\u4f7f\u7528standalone\u90e8\u7f72\u8fd0\u884c\u6a21\u5f0f\uff0c\u53ef\u76f4\u63a5\u901a\u8fc7main\u51fd\u6570\u62c9\u8d77\u3002main\u51fd\u6570\u4e2d\u9700\u8981\u521d\u59cb\u5316\u65e5\u5fd7\u548c\u52a0\u8f7d\u670d\u52a1\u914d\u7f6e\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a public class MainServer { public static void main(String[] args) throws Exception { Log4jUtils.init();//\u65e5\u5fd7\u521d\u59cb\u5316 BeanUtils.init(); // Spring bean\u521d\u59cb\u5316 } } \u4f7f\u7528REST over Vertx\u7f51\u7edc\u901a\u9053\u9700\u8981\u5728maven pom\u6587\u4ef6\u4e2d\u6dfb\u52a0\u5982\u4e0b\u4f9d\u8d56\uff1a dependency groupId org.apache.servicecomb /groupId artifactId transport-rest-vertx /artifactId /dependency REST over Vertx\u901a\u9053\u5728microservice.yaml\u6587\u4ef6\u4e2d\u6709\u4ee5\u4e0b\u914d\u7f6e\u9879\uff1a \u88681-1 REST over Vertx\u914d\u7f6e\u9879\u8bf4\u660e \u914d\u7f6e\u9879 \u9ed8\u8ba4\u503c \u542b\u4e49 servicecomb.rest.address \u670d\u52a1\u76d1\u542c\u5730\u5740\uff0c\u4e0d\u914d\u7f6e\u8868\u793a\u4e0d\u76d1\u542c servicecomb.rest.server.thread-count verticle-count rest server verticle\u5b9e\u4f8b\u6570\uff08Deprecated\uff09 servicecomb.rest.server.verticle-count verticle-count rest server verticle\u5b9e\u4f8b\u6570 servicecomb.rest.server.connection-limit Integer.MAX_VALUE \u5141\u8bb8\u5ba2\u6237\u7aef\u6700\u5927\u8fde\u63a5\u6570 servicecomb.rest.server.connection.idleTimeoutInSeconds 60 \u670d\u52a1\u7aef\u8fde\u63a5\u95f2\u7f6e\u8d85\u65f6\u65f6\u95f4\uff0c\u8d85\u65f6\u8fde\u63a5\u4f1a\u88ab\u91ca\u653e servicecomb.rest.server.compression false \u670d\u52a1\u7aef\u662f\u5426\u652f\u6301\u542f\u7528\u538b\u7f29 servicecomb.rest.server.maxInitialLineLength 4096 \u670d\u52a1\u7aef\u63a5\u6536\u8bf7\u6c42\u7684\u6700\u5927 initial line \u957f\u5ea6\uff0c\u5355\u4f4d\u5b57\u8282 servicecomb.rest.server.maxHeaderSize 32768 \u670d\u52a1\u7aef\u63a5\u6536\u8bf7\u6c42\u7684\u6700\u5927header\u957f\u5ea6\uff0c\u5355\u4f4d\u5b57\u8282 servicecomb.rest.client.thread-count verticle-count rest client verticle\u5b9e\u4f8b\u6570\uff08Deprecated\uff09 servicecomb.rest.client.verticle-count verticle-count rest client verticle\u5b9e\u4f8b\u6570 servicecomb.rest.client.connection.maxPoolSize 5 \u5bf9\u4e00\u4e2aIP:port\u7ec4\u5408\uff0c\u5728\u6bcf\u4e2a\u8fde\u63a5\u6c60\u4e2d\u7684\u6700\u5927\u8fde\u63a5\u6570 servicecomb.rest.client.connection.idleTimeoutInSeconds 30 \u8fde\u63a5\u95f2\u7f6e\u65f6\u95f4\uff0c\u8d85\u65f6\u8fde\u63a5\u4f1a\u88ab\u91ca\u653e servicecomb.rest.client.connection.keepAlive true \u662f\u5426\u4f7f\u7528\u957f\u8fde\u63a5 servicecomb.rest.client.connection.compression false \u5ba2\u6237\u7aef\u662f\u5426\u652f\u6301\u542f\u7528\u538b\u7f29 servicecomb.rest.client.maxHeaderSize 8192 \u5ba2\u6237\u7aef\u63a5\u6536\u54cd\u5e94\u7684\u6700\u5927header\u957f\u5ea6\uff0c\u5355\u4f4d\u5b57\u8282 \u8865\u5145\u8bf4\u660e \u6781\u9650\u8fde\u63a5\u6570\u8ba1\u7b97 \u5047\u8bbe: * servicecomb.rest.client.verticle-count\u914d\u7f6e\u4e3a8 * servicecomb.rest.client.connection.maxPoolSize\u914d\u7f6e\u4e3a5 * \u5fae\u670d\u52a1A\u670910\u4e2a\u5b9e\u4f8b \u7ad9\u5728client\u7684\u89d2\u5ea6\uff0c\u5728\u6781\u9650\u60c5\u51b5\u4e0b\uff1a * \u4e00\u4e2aclient\u8c03\u7528\u5fae\u670d\u52a1A\uff0c\u6700\u591a\u4f1a\u5efa\u7acb400\u6761\u8fde\u63a5\u3002\uff08 8 * 5 * 10 = 400 \uff09 * \u5047\u8bbe\u8be5client\u8fd8\u9700\u8981\u8c03\u7528\u5fae\u670d\u52a1B\uff0c\u5fae\u670d\u52a1B\uff0c\u4e5f\u670910\u4e2a\u5b9e\u4f8b\uff0c\u5219\u6700\u591a\u518d\u5efa\u7acb400\u6761\u8fde\u63a5\uff0c\u5171800\u6761\u8fde\u63a5 \u7ad9\u5728server\u7684\u89d2\u5ea6\uff0c\u5728\u6781\u9650\u60c5\u51b5\u4e0b\uff1a * \u4e00\u4e2aclient\u6700\u591a\u5411\u4e00\u4e2aserver\u5efa\u7acb40\u6761\u8fde\u63a5\u3002( 8 * 5 = 40 ) * n \u4e2aclient\u6700\u591a\u4f1a\u5411\u4e00\u4e2aserver\u5efa\u7acb 40 * n \u6761\u8fde\u63a5 \u4e3a\u4e86\u63d0\u9ad8\u6027\u80fd\uff0c\u9700\u8981\u5c3d\u91cf\u4f7f\u7528\u66f4\u5927\u7684\u8fde\u63a5\u6c60\uff0c\u4f46\u662f\u66f4\u5927\u7684\u8fde\u63a5\u6c60\u53c8\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8fde\u63a5\u6570\u66b4\u6da8\uff0c\u5f53\u5fae\u670d\u52a1\u5b9e\u4f8b\u89c4\u6a21\u8fbe\u5230\u767e\u7ea7\u522b\u65f6\uff0c\u6709\u7684\u8fdb\u7a0b\u53ef\u80fd\u9700\u8981\u7ba1\u7406\u51e0\u4e07\u6761\u8fde\u63a5\uff0c\u4e1a\u52a1\u9700\u8981\u6839\u636e\u5b9e\u9645\u4e1a\u52a1\u89c4\u6a21\u8fdb\u884c\u5408\u7406\u7684\u89c4\u5212\u3002 http1.1\u7684\u89c4\u5212\u76f8\u5bf9\u590d\u6742\uff0c\u5e76\u4e14\u6709\u7684\u573a\u666f\u51e0\u4e4e\u65e0\u89e3\uff0c\u5efa\u8bae\u5207\u6362\u4e3a http2 \u3002 \u793a\u4f8b\u4ee3\u7801 microservice.yaml\u6587\u4ef6\u4e2d\u7684\u914d\u7f6e\u793a\u4f8b\uff1a servicecomb: rest: address: 0.0.0.0:8080 server: verticle-count: 8 references: hello: transport: rest version-rule: 0.0.1","title":"REST over Vertx"},{"location":"transports/rest-over-vertx/#rest-over-vertx","text":"","title":"REST over Vertx"},{"location":"transports/rest-over-vertx/#_1","text":"REST over Vertx\u901a\u4fe1\u901a\u9053\u5bf9\u5e94\u4f7f\u7528standalone\u90e8\u7f72\u8fd0\u884c\u6a21\u5f0f\uff0c\u53ef\u76f4\u63a5\u901a\u8fc7main\u51fd\u6570\u62c9\u8d77\u3002main\u51fd\u6570\u4e2d\u9700\u8981\u521d\u59cb\u5316\u65e5\u5fd7\u548c\u52a0\u8f7d\u670d\u52a1\u914d\u7f6e\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a public class MainServer { public static void main(String[] args) throws Exception { Log4jUtils.init();//\u65e5\u5fd7\u521d\u59cb\u5316 BeanUtils.init(); // Spring bean\u521d\u59cb\u5316 } } \u4f7f\u7528REST over Vertx\u7f51\u7edc\u901a\u9053\u9700\u8981\u5728maven pom\u6587\u4ef6\u4e2d\u6dfb\u52a0\u5982\u4e0b\u4f9d\u8d56\uff1a dependency groupId org.apache.servicecomb /groupId artifactId transport-rest-vertx /artifactId /dependency REST over Vertx\u901a\u9053\u5728microservice.yaml\u6587\u4ef6\u4e2d\u6709\u4ee5\u4e0b\u914d\u7f6e\u9879\uff1a \u88681-1 REST over Vertx\u914d\u7f6e\u9879\u8bf4\u660e \u914d\u7f6e\u9879 \u9ed8\u8ba4\u503c \u542b\u4e49 servicecomb.rest.address \u670d\u52a1\u76d1\u542c\u5730\u5740\uff0c\u4e0d\u914d\u7f6e\u8868\u793a\u4e0d\u76d1\u542c servicecomb.rest.server.thread-count verticle-count rest server verticle\u5b9e\u4f8b\u6570\uff08Deprecated\uff09 servicecomb.rest.server.verticle-count verticle-count rest server verticle\u5b9e\u4f8b\u6570 servicecomb.rest.server.connection-limit Integer.MAX_VALUE \u5141\u8bb8\u5ba2\u6237\u7aef\u6700\u5927\u8fde\u63a5\u6570 servicecomb.rest.server.connection.idleTimeoutInSeconds 60 \u670d\u52a1\u7aef\u8fde\u63a5\u95f2\u7f6e\u8d85\u65f6\u65f6\u95f4\uff0c\u8d85\u65f6\u8fde\u63a5\u4f1a\u88ab\u91ca\u653e servicecomb.rest.server.compression false \u670d\u52a1\u7aef\u662f\u5426\u652f\u6301\u542f\u7528\u538b\u7f29 servicecomb.rest.server.maxInitialLineLength 4096 \u670d\u52a1\u7aef\u63a5\u6536\u8bf7\u6c42\u7684\u6700\u5927 initial line \u957f\u5ea6\uff0c\u5355\u4f4d\u5b57\u8282 servicecomb.rest.server.maxHeaderSize 32768 \u670d\u52a1\u7aef\u63a5\u6536\u8bf7\u6c42\u7684\u6700\u5927header\u957f\u5ea6\uff0c\u5355\u4f4d\u5b57\u8282 servicecomb.rest.client.thread-count verticle-count rest client verticle\u5b9e\u4f8b\u6570\uff08Deprecated\uff09 servicecomb.rest.client.verticle-count verticle-count rest client verticle\u5b9e\u4f8b\u6570 servicecomb.rest.client.connection.maxPoolSize 5 \u5bf9\u4e00\u4e2aIP:port\u7ec4\u5408\uff0c\u5728\u6bcf\u4e2a\u8fde\u63a5\u6c60\u4e2d\u7684\u6700\u5927\u8fde\u63a5\u6570 servicecomb.rest.client.connection.idleTimeoutInSeconds 30 \u8fde\u63a5\u95f2\u7f6e\u65f6\u95f4\uff0c\u8d85\u65f6\u8fde\u63a5\u4f1a\u88ab\u91ca\u653e servicecomb.rest.client.connection.keepAlive true \u662f\u5426\u4f7f\u7528\u957f\u8fde\u63a5 servicecomb.rest.client.connection.compression false \u5ba2\u6237\u7aef\u662f\u5426\u652f\u6301\u542f\u7528\u538b\u7f29 servicecomb.rest.client.maxHeaderSize 8192 \u5ba2\u6237\u7aef\u63a5\u6536\u54cd\u5e94\u7684\u6700\u5927header\u957f\u5ea6\uff0c\u5355\u4f4d\u5b57\u8282","title":"\u914d\u7f6e\u8bf4\u660e"},{"location":"transports/rest-over-vertx/#_2","text":"\u6781\u9650\u8fde\u63a5\u6570\u8ba1\u7b97 \u5047\u8bbe: * servicecomb.rest.client.verticle-count\u914d\u7f6e\u4e3a8 * servicecomb.rest.client.connection.maxPoolSize\u914d\u7f6e\u4e3a5 * \u5fae\u670d\u52a1A\u670910\u4e2a\u5b9e\u4f8b \u7ad9\u5728client\u7684\u89d2\u5ea6\uff0c\u5728\u6781\u9650\u60c5\u51b5\u4e0b\uff1a * \u4e00\u4e2aclient\u8c03\u7528\u5fae\u670d\u52a1A\uff0c\u6700\u591a\u4f1a\u5efa\u7acb400\u6761\u8fde\u63a5\u3002\uff08 8 * 5 * 10 = 400 \uff09 * \u5047\u8bbe\u8be5client\u8fd8\u9700\u8981\u8c03\u7528\u5fae\u670d\u52a1B\uff0c\u5fae\u670d\u52a1B\uff0c\u4e5f\u670910\u4e2a\u5b9e\u4f8b\uff0c\u5219\u6700\u591a\u518d\u5efa\u7acb400\u6761\u8fde\u63a5\uff0c\u5171800\u6761\u8fde\u63a5 \u7ad9\u5728server\u7684\u89d2\u5ea6\uff0c\u5728\u6781\u9650\u60c5\u51b5\u4e0b\uff1a * \u4e00\u4e2aclient\u6700\u591a\u5411\u4e00\u4e2aserver\u5efa\u7acb40\u6761\u8fde\u63a5\u3002( 8 * 5 = 40 ) * n \u4e2aclient\u6700\u591a\u4f1a\u5411\u4e00\u4e2aserver\u5efa\u7acb 40 * n \u6761\u8fde\u63a5 \u4e3a\u4e86\u63d0\u9ad8\u6027\u80fd\uff0c\u9700\u8981\u5c3d\u91cf\u4f7f\u7528\u66f4\u5927\u7684\u8fde\u63a5\u6c60\uff0c\u4f46\u662f\u66f4\u5927\u7684\u8fde\u63a5\u6c60\u53c8\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8fde\u63a5\u6570\u66b4\u6da8\uff0c\u5f53\u5fae\u670d\u52a1\u5b9e\u4f8b\u89c4\u6a21\u8fbe\u5230\u767e\u7ea7\u522b\u65f6\uff0c\u6709\u7684\u8fdb\u7a0b\u53ef\u80fd\u9700\u8981\u7ba1\u7406\u51e0\u4e07\u6761\u8fde\u63a5\uff0c\u4e1a\u52a1\u9700\u8981\u6839\u636e\u5b9e\u9645\u4e1a\u52a1\u89c4\u6a21\u8fdb\u884c\u5408\u7406\u7684\u89c4\u5212\u3002 http1.1\u7684\u89c4\u5212\u76f8\u5bf9\u590d\u6742\uff0c\u5e76\u4e14\u6709\u7684\u573a\u666f\u51e0\u4e4e\u65e0\u89e3\uff0c\u5efa\u8bae\u5207\u6362\u4e3a http2 \u3002","title":"\u8865\u5145\u8bf4\u660e"},{"location":"transports/rest-over-vertx/#_3","text":"microservice.yaml\u6587\u4ef6\u4e2d\u7684\u914d\u7f6e\u793a\u4f8b\uff1a servicecomb: rest: address: 0.0.0.0:8080 server: verticle-count: 8 references: hello: transport: rest version-rule: 0.0.1","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"transports/transport/","text":"\u901a\u4fe1 \u6982\u5ff5\u9610\u8ff0 ServiceComb\u5b9e\u73b0\u4e86\u4e24\u79cd\u7f51\u7edc\u901a\u9053\uff0c\u5305\u62ecREST\u548cHighway\uff0c\u5747\u652f\u6301TLS\u52a0\u5bc6\u4f20\u8f93\u3002\u5176\u4e2d\uff0cREST\u7f51\u7edc\u901a\u9053\u5c06\u670d\u52a1\u4ee5\u6807\u51c6RESTful\u5f62\u5f0f\u53d1\u5e03\uff0c\u8c03\u7528\u7aef\u517c\u5bb9\u76f4\u63a5\u4f7f\u7528http client\u4f7f\u7528\u6807\u51c6RESTful\u5f62\u5f0f\u8fdb\u884c\u8c03\u7528\u3002","title":"\u901a\u4fe1"},{"location":"transports/transport/#_1","text":"","title":"\u901a\u4fe1"},{"location":"transports/transport/#_2","text":"ServiceComb\u5b9e\u73b0\u4e86\u4e24\u79cd\u7f51\u7edc\u901a\u9053\uff0c\u5305\u62ecREST\u548cHighway\uff0c\u5747\u652f\u6301TLS\u52a0\u5bc6\u4f20\u8f93\u3002\u5176\u4e2d\uff0cREST\u7f51\u7edc\u901a\u9053\u5c06\u670d\u52a1\u4ee5\u6807\u51c6RESTful\u5f62\u5f0f\u53d1\u5e03\uff0c\u8c03\u7528\u7aef\u517c\u5bb9\u76f4\u63a5\u4f7f\u7528http client\u4f7f\u7528\u6807\u51c6RESTful\u5f62\u5f0f\u8fdb\u884c\u8c03\u7528\u3002","title":"\u6982\u5ff5\u9610\u8ff0"},{"location":"transports/verticle-count/","text":"verticle-count \u540d\u79f0\u53ca\u9ed8\u8ba4\u503c 1.2.0\u4e4b\u524d\u7684\u7248\u672c \u547d\u540d\u4e3athread-count\uff0c\u4e14\u9ed8\u8ba4\u503c\u4e3a1\uff0c\u8fd9\u5b58\u5728\u4ee5\u4e0b\u95ee\u9898\uff1a \u540d\u5b57\u6709\u6b67\u4e49\u3002ServiceComb\u5e95\u5c42\u57fa\u4e8evertx\uff0c\u901a\u4fe1\u5c42\u903b\u8f91\u5747\u7531verticle\u627f\u8f7d\uff0c\u8fd0\u884c\u4e8eeventloop\u7ebf\u7a0b\u4e2d\uff0c\u5e76\u4e0d\u4f1a\u518d\u521b\u5efa\u72ec\u7acb\u7684\u7ebf\u7a0b\uff0c \u6240\u4ee5thread-count\u5b9e\u9645\u8868\u793a\u7684\u662f\u521b\u5efa\u7684verticle\u5b9e\u4f8b\u7684\u4e2a\u6570\uff0c\u5e76\u4e0d\u662f\u7ebf\u7a0b\u6570\u3002 \u9ed8\u8ba4\u503c\u504f\u5c0f\u3002\u65e7\u7248\u672c\u9009\u62e9\u4e86\u6700\u4fdd\u5b88\u7684\u9ed8\u8ba4\u503c\uff0c\u5bfc\u81f4\u5927\u90e8\u5206\u573a\u666f\u90fd\u9700\u8981\u505a\u8fd9\u4e2a\u53c2\u6570\u7684\u8c03\u6574\u3002 1.2.0\u53ca\u5176\u4e4b\u540e\u7684\u7248\u672c \u91cd\u547d\u540d\u4e3averticle-count\u3002\u540c\u65f6\u5141\u8bb8\u65e7\u7684thread-count\uff0c\u4f46\u662f\u4f1a\u6253\u5370warning\u65e5\u5fd7\uff0c\u63d0\u9192\u5207\u6362\u4e3a\u65b0\u914d\u7f6e\u9879\u3002 \u9ed8\u8ba4\u503c\u89c4\u5219\uff1a \u5982\u679cCPU\u6570\u5c0f\u4e8e8\uff0c\u5219\u53d6CPU\u6570 \u5982\u679cCPU\u6570\u5927\u4e8e\u7b49\u4e8e8\uff0c\u5219\u4e3a8 Eventloop\u4e0everticle\u5b9e\u4f8b\u7684\u5173\u7cfb\uff1a \u5047\u8bbeCPU\u4e3a2\uff0c\u5219vertx\u9ed8\u8ba4\u521b\u5efa 2 * CPU\uff0c \u53734\u4e2aEventloop\u7ebf\u7a0b \u5047\u8bbe\u914d\u7f6eserver verticle count\u548cclient verticle count\u5747\u4e3a3\uff0c\u5219\u4ed6\u4eec\u7684\u5173\u7cfb\u5982\u4e0b\uff1a \u56e0\u4e3a\u5728Eventloop\u4e2d\u4e0d\u5141\u8bb8\u6267\u884c\u4efb\u4f55\u963b\u585e\u52a8\u4f5c\uff0c\u518d\u7ed3\u5408\u4e0a\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u5f53\u5145\u5206\u5229\u7528\u4e86CPU\u4e4b\u540e\uff0c\u518d\u589e\u52a0verticle\u5b9e\u4f8b\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0c \u6240\u4ee51.2.0\u4e4b\u540e\u7684\u7248\u672c\u7684\u7f3a\u7701\u503c\u5bf9\u4e8e\u591a\u6570\u60c5\u51b5\u662f\u6700\u4f18\u7684\u914d\u7f6e\u3002","title":"verticle-count"},{"location":"transports/verticle-count/#verticle-count","text":"","title":"verticle-count"},{"location":"transports/verticle-count/#_1","text":"1.2.0\u4e4b\u524d\u7684\u7248\u672c \u547d\u540d\u4e3athread-count\uff0c\u4e14\u9ed8\u8ba4\u503c\u4e3a1\uff0c\u8fd9\u5b58\u5728\u4ee5\u4e0b\u95ee\u9898\uff1a \u540d\u5b57\u6709\u6b67\u4e49\u3002ServiceComb\u5e95\u5c42\u57fa\u4e8evertx\uff0c\u901a\u4fe1\u5c42\u903b\u8f91\u5747\u7531verticle\u627f\u8f7d\uff0c\u8fd0\u884c\u4e8eeventloop\u7ebf\u7a0b\u4e2d\uff0c\u5e76\u4e0d\u4f1a\u518d\u521b\u5efa\u72ec\u7acb\u7684\u7ebf\u7a0b\uff0c \u6240\u4ee5thread-count\u5b9e\u9645\u8868\u793a\u7684\u662f\u521b\u5efa\u7684verticle\u5b9e\u4f8b\u7684\u4e2a\u6570\uff0c\u5e76\u4e0d\u662f\u7ebf\u7a0b\u6570\u3002 \u9ed8\u8ba4\u503c\u504f\u5c0f\u3002\u65e7\u7248\u672c\u9009\u62e9\u4e86\u6700\u4fdd\u5b88\u7684\u9ed8\u8ba4\u503c\uff0c\u5bfc\u81f4\u5927\u90e8\u5206\u573a\u666f\u90fd\u9700\u8981\u505a\u8fd9\u4e2a\u53c2\u6570\u7684\u8c03\u6574\u3002 1.2.0\u53ca\u5176\u4e4b\u540e\u7684\u7248\u672c \u91cd\u547d\u540d\u4e3averticle-count\u3002\u540c\u65f6\u5141\u8bb8\u65e7\u7684thread-count\uff0c\u4f46\u662f\u4f1a\u6253\u5370warning\u65e5\u5fd7\uff0c\u63d0\u9192\u5207\u6362\u4e3a\u65b0\u914d\u7f6e\u9879\u3002 \u9ed8\u8ba4\u503c\u89c4\u5219\uff1a \u5982\u679cCPU\u6570\u5c0f\u4e8e8\uff0c\u5219\u53d6CPU\u6570 \u5982\u679cCPU\u6570\u5927\u4e8e\u7b49\u4e8e8\uff0c\u5219\u4e3a8","title":"\u540d\u79f0\u53ca\u9ed8\u8ba4\u503c"},{"location":"transports/verticle-count/#eventloopverticle","text":"\u5047\u8bbeCPU\u4e3a2\uff0c\u5219vertx\u9ed8\u8ba4\u521b\u5efa 2 * CPU\uff0c \u53734\u4e2aEventloop\u7ebf\u7a0b \u5047\u8bbe\u914d\u7f6eserver verticle count\u548cclient verticle count\u5747\u4e3a3\uff0c\u5219\u4ed6\u4eec\u7684\u5173\u7cfb\u5982\u4e0b\uff1a \u56e0\u4e3a\u5728Eventloop\u4e2d\u4e0d\u5141\u8bb8\u6267\u884c\u4efb\u4f55\u963b\u585e\u52a8\u4f5c\uff0c\u518d\u7ed3\u5408\u4e0a\u56fe\uff0c\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u5f53\u5145\u5206\u5229\u7528\u4e86CPU\u4e4b\u540e\uff0c\u518d\u589e\u52a0verticle\u5b9e\u4f8b\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0c \u6240\u4ee51.2.0\u4e4b\u540e\u7684\u7248\u672c\u7684\u7f3a\u7701\u503c\u5bf9\u4e8e\u591a\u6570\u60c5\u51b5\u662f\u6700\u4f18\u7684\u914d\u7f6e\u3002","title":"Eventloop\u4e0everticle\u5b9e\u4f8b\u7684\u5173\u7cfb\uff1a"},{"location":"using-java-chassis-in-spring-boot/components-for-spring-boot/","text":"java-chassis \u63d0\u4f9b\u7684spring boot starter\u8bf4\u660e java-chassis\u63d0\u4f9b\u4e86spring-boot-starter\uff0c\u65b9\u4fbf\u5728spring boot\u4e2d\u96c6\u6210java-chassis\u3002\u7531\u4e8e\u65e9\u671f\u547d\u540d\u6ca1\u8003\u8651\u89c4\u8303\u6027\uff0c\u5728\u4f7f\u7528\u8fd9\u4e9bstarter\u4e4b\u524d\uff0c\u9700\u8981\u6ce8\u610f\u533a\u5206\u4f7f\u7528\u7684java-chassis\u7248\u672c\u548cspring boot\u7248\u672c\u3002 java-chassis 2.0.0 \u4ee5\u4e0a + spring boot 2.0\u4ee5\u4e0a \u4f8b\u5b50 java-chassis-spring-boot-starter-standalone \"JAVA\u5e94\u7528\u65b9\u5f0f\"\u4f7f\u7528\u3002 POM\u4f9d\u8d56\uff1a dependencies dependency groupId org.apache.servicecomb /groupId artifactId java-chassis-spring-boot-starter-standalone /artifactId /dependency /dependencies java-chassis-spring-boot-starter-servlet \"Web\u5f00\u53d1\u65b9\u5f0f\"\u4f7f\u7528\u3002 POM\u4f9d\u8d56\uff1a dependencies dependency groupId org.apache.servicecomb /groupId artifactId java-chassis-spring-boot-starter-servlet /artifactId /dependency /dependencies \u4e24\u79cd\u65b9\u5f0f\u7684dependency management\u914d\u7f6e\u5982\u4e0b\uff1a dependencyManagement dependencies dependency groupId org.apache.servicecomb /groupId artifactId java-chassis-dependencies /artifactId version 2.0.0-SNAPSHOT /version type pom /type scope import /scope /dependency /dependencies /dependencyManagement java-chassis 1.3.x + spring boot 2.0 \u4f8b\u5b50 spring-boot2-starter-standalone \"JAVA\u5e94\u7528\u65b9\u5f0f\"\u4f7f\u7528\u3002 POM\u4f9d\u8d56\uff1a dependencies dependency groupId org.apache.servicecomb /groupId artifactId spring-boot2-starter-standalone /artifactId /dependency /dependencies spring-boot2-starter-servlet \"Web\u5f00\u53d1\u65b9\u5f0f\"\u4f7f\u7528\u3002 POM\u4f9d\u8d56\uff1a dependencies dependency groupId org.apache.servicecomb /groupId artifactId spring-boot2-starter-servlet /artifactId /dependency /dependencies \u4e24\u79cd\u65b9\u5f0f\u7684dependency management\u914d\u7f6e\u5982\u4e0b\uff1a dependencyManagement dependencies dependency groupId org.apache.servicecomb /groupId artifactId java-chassis-dependencies-springboot2 /artifactId version 1.3.0 /version type pom /type scope import /scope /dependency /dependencies /dependencyManagement java-chassis 1.3.x + spring boot 1.0 \u4f8b\u5b50 spring-boot-starter-provider \"JAVA\u5e94\u7528\u65b9\u5f0f\"\u4f7f\u7528\u3002 POM\u4f9d\u8d56\uff1a dependencies dependency groupId org.apache.servicecomb /groupId artifactId spring-boot-starter-provider /artifactId /dependency /dependencies spring-boot-starter-transport \"Web\u5f00\u53d1\u65b9\u5f0f\"\u4f7f\u7528\u3002 POM\u4f9d\u8d56\uff1a dependencies dependency groupId org.apache.servicecomb /groupId artifactId spring-boot-starter-transport /artifactId /dependency /dependencies \u4e24\u79cd\u65b9\u5f0f\u7684dependency management\u914d\u7f6e\u5982\u4e0b\uff1a dependencyManagement dependencies dependency groupId org.apache.servicecomb /groupId artifactId java-chassis-dependencies-springboot1 /artifactId version 1.3.0 /version type pom /type scope import /scope /dependency !-- spring boot 1.5.14.RELEASE use a low version of validation-api, must override it -- dependency groupId javax.validation /groupId artifactId validation-api /artifactId version 2.0.0.Final /version /dependency /dependencies /dependencyManagement","title":"java-chassis \u63d0\u4f9b\u7684spring boot starter\u8bf4\u660e"},{"location":"using-java-chassis-in-spring-boot/components-for-spring-boot/#java-chassis-spring-boot-starter","text":"java-chassis\u63d0\u4f9b\u4e86spring-boot-starter\uff0c\u65b9\u4fbf\u5728spring boot\u4e2d\u96c6\u6210java-chassis\u3002\u7531\u4e8e\u65e9\u671f\u547d\u540d\u6ca1\u8003\u8651\u89c4\u8303\u6027\uff0c\u5728\u4f7f\u7528\u8fd9\u4e9bstarter\u4e4b\u524d\uff0c\u9700\u8981\u6ce8\u610f\u533a\u5206\u4f7f\u7528\u7684java-chassis\u7248\u672c\u548cspring boot\u7248\u672c\u3002","title":"java-chassis \u63d0\u4f9b\u7684spring boot starter\u8bf4\u660e"},{"location":"using-java-chassis-in-spring-boot/components-for-spring-boot/#java-chassis-200-spring-boot-20","text":"java-chassis-spring-boot-starter-standalone \"JAVA\u5e94\u7528\u65b9\u5f0f\"\u4f7f\u7528\u3002 POM\u4f9d\u8d56\uff1a dependencies dependency groupId org.apache.servicecomb /groupId artifactId java-chassis-spring-boot-starter-standalone /artifactId /dependency /dependencies java-chassis-spring-boot-starter-servlet \"Web\u5f00\u53d1\u65b9\u5f0f\"\u4f7f\u7528\u3002 POM\u4f9d\u8d56\uff1a dependencies dependency groupId org.apache.servicecomb /groupId artifactId java-chassis-spring-boot-starter-servlet /artifactId /dependency /dependencies \u4e24\u79cd\u65b9\u5f0f\u7684dependency management\u914d\u7f6e\u5982\u4e0b\uff1a dependencyManagement dependencies dependency groupId org.apache.servicecomb /groupId artifactId java-chassis-dependencies /artifactId version 2.0.0-SNAPSHOT /version type pom /type scope import /scope /dependency /dependencies /dependencyManagement","title":"java-chassis 2.0.0 \u4ee5\u4e0a + spring boot 2.0\u4ee5\u4e0a \u4f8b\u5b50"},{"location":"using-java-chassis-in-spring-boot/components-for-spring-boot/#java-chassis-13x-spring-boot-20","text":"spring-boot2-starter-standalone \"JAVA\u5e94\u7528\u65b9\u5f0f\"\u4f7f\u7528\u3002 POM\u4f9d\u8d56\uff1a dependencies dependency groupId org.apache.servicecomb /groupId artifactId spring-boot2-starter-standalone /artifactId /dependency /dependencies spring-boot2-starter-servlet \"Web\u5f00\u53d1\u65b9\u5f0f\"\u4f7f\u7528\u3002 POM\u4f9d\u8d56\uff1a dependencies dependency groupId org.apache.servicecomb /groupId artifactId spring-boot2-starter-servlet /artifactId /dependency /dependencies \u4e24\u79cd\u65b9\u5f0f\u7684dependency management\u914d\u7f6e\u5982\u4e0b\uff1a dependencyManagement dependencies dependency groupId org.apache.servicecomb /groupId artifactId java-chassis-dependencies-springboot2 /artifactId version 1.3.0 /version type pom /type scope import /scope /dependency /dependencies /dependencyManagement","title":"java-chassis 1.3.x + spring boot 2.0 \u4f8b\u5b50"},{"location":"using-java-chassis-in-spring-boot/components-for-spring-boot/#java-chassis-13x-spring-boot-10","text":"spring-boot-starter-provider \"JAVA\u5e94\u7528\u65b9\u5f0f\"\u4f7f\u7528\u3002 POM\u4f9d\u8d56\uff1a dependencies dependency groupId org.apache.servicecomb /groupId artifactId spring-boot-starter-provider /artifactId /dependency /dependencies spring-boot-starter-transport \"Web\u5f00\u53d1\u65b9\u5f0f\"\u4f7f\u7528\u3002 POM\u4f9d\u8d56\uff1a dependencies dependency groupId org.apache.servicecomb /groupId artifactId spring-boot-starter-transport /artifactId /dependency /dependencies \u4e24\u79cd\u65b9\u5f0f\u7684dependency management\u914d\u7f6e\u5982\u4e0b\uff1a dependencyManagement dependencies dependency groupId org.apache.servicecomb /groupId artifactId java-chassis-dependencies-springboot1 /artifactId version 1.3.0 /version type pom /type scope import /scope /dependency !-- spring boot 1.5.14.RELEASE use a low version of validation-api, must override it -- dependency groupId javax.validation /groupId artifactId validation-api /artifactId version 2.0.0.Final /version /dependency /dependencies /dependencyManagement","title":"java-chassis 1.3.x + spring boot 1.0 \u4f8b\u5b50"},{"location":"using-java-chassis-in-spring-boot/diff-spring-mvc/","text":"\u4e0e\u539f\u751f Spring MVC \u5f00\u53d1\u4e60\u60ef\u7684\u5dee\u5f02 java chassis\u652f\u6301\u4f7f\u7528Spring MVC\u63d0\u4f9b\u7684\u6807\u7b7e(org.springframework.web.bind.annotation)\u6765\u58f0\u660eREST\u63a5\u53e3\uff0c\u4f46\u662f\u4e24\u8005\u662f\u72ec\u7acb\u7684\u5b9e\u73b0\uff0c\u800c\u4e14\u6709\u4e0d\u4e00\u6837\u7684\u8bbe\u8ba1\u76ee\u6807\u3002java chassis\u7684\u76ee\u6807\u662f\u63d0\u4f9b\u8de8\u8bed\u8a00\u3001\u652f\u6301\u591a\u901a\u4fe1\u534f\u8bae\u7684\u6846\u67b6\uff0c\u56e0\u6b64\u53bb\u6389\u4e86Spring MVC\u4e2d\u4e00\u4e9b\u5bf9\u8de8\u8bed\u8a00\u652f\u6301\u4e0d\u662f\u5f88\u597d\u7684\u7279\u6027\uff0c\u4e5f\u4e0d\u652f\u6301\u7279\u5b9a\u8fd0\u884c\u6846\u67b6\u5f3a\u76f8\u5173\u7684\u7279\u6027\uff0c\u6bd4\u5982\u76f4\u63a5\u8bbf\u95eeServlet\u534f\u8bae\u5b9a\u4e49\u7684HttpServletRequest\u3002java-chassis\u652f\u6301\u7684Spring MVC\u6807\u7b7e\u662fspring boot\u7684\u5b50\u96c6\uff0c \u4e0b\u9762\u662f\u4e00\u4e9b\u663e\u8457\u7684\u5dee\u522b\u3002 \u670d\u52a1\u58f0\u660e\u65b9\u5f0f Spring MVC\u4f7f\u7528@RestController\u58f0\u660e\u670d\u52a1\uff0c\u800cjava chassis\u4f7f\u7528@RestSchema\u58f0\u660e\u670d\u52a1\uff0c\u5e76\u4e14\u9700\u8981\u663e\u793a\u7684\u4f7f\u7528@RequestMapping\u58f0\u660e\u670d\u52a1\u8def\u5f84\uff0c\u4ee5\u533a\u5206\u8be5\u670d\u52a1\u662f\u91c7\u7528Spring MVC\u7684\u6807\u7b7e\u8fd8\u662f\u4f7f\u7528JAX RS\u7684\u6807\u7b7e\u3002 @RestSchema(schemaId = hello ) @RequestMapping(path = / ) Schema\u662fjava chassis\u7684\u670d\u52a1\u5951\u7ea6\uff0c\u662f\u670d\u52a1\u8fd0\u884c\u65f6\u7684\u57fa\u7840\uff0c\u670d\u52a1\u6cbb\u7406\u3001\u7f16\u89e3\u7801\u7b49\u90fd\u57fa\u4e8e\u5951\u7ea6\u8fdb\u884c\u3002\u5728\u8de8\u8bed\u8a00\u7684\u573a\u666f\uff0c\u5951\u7ea6\u4e5f\u5b9a\u4e49\u4e86\u4e0d\u540c\u8bed\u8a00\u80fd\u591f\u540c\u65f6\u7406\u89e3\u7684\u90e8\u5206\u3002 \u6570\u636e\u7c7b\u578b\u652f\u6301 \u91c7\u7528Spring MVC\uff0c\u53ef\u4ee5\u5728\u670d\u52a1\u5b9a\u4e49\u4e2d\u4f7f\u7528\u591a\u79cd\u6570\u636e\u7c7b\u578b\uff0c\u53ea\u8981\u8fd9\u79cd\u6570\u636e\u7c7b\u578b\u80fd\u591f\u88abjson\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u3002\u6bd4\u5982\uff1a // \u62bd\u8c61\u7c7b\u578b public void postData(@RequestBody Object data) // \u63a5\u53e3\u5b9a\u4e49 public void postData(@RequestBody IPerson interfaceData) // \u6ca1\u6307\u5b9a\u7c7b\u578b\u7684\u6cdb\u578b public void postData(@RequestBody Map rawData) // \u5177\u4f53\u534f\u8bae\u76f8\u5173\u7684\u7c7b\u578b public void postData(HttpServletRequest rquest) java chassis\u4e0d\u652f\u6301\u4e0a\u8bc9\u7c7b\u578b\u3002\u56e0\u4e3ajava chassis\u4f1a\u6839\u636e\u63a5\u53e3\u5b9a\u4e49\u751f\u6210\u5951\u7ea6\uff0c\u4ece\u4e0a\u9762\u7684\u63a5\u53e3\u5b9a\u4e49\uff0c\u5982\u679c\u4e0d\u7ed3\u5408\u5b9e\u9645\u7684\u5b9e\u73b0\u4ee3\u7801\u6216\u8005\u989d\u5916\u7684\u5f00\u53d1\u6587\u6863\u8bf4\u660e\uff0c\u65e0\u6cd5\u76f4\u63a5\u751f\u6210\u5951\u7ea6\u3002 \u4e3a\u4e86\u652f\u6301\u5feb\u901f\u5f00\u53d1\uff0cjava chassis\u7684\u6570\u636e\u7c7b\u578b\u9650\u5236\u4e5f\u5728\u4e0d\u505c\u7684\u6269\u5145\uff0c\u6bd4\u5982\u652f\u6301HttpServletRequest\uff0c\u4f46\u662f\u5b9e\u9645\u5728\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u4ed6\u4eec\u4e0eWEB\u670d\u52a1\u5668\u7684\u8bed\u4e49\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u6bd4\u5982\u4e0d\u80fd\u76f4\u63a5\u64cd\u4f5c\u6d41\u3002\u56e0\u6b64\u5efa\u8bae\u5f00\u53d1\u8005\u5728\u7684\u4f7f\u7528\u573a\u666f\u4e0b\uff0c\u5c3d\u53ef\u80fd\u4f7f\u7528\u5951\u7ea6\u80fd\u591f\u63cf\u8ff0\u7684\u7c7b\u578b\uff0c\u8ba9\u4ee3\u7801\u9605\u8bfb\u6027\u66f4\u597d\u3002\u6b64\u5916\uff0cspring\u9488\u5bf9DispatcherServlet\u505a\u4e86\u5927\u91cf\u7684\u6269\u5c55\uff0c\u8fd9\u4e9b\u6269\u5c55\u5bf9\u4e8ejava-chassis\u7684RestDispatcher\u662f\u4e0d\u9002\u7528\u7684\u3002 java chassis \u5728Spring MVC\u65b9\u9762\u7684\u66f4\u591a\u5f00\u53d1\u652f\u6301\uff0c\u53ef\u4ee5\u53c2\u8003 \u7528SpringMVC \u5f00\u53d1\u5fae\u670d\u52a1 \u3002","title":"\u4e0e\u539f\u751f Spring MVC \u5f00\u53d1\u4e60\u60ef\u7684\u5dee\u5f02"},{"location":"using-java-chassis-in-spring-boot/diff-spring-mvc/#spring-mvc","text":"java chassis\u652f\u6301\u4f7f\u7528Spring MVC\u63d0\u4f9b\u7684\u6807\u7b7e(org.springframework.web.bind.annotation)\u6765\u58f0\u660eREST\u63a5\u53e3\uff0c\u4f46\u662f\u4e24\u8005\u662f\u72ec\u7acb\u7684\u5b9e\u73b0\uff0c\u800c\u4e14\u6709\u4e0d\u4e00\u6837\u7684\u8bbe\u8ba1\u76ee\u6807\u3002java chassis\u7684\u76ee\u6807\u662f\u63d0\u4f9b\u8de8\u8bed\u8a00\u3001\u652f\u6301\u591a\u901a\u4fe1\u534f\u8bae\u7684\u6846\u67b6\uff0c\u56e0\u6b64\u53bb\u6389\u4e86Spring MVC\u4e2d\u4e00\u4e9b\u5bf9\u8de8\u8bed\u8a00\u652f\u6301\u4e0d\u662f\u5f88\u597d\u7684\u7279\u6027\uff0c\u4e5f\u4e0d\u652f\u6301\u7279\u5b9a\u8fd0\u884c\u6846\u67b6\u5f3a\u76f8\u5173\u7684\u7279\u6027\uff0c\u6bd4\u5982\u76f4\u63a5\u8bbf\u95eeServlet\u534f\u8bae\u5b9a\u4e49\u7684HttpServletRequest\u3002java-chassis\u652f\u6301\u7684Spring MVC\u6807\u7b7e\u662fspring boot\u7684\u5b50\u96c6\uff0c \u4e0b\u9762\u662f\u4e00\u4e9b\u663e\u8457\u7684\u5dee\u522b\u3002 \u670d\u52a1\u58f0\u660e\u65b9\u5f0f Spring MVC\u4f7f\u7528@RestController\u58f0\u660e\u670d\u52a1\uff0c\u800cjava chassis\u4f7f\u7528@RestSchema\u58f0\u660e\u670d\u52a1\uff0c\u5e76\u4e14\u9700\u8981\u663e\u793a\u7684\u4f7f\u7528@RequestMapping\u58f0\u660e\u670d\u52a1\u8def\u5f84\uff0c\u4ee5\u533a\u5206\u8be5\u670d\u52a1\u662f\u91c7\u7528Spring MVC\u7684\u6807\u7b7e\u8fd8\u662f\u4f7f\u7528JAX RS\u7684\u6807\u7b7e\u3002 @RestSchema(schemaId = hello ) @RequestMapping(path = / ) Schema\u662fjava chassis\u7684\u670d\u52a1\u5951\u7ea6\uff0c\u662f\u670d\u52a1\u8fd0\u884c\u65f6\u7684\u57fa\u7840\uff0c\u670d\u52a1\u6cbb\u7406\u3001\u7f16\u89e3\u7801\u7b49\u90fd\u57fa\u4e8e\u5951\u7ea6\u8fdb\u884c\u3002\u5728\u8de8\u8bed\u8a00\u7684\u573a\u666f\uff0c\u5951\u7ea6\u4e5f\u5b9a\u4e49\u4e86\u4e0d\u540c\u8bed\u8a00\u80fd\u591f\u540c\u65f6\u7406\u89e3\u7684\u90e8\u5206\u3002 \u6570\u636e\u7c7b\u578b\u652f\u6301 \u91c7\u7528Spring MVC\uff0c\u53ef\u4ee5\u5728\u670d\u52a1\u5b9a\u4e49\u4e2d\u4f7f\u7528\u591a\u79cd\u6570\u636e\u7c7b\u578b\uff0c\u53ea\u8981\u8fd9\u79cd\u6570\u636e\u7c7b\u578b\u80fd\u591f\u88abjson\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u3002\u6bd4\u5982\uff1a // \u62bd\u8c61\u7c7b\u578b public void postData(@RequestBody Object data) // \u63a5\u53e3\u5b9a\u4e49 public void postData(@RequestBody IPerson interfaceData) // \u6ca1\u6307\u5b9a\u7c7b\u578b\u7684\u6cdb\u578b public void postData(@RequestBody Map rawData) // \u5177\u4f53\u534f\u8bae\u76f8\u5173\u7684\u7c7b\u578b public void postData(HttpServletRequest rquest) java chassis\u4e0d\u652f\u6301\u4e0a\u8bc9\u7c7b\u578b\u3002\u56e0\u4e3ajava chassis\u4f1a\u6839\u636e\u63a5\u53e3\u5b9a\u4e49\u751f\u6210\u5951\u7ea6\uff0c\u4ece\u4e0a\u9762\u7684\u63a5\u53e3\u5b9a\u4e49\uff0c\u5982\u679c\u4e0d\u7ed3\u5408\u5b9e\u9645\u7684\u5b9e\u73b0\u4ee3\u7801\u6216\u8005\u989d\u5916\u7684\u5f00\u53d1\u6587\u6863\u8bf4\u660e\uff0c\u65e0\u6cd5\u76f4\u63a5\u751f\u6210\u5951\u7ea6\u3002 \u4e3a\u4e86\u652f\u6301\u5feb\u901f\u5f00\u53d1\uff0cjava chassis\u7684\u6570\u636e\u7c7b\u578b\u9650\u5236\u4e5f\u5728\u4e0d\u505c\u7684\u6269\u5145\uff0c\u6bd4\u5982\u652f\u6301HttpServletRequest\uff0c\u4f46\u662f\u5b9e\u9645\u5728\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u4ed6\u4eec\u4e0eWEB\u670d\u52a1\u5668\u7684\u8bed\u4e49\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u6bd4\u5982\u4e0d\u80fd\u76f4\u63a5\u64cd\u4f5c\u6d41\u3002\u56e0\u6b64\u5efa\u8bae\u5f00\u53d1\u8005\u5728\u7684\u4f7f\u7528\u573a\u666f\u4e0b\uff0c\u5c3d\u53ef\u80fd\u4f7f\u7528\u5951\u7ea6\u80fd\u591f\u63cf\u8ff0\u7684\u7c7b\u578b\uff0c\u8ba9\u4ee3\u7801\u9605\u8bfb\u6027\u66f4\u597d\u3002\u6b64\u5916\uff0cspring\u9488\u5bf9DispatcherServlet\u505a\u4e86\u5927\u91cf\u7684\u6269\u5c55\uff0c\u8fd9\u4e9b\u6269\u5c55\u5bf9\u4e8ejava-chassis\u7684RestDispatcher\u662f\u4e0d\u9002\u7528\u7684\u3002 java chassis \u5728Spring MVC\u65b9\u9762\u7684\u66f4\u591a\u5f00\u53d1\u652f\u6301\uff0c\u53ef\u4ee5\u53c2\u8003 \u7528SpringMVC \u5f00\u53d1\u5fae\u670d\u52a1 \u3002","title":"\u4e0e\u539f\u751f Spring MVC \u5f00\u53d1\u4e60\u60ef\u7684\u5dee\u5f02"},{"location":"using-java-chassis-in-spring-boot/introduction/","text":"java chassis \u4e0e Spring Boot \u96c6\u6210\u4ecb\u7ecd Spring Boot \u53ef\u4ee5\u8ba9\u5f00\u53d1\u8005\u80fd\u591f\u66f4\u52a0\u5feb\u901f\u7684\u6784\u5efaSpring\u5e94\u7528\u3002\u4e3b\u8981\u63d0\u4f9b\u4e86\u5982\u4e0b\u529f\u80fd\uff1a \u521b\u5efa\u72ec\u7acb\u53ef\u6267\u884c\u7684Spring\u5e94\u7528\u3002\u901a\u8fc7\u5c06\u5e94\u7528\u7a0b\u5e8f\u6253\u5305\u4e3ajar\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7java -jar\u6765\u6267\u884c\u5e94\u7528\u7a0b\u5e8f\u3002 \u5185\u5d4cTomcat, Jetty\u7b49WEB\u670d\u52a1\u5668\uff0c\u800c\u4e0d\u9700\u8981\u5f00\u53d1\u8005\u6253\u5305war\u3002 \u63d0\u4f9bstarter\u7b80\u5316maven\u4f9d\u8d56\u5173\u7cfb\u914d\u7f6e\u3002 \u5c06Spring Boot\u7528\u4e8e\u5fae\u670d\u52a1\u5f00\u53d1\uff0c\u53ef\u4ee5\u6781\u5927\u7684\u7b80\u5316\u5f00\u53d1\u8005\u914d\u7f6e\u548c\u90e8\u7f72\u3002java-chassis\u63d0\u4f9b\u4e86\u5b8c\u5584\u7684\u7684\u670d\u52a1\u6cbb\u7406\u80fd\u529b\u3001\u826f\u597d\u7684\u8de8\u8bed\u8a00\u7279\u6027\u548c\u9ad8\u6548\u7684\u5f02\u6b65\u901a\u4fe1\u80fd\u529b\uff0c\u901a\u8fc7\u4f7f\u7528java chassis\uff0c\u53ef\u4ee5\u5feb\u901f\u542f\u7528\u5404\u79cd\u6ee1\u8db3\u5546\u4e1a\u8fd0\u7ef4\u9700\u8981\u7684\u529f\u80fd\u3002 \u5f00\u53d1\u8005\u901a\u5e38\u4f1a\u4ee5\u5982\u4e0b\u51e0\u79cd\u65b9\u5f0f\u4f7f\u7528Spring Boot\uff1a JAVA\u5e94\u7528\u65b9\u5f0f\uff1a\u5f15\u5165spring-boot-starter\uff0c\u5f00\u53d1\u666e\u901aJAVA\u5e94\u7528\uff0c\u8be5\u5e94\u7528\u4e0d\u4f1a\u542f\u52a8WEB\u670d\u52a1\u5668\u3002 Web\u5f00\u53d1\u65b9\u5f0f\uff1a\u5f15\u5165spring-boot-starter-web\uff0c\u5f00\u53d1Web\u5e94\u7528\uff0c\u8be5\u5e94\u7528\u4f1a\u5305\u542b\u4e00\u4e2a\u5185\u5d4c\u7684Tomcat\u6216\u8005Jetty\u670d\u52a1\u5668\uff0c\u5e76\u4e14\u4f7f\u7528The Spring Web MVC framework\uff08\u7b80\u79f0Spring MVC\uff09\u5f00\u53d1REST\u63a5\u53e3\u3002 \u5728\u4e24\u79cd\u60c5\u51b5\u4e0b\uff0c\u90fd\u53ef\u4ee5\u96c6\u6210java chassis\uff0c\u539f\u7406\u56fe\u5982\u4e0b\uff1a JAVA\u5e94\u7528\u65b9\u5f0f \u8fd9\u79cd\u96c6\u6210\u65b9\u5f0f\u76f8\u5bf9\u7b80\u5355\uff0c\u76f8\u5f53\u4e8e\u76f4\u63a5\u5c06java-chassis\u901a\u8fc7Spring Boot\u5e94\u7528\u62c9\u8d77\uff0c\u901a\u8fc7java-chassis \u63d0\u4f9bREST/RPC\u670d\u52a1\u3002 Web\u5f00\u53d1\u65b9\u5f0f \u8be5\u96c6\u6210\u65b9\u5f0f\u7684\u672c\u8d28\u662f\u5c06Spring MVC\u7684DispatcherServlet\u66ff\u6362\u4e3ajava chassis\u7684RestServlet\uff0c\u901a\u8fc7java-chassis\u63d0\u4f9bREST/RPC\u670d\u52a1\u3002 \u4e24\u79cd\u5f00\u53d1\u65b9\u5f0f\u90fd\u4f1a\u542f\u7528java chassis\u7684\u5168\u91cf\u529f\u80fd\uff0cJAVA\u5e94\u7528\u65b9\u5f0f\u8fd0\u884c\u4e8e\u72ec\u7acb\u7684HTTP\u670d\u52a1\u5668\uff08\u57fa\u4e8evert.x\u6784\u5efa\uff09\u4e0a\uff0c\u6027\u80fd\u4e0a\u5b58\u5728\u5f88\u5927\u7684\u4f18\u52bf\u3002Web\u5f00\u53d1\u65b9\u5f0f\u8fd0\u884c\u4e8eTomcat\u6216\u8005\u5176\u4ed6\u5185\u7f6e\u7684Web\u670d\u52a1\u5668\u4e4b\u4e0a\uff0c\u4f5c\u4e3a\u4e00\u4e2aServlet\u63a5\u6536\u8bf7\u6c42\uff0c\u56e0\u6b64\u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528Web\u5bb9\u5668\u63d0\u4f9b\u7684\u4e00\u4e9b\u529f\u80fd\uff0c\u6bd4\u5982\u63d0\u4f9b\u9875\u9762\u670d\u52a1\uff0c\u4f7f\u7528Filter\u7b49\u3002\u5f53\u5e94\u7528\u53ea\u9700\u8981\u63d0\u4f9bREST\u670d\u52a1\uff0c\u5e76\u4e14\u5bf9\u6027\u80fd\u8981\u6c42\u5f88\u9ad8\u7684\u573a\u666f\uff0c\u5efa\u8bae\u4f7f\u7528JAVA\u5e94\u7528\u65b9\u5f0f\u3002","title":"java chassis \u4e0e Spring Boot \u96c6\u6210\u4ecb\u7ecd"},{"location":"using-java-chassis-in-spring-boot/introduction/#java-chassis-spring-boot","text":"Spring Boot \u53ef\u4ee5\u8ba9\u5f00\u53d1\u8005\u80fd\u591f\u66f4\u52a0\u5feb\u901f\u7684\u6784\u5efaSpring\u5e94\u7528\u3002\u4e3b\u8981\u63d0\u4f9b\u4e86\u5982\u4e0b\u529f\u80fd\uff1a \u521b\u5efa\u72ec\u7acb\u53ef\u6267\u884c\u7684Spring\u5e94\u7528\u3002\u901a\u8fc7\u5c06\u5e94\u7528\u7a0b\u5e8f\u6253\u5305\u4e3ajar\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7java -jar\u6765\u6267\u884c\u5e94\u7528\u7a0b\u5e8f\u3002 \u5185\u5d4cTomcat, Jetty\u7b49WEB\u670d\u52a1\u5668\uff0c\u800c\u4e0d\u9700\u8981\u5f00\u53d1\u8005\u6253\u5305war\u3002 \u63d0\u4f9bstarter\u7b80\u5316maven\u4f9d\u8d56\u5173\u7cfb\u914d\u7f6e\u3002 \u5c06Spring Boot\u7528\u4e8e\u5fae\u670d\u52a1\u5f00\u53d1\uff0c\u53ef\u4ee5\u6781\u5927\u7684\u7b80\u5316\u5f00\u53d1\u8005\u914d\u7f6e\u548c\u90e8\u7f72\u3002java-chassis\u63d0\u4f9b\u4e86\u5b8c\u5584\u7684\u7684\u670d\u52a1\u6cbb\u7406\u80fd\u529b\u3001\u826f\u597d\u7684\u8de8\u8bed\u8a00\u7279\u6027\u548c\u9ad8\u6548\u7684\u5f02\u6b65\u901a\u4fe1\u80fd\u529b\uff0c\u901a\u8fc7\u4f7f\u7528java chassis\uff0c\u53ef\u4ee5\u5feb\u901f\u542f\u7528\u5404\u79cd\u6ee1\u8db3\u5546\u4e1a\u8fd0\u7ef4\u9700\u8981\u7684\u529f\u80fd\u3002 \u5f00\u53d1\u8005\u901a\u5e38\u4f1a\u4ee5\u5982\u4e0b\u51e0\u79cd\u65b9\u5f0f\u4f7f\u7528Spring Boot\uff1a JAVA\u5e94\u7528\u65b9\u5f0f\uff1a\u5f15\u5165spring-boot-starter\uff0c\u5f00\u53d1\u666e\u901aJAVA\u5e94\u7528\uff0c\u8be5\u5e94\u7528\u4e0d\u4f1a\u542f\u52a8WEB\u670d\u52a1\u5668\u3002 Web\u5f00\u53d1\u65b9\u5f0f\uff1a\u5f15\u5165spring-boot-starter-web\uff0c\u5f00\u53d1Web\u5e94\u7528\uff0c\u8be5\u5e94\u7528\u4f1a\u5305\u542b\u4e00\u4e2a\u5185\u5d4c\u7684Tomcat\u6216\u8005Jetty\u670d\u52a1\u5668\uff0c\u5e76\u4e14\u4f7f\u7528The Spring Web MVC framework\uff08\u7b80\u79f0Spring MVC\uff09\u5f00\u53d1REST\u63a5\u53e3\u3002 \u5728\u4e24\u79cd\u60c5\u51b5\u4e0b\uff0c\u90fd\u53ef\u4ee5\u96c6\u6210java chassis\uff0c\u539f\u7406\u56fe\u5982\u4e0b\uff1a JAVA\u5e94\u7528\u65b9\u5f0f \u8fd9\u79cd\u96c6\u6210\u65b9\u5f0f\u76f8\u5bf9\u7b80\u5355\uff0c\u76f8\u5f53\u4e8e\u76f4\u63a5\u5c06java-chassis\u901a\u8fc7Spring Boot\u5e94\u7528\u62c9\u8d77\uff0c\u901a\u8fc7java-chassis \u63d0\u4f9bREST/RPC\u670d\u52a1\u3002 Web\u5f00\u53d1\u65b9\u5f0f \u8be5\u96c6\u6210\u65b9\u5f0f\u7684\u672c\u8d28\u662f\u5c06Spring MVC\u7684DispatcherServlet\u66ff\u6362\u4e3ajava chassis\u7684RestServlet\uff0c\u901a\u8fc7java-chassis\u63d0\u4f9bREST/RPC\u670d\u52a1\u3002 \u4e24\u79cd\u5f00\u53d1\u65b9\u5f0f\u90fd\u4f1a\u542f\u7528java chassis\u7684\u5168\u91cf\u529f\u80fd\uff0cJAVA\u5e94\u7528\u65b9\u5f0f\u8fd0\u884c\u4e8e\u72ec\u7acb\u7684HTTP\u670d\u52a1\u5668\uff08\u57fa\u4e8evert.x\u6784\u5efa\uff09\u4e0a\uff0c\u6027\u80fd\u4e0a\u5b58\u5728\u5f88\u5927\u7684\u4f18\u52bf\u3002Web\u5f00\u53d1\u65b9\u5f0f\u8fd0\u884c\u4e8eTomcat\u6216\u8005\u5176\u4ed6\u5185\u7f6e\u7684Web\u670d\u52a1\u5668\u4e4b\u4e0a\uff0c\u4f5c\u4e3a\u4e00\u4e2aServlet\u63a5\u6536\u8bf7\u6c42\uff0c\u56e0\u6b64\u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528Web\u5bb9\u5668\u63d0\u4f9b\u7684\u4e00\u4e9b\u529f\u80fd\uff0c\u6bd4\u5982\u63d0\u4f9b\u9875\u9762\u670d\u52a1\uff0c\u4f7f\u7528Filter\u7b49\u3002\u5f53\u5e94\u7528\u53ea\u9700\u8981\u63d0\u4f9bREST\u670d\u52a1\uff0c\u5e76\u4e14\u5bf9\u6027\u80fd\u8981\u6c42\u5f88\u9ad8\u7684\u573a\u666f\uff0c\u5efa\u8bae\u4f7f\u7528JAVA\u5e94\u7528\u65b9\u5f0f\u3002","title":"java chassis \u4e0e Spring Boot \u96c6\u6210\u4ecb\u7ecd"},{"location":"using-java-chassis-in-spring-boot/java-application/","text":"JAVA\u5e94\u7528\u65b9\u5f0f\u5f00\u53d1\u6b65\u9aa4 \u4f7f\u7528JAVA\u65b9\u5f0f\u96c6\u6210\uff0c\u4e3aSpring Boot\u5e94\u7528\u589e\u52a0\u4e86\u4e00\u4e2a\u9ad8\u6548\u7684HTTP\u670d\u52a1\u5668\u548cREST\u5f00\u53d1\u6846\u67b6\u3002\u8fd9\u79cd\u65b9\u5f0f\u96c6\u6210\u975e\u5e38\u7b80\u5355\u3002\u53ea\u9700\u8981\u5728\u9879\u76ee\u4e2d\u5f15\u5165\u76f8\u5173\u4f9d\u8d56\uff0c\u5e76\u4e14\u4f7f\u7528@EnableServiceComb\u6ce8\u89e3\u5373\u53ef\u3002 \u5f15\u5165\u4f9d\u8d56 \u53c2\u8003 java-chassis \u63d0\u4f9b\u7684spring boot starter\u8bf4\u660e \uff0c\u6ce8\u610f\u533a\u5206\u4f7f\u7528\u7684java-chassis\u7248\u672c\u548cspring boot\u7248\u672c\u3002 \u542f\u7528java chassis\u7684\u6838\u5fc3\u529f\u80fd \u5728\u542f\u52a8\u7c7b\u524d\u9762\u589e\u52a0@EnableServiceComb\u3002 @SpringBootApplication @EnableServiceComb public class WebsiteMain { public static void main(final String[] args) { SpringApplication.run(WebsiteMain.class, args); } } \u901a\u8fc7\u4ee5\u4e0a\u914d\u7f6e\uff0c\u5c31\u53ef\u4ee5\u5b8c\u6574\u4f7f\u7528java chassis\u63d0\u4f9b\u7684\u6240\u6709\u529f\u80fd\uff0c\u4f7f\u7528java chassis\u5f00\u53d1REST\u670d\u52a1\uff0c\u5e76\u5f00\u542f\u5404\u79cd\u6cbb\u7406\u529f\u80fd\u3002 \u914d\u7f6e\u5fae\u670d\u52a1 \u96c6\u6210\u4ee5\u540e\uff0c\u53ef\u4ee5\u5728microservice.yaml\u4e2d\u589e\u52a0\u5e94\u7528\u914d\u7f6e\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528spring boot\u7684application.yml\u589e\u52a0\u914d\u7f6e\uff0capplication.yml\u7684\u914d\u7f6e\u4f18\u5148\u7ea7\u9ad8\u4e8emicroservice.yaml\u3002 \u4e3a\u4e86\u4fdd\u6301spring boot\u7684\u5f00\u53d1\u4e60\u60ef\uff0c\u5efa\u8bae\u5f00\u53d1\u8005\u914d\u7f6e\u6587\u4ef6\u4f7f\u7528application.yml, \u53ef\u4ee5\u5728application.yml\u4e2d\u5b9a\u5236\u5fae\u670d\u52a1\u7684\u4fe1\u606f\uff0c\u5305\u62ec\u5e94\u7528\u540d\u79f0\u3001\u5fae\u670d\u52a1\u540d\u79f0\u3001\u76d1\u542c\u7684\u5730\u5740\u548c\u7aef\u53e3\u7b49\u3002 \u96c6\u6210java chassis\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u5b83\u7684\u65b9\u5f0f\u5f00\u53d1REST\u63a5\u53e3\uff1a @RestSchema(schemaId = hello ) @RequestMapping(path = / ) public class HelloService { @RequestMapping(path = hello , method = RequestMethod.GET) public String sayHello(@RequestParam(name= name ) String name) { return Hello + name; } } \u7136\u540e\u53ef\u4ee5\u901a\u8fc7\uff1ahttp://localhost:9093/hello?name=world\u6765\u8bbf\u95ee\u3002","title":"JAVA\u5e94\u7528\u65b9\u5f0f\u5f00\u53d1\u6b65\u9aa4"},{"location":"using-java-chassis-in-spring-boot/java-application/#java","text":"\u4f7f\u7528JAVA\u65b9\u5f0f\u96c6\u6210\uff0c\u4e3aSpring Boot\u5e94\u7528\u589e\u52a0\u4e86\u4e00\u4e2a\u9ad8\u6548\u7684HTTP\u670d\u52a1\u5668\u548cREST\u5f00\u53d1\u6846\u67b6\u3002\u8fd9\u79cd\u65b9\u5f0f\u96c6\u6210\u975e\u5e38\u7b80\u5355\u3002\u53ea\u9700\u8981\u5728\u9879\u76ee\u4e2d\u5f15\u5165\u76f8\u5173\u4f9d\u8d56\uff0c\u5e76\u4e14\u4f7f\u7528@EnableServiceComb\u6ce8\u89e3\u5373\u53ef\u3002 \u5f15\u5165\u4f9d\u8d56 \u53c2\u8003 java-chassis \u63d0\u4f9b\u7684spring boot starter\u8bf4\u660e \uff0c\u6ce8\u610f\u533a\u5206\u4f7f\u7528\u7684java-chassis\u7248\u672c\u548cspring boot\u7248\u672c\u3002 \u542f\u7528java chassis\u7684\u6838\u5fc3\u529f\u80fd \u5728\u542f\u52a8\u7c7b\u524d\u9762\u589e\u52a0@EnableServiceComb\u3002 @SpringBootApplication @EnableServiceComb public class WebsiteMain { public static void main(final String[] args) { SpringApplication.run(WebsiteMain.class, args); } } \u901a\u8fc7\u4ee5\u4e0a\u914d\u7f6e\uff0c\u5c31\u53ef\u4ee5\u5b8c\u6574\u4f7f\u7528java chassis\u63d0\u4f9b\u7684\u6240\u6709\u529f\u80fd\uff0c\u4f7f\u7528java chassis\u5f00\u53d1REST\u670d\u52a1\uff0c\u5e76\u5f00\u542f\u5404\u79cd\u6cbb\u7406\u529f\u80fd\u3002 \u914d\u7f6e\u5fae\u670d\u52a1 \u96c6\u6210\u4ee5\u540e\uff0c\u53ef\u4ee5\u5728microservice.yaml\u4e2d\u589e\u52a0\u5e94\u7528\u914d\u7f6e\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528spring boot\u7684application.yml\u589e\u52a0\u914d\u7f6e\uff0capplication.yml\u7684\u914d\u7f6e\u4f18\u5148\u7ea7\u9ad8\u4e8emicroservice.yaml\u3002 \u4e3a\u4e86\u4fdd\u6301spring boot\u7684\u5f00\u53d1\u4e60\u60ef\uff0c\u5efa\u8bae\u5f00\u53d1\u8005\u914d\u7f6e\u6587\u4ef6\u4f7f\u7528application.yml, \u53ef\u4ee5\u5728application.yml\u4e2d\u5b9a\u5236\u5fae\u670d\u52a1\u7684\u4fe1\u606f\uff0c\u5305\u62ec\u5e94\u7528\u540d\u79f0\u3001\u5fae\u670d\u52a1\u540d\u79f0\u3001\u76d1\u542c\u7684\u5730\u5740\u548c\u7aef\u53e3\u7b49\u3002 \u96c6\u6210java chassis\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u5b83\u7684\u65b9\u5f0f\u5f00\u53d1REST\u63a5\u53e3\uff1a @RestSchema(schemaId = hello ) @RequestMapping(path = / ) public class HelloService { @RequestMapping(path = hello , method = RequestMethod.GET) public String sayHello(@RequestParam(name= name ) String name) { return Hello + name; } } \u7136\u540e\u53ef\u4ee5\u901a\u8fc7\uff1ahttp://localhost:9093/hello?name=world\u6765\u8bbf\u95ee\u3002","title":"JAVA\u5e94\u7528\u65b9\u5f0f\u5f00\u53d1\u6b65\u9aa4"},{"location":"using-java-chassis-in-spring-boot/using-java-chassis-in-spring-boot/","text":"\u5728Spring Boot\u4e2d\u4f7f\u7528java chassis \u672c\u6587\u5c06\u4ecb\u7ecd\u5982\u4f55\u5728Spring Boot\u4e2d\u96c6\u6210\u548c\u4f7f\u7528 java-chassis \uff0c \u5305\u62ec\u5982\u4e0b\u5185\u5bb9\uff1a java chassis \u4e0e Spring Boot \u96c6\u6210\u4ecb\u7ecd java chassis spring boot starter\u8bf4\u660e JAVA\u5e94\u7528\u65b9\u5f0f\u5f00\u53d1\u6b65\u9aa4 Web\u5f00\u53d1\u65b9\u5f0f\u5f00\u53d1\u6b65\u9aa4 \u4e0e\u539f\u751f Spring MVC \u5f00\u53d1\u4e60\u60ef\u7684\u5dee\u5f02","title":"\u5728Spring Boot\u4e2d\u4f7f\u7528java chassis"},{"location":"using-java-chassis-in-spring-boot/using-java-chassis-in-spring-boot/#spring-bootjava-chassis","text":"\u672c\u6587\u5c06\u4ecb\u7ecd\u5982\u4f55\u5728Spring Boot\u4e2d\u96c6\u6210\u548c\u4f7f\u7528 java-chassis \uff0c \u5305\u62ec\u5982\u4e0b\u5185\u5bb9\uff1a java chassis \u4e0e Spring Boot \u96c6\u6210\u4ecb\u7ecd java chassis spring boot starter\u8bf4\u660e JAVA\u5e94\u7528\u65b9\u5f0f\u5f00\u53d1\u6b65\u9aa4 Web\u5f00\u53d1\u65b9\u5f0f\u5f00\u53d1\u6b65\u9aa4 \u4e0e\u539f\u751f Spring MVC \u5f00\u53d1\u4e60\u60ef\u7684\u5dee\u5f02","title":"\u5728Spring Boot\u4e2d\u4f7f\u7528java chassis"},{"location":"using-java-chassis-in-spring-boot/web-application/","text":"Web\u5f00\u53d1\u65b9\u5f0f\u548cJAVA\u5e94\u7528\u65b9\u5f0f\u7684\u5f00\u53d1\u6b65\u9aa4\u57fa\u672c\u7c7b\u4f3c\u3002 \u4e3b\u8981\u6709\u5982\u4e0b\u533a\u522b\uff1a JAVA\u5e94\u7528\u65b9\u5f0f\u57fa\u4e8espring-boot-starter\uff0c\u800cWeb\u5f00\u53d1\u65b9\u5f0f\u57fa\u4e8espring-boot-starter-web\u3002 Web\u5f00\u53d1\u65b9\u5f0f\u901a\u8fc7@EnableServiceComb\u4f1a\u542f\u7528org.apache.servicecomb.transport.rest.servlet.RestServlet, \u53ef\u4ee5\u901a\u8fc7\u58f0\u660e @SpringBootApplication(exclude=DispatcherServletAutoConfiguration.class) \u6765\u5173\u95edorg.springframework.web.servlet.DispatcherServlet\u3002\u867d\u7136\u6392\u9664DispatcherServlet\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u4f46\u662f\u5927\u591a\u6570\u573a\u666f\u4e00\u4e2a\u5fae\u670d\u52a1\u91cc\u9762\u5b58\u5728\u591a\u4e2aREST\u6846\u67b6\u90fd\u4e0d\u662f\u5f88\u597d\u7684\u4e3b\u610f\uff0c\u5bb9\u6613\u8bef\u7528\u3002 \u6ce8\u610f\uff1a \u6709\u4e9bspring boot\u7248\u672c\u5728\u52a0\u4e0a\u8fd9\u4e2a\u914d\u7f6e\u4ee5\u540e\uff0c\u542f\u52a8\u4f1a\u5931\u8d25\u3002\u4e5f\u53ef\u4ee5\u4e0d\u5173\u95edDispatcherServlet\uff0c\u800c\u662f\u5c06\u4ed6\u4eec\u6307\u5b9a\u4e3a\u4e0d\u540c\u7684URL\u524d\u7f00\uff0c\u8ba9\u8fd9\u4e24\u4e2aServlet\u5171\u5b58\u3002\u8fd9\u79cd\u65b9\u5f0f\u5728\u4e00\u4e9b\u5386\u53f2\u9057\u7559\u7cfb\u7edf\u6539\u9020\uff0c\u5fc5\u987b\u4f7f\u7528DispatcherServlet\u53d1\u5e03REST\u63a5\u53e3\u7684\u573a\u666f\u975e\u5e38\u6709\u7528\u3002 ## DispatcherServlet path server.servlet.path: /ui ## RestServlet path servicecomb.rest.servlet.urlPattern: /api/* \u901a\u8fc7\u914d\u7f6e\u9879servicecomb.rest.servlet.urlPattern\u6765\u6307\u5b9aRestServlet\u7684URL\u6839\u8def\u5f84\u3002\u5e76\u4e14\u914d\u7f6e\u9879servicecomb.rest.address\u91cc\u9762\u7684\u76d1\u542c\u7aef\u53e3\uff0c\u5fc5\u987b\u548ctomcat\u76d1\u542c\u7684\u7aef\u53e3\u4fdd\u6301\u4e00\u81f4\uff08\u9ed8\u8ba4\u662f8080\uff0c\u53ef\u4ee5\u901a\u8fc7application.yml\u4e2d\u589e\u52a0server.port\u4fee\u6539\uff09 \u96c6\u6210java chassis\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u5b83\u7684\u65b9\u5f0f\u5f00\u53d1REST\u63a5\u53e3\uff1a @RestSchema(schemaId = hello ) @RequestMapping(path = / ) public class HelloService { @RequestMapping(path = hello , method = RequestMethod.GET) public String sayHello(@RequestParam(name= name ) String name) { return Hello + name; } } \u7136\u540e\u53ef\u4ee5\u901a\u8fc7\uff1ahttp://localhost:9093/hello?name=world\u6765\u8bbf\u95ee\u3002 \u53ef\u4ee5\u770b\u5230\u4f7f\u7528\u7684\u6807\u7b7e\u548cSpring MVC\u5927\u90e8\u5206\u662f\u4e00\u6837\u7684\u3002\u4f46\u4e5f\u6709\u5c11\u91cf\u4e0d\u4e00\u6837\u7684\u5730\u65b9\uff0c\u6bd4\u5982\uff1a \u901a\u8fc7RestSchema\u66ff\u6362RestController \u9700\u8981\u663e\u793a\u58f0\u660e@RequestMapping \u5982\u679c\u4e1a\u52a1\u4ee3\u7801\u4e0d\u662f\u65b0\u5f00\u53d1\uff0c\u800c\u662f\u57fa\u4e8eSpring MVC\u505a\u7684\u5f00\u53d1\uff0c\u73b0\u5728java chassis\u57fa\u4e8e\u505a\u6539\u9020\uff0c\u8fd8\u9700\u8981\u6ce8\u610f\u5728\u7981\u7528DispatcherServlet\u540e\uff0c\u548c\u5176\u6709\u5173\u7684\u529f\u80fd\u7279\u6027\u5c06\u4e0d\u518d\u751f\u6548\u3002 \u5728\u4e0b\u9762\u7684\u7ae0\u8282\uff0c\u8fd8\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u5728Spring MVC\u6a21\u5f0f\u4e0b\u4e24\u8005\u7684\u533a\u522b\u3002","title":"Web application"}]}